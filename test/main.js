var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_DEFINES;
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && opt_object !== undefined) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
      value = goog.global.CLOSURE_DEFINES[name];
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && (typeof value.splice != "undefined" && (typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")))) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && (typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call"))) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isDef = function(val) {
  return val !== undefined;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for (var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value);
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.DEBUG) {
    if (!caller) {
      throw Error("arguments.caller not defined.  goog.base() expects not " + "to be running in strict mode. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
    }
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && (ch >= " " && ch <= "~") || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "\x26amp;").replace(goog.string.ltRe_, "\x26lt;").replace(goog.string.gtRe_, "\x26gt;").replace(goog.string.quotRe_, "\x26quot;").replace(goog.string.singleQuoteRe_, "\x26#39;");
  } else {
    if (!goog.string.allRe_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.amperRe_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.ltRe_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.gtRe_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.singleQuoteRe_, "\x26#39;");
    }
    return str;
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /"/g;
goog.string.singleQuoteRe_ = /'/g;
goog.string.allRe_ = /[&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1;
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && (index < s.length && stringLength > 0)) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || (goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]));
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || (!goog.isArrayLike(arr2) || arr1.length != arr2.length)) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2197";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 4441712502), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1017252215), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 1014004081), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  3960797560), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__9483__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args));
    };
    var G__9483 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__9483__delegate.call(this, args);
    };
    G__9483.cljs$lang$maxFixedArity = 0;
    G__9483.cljs$lang$applyTo = function(arglist__9484) {
      var args = cljs.core.seq(arglist__9484);
      return G__9483__delegate(args);
    };
    G__9483.cljs$core$IFn$_invoke$arity$variadic = G__9483__delegate;
    return G__9483;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return false;
      } else {
        return null;
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3466__auto__ = ty;
    if (cljs.core.truth_(and__3466__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3466__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4090__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4090__auto__)) {
    var s = temp__4090__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4326__auto___9485 = len;
  var i_9486 = 0;
  while (true) {
    if (i_9486 < n__4326__auto___9485) {
      new_arr[i_9486] = arr[i_9486];
      var G__9487 = i_9486 + 1;
      i_9486 = G__9487;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments);
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__9488__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs);
    };
    var G__9488 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9488__delegate.call(this, array, i, idxs);
    };
    G__9488.cljs$lang$maxFixedArity = 2;
    G__9488.cljs$lang$applyTo = function(arglist__9489) {
      var array = cljs.core.first(arglist__9489);
      arglist__9489 = cljs.core.next(arglist__9489);
      var i = cljs.core.first(arglist__9489);
      var idxs = cljs.core.rest(arglist__9489);
      return G__9488__delegate(array, i, idxs);
    };
    G__9488.cljs$core$IFn$_invoke$arity$variadic = G__9488__delegate;
    return G__9488;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__9490__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv);
    };
    var G__9490 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__9490__delegate.call(this, array, idx, idx2, idxv);
    };
    G__9490.cljs$lang$maxFixedArity = 3;
    G__9490.cljs$lang$applyTo = function(arglist__9491) {
      var array = cljs.core.first(arglist__9491);
      arglist__9491 = cljs.core.next(arglist__9491);
      var idx = cljs.core.first(arglist__9491);
      arglist__9491 = cljs.core.next(arglist__9491);
      var idx2 = cljs.core.first(arglist__9491);
      var idxv = cljs.core.rest(arglist__9491);
      return G__9490__delegate(array, idx, idx2, idxv);
    };
    G__9490.cljs$core$IFn$_invoke$arity$variadic = G__9490__delegate;
    return G__9490;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a;
    }, [], aseq);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.Fn = function() {
  var obj9493 = {};
  return obj9493;
}();
cljs.core.IFn = function() {
  var obj9495 = {};
  return obj9495;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3466__auto__ = this$;
      if (and__3466__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4105__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3478__auto__ = cljs.core._invoke[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = cljs.core._invoke["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3466__auto__ = this$;
      if (and__3466__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4105__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3478__auto__ = cljs.core._invoke[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = cljs.core._invoke["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3466__auto__ = this$;
      if (and__3466__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4105__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3478__auto__ = cljs.core._invoke[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = cljs.core._invoke["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3466__auto__ = this$;
      if (and__3466__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4105__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3478__auto__ = cljs.core._invoke[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = cljs.core._invoke["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3466__auto__ = this$;
      if (and__3466__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4105__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3478__auto__ = cljs.core._invoke[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = cljs.core._invoke["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3466__auto__ = this$;
      if (and__3466__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4105__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3478__auto__ = cljs.core._invoke[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = cljs.core._invoke["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3466__auto__ = this$;
      if (and__3466__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4105__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3478__auto__ = cljs.core._invoke[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = cljs.core._invoke["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3466__auto__ = this$;
      if (and__3466__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4105__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3478__auto__ = cljs.core._invoke[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = cljs.core._invoke["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3466__auto__ = this$;
      if (and__3466__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4105__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3478__auto__ = cljs.core._invoke[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = cljs.core._invoke["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3466__auto__ = this$;
      if (and__3466__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4105__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3478__auto__ = cljs.core._invoke[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = cljs.core._invoke["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3466__auto__ = this$;
      if (and__3466__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4105__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3478__auto__ = cljs.core._invoke[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = cljs.core._invoke["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3466__auto__ = this$;
      if (and__3466__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4105__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3478__auto__ = cljs.core._invoke[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = cljs.core._invoke["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3466__auto__ = this$;
      if (and__3466__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4105__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3478__auto__ = cljs.core._invoke[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = cljs.core._invoke["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3466__auto__ = this$;
      if (and__3466__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4105__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3478__auto__ = cljs.core._invoke[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = cljs.core._invoke["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3466__auto__ = this$;
      if (and__3466__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4105__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3478__auto__ = cljs.core._invoke[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = cljs.core._invoke["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3466__auto__ = this$;
      if (and__3466__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4105__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3478__auto__ = cljs.core._invoke[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = cljs.core._invoke["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3466__auto__ = this$;
      if (and__3466__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4105__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3478__auto__ = cljs.core._invoke[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = cljs.core._invoke["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3466__auto__ = this$;
      if (and__3466__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4105__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3478__auto__ = cljs.core._invoke[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = cljs.core._invoke["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if (function() {
      var and__3466__auto__ = this$;
      if (and__3466__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    } else {
      var x__4105__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3478__auto__ = cljs.core._invoke[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = cljs.core._invoke["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if (function() {
      var and__3466__auto__ = this$;
      if (and__3466__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    } else {
      var x__4105__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3478__auto__ = cljs.core._invoke[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = cljs.core._invoke["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if (function() {
      var and__3466__auto__ = this$;
      if (and__3466__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    } else {
      var x__4105__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3478__auto__ = cljs.core._invoke[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = cljs.core._invoke["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj9497 = {};
  return obj9497;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3466__auto__ = value;
    if (and__3466__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4105__auto__ = value == null ? null : value;
    return function() {
      var or__3478__auto__ = cljs.core._clone[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._clone["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj9499 = {};
  return obj9499;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3466__auto__ = coll;
    if (and__3466__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4105__auto__ = coll == null ? null : coll;
    return function() {
      var or__3478__auto__ = cljs.core._count[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._count["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj9501 = {};
  return obj9501;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3466__auto__ = coll;
    if (and__3466__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4105__auto__ = coll == null ? null : coll;
    return function() {
      var or__3478__auto__ = cljs.core._empty[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._empty["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj9503 = {};
  return obj9503;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3466__auto__ = coll;
    if (and__3466__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4105__auto__ = coll == null ? null : coll;
    return function() {
      var or__3478__auto__ = cljs.core._conj[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._conj["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj9505 = {};
  return obj9505;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3466__auto__ = coll;
      if (and__3466__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4105__auto__ = coll == null ? null : coll;
      return function() {
        var or__3478__auto__ = cljs.core._nth[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = cljs.core._nth["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3466__auto__ = coll;
      if (and__3466__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4105__auto__ = coll == null ? null : coll;
      return function() {
        var or__3478__auto__ = cljs.core._nth[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = cljs.core._nth["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj9507 = {};
  return obj9507;
}();
cljs.core.ISeq = function() {
  var obj9509 = {};
  return obj9509;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3466__auto__ = coll;
    if (and__3466__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4105__auto__ = coll == null ? null : coll;
    return function() {
      var or__3478__auto__ = cljs.core._first[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._first["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3466__auto__ = coll;
    if (and__3466__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4105__auto__ = coll == null ? null : coll;
    return function() {
      var or__3478__auto__ = cljs.core._rest[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._rest["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj9511 = {};
  return obj9511;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3466__auto__ = coll;
    if (and__3466__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4105__auto__ = coll == null ? null : coll;
    return function() {
      var or__3478__auto__ = cljs.core._next[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._next["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj9513 = {};
  return obj9513;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3466__auto__ = o;
      if (and__3466__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4105__auto__ = o == null ? null : o;
      return function() {
        var or__3478__auto__ = cljs.core._lookup[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = cljs.core._lookup["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3466__auto__ = o;
      if (and__3466__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4105__auto__ = o == null ? null : o;
      return function() {
        var or__3478__auto__ = cljs.core._lookup[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = cljs.core._lookup["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj9515 = {};
  return obj9515;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3466__auto__ = coll;
    if (and__3466__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4105__auto__ = coll == null ? null : coll;
    return function() {
      var or__3478__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3466__auto__ = coll;
    if (and__3466__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4105__auto__ = coll == null ? null : coll;
    return function() {
      var or__3478__auto__ = cljs.core._assoc[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._assoc["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj9517 = {};
  return obj9517;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3466__auto__ = coll;
    if (and__3466__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4105__auto__ = coll == null ? null : coll;
    return function() {
      var or__3478__auto__ = cljs.core._dissoc[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._dissoc["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj9519 = {};
  return obj9519;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3466__auto__ = coll;
    if (and__3466__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4105__auto__ = coll == null ? null : coll;
    return function() {
      var or__3478__auto__ = cljs.core._key[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._key["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3466__auto__ = coll;
    if (and__3466__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4105__auto__ = coll == null ? null : coll;
    return function() {
      var or__3478__auto__ = cljs.core._val[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._val["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj9521 = {};
  return obj9521;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3466__auto__ = coll;
    if (and__3466__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4105__auto__ = coll == null ? null : coll;
    return function() {
      var or__3478__auto__ = cljs.core._disjoin[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._disjoin["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj9523 = {};
  return obj9523;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3466__auto__ = coll;
    if (and__3466__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4105__auto__ = coll == null ? null : coll;
    return function() {
      var or__3478__auto__ = cljs.core._peek[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._peek["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3466__auto__ = coll;
    if (and__3466__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4105__auto__ = coll == null ? null : coll;
    return function() {
      var or__3478__auto__ = cljs.core._pop[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._pop["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj9525 = {};
  return obj9525;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3466__auto__ = coll;
    if (and__3466__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4105__auto__ = coll == null ? null : coll;
    return function() {
      var or__3478__auto__ = cljs.core._assoc_n[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj9527 = {};
  return obj9527;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3466__auto__ = o;
    if (and__3466__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4105__auto__ = o == null ? null : o;
    return function() {
      var or__3478__auto__ = cljs.core._deref[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._deref["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj9529 = {};
  return obj9529;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3466__auto__ = o;
    if (and__3466__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4105__auto__ = o == null ? null : o;
    return function() {
      var or__3478__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj9531 = {};
  return obj9531;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3466__auto__ = o;
    if (and__3466__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4105__auto__ = o == null ? null : o;
    return function() {
      var or__3478__auto__ = cljs.core._meta[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._meta["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj9533 = {};
  return obj9533;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3466__auto__ = o;
    if (and__3466__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4105__auto__ = o == null ? null : o;
    return function() {
      var or__3478__auto__ = cljs.core._with_meta[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._with_meta["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj9535 = {};
  return obj9535;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3466__auto__ = coll;
      if (and__3466__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4105__auto__ = coll == null ? null : coll;
      return function() {
        var or__3478__auto__ = cljs.core._reduce[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = cljs.core._reduce["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3466__auto__ = coll;
      if (and__3466__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4105__auto__ = coll == null ? null : coll;
      return function() {
        var or__3478__auto__ = cljs.core._reduce[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = cljs.core._reduce["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj9537 = {};
  return obj9537;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3466__auto__ = coll;
    if (and__3466__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4105__auto__ = coll == null ? null : coll;
    return function() {
      var or__3478__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj9539 = {};
  return obj9539;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3466__auto__ = o;
    if (and__3466__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4105__auto__ = o == null ? null : o;
    return function() {
      var or__3478__auto__ = cljs.core._equiv[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._equiv["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj9541 = {};
  return obj9541;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3466__auto__ = o;
    if (and__3466__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4105__auto__ = o == null ? null : o;
    return function() {
      var or__3478__auto__ = cljs.core._hash[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._hash["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj9543 = {};
  return obj9543;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3466__auto__ = o;
    if (and__3466__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4105__auto__ = o == null ? null : o;
    return function() {
      var or__3478__auto__ = cljs.core._seq[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._seq["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj9545 = {};
  return obj9545;
}();
cljs.core.IList = function() {
  var obj9547 = {};
  return obj9547;
}();
cljs.core.IRecord = function() {
  var obj9549 = {};
  return obj9549;
}();
cljs.core.IReversible = function() {
  var obj9551 = {};
  return obj9551;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3466__auto__ = coll;
    if (and__3466__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4105__auto__ = coll == null ? null : coll;
    return function() {
      var or__3478__auto__ = cljs.core._rseq[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._rseq["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj9553 = {};
  return obj9553;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3466__auto__ = coll;
    if (and__3466__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4105__auto__ = coll == null ? null : coll;
    return function() {
      var or__3478__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3466__auto__ = coll;
    if (and__3466__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4105__auto__ = coll == null ? null : coll;
    return function() {
      var or__3478__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3466__auto__ = coll;
    if (and__3466__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4105__auto__ = coll == null ? null : coll;
    return function() {
      var or__3478__auto__ = cljs.core._entry_key[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._entry_key["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3466__auto__ = coll;
    if (and__3466__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4105__auto__ = coll == null ? null : coll;
    return function() {
      var or__3478__auto__ = cljs.core._comparator[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._comparator["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj9555 = {};
  return obj9555;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3466__auto__ = writer;
    if (and__3466__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4105__auto__ = writer == null ? null : writer;
    return function() {
      var or__3478__auto__ = cljs.core._write[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._write["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3466__auto__ = writer;
    if (and__3466__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4105__auto__ = writer == null ? null : writer;
    return function() {
      var or__3478__auto__ = cljs.core._flush[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._flush["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj9557 = {};
  return obj9557;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3466__auto__ = o;
    if (and__3466__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4105__auto__ = o == null ? null : o;
    return function() {
      var or__3478__auto__ = cljs.core._pr_writer[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj9559 = {};
  return obj9559;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3466__auto__ = d;
    if (and__3466__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4105__auto__ = d == null ? null : d;
    return function() {
      var or__3478__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj9561 = {};
  return obj9561;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3466__auto__ = this$;
    if (and__3466__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4105__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3478__auto__ = cljs.core._notify_watches[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3466__auto__ = this$;
    if (and__3466__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4105__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3478__auto__ = cljs.core._add_watch[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._add_watch["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3466__auto__ = this$;
    if (and__3466__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4105__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3478__auto__ = cljs.core._remove_watch[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj9563 = {};
  return obj9563;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3466__auto__ = coll;
    if (and__3466__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4105__auto__ = coll == null ? null : coll;
    return function() {
      var or__3478__auto__ = cljs.core._as_transient[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._as_transient["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj9565 = {};
  return obj9565;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3466__auto__ = tcoll;
    if (and__3466__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4105__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3478__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3466__auto__ = tcoll;
    if (and__3466__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4105__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3478__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj9567 = {};
  return obj9567;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3466__auto__ = tcoll;
    if (and__3466__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4105__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3478__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj9569 = {};
  return obj9569;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3466__auto__ = tcoll;
    if (and__3466__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4105__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3478__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj9571 = {};
  return obj9571;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3466__auto__ = tcoll;
    if (and__3466__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4105__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3478__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3466__auto__ = tcoll;
    if (and__3466__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4105__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3478__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj9573 = {};
  return obj9573;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3466__auto__ = tcoll;
    if (and__3466__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4105__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3478__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj9575 = {};
  return obj9575;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3466__auto__ = x;
    if (and__3466__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4105__auto__ = x == null ? null : x;
    return function() {
      var or__3478__auto__ = cljs.core._compare[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._compare["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj9577 = {};
  return obj9577;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3466__auto__ = coll;
    if (and__3466__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4105__auto__ = coll == null ? null : coll;
    return function() {
      var or__3478__auto__ = cljs.core._drop_first[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._drop_first["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj9579 = {};
  return obj9579;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3466__auto__ = coll;
    if (and__3466__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4105__auto__ = coll == null ? null : coll;
    return function() {
      var or__3478__auto__ = cljs.core._chunked_first[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3466__auto__ = coll;
    if (and__3466__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4105__auto__ = coll == null ? null : coll;
    return function() {
      var or__3478__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj9581 = {};
  return obj9581;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3466__auto__ = coll;
    if (and__3466__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4105__auto__ = coll == null ? null : coll;
    return function() {
      var or__3478__auto__ = cljs.core._chunked_next[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj9583 = {};
  return obj9583;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3466__auto__ = x;
    if (and__3466__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4105__auto__ = x == null ? null : x;
    return function() {
      var or__3478__auto__ = cljs.core._name[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._name["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3466__auto__ = x;
    if (and__3466__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4105__auto__ = x == null ? null : x;
    return function() {
      var or__3478__auto__ = cljs.core._namespace[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._namespace["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return[cljs.core.str(sb)].join("");
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.hash.call(null, sym.ns), cljs.core.hash.call(null, sym.name));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (cljs.core.truth_(cljs.core._EQ_.call(null, a, b))) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3466__auto__ = cljs.core.not.call(null, a.ns);
      if (and__3466__auto__) {
        return b.ns;
      } else {
        return and__3466__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = cljs.core.compare.call(null, a.ns, b.ns);
          if (nsc === 0) {
            return cljs.core.compare.call(null, a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
          return cljs.core.compare.call(null, a.name, b.name);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/Symbol");
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__3889__auto__ = self__._hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__9585 = null;
  var G__9585__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null);
  };
  var G__9585__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found);
  };
  G__9585 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9585__2.call(this, self__, coll);
      case 3:
        return G__9585__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9585;
}();
cljs.core.Symbol.prototype.apply = function(self__, args9584) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args9584)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.call(null, null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.clone = function clone(value) {
  return cljs.core._clone.call(null, value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__9587 = value;
  if (G__9587) {
    var bit__4128__auto__ = G__9587.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4128__auto__ || G__9587.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__9587.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__9587);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__9587);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__9589 = coll;
      if (G__9589) {
        var bit__4121__auto__ = G__9589.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4121__auto__ || G__9589.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._seq.call(null, coll);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw new Error([cljs.core.str(coll), cljs.core.str("is not ISeqable")].join(""));
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__9591 = coll;
      if (G__9591) {
        var bit__4121__auto__ = G__9591.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4121__auto__ || G__9591.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._first.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first.call(null, s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__9593 = coll;
      if (G__9593) {
        var bit__4121__auto__ = G__9593.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4121__auto__ || G__9593.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._rest.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s) {
        return cljs.core._rest.call(null, s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__9595 = coll;
      if (G__9595) {
        var bit__4121__auto__ = G__9595.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4121__auto__ || G__9595.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._next.call(null, coll);
    } else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv.call(null, x, y);
    }
  };
  var _EQ___3 = function() {
    var G__9596__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__9597 = y;
            var G__9598 = cljs.core.first.call(null, more);
            var G__9599 = cljs.core.next.call(null, more);
            x = G__9597;
            y = G__9598;
            more = G__9599;
            continue;
          } else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__9596 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9596__delegate.call(this, x, y, more);
    };
    G__9596.cljs$lang$maxFixedArity = 2;
    G__9596.cljs$lang$applyTo = function(arglist__9600) {
      var x = cljs.core.first(arglist__9600);
      arglist__9600 = cljs.core.next(arglist__9600);
      var y = cljs.core.first(arglist__9600);
      var more = cljs.core.rest(arglist__9600);
      return G__9596__delegate(x, y, more);
    };
    G__9596.cljs$core$IFn$_invoke$arity$variadic = G__9596__delegate;
    return G__9596;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/Reduced");
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if (cnt === 0) {
      return f.call(null);
    } else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__9601 = nval;
            var G__9602 = n + 1;
            val = G__9601;
            n = G__9602;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__9603 = nval;
          var G__9604 = n + 1;
          val__$1 = G__9603;
          n = G__9604;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__9605 = nval;
          var G__9606 = n + 1;
          val__$1 = G__9605;
          n = G__9606;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__9607 = nval;
            var G__9608 = n + 1;
            val = G__9607;
            n = G__9608;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__9609 = nval;
          var G__9610 = n + 1;
          val__$1 = G__9609;
          n = G__9610;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__9611 = nval;
          var G__9612 = n + 1;
          val__$1 = G__9611;
          n = G__9612;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__9614 = x;
  if (G__9614) {
    var bit__4128__auto__ = G__9614.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4128__auto__ || G__9614.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__9614.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__9614);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__9614);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__9616 = x;
  if (G__9616) {
    var bit__4128__auto__ = G__9616.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4128__auto__ || G__9616.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__9616.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__9616);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__9616);
  }
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/IndexedSeq");
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/RSeq");
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next.call(null, s);
    if (!(sn == null)) {
      var G__9617 = sn;
      s = G__9617;
      continue;
    } else {
      return cljs.core.first.call(null, s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj.call(null, coll, x);
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__9618__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__9619 = conj.call(null, coll, x);
          var G__9620 = cljs.core.first.call(null, xs);
          var G__9621 = cljs.core.next.call(null, xs);
          coll = G__9619;
          x = G__9620;
          xs = G__9621;
          continue;
        } else {
          return conj.call(null, coll, x);
        }
        break;
      }
    };
    var G__9618 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9618__delegate.call(this, coll, x, xs);
    };
    G__9618.cljs$lang$maxFixedArity = 2;
    G__9618.cljs$lang$applyTo = function(arglist__9622) {
      var coll = cljs.core.first(arglist__9622);
      arglist__9622 = cljs.core.next(arglist__9622);
      var x = cljs.core.first(arglist__9622);
      var xs = cljs.core.rest(arglist__9622);
      return G__9618__delegate(coll, x, xs);
    };
    G__9618.cljs$core$IFn$_invoke$arity$variadic = G__9618__delegate;
    return G__9618;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty.call(null, coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s);
    } else {
      var G__9623 = cljs.core.next.call(null, s);
      var G__9624 = acc + 1;
      s = G__9623;
      acc = G__9624;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__9626 = coll;
      if (G__9626) {
        var bit__4121__auto__ = G__9626.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4121__auto__ || G__9626.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._count.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.accumulating_seq_count.call(null, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__9627 = cljs.core.next.call(null, coll);
              var G__9628 = n - 1;
              coll = G__9627;
              n = G__9628;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw new Error("Index out of bounds");
              } else {
                return null;
              }
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__9629 = cljs.core.next.call(null, coll);
              var G__9630 = n - 1;
              var G__9631 = not_found;
              coll = G__9629;
              n = G__9630;
              not_found = G__9631;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found;
              } else {
                return null;
              }
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__9636 = coll;
          if (G__9636) {
            var bit__4121__auto__ = G__9636.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4121__auto__ || G__9636.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__9637 = coll;
                  if (G__9637) {
                    var bit__4128__auto__ = G__9637.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4128__auto__ || G__9637.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__9637.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__9637);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__9637);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n);
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                  } else {
                    return null;
                  }
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__9638 = coll;
          if (G__9638) {
            var bit__4121__auto__ = G__9638.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4121__auto__ || G__9638.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__9639 = coll;
                  if (G__9639) {
                    var bit__4128__auto__ = G__9639.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4128__auto__ || G__9639.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__9639.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__9639);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__9639);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found);
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                  } else {
                    return null;
                  }
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__9642 = o;
        if (G__9642) {
          var bit__4121__auto__ = G__9642.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4121__auto__ || G__9642.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return null;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__9643 = o;
        if (G__9643) {
          var bit__4121__auto__ = G__9643.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4121__auto__ || G__9643.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found;
              } else {
                return null;
              }
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays.call(null, [k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__9644__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.call(null, coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__9645 = ret;
          var G__9646 = cljs.core.first.call(null, kvs);
          var G__9647 = cljs.core.second.call(null, kvs);
          var G__9648 = cljs.core.nnext.call(null, kvs);
          coll = G__9645;
          k = G__9646;
          v = G__9647;
          kvs = G__9648;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__9644 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__9644__delegate.call(this, coll, k, v, kvs);
    };
    G__9644.cljs$lang$maxFixedArity = 3;
    G__9644.cljs$lang$applyTo = function(arglist__9649) {
      var coll = cljs.core.first(arglist__9649);
      arglist__9649 = cljs.core.next(arglist__9649);
      var k = cljs.core.first(arglist__9649);
      arglist__9649 = cljs.core.next(arglist__9649);
      var v = cljs.core.first(arglist__9649);
      var kvs = cljs.core.rest(arglist__9649);
      return G__9644__delegate(coll, k, v, kvs);
    };
    G__9644.cljs$core$IFn$_invoke$arity$variadic = G__9644__delegate;
    return G__9644;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc.call(null, coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__9650__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__9651 = ret;
            var G__9652 = cljs.core.first.call(null, ks);
            var G__9653 = cljs.core.next.call(null, ks);
            coll = G__9651;
            k = G__9652;
            ks = G__9653;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__9650 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9650__delegate.call(this, coll, k, ks);
    };
    G__9650.cljs$lang$maxFixedArity = 2;
    G__9650.cljs$lang$applyTo = function(arglist__9654) {
      var coll = cljs.core.first(arglist__9654);
      arglist__9654 = cljs.core.next(arglist__9654);
      var k = cljs.core.first(arglist__9654);
      var ks = cljs.core.rest(arglist__9654);
      return G__9650__delegate(coll, k, ks);
    };
    G__9650.cljs$core$IFn$_invoke$arity$variadic = G__9650__delegate;
    return G__9650;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3478__auto__ = goog.isFunction(f);
  if (or__3478__auto__) {
    return or__3478__auto__;
  } else {
    var G__9658 = f;
    if (G__9658) {
      var bit__4128__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3478__auto____$1 = bit__4128__auto__;
        if (cljs.core.truth_(or__3478__auto____$1)) {
          return or__3478__auto____$1;
        } else {
          return G__9658.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__9658.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__9658);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__9658);
    }
  }
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__9666 = o;
    if (G__9666) {
      var bit__4128__auto__ = G__9666.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4128__auto__ || G__9666.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__9666.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__9666);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__9666);
    }
  }()) {
    return with_meta.call(null, function() {
      if (typeof cljs.core.t9667 !== "undefined") {
      } else {
        cljs.core.t9667 = function(meta, o, with_meta, meta9668) {
          this.meta = meta;
          this.o = o;
          this.with_meta = with_meta;
          this.meta9668 = meta9668;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217;
        };
        cljs.core.t9667.cljs$lang$type = true;
        cljs.core.t9667.cljs$lang$ctorStr = "cljs.core/t9667";
        cljs.core.t9667.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
          return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/t9667");
        };
        cljs.core.t9667.prototype.call = function() {
          var G__9671__delegate = function(self__, args) {
            var self____$1 = this;
            var _ = self____$1;
            return cljs.core.apply.call(null, self__.o, args);
          };
          var G__9671 = function(self__, var_args) {
            var self__ = this;
            var args = null;
            if (arguments.length > 1) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
            }
            return G__9671__delegate.call(this, self__, args);
          };
          G__9671.cljs$lang$maxFixedArity = 1;
          G__9671.cljs$lang$applyTo = function(arglist__9672) {
            var self__ = cljs.core.first(arglist__9672);
            var args = cljs.core.rest(arglist__9672);
            return G__9671__delegate(self__, args);
          };
          G__9671.cljs$core$IFn$_invoke$arity$variadic = G__9671__delegate;
          return G__9671;
        }();
        cljs.core.t9667.prototype.apply = function(self__, args9670) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args9670)));
        };
        cljs.core.t9667.prototype.cljs$core$IFn$_invoke$arity$2 = function() {
          var G__9673__delegate = function(args) {
            var _ = this;
            return cljs.core.apply.call(null, self__.o, args);
          };
          var G__9673 = function(var_args) {
            var self__ = this;
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__9673__delegate.call(this, args);
          };
          G__9673.cljs$lang$maxFixedArity = 0;
          G__9673.cljs$lang$applyTo = function(arglist__9674) {
            var args = cljs.core.seq(arglist__9674);
            return G__9673__delegate(args);
          };
          G__9673.cljs$core$IFn$_invoke$arity$variadic = G__9673__delegate;
          return G__9673;
        }();
        cljs.core.t9667.prototype.cljs$core$Fn$ = true;
        cljs.core.t9667.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9669) {
          var self__ = this;
          var _9669__$1 = this;
          return self__.meta9668;
        };
        cljs.core.t9667.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9669, meta9668__$1) {
          var self__ = this;
          var _9669__$1 = this;
          return new cljs.core.t9667(self__.meta, self__.o, self__.with_meta, meta9668__$1);
        };
        cljs.core.__GT_t9667 = function __GT_t9667(meta__$1, o__$1, with_meta__$1, meta9668) {
          return new cljs.core.t9667(meta__$1, o__$1, with_meta__$1, meta9668);
        };
      }
      return new cljs.core.t9667(meta, o, with_meta, null);
    }(), meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta.call(null, o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3466__auto__ = !(o == null);
    if (and__3466__auto__) {
      var G__9678 = o;
      if (G__9678) {
        var bit__4128__auto__ = G__9678.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4128__auto__ || G__9678.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__9678.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__9678);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__9678);
      }
    } else {
      return and__3466__auto__;
    }
  }()) {
    return cljs.core._meta.call(null, o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek.call(null, coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop.call(null, coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin.call(null, coll, k);
    }
  };
  var disj__3 = function() {
    var G__9679__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__9680 = ret;
            var G__9681 = cljs.core.first.call(null, ks);
            var G__9682 = cljs.core.next.call(null, ks);
            coll = G__9680;
            k = G__9681;
            ks = G__9682;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__9679 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9679__delegate.call(this, coll, k, ks);
    };
    G__9679.cljs$lang$maxFixedArity = 2;
    G__9679.cljs$lang$applyTo = function(arglist__9683) {
      var coll = cljs.core.first(arglist__9683);
      arglist__9683 = cljs.core.next(arglist__9683);
      var k = cljs.core.first(arglist__9683);
      var ks = cljs.core.rest(arglist__9683);
      return G__9679__delegate(coll, k, ks);
    };
    G__9679.cljs$core$IFn$_invoke$arity$variadic = G__9679__delegate;
    return G__9679;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.string_hash_cache = function() {
  var obj9685 = {};
  return obj9685;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj9689 = {};
      return obj9689;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache.call(null, k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__9691 = o;
    if (G__9691) {
      var bit__4121__auto__ = G__9691.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4121__auto__ || G__9691.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._hash.call(null, o);
  } else {
    if (typeof o === "number") {
      return Math.floor(o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.check_string_hash_cache.call(null, o);
          } else {
            if (o == null) {
              return 0;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return cljs.core._hash.call(null, o);
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__9693 = x;
    if (G__9693) {
      var bit__4128__auto__ = G__9693.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4128__auto__ || G__9693.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__9693.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__9693);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__9693);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__9695 = x;
    if (G__9695) {
      var bit__4128__auto__ = G__9695.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4128__auto__ || G__9695.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__9695.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__9695);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__9695);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__9697 = x;
  if (G__9697) {
    var bit__4128__auto__ = G__9697.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4128__auto__ || G__9697.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__9697.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__9697);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__9697);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__9699 = x;
  if (G__9699) {
    var bit__4128__auto__ = G__9699.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4128__auto__ || G__9699.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__9699.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__9699);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__9699);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__9701 = x;
  if (G__9701) {
    var bit__4128__auto__ = G__9701.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4128__auto__ || G__9701.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__9701.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__9701);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__9701);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__9703 = x;
  if (G__9703) {
    var bit__4128__auto__ = G__9703.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4128__auto__ || G__9703.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__9703.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__9703);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__9703);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__9705 = x;
    if (G__9705) {
      var bit__4128__auto__ = G__9705.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4128__auto__ || G__9705.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__9705.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__9705);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__9705);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__9707 = x;
  if (G__9707) {
    var bit__4128__auto__ = G__9707.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4128__auto__ || G__9707.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__9707.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__9707);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__9707);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__9709 = x;
  if (G__9709) {
    var bit__4121__auto__ = G__9709.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4121__auto__ || G__9709.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj9713 = {};
    return obj9713;
  };
  var js_obj__1 = function() {
    var G__9714__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals);
    };
    var G__9714 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__9714__delegate.call(this, keyvals);
    };
    G__9714.cljs$lang$maxFixedArity = 0;
    G__9714.cljs$lang$applyTo = function(arglist__9715) {
      var keyvals = cljs.core.seq(arglist__9715);
      return G__9714__delegate(keyvals);
    };
    G__9714.cljs$core$IFn$_invoke$arity$variadic = G__9714__delegate;
    return G__9714;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(keys));
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__9716 = i__$1 + 1;
      var G__9717 = j__$1 + 1;
      var G__9718 = len__$1 - 1;
      i__$1 = G__9716;
      j__$1 = G__9717;
      len__$1 = G__9718;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__9719 = i__$1 - 1;
      var G__9720 = j__$1 - 1;
      var G__9721 = len__$1 - 1;
      i__$1 = G__9719;
      j__$1 = G__9720;
      len__$1 = G__9721;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj9723 = {};
  return obj9723;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__9725 = s;
    if (G__9725) {
      var bit__4128__auto__ = G__9725.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4128__auto__ || G__9725.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__9725.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__9725);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__9725);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__9727 = s;
  if (G__9727) {
    var bit__4128__auto__ = G__9727.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4128__auto__ || G__9727.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__9727.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__9727);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__9727);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3478__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if (or__3478__auto__) {
    return or__3478__auto__;
  } else {
    var G__9731 = f;
    if (G__9731) {
      var bit__4128__auto__ = G__9731.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4128__auto__ || G__9731.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__9731.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__9731);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__9731);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && (!isNaN(n) && (!(n === Infinity) && parseFloat(n) === parseInt(n, 10)));
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && (cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.call(null, coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__9732__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([y, x], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false;
            } else {
              var G__9733 = cljs.core.conj.call(null, s, x__$1);
              var G__9734 = etc;
              s = G__9733;
              xs = G__9734;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__9732 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9732__delegate.call(this, x, y, more);
    };
    G__9732.cljs$lang$maxFixedArity = 2;
    G__9732.cljs$lang$applyTo = function(arglist__9735) {
      var x = cljs.core.first(arglist__9735);
      arglist__9735 = cljs.core.next(arglist__9735);
      var y = cljs.core.first(arglist__9735);
      var more = cljs.core.rest(arglist__9735);
      return G__9732__delegate(x, y, more);
    };
    G__9732.cljs$core$IFn$_invoke$arity$variadic = G__9732__delegate;
    return G__9732;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.sequence = function sequence(coll) {
  if (cljs.core.seq_QMARK_.call(null, coll)) {
    return coll;
  } else {
    var or__3478__auto__ = cljs.core.seq.call(null, coll);
    if (or__3478__auto__) {
      return or__3478__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if (function() {
            var G__9737 = x;
            if (G__9737) {
              var bit__4121__auto__ = G__9737.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4121__auto__ || G__9737.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._compare.call(null, x, y);
          } else {
            return goog.array.defaultCompare(x, y);
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error("compare on non-nil objects of different types");
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return compare_indexed.call(null, xs, ys, xl, 0);
        } else {
          return null;
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if (d === 0 && n + 1 < len) {
        var G__9738 = xs;
        var G__9739 = ys;
        var G__9740 = len;
        var G__9741 = n + 1;
        xs = G__9738;
        ys = G__9739;
        len = G__9740;
        n = G__9741;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y));
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4090__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4090__auto__) {
      var s = temp__4090__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s));
    } else {
      return f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__9742 = nval;
          var G__9743 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__9742;
          coll__$1 = G__9743;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__9746 = coll;
      if (G__9746) {
        var bit__4121__auto__ = G__9746.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4121__auto__ || G__9746.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__9747 = coll;
      if (G__9747) {
        var bit__4121__auto__ = G__9747.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4121__auto__ || G__9747.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, val, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce.call(null, coll, f, init);
  } else {
    return init;
  }
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__9748__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more);
    };
    var G__9748 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9748__delegate.call(this, x, y, more);
    };
    G__9748.cljs$lang$maxFixedArity = 2;
    G__9748.cljs$lang$applyTo = function(arglist__9749) {
      var x = cljs.core.first(arglist__9749);
      arglist__9749 = cljs.core.next(arglist__9749);
      var y = cljs.core.first(arglist__9749);
      var more = cljs.core.rest(arglist__9749);
      return G__9748__delegate(x, y, more);
    };
    G__9748.cljs$core$IFn$_invoke$arity$variadic = G__9748__delegate;
    return G__9748;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__9750__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more);
    };
    var G__9750 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9750__delegate.call(this, x, y, more);
    };
    G__9750.cljs$lang$maxFixedArity = 2;
    G__9750.cljs$lang$applyTo = function(arglist__9751) {
      var x = cljs.core.first(arglist__9751);
      arglist__9751 = cljs.core.next(arglist__9751);
      var y = cljs.core.first(arglist__9751);
      var more = cljs.core.rest(arglist__9751);
      return G__9750__delegate(x, y, more);
    };
    G__9750.cljs$core$IFn$_invoke$arity$variadic = G__9750__delegate;
    return G__9750;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__9752__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more);
    };
    var G__9752 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9752__delegate.call(this, x, y, more);
    };
    G__9752.cljs$lang$maxFixedArity = 2;
    G__9752.cljs$lang$applyTo = function(arglist__9753) {
      var x = cljs.core.first(arglist__9753);
      arglist__9753 = cljs.core.next(arglist__9753);
      var y = cljs.core.first(arglist__9753);
      var more = cljs.core.rest(arglist__9753);
      return G__9752__delegate(x, y, more);
    };
    G__9752.cljs$core$IFn$_invoke$arity$variadic = G__9752__delegate;
    return G__9752;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__9754__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more);
    };
    var G__9754 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9754__delegate.call(this, x, y, more);
    };
    G__9754.cljs$lang$maxFixedArity = 2;
    G__9754.cljs$lang$applyTo = function(arglist__9755) {
      var x = cljs.core.first(arglist__9755);
      arglist__9755 = cljs.core.next(arglist__9755);
      var y = cljs.core.first(arglist__9755);
      var more = cljs.core.rest(arglist__9755);
      return G__9754__delegate(x, y, more);
    };
    G__9754.cljs$core$IFn$_invoke$arity$variadic = G__9754__delegate;
    return G__9754;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__9756__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next.call(null, more)) {
            var G__9757 = y;
            var G__9758 = cljs.core.first.call(null, more);
            var G__9759 = cljs.core.next.call(null, more);
            x = G__9757;
            y = G__9758;
            more = G__9759;
            continue;
          } else {
            return y < cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__9756 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9756__delegate.call(this, x, y, more);
    };
    G__9756.cljs$lang$maxFixedArity = 2;
    G__9756.cljs$lang$applyTo = function(arglist__9760) {
      var x = cljs.core.first(arglist__9760);
      arglist__9760 = cljs.core.next(arglist__9760);
      var y = cljs.core.first(arglist__9760);
      var more = cljs.core.rest(arglist__9760);
      return G__9756__delegate(x, y, more);
    };
    G__9756.cljs$core$IFn$_invoke$arity$variadic = G__9756__delegate;
    return G__9756;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__9761__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next.call(null, more)) {
            var G__9762 = y;
            var G__9763 = cljs.core.first.call(null, more);
            var G__9764 = cljs.core.next.call(null, more);
            x = G__9762;
            y = G__9763;
            more = G__9764;
            continue;
          } else {
            return y <= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__9761 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9761__delegate.call(this, x, y, more);
    };
    G__9761.cljs$lang$maxFixedArity = 2;
    G__9761.cljs$lang$applyTo = function(arglist__9765) {
      var x = cljs.core.first(arglist__9765);
      arglist__9765 = cljs.core.next(arglist__9765);
      var y = cljs.core.first(arglist__9765);
      var more = cljs.core.rest(arglist__9765);
      return G__9761__delegate(x, y, more);
    };
    G__9761.cljs$core$IFn$_invoke$arity$variadic = G__9761__delegate;
    return G__9761;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__9766__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next.call(null, more)) {
            var G__9767 = y;
            var G__9768 = cljs.core.first.call(null, more);
            var G__9769 = cljs.core.next.call(null, more);
            x = G__9767;
            y = G__9768;
            more = G__9769;
            continue;
          } else {
            return y > cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__9766 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9766__delegate.call(this, x, y, more);
    };
    G__9766.cljs$lang$maxFixedArity = 2;
    G__9766.cljs$lang$applyTo = function(arglist__9770) {
      var x = cljs.core.first(arglist__9770);
      arglist__9770 = cljs.core.next(arglist__9770);
      var y = cljs.core.first(arglist__9770);
      var more = cljs.core.rest(arglist__9770);
      return G__9766__delegate(x, y, more);
    };
    G__9766.cljs$core$IFn$_invoke$arity$variadic = G__9766__delegate;
    return G__9766;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__9771__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next.call(null, more)) {
            var G__9772 = y;
            var G__9773 = cljs.core.first.call(null, more);
            var G__9774 = cljs.core.next.call(null, more);
            x = G__9772;
            y = G__9773;
            more = G__9774;
            continue;
          } else {
            return y >= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__9771 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9771__delegate.call(this, x, y, more);
    };
    G__9771.cljs$lang$maxFixedArity = 2;
    G__9771.cljs$lang$applyTo = function(arglist__9775) {
      var x = cljs.core.first(arglist__9775);
      arglist__9775 = cljs.core.next(arglist__9775);
      var y = cljs.core.first(arglist__9775);
      var more = cljs.core.rest(arglist__9775);
      return G__9771__delegate(x, y, more);
    };
    G__9771.cljs$core$IFn$_invoke$arity$variadic = G__9771__delegate;
    return G__9771;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__3785__auto__ = x;
    var y__3786__auto__ = y;
    return x__3785__auto__ > y__3786__auto__ ? x__3785__auto__ : y__3786__auto__;
  };
  var max__3 = function() {
    var G__9776__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3785__auto__ = x;
        var y__3786__auto__ = y;
        return x__3785__auto__ > y__3786__auto__ ? x__3785__auto__ : y__3786__auto__;
      }(), more);
    };
    var G__9776 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9776__delegate.call(this, x, y, more);
    };
    G__9776.cljs$lang$maxFixedArity = 2;
    G__9776.cljs$lang$applyTo = function(arglist__9777) {
      var x = cljs.core.first(arglist__9777);
      arglist__9777 = cljs.core.next(arglist__9777);
      var y = cljs.core.first(arglist__9777);
      var more = cljs.core.rest(arglist__9777);
      return G__9776__delegate(x, y, more);
    };
    G__9776.cljs$core$IFn$_invoke$arity$variadic = G__9776__delegate;
    return G__9776;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__3792__auto__ = x;
    var y__3793__auto__ = y;
    return x__3792__auto__ < y__3793__auto__ ? x__3792__auto__ : y__3793__auto__;
  };
  var min__3 = function() {
    var G__9778__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3792__auto__ = x;
        var y__3793__auto__ = y;
        return x__3792__auto__ < y__3793__auto__ ? x__3792__auto__ : y__3793__auto__;
      }(), more);
    };
    var G__9778 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9778__delegate.call(this, x, y, more);
    };
    G__9778.cljs$lang$maxFixedArity = 2;
    G__9778.cljs$lang$applyTo = function(arglist__9779) {
      var x = cljs.core.first(arglist__9779);
      arglist__9779 = cljs.core.next(arglist__9779);
      var y = cljs.core.first(arglist__9779);
      var more = cljs.core.rest(arglist__9779);
      return G__9778__delegate(x, y, more);
    };
    G__9778.cljs$core$IFn$_invoke$arity$variadic = G__9778__delegate;
    return G__9778;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error("Argument to char must be a character or number");
      } else {
        return null;
      }
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__9780__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more);
    };
    var G__9780 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9780__delegate.call(this, x, y, more);
    };
    G__9780.cljs$lang$maxFixedArity = 2;
    G__9780.cljs$lang$applyTo = function(arglist__9781) {
      var x = cljs.core.first(arglist__9781);
      arglist__9781 = cljs.core.next(arglist__9781);
      var y = cljs.core.first(arglist__9781);
      var more = cljs.core.rest(arglist__9781);
      return G__9780__delegate(x, y, more);
    };
    G__9780.cljs$core$IFn$_invoke$arity$variadic = G__9780__delegate;
    return G__9780;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__9782__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more);
    };
    var G__9782 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9782__delegate.call(this, x, y, more);
    };
    G__9782.cljs$lang$maxFixedArity = 2;
    G__9782.cljs$lang$applyTo = function(arglist__9783) {
      var x = cljs.core.first(arglist__9783);
      arglist__9783 = cljs.core.next(arglist__9783);
      var y = cljs.core.first(arglist__9783);
      var more = cljs.core.rest(arglist__9783);
      return G__9782__delegate(x, y, more);
    };
    G__9782.cljs$core$IFn$_invoke$arity$variadic = G__9782__delegate;
    return G__9782;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__9784__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more);
    };
    var G__9784 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9784__delegate.call(this, x, y, more);
    };
    G__9784.cljs$lang$maxFixedArity = 2;
    G__9784.cljs$lang$applyTo = function(arglist__9785) {
      var x = cljs.core.first(arglist__9785);
      arglist__9785 = cljs.core.next(arglist__9785);
      var y = cljs.core.first(arglist__9785);
      var more = cljs.core.rest(arglist__9785);
      return G__9784__delegate(x, y, more);
    };
    G__9784.cljs$core$IFn$_invoke$arity$variadic = G__9784__delegate;
    return G__9784;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__9786__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more);
    };
    var G__9786 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9786__delegate.call(this, x, y, more);
    };
    G__9786.cljs$lang$maxFixedArity = 2;
    G__9786.cljs$lang$applyTo = function(arglist__9787) {
      var x = cljs.core.first(arglist__9787);
      arglist__9787 = cljs.core.next(arglist__9787);
      var y = cljs.core.first(arglist__9787);
      var more = cljs.core.rest(arglist__9787);
      return G__9786__delegate(x, y, more);
    };
    G__9786.cljs$core$IFn$_invoke$arity$variadic = G__9786__delegate;
    return G__9786;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__9788__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more);
    };
    var G__9788 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9788__delegate.call(this, x, y, more);
    };
    G__9788.cljs$lang$maxFixedArity = 2;
    G__9788.cljs$lang$applyTo = function(arglist__9789) {
      var x = cljs.core.first(arglist__9789);
      arglist__9789 = cljs.core.next(arglist__9789);
      var y = cljs.core.first(arglist__9789);
      var more = cljs.core.rest(arglist__9789);
      return G__9788__delegate(x, y, more);
    };
    G__9788.cljs$core$IFn$_invoke$arity$variadic = G__9788__delegate;
    return G__9788;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_substract = function() {
  var unchecked_substract = null;
  var unchecked_substract__1 = function(x) {
    return-x;
  };
  var unchecked_substract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_substract__3 = function() {
    var G__9790__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract, x - y, more);
    };
    var G__9790 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9790__delegate.call(this, x, y, more);
    };
    G__9790.cljs$lang$maxFixedArity = 2;
    G__9790.cljs$lang$applyTo = function(arglist__9791) {
      var x = cljs.core.first(arglist__9791);
      arglist__9791 = cljs.core.next(arglist__9791);
      var y = cljs.core.first(arglist__9791);
      var more = cljs.core.rest(arglist__9791);
      return G__9790__delegate(x, y, more);
    };
    G__9790.cljs$core$IFn$_invoke$arity$variadic = G__9790__delegate;
    return G__9790;
  }();
  unchecked_substract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract__1.call(this, x);
      case 2:
        return unchecked_substract__2.call(this, x, y);
      default:
        return unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract.cljs$lang$maxFixedArity = 2;
  unchecked_substract.cljs$lang$applyTo = unchecked_substract__3.cljs$lang$applyTo;
  unchecked_substract.cljs$core$IFn$_invoke$arity$1 = unchecked_substract__1;
  unchecked_substract.cljs$core$IFn$_invoke$arity$2 = unchecked_substract__2;
  unchecked_substract.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract;
}();
cljs.core.unchecked_substract_int = function() {
  var unchecked_substract_int = null;
  var unchecked_substract_int__1 = function(x) {
    return-x;
  };
  var unchecked_substract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_substract_int__3 = function() {
    var G__9792__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract_int, x - y, more);
    };
    var G__9792 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9792__delegate.call(this, x, y, more);
    };
    G__9792.cljs$lang$maxFixedArity = 2;
    G__9792.cljs$lang$applyTo = function(arglist__9793) {
      var x = cljs.core.first(arglist__9793);
      arglist__9793 = cljs.core.next(arglist__9793);
      var y = cljs.core.first(arglist__9793);
      var more = cljs.core.rest(arglist__9793);
      return G__9792__delegate(x, y, more);
    };
    G__9792.cljs$core$IFn$_invoke$arity$variadic = G__9792__delegate;
    return G__9792;
  }();
  unchecked_substract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract_int__1.call(this, x);
      case 2:
        return unchecked_substract_int__2.call(this, x, y);
      default:
        return unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract_int.cljs$lang$maxFixedArity = 2;
  unchecked_substract_int.cljs$lang$applyTo = unchecked_substract_int__3.cljs$lang$applyTo;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_substract_int__1;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_substract_int__2;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    return Math.floor.call(null, q);
  } else {
    return Math.ceil.call(null, q);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q;
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null);
  };
  var rand__1 = function(n) {
    return n * rand.call(null);
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n));
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__9794__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__9795 = y;
            var G__9796 = cljs.core.first.call(null, more);
            var G__9797 = cljs.core.next.call(null, more);
            x = G__9795;
            y = G__9796;
            more = G__9797;
            continue;
          } else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__9794 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9794__delegate.call(this, x, y, more);
    };
    G__9794.cljs$lang$maxFixedArity = 2;
    G__9794.cljs$lang$applyTo = function(arglist__9798) {
      var x = cljs.core.first(arglist__9798);
      arglist__9798 = cljs.core.next(arglist__9798);
      var y = cljs.core.first(arglist__9798);
      var more = cljs.core.rest(arglist__9798);
      return G__9794__delegate(x, y, more);
    };
    G__9794.cljs$core$IFn$_invoke$arity$variadic = G__9794__delegate;
    return G__9794;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__9799 = n__$1 - 1;
      var G__9800 = cljs.core.next.call(null, xs);
      n__$1 = G__9799;
      xs = G__9800;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      return x.toString();
    }
  };
  var str__2 = function() {
    var G__9801__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__9802 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__9803 = cljs.core.next.call(null, more);
          sb = G__9802;
          more = G__9803;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__9801 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__9801__delegate.call(this, x, ys);
    };
    G__9801.cljs$lang$maxFixedArity = 1;
    G__9801.cljs$lang$applyTo = function(arglist__9804) {
      var x = cljs.core.first(arglist__9804);
      var ys = cljs.core.rest(arglist__9804);
      return G__9801__delegate(x, ys);
    };
    G__9801.cljs$core$IFn$_invoke$arity$variadic = G__9801__delegate;
    return G__9801;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__9805 = cljs.core.next.call(null, xs);
            var G__9806 = cljs.core.next.call(null, ys);
            xs = G__9805;
            ys = G__9806;
            continue;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false;
            } else {
              return null;
            }
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__9807 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__9808 = cljs.core.next.call(null, s);
        res = G__9807;
        s = G__9808;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__9809 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__9810 = cljs.core.next.call(null, s);
      h = G__9809;
      s = G__9810;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__9811 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__9812 = cljs.core.next.call(null, s__$1);
      h = G__9811;
      s__$1 = G__9812;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__9819_9825 = cljs.core.seq.call(null, fn_map);
  var chunk__9820_9826 = null;
  var count__9821_9827 = 0;
  var i__9822_9828 = 0;
  while (true) {
    if (i__9822_9828 < count__9821_9827) {
      var vec__9823_9829 = cljs.core._nth.call(null, chunk__9820_9826, i__9822_9828);
      var key_name_9830 = cljs.core.nth.call(null, vec__9823_9829, 0, null);
      var f_9831 = cljs.core.nth.call(null, vec__9823_9829, 1, null);
      var str_name_9832 = cljs.core.name.call(null, key_name_9830);
      obj[str_name_9832] = f_9831;
      var G__9833 = seq__9819_9825;
      var G__9834 = chunk__9820_9826;
      var G__9835 = count__9821_9827;
      var G__9836 = i__9822_9828 + 1;
      seq__9819_9825 = G__9833;
      chunk__9820_9826 = G__9834;
      count__9821_9827 = G__9835;
      i__9822_9828 = G__9836;
      continue;
    } else {
      var temp__4092__auto___9837 = cljs.core.seq.call(null, seq__9819_9825);
      if (temp__4092__auto___9837) {
        var seq__9819_9838__$1 = temp__4092__auto___9837;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__9819_9838__$1)) {
          var c__4226__auto___9839 = cljs.core.chunk_first.call(null, seq__9819_9838__$1);
          var G__9840 = cljs.core.chunk_rest.call(null, seq__9819_9838__$1);
          var G__9841 = c__4226__auto___9839;
          var G__9842 = cljs.core.count.call(null, c__4226__auto___9839);
          var G__9843 = 0;
          seq__9819_9825 = G__9840;
          chunk__9820_9826 = G__9841;
          count__9821_9827 = G__9842;
          i__9822_9828 = G__9843;
          continue;
        } else {
          var vec__9824_9844 = cljs.core.first.call(null, seq__9819_9838__$1);
          var key_name_9845 = cljs.core.nth.call(null, vec__9824_9844, 0, null);
          var f_9846 = cljs.core.nth.call(null, vec__9824_9844, 1, null);
          var str_name_9847 = cljs.core.name.call(null, key_name_9845);
          obj[str_name_9847] = f_9846;
          var G__9848 = cljs.core.next.call(null, seq__9819_9838__$1);
          var G__9849 = null;
          var G__9850 = 0;
          var G__9851 = 0;
          seq__9819_9825 = G__9848;
          chunk__9820_9826 = G__9849;
          count__9821_9827 = G__9850;
          i__9822_9828 = G__9851;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/List");
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3889__auto__ = self__.__hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/EmptyList");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__9853 = coll;
  if (G__9853) {
    var bit__4128__auto__ = G__9853.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4128__auto__ || G__9853.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__9853.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__9853);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__9853);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__9854 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__9854;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__9855 = i - 1;
        var G__9856 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__9855;
        r = G__9856;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__9857) {
    var xs = cljs.core.seq(arglist__9857);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/Cons");
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3889__auto__ = self__.__hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq.call(null, self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3478__auto__ = coll == null;
    if (or__3478__auto__) {
      return or__3478__auto__;
    } else {
      var G__9861 = coll;
      if (G__9861) {
        var bit__4121__auto__ = G__9861.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4121__auto__ || G__9861.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__9863 = x;
  if (G__9863) {
    var bit__4128__auto__ = G__9863.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4128__auto__ || G__9863.cljs$core$IList$) {
      return true;
    } else {
      if (!G__9863.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__9863);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__9863);
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/Keyword");
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._hash == null) {
    self__._hash = cljs.core.hash_combine.call(null, cljs.core.hash.call(null, self__.ns), cljs.core.hash.call(null, self__.name)) + 2654435769;
    return self__._hash;
  } else {
    return self__._hash;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__9865 = null;
  var G__9865__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw);
  };
  var G__9865__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found);
  };
  G__9865 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9865__2.call(this, self__, coll);
      case 3:
        return G__9865__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9865;
}();
cljs.core.Keyword.prototype.apply = function(self__, args9864) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args9864)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__9867 = x;
    if (G__9867) {
      var bit__4121__auto__ = G__9867.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4121__auto__ || G__9867.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._namespace.call(null, x);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace.call(null, name), cljs.core.name.call(null, name), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/LazySeq");
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3889__auto__ = self__.__hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__9868 = ls.sval();
        ls = G__9868;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/ArrayChunk");
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/ChunkedCons");
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3889__auto__ = self__.__hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1);
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count.call(null, chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__9870 = s;
    if (G__9870) {
      var bit__4121__auto__ = G__9870.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4121__auto__ || G__9870.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next.call(null, s);
  } else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__9871 = cljs.core.next.call(null, s__$1);
      s__$1 = G__9871;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_9872 = 0;
  var xs_9873 = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs_9873) {
      ret[i_9872] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_9873));
      var G__9874 = i_9872 + 1;
      var G__9875 = cljs.core.next.call(null, xs_9873);
      i_9872 = G__9874;
      xs_9873 = G__9875;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__9876 = i + 1;
          var G__9877 = cljs.core.next.call(null, s__$1);
          i = G__9876;
          s__$1 = G__9877;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4326__auto___9878 = size;
      var i_9879 = 0;
      while (true) {
        if (i_9879 < n__4326__auto___9878) {
          a[i_9879] = init_val_or_seq;
          var G__9880 = i_9879 + 1;
          i_9879 = G__9880;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__9881 = i + 1;
          var G__9882 = cljs.core.next.call(null, s__$1);
          i = G__9881;
          s__$1 = G__9882;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4326__auto___9883 = size;
      var i_9884 = 0;
      while (true) {
        if (i_9884 < n__4326__auto___9883) {
          a[i_9884] = init_val_or_seq;
          var G__9885 = i_9884 + 1;
          i_9884 = G__9885;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__9886 = i + 1;
          var G__9887 = cljs.core.next.call(null, s__$1);
          i = G__9886;
          s__$1 = G__9887;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4326__auto___9888 = size;
      var i_9889 = 0;
      while (true) {
        if (i_9889 < n__4326__auto___9888) {
          a[i_9889] = init_val_or_seq;
          var G__9890 = i_9889 + 1;
          i_9889 = G__9890;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__9891 = i + 1;
          var G__9892 = cljs.core.next.call(null, s__$1);
          i = G__9891;
          s__$1 = G__9892;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4326__auto___9893 = size;
      var i_9894 = 0;
      while (true) {
        if (i_9894 < n__4326__auto___9893) {
          a[i_9894] = init_val_or_seq;
          var G__9895 = i_9894 + 1;
          i_9894 = G__9895;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__9896 = cljs.core.next.call(null, s__$1);
        var G__9897 = i - 1;
        var G__9898 = sum + 1;
        s__$1 = G__9896;
        i = G__9897;
        sum = G__9898;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)));
      } else {
        return null;
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y));
        } else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__9899__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1));
            } else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat.call(null, concat.call(null, x, y), zs);
    };
    var G__9899 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9899__delegate.call(this, x, y, zs);
    };
    G__9899.cljs$lang$maxFixedArity = 2;
    G__9899.cljs$lang$applyTo = function(arglist__9900) {
      var x = cljs.core.first(arglist__9900);
      arglist__9900 = cljs.core.next(arglist__9900);
      var y = cljs.core.first(arglist__9900);
      var zs = cljs.core.rest(arglist__9900);
      return G__9899__delegate(x, y, zs);
    };
    G__9899.cljs$core$IFn$_invoke$arity$variadic = G__9899__delegate;
    return G__9899;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)));
  };
  var list_STAR___5 = function() {
    var G__9901__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))));
    };
    var G__9901 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__9901__delegate.call(this, a, b, c, d, more);
    };
    G__9901.cljs$lang$maxFixedArity = 4;
    G__9901.cljs$lang$applyTo = function(arglist__9902) {
      var a = cljs.core.first(arglist__9902);
      arglist__9902 = cljs.core.next(arglist__9902);
      var b = cljs.core.first(arglist__9902);
      arglist__9902 = cljs.core.next(arglist__9902);
      var c = cljs.core.first(arglist__9902);
      arglist__9902 = cljs.core.next(arglist__9902);
      var d = cljs.core.first(arglist__9902);
      var more = cljs.core.rest(arglist__9902);
      return G__9901__delegate(a, b, c, d, more);
    };
    G__9901.cljs$core$IFn$_invoke$arity$variadic = G__9901__delegate;
    return G__9901;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_.call(null, tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__9903__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__9904 = ntcoll;
          var G__9905 = cljs.core.first.call(null, vals);
          var G__9906 = cljs.core.next.call(null, vals);
          tcoll = G__9904;
          val = G__9905;
          vals = G__9906;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__9903 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9903__delegate.call(this, tcoll, val, vals);
    };
    G__9903.cljs$lang$maxFixedArity = 2;
    G__9903.cljs$lang$applyTo = function(arglist__9907) {
      var tcoll = cljs.core.first(arglist__9907);
      arglist__9907 = cljs.core.next(arglist__9907);
      var val = cljs.core.first(arglist__9907);
      var vals = cljs.core.rest(arglist__9907);
      return G__9903__delegate(tcoll, val, vals);
    };
    G__9903.cljs$core$IFn$_invoke$arity$variadic = G__9903__delegate;
    return G__9903;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_.call(null, tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__9908__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_.call(null, tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__9909 = ntcoll;
          var G__9910 = cljs.core.first.call(null, kvs);
          var G__9911 = cljs.core.second.call(null, kvs);
          var G__9912 = cljs.core.nnext.call(null, kvs);
          tcoll = G__9909;
          key = G__9910;
          val = G__9911;
          kvs = G__9912;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__9908 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__9908__delegate.call(this, tcoll, key, val, kvs);
    };
    G__9908.cljs$lang$maxFixedArity = 3;
    G__9908.cljs$lang$applyTo = function(arglist__9913) {
      var tcoll = cljs.core.first(arglist__9913);
      arglist__9913 = cljs.core.next(arglist__9913);
      var key = cljs.core.first(arglist__9913);
      arglist__9913 = cljs.core.next(arglist__9913);
      var val = cljs.core.first(arglist__9913);
      var kvs = cljs.core.rest(arglist__9913);
      return G__9908__delegate(tcoll, key, val, kvs);
    };
    G__9908.cljs$core$IFn$_invoke$arity$variadic = G__9908__delegate;
    return G__9908;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_.call(null, tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__9914__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_.call(null, tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__9915 = ntcoll;
          var G__9916 = cljs.core.first.call(null, ks);
          var G__9917 = cljs.core.next.call(null, ks);
          tcoll = G__9915;
          key = G__9916;
          ks = G__9917;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__9914 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9914__delegate.call(this, tcoll, key, ks);
    };
    G__9914.cljs$lang$maxFixedArity = 2;
    G__9914.cljs$lang$applyTo = function(arglist__9918) {
      var tcoll = cljs.core.first(arglist__9918);
      arglist__9918 = cljs.core.next(arglist__9918);
      var key = cljs.core.first(arglist__9918);
      var ks = cljs.core.rest(arglist__9918);
      return G__9914__delegate(tcoll, key, ks);
    };
    G__9914.cljs$core$IFn$_invoke$arity$variadic = G__9914__delegate;
    return G__9914;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_.call(null, tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__9919__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__9920 = ntcoll;
          var G__9921 = cljs.core.first.call(null, vals);
          var G__9922 = cljs.core.next.call(null, vals);
          tcoll = G__9920;
          val = G__9921;
          vals = G__9922;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__9919 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9919__delegate.call(this, tcoll, val, vals);
    };
    G__9919.cljs$lang$maxFixedArity = 2;
    G__9919.cljs$lang$applyTo = function(arglist__9923) {
      var tcoll = cljs.core.first(arglist__9923);
      arglist__9923 = cljs.core.next(arglist__9923);
      var val = cljs.core.first(arglist__9923);
      var vals = cljs.core.rest(arglist__9923);
      return G__9919__delegate(tcoll, val, vals);
    };
    G__9919.cljs$core$IFn$_invoke$arity$variadic = G__9919__delegate;
    return G__9919;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if (argc === 0) {
    return f.call(null);
  } else {
    var a4370 = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4370);
      } else {
        return f.call(null, a4370);
      }
    } else {
      var b4371 = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4370, b4371);
        } else {
          return f.call(null, a4370, b4371);
        }
      } else {
        var c4372 = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4370, b4371, c4372);
          } else {
            return f.call(null, a4370, b4371, c4372);
          }
        } else {
          var d4373 = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4370, b4371, c4372, d4373);
            } else {
              return f.call(null, a4370, b4371, c4372, d4373);
            }
          } else {
            var e4374 = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4370, b4371, c4372, d4373, e4374);
              } else {
                return f.call(null, a4370, b4371, c4372, d4373, e4374);
              }
            } else {
              var f4375 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4370, b4371, c4372, d4373, e4374, f4375);
                } else {
                  return f.call(null, a4370, b4371, c4372, d4373, e4374, f4375);
                }
              } else {
                var g4376 = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4370, b4371, c4372, d4373, e4374, f4375, g4376);
                  } else {
                    return f.call(null, a4370, b4371, c4372, d4373, e4374, f4375, g4376);
                  }
                } else {
                  var h4377 = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4370, b4371, c4372, d4373, e4374, f4375, g4376, h4377);
                    } else {
                      return f.call(null, a4370, b4371, c4372, d4373, e4374, f4375, g4376, h4377);
                    }
                  } else {
                    var i4378 = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4370, b4371, c4372, d4373, e4374, f4375, g4376, h4377, i4378);
                      } else {
                        return f.call(null, a4370, b4371, c4372, d4373, e4374, f4375, g4376, h4377, i4378);
                      }
                    } else {
                      var j4379 = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4370, b4371, c4372, d4373, e4374, f4375, g4376, h4377, i4378, j4379);
                        } else {
                          return f.call(null, a4370, b4371, c4372, d4373, e4374, f4375, g4376, h4377, i4378, j4379);
                        }
                      } else {
                        var k4380 = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4370, b4371, c4372, d4373, e4374, f4375, g4376, h4377, i4378, j4379, k4380);
                          } else {
                            return f.call(null, a4370, b4371, c4372, d4373, e4374, f4375, g4376, h4377, i4378, j4379, k4380);
                          }
                        } else {
                          var l4381 = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4370, b4371, c4372, d4373, e4374, f4375, g4376, h4377, i4378, j4379, k4380, l4381);
                            } else {
                              return f.call(null, a4370, b4371, c4372, d4373, e4374, f4375, g4376, h4377, i4378, j4379, k4380, l4381);
                            }
                          } else {
                            var m4382 = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4370, b4371, c4372, d4373, e4374, f4375, g4376, h4377, i4378, j4379, k4380, l4381, m4382);
                              } else {
                                return f.call(null, a4370, b4371, c4372, d4373, e4374, f4375, g4376, h4377, i4378, j4379, k4380, l4381, m4382);
                              }
                            } else {
                              var n4383 = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4370, b4371, c4372, d4373, e4374, f4375, g4376, h4377, i4378, j4379, k4380, l4381, m4382, n4383);
                                } else {
                                  return f.call(null, a4370, b4371, c4372, d4373, e4374, f4375, g4376, h4377, i4378, j4379, k4380, l4381, m4382, n4383);
                                }
                              } else {
                                var o4384 = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4370, b4371, c4372, d4373, e4374, f4375, g4376, h4377, i4378, j4379, k4380, l4381, m4382, n4383, o4384);
                                  } else {
                                    return f.call(null, a4370, b4371, c4372, d4373, e4374, f4375, g4376, h4377, i4378, j4379, k4380, l4381, m4382, n4383, o4384);
                                  }
                                } else {
                                  var p4385 = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4370, b4371, c4372, d4373, e4374, f4375, g4376, h4377, i4378, j4379, k4380, l4381, m4382, n4383, o4384, p4385);
                                    } else {
                                      return f.call(null, a4370, b4371, c4372, d4373, e4374, f4375, g4376, h4377, i4378, j4379, k4380, l4381, m4382, n4383, o4384, p4385);
                                    }
                                  } else {
                                    var q4386 = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4370, b4371, c4372, d4373, e4374, f4375, g4376, h4377, i4378, j4379, k4380, l4381, m4382, n4383, o4384, p4385, q4386);
                                      } else {
                                        return f.call(null, a4370, b4371, c4372, d4373, e4374, f4375, g4376, h4377, i4378, j4379, k4380, l4381, m4382, n4383, o4384, p4385, q4386);
                                      }
                                    } else {
                                      var r4387 = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4370, b4371, c4372, d4373, e4374, f4375, g4376, h4377, i4378, j4379, k4380, l4381, m4382, n4383, o4384, p4385, q4386, r4387);
                                        } else {
                                          return f.call(null, a4370, b4371, c4372, d4373, e4374, f4375, g4376, h4377, i4378, j4379, k4380, l4381, m4382, n4383, o4384, p4385, q4386, r4387);
                                        }
                                      } else {
                                        var s4388 = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4370, b4371, c4372, d4373, e4374, f4375, g4376, h4377, i4378, j4379, k4380, l4381, m4382, n4383, o4384, p4385, q4386, r4387, s4388);
                                          } else {
                                            return f.call(null, a4370, b4371, c4372, d4373, e4374, f4375, g4376, h4377, i4378, j4379, k4380, l4381, m4382, n4383, o4384, p4385, q4386, r4387, s4388);
                                          }
                                        } else {
                                          var t4389 = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4370, b4371, c4372, d4373, e4374, f4375, g4376, h4377, i4378, j4379, k4380, l4381, m4382, n4383, o4384, p4385, q4386, r4387, s4388, t4389);
                                            } else {
                                              return f.call(null, a4370, b4371, c4372, d4373, e4374, f4375, g4376, h4377, i4378, j4379, k4380, l4381, m4382, n4383, o4384, p4385, q4386, r4387, s4388, t4389);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__6 = function() {
    var G__9924__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array.call(null, arglist));
      }
    };
    var G__9924 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__9924__delegate.call(this, f, a, b, c, d, args);
    };
    G__9924.cljs$lang$maxFixedArity = 5;
    G__9924.cljs$lang$applyTo = function(arglist__9925) {
      var f = cljs.core.first(arglist__9925);
      arglist__9925 = cljs.core.next(arglist__9925);
      var a = cljs.core.first(arglist__9925);
      arglist__9925 = cljs.core.next(arglist__9925);
      var b = cljs.core.first(arglist__9925);
      arglist__9925 = cljs.core.next(arglist__9925);
      var c = cljs.core.first(arglist__9925);
      arglist__9925 = cljs.core.next(arglist__9925);
      var d = cljs.core.first(arglist__9925);
      var args = cljs.core.rest(arglist__9925);
      return G__9924__delegate(f, a, b, c, d, args);
    };
    G__9924.cljs$core$IFn$_invoke$arity$variadic = G__9924__delegate;
    return G__9924;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj)));
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a));
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b));
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c));
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c, d));
  };
  var vary_meta__7 = function() {
    var G__9926__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), a, b, c, d, args));
    };
    var G__9926 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__9926__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__9926.cljs$lang$maxFixedArity = 6;
    G__9926.cljs$lang$applyTo = function(arglist__9927) {
      var obj = cljs.core.first(arglist__9927);
      arglist__9927 = cljs.core.next(arglist__9927);
      var f = cljs.core.first(arglist__9927);
      arglist__9927 = cljs.core.next(arglist__9927);
      var a = cljs.core.first(arglist__9927);
      arglist__9927 = cljs.core.next(arglist__9927);
      var b = cljs.core.first(arglist__9927);
      arglist__9927 = cljs.core.next(arglist__9927);
      var c = cljs.core.first(arglist__9927);
      arglist__9927 = cljs.core.next(arglist__9927);
      var d = cljs.core.first(arglist__9927);
      var args = cljs.core.rest(arglist__9927);
      return G__9926__delegate(obj, f, a, b, c, d, args);
    };
    G__9926.cljs$core$IFn$_invoke$arity$variadic = G__9926__delegate;
    return G__9926;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var not_EQ___3 = function() {
    var G__9928__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more));
    };
    var G__9928 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9928__delegate.call(this, x, y, more);
    };
    G__9928.cljs$lang$maxFixedArity = 2;
    G__9928.cljs$lang$applyTo = function(arglist__9929) {
      var x = cljs.core.first(arglist__9929);
      arglist__9929 = cljs.core.next(arglist__9929);
      var y = cljs.core.first(arglist__9929);
      var more = cljs.core.rest(arglist__9929);
      return G__9928__delegate(x, y, more);
    };
    G__9928.cljs$core$IFn$_invoke$arity$variadic = G__9928__delegate;
    return G__9928;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq.call(null, coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__9930 = pred;
        var G__9931 = cljs.core.next.call(null, coll);
        pred = G__9930;
        coll = G__9931;
        continue;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return false;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll)) {
      var or__3478__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if (cljs.core.truth_(or__3478__auto__)) {
        return or__3478__auto__;
      } else {
        var G__9932 = pred;
        var G__9933 = cljs.core.next.call(null, coll);
        pred = G__9932;
        coll = G__9933;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n);
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__9934 = null;
    var G__9934__0 = function() {
      return cljs.core.not.call(null, f.call(null));
    };
    var G__9934__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x));
    };
    var G__9934__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y));
    };
    var G__9934__3 = function() {
      var G__9935__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs));
      };
      var G__9935 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
        }
        return G__9935__delegate.call(this, x, y, zs);
      };
      G__9935.cljs$lang$maxFixedArity = 2;
      G__9935.cljs$lang$applyTo = function(arglist__9936) {
        var x = cljs.core.first(arglist__9936);
        arglist__9936 = cljs.core.next(arglist__9936);
        var y = cljs.core.first(arglist__9936);
        var zs = cljs.core.rest(arglist__9936);
        return G__9935__delegate(x, y, zs);
      };
      G__9935.cljs$core$IFn$_invoke$arity$variadic = G__9935__delegate;
      return G__9935;
    }();
    G__9934 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__9934__0.call(this);
        case 1:
          return G__9934__1.call(this, x);
        case 2:
          return G__9934__2.call(this, x, y);
        default:
          return G__9934__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__9934.cljs$lang$maxFixedArity = 2;
    G__9934.cljs$lang$applyTo = G__9934__3.cljs$lang$applyTo;
    return G__9934;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__9937__delegate = function(args) {
      return x;
    };
    var G__9937 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__9937__delegate.call(this, args);
    };
    G__9937.cljs$lang$maxFixedArity = 0;
    G__9937.cljs$lang$applyTo = function(arglist__9938) {
      var args = cljs.core.seq(arglist__9938);
      return G__9937__delegate(args);
    };
    G__9937.cljs$core$IFn$_invoke$arity$variadic = G__9937__delegate;
    return G__9937;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__9939 = null;
      var G__9939__0 = function() {
        return f.call(null, g.call(null));
      };
      var G__9939__1 = function(x) {
        return f.call(null, g.call(null, x));
      };
      var G__9939__2 = function(x, y) {
        return f.call(null, g.call(null, x, y));
      };
      var G__9939__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z));
      };
      var G__9939__4 = function() {
        var G__9940__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args));
        };
        var G__9940 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__9940__delegate.call(this, x, y, z, args);
        };
        G__9940.cljs$lang$maxFixedArity = 3;
        G__9940.cljs$lang$applyTo = function(arglist__9941) {
          var x = cljs.core.first(arglist__9941);
          arglist__9941 = cljs.core.next(arglist__9941);
          var y = cljs.core.first(arglist__9941);
          arglist__9941 = cljs.core.next(arglist__9941);
          var z = cljs.core.first(arglist__9941);
          var args = cljs.core.rest(arglist__9941);
          return G__9940__delegate(x, y, z, args);
        };
        G__9940.cljs$core$IFn$_invoke$arity$variadic = G__9940__delegate;
        return G__9940;
      }();
      G__9939 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__9939__0.call(this);
          case 1:
            return G__9939__1.call(this, x);
          case 2:
            return G__9939__2.call(this, x, y);
          case 3:
            return G__9939__3.call(this, x, y, z);
          default:
            return G__9939__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9939.cljs$lang$maxFixedArity = 3;
      G__9939.cljs$lang$applyTo = G__9939__4.cljs$lang$applyTo;
      return G__9939;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__9942 = null;
      var G__9942__0 = function() {
        return f.call(null, g.call(null, h.call(null)));
      };
      var G__9942__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)));
      };
      var G__9942__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)));
      };
      var G__9942__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)));
      };
      var G__9942__4 = function() {
        var G__9943__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)));
        };
        var G__9943 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__9943__delegate.call(this, x, y, z, args);
        };
        G__9943.cljs$lang$maxFixedArity = 3;
        G__9943.cljs$lang$applyTo = function(arglist__9944) {
          var x = cljs.core.first(arglist__9944);
          arglist__9944 = cljs.core.next(arglist__9944);
          var y = cljs.core.first(arglist__9944);
          arglist__9944 = cljs.core.next(arglist__9944);
          var z = cljs.core.first(arglist__9944);
          var args = cljs.core.rest(arglist__9944);
          return G__9943__delegate(x, y, z, args);
        };
        G__9943.cljs$core$IFn$_invoke$arity$variadic = G__9943__delegate;
        return G__9943;
      }();
      G__9942 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__9942__0.call(this);
          case 1:
            return G__9942__1.call(this, x);
          case 2:
            return G__9942__2.call(this, x, y);
          case 3:
            return G__9942__3.call(this, x, y, z);
          default:
            return G__9942__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9942.cljs$lang$maxFixedArity = 3;
      G__9942.cljs$lang$applyTo = G__9942__4.cljs$lang$applyTo;
      return G__9942;
    }();
  };
  var comp__4 = function() {
    var G__9945__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__9946__delegate = function(args) {
            var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
            var fs__$2 = cljs.core.next.call(null, fs__$1);
            while (true) {
              if (fs__$2) {
                var G__9947 = cljs.core.first.call(null, fs__$2).call(null, ret);
                var G__9948 = cljs.core.next.call(null, fs__$2);
                ret = G__9947;
                fs__$2 = G__9948;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__9946 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__9946__delegate.call(this, args);
          };
          G__9946.cljs$lang$maxFixedArity = 0;
          G__9946.cljs$lang$applyTo = function(arglist__9949) {
            var args = cljs.core.seq(arglist__9949);
            return G__9946__delegate(args);
          };
          G__9946.cljs$core$IFn$_invoke$arity$variadic = G__9946__delegate;
          return G__9946;
        }();
      }(fs__$1);
    };
    var G__9945 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__9945__delegate.call(this, f1, f2, f3, fs);
    };
    G__9945.cljs$lang$maxFixedArity = 3;
    G__9945.cljs$lang$applyTo = function(arglist__9950) {
      var f1 = cljs.core.first(arglist__9950);
      arglist__9950 = cljs.core.next(arglist__9950);
      var f2 = cljs.core.first(arglist__9950);
      arglist__9950 = cljs.core.next(arglist__9950);
      var f3 = cljs.core.first(arglist__9950);
      var fs = cljs.core.rest(arglist__9950);
      return G__9945__delegate(f1, f2, f3, fs);
    };
    G__9945.cljs$core$IFn$_invoke$arity$variadic = G__9945__delegate;
    return G__9945;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__9951__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args);
      };
      var G__9951 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__9951__delegate.call(this, args);
      };
      G__9951.cljs$lang$maxFixedArity = 0;
      G__9951.cljs$lang$applyTo = function(arglist__9952) {
        var args = cljs.core.seq(arglist__9952);
        return G__9951__delegate(args);
      };
      G__9951.cljs$core$IFn$_invoke$arity$variadic = G__9951__delegate;
      return G__9951;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__9953__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args);
      };
      var G__9953 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__9953__delegate.call(this, args);
      };
      G__9953.cljs$lang$maxFixedArity = 0;
      G__9953.cljs$lang$applyTo = function(arglist__9954) {
        var args = cljs.core.seq(arglist__9954);
        return G__9953__delegate(args);
      };
      G__9953.cljs$core$IFn$_invoke$arity$variadic = G__9953__delegate;
      return G__9953;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__9955__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args);
      };
      var G__9955 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__9955__delegate.call(this, args);
      };
      G__9955.cljs$lang$maxFixedArity = 0;
      G__9955.cljs$lang$applyTo = function(arglist__9956) {
        var args = cljs.core.seq(arglist__9956);
        return G__9955__delegate(args);
      };
      G__9955.cljs$core$IFn$_invoke$arity$variadic = G__9955__delegate;
      return G__9955;
    }();
  };
  var partial__5 = function() {
    var G__9957__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__9958__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args));
        };
        var G__9958 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__9958__delegate.call(this, args);
        };
        G__9958.cljs$lang$maxFixedArity = 0;
        G__9958.cljs$lang$applyTo = function(arglist__9959) {
          var args = cljs.core.seq(arglist__9959);
          return G__9958__delegate(args);
        };
        G__9958.cljs$core$IFn$_invoke$arity$variadic = G__9958__delegate;
        return G__9958;
      }();
    };
    var G__9957 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__9957__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__9957.cljs$lang$maxFixedArity = 4;
    G__9957.cljs$lang$applyTo = function(arglist__9960) {
      var f = cljs.core.first(arglist__9960);
      arglist__9960 = cljs.core.next(arglist__9960);
      var arg1 = cljs.core.first(arglist__9960);
      arglist__9960 = cljs.core.next(arglist__9960);
      var arg2 = cljs.core.first(arglist__9960);
      arglist__9960 = cljs.core.next(arglist__9960);
      var arg3 = cljs.core.first(arglist__9960);
      var more = cljs.core.rest(arglist__9960);
      return G__9957__delegate(f, arg1, arg2, arg3, more);
    };
    G__9957.cljs$core$IFn$_invoke$arity$variadic = G__9957__delegate;
    return G__9957;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__9961 = null;
      var G__9961__1 = function(a) {
        return f.call(null, a == null ? x : a);
      };
      var G__9961__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b);
      };
      var G__9961__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c);
      };
      var G__9961__4 = function() {
        var G__9962__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds);
        };
        var G__9962 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__9962__delegate.call(this, a, b, c, ds);
        };
        G__9962.cljs$lang$maxFixedArity = 3;
        G__9962.cljs$lang$applyTo = function(arglist__9963) {
          var a = cljs.core.first(arglist__9963);
          arglist__9963 = cljs.core.next(arglist__9963);
          var b = cljs.core.first(arglist__9963);
          arglist__9963 = cljs.core.next(arglist__9963);
          var c = cljs.core.first(arglist__9963);
          var ds = cljs.core.rest(arglist__9963);
          return G__9962__delegate(a, b, c, ds);
        };
        G__9962.cljs$core$IFn$_invoke$arity$variadic = G__9962__delegate;
        return G__9962;
      }();
      G__9961 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__9961__1.call(this, a);
          case 2:
            return G__9961__2.call(this, a, b);
          case 3:
            return G__9961__3.call(this, a, b, c);
          default:
            return G__9961__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9961.cljs$lang$maxFixedArity = 3;
      G__9961.cljs$lang$applyTo = G__9961__4.cljs$lang$applyTo;
      return G__9961;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__9964 = null;
      var G__9964__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__9964__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c);
      };
      var G__9964__4 = function() {
        var G__9965__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__9965 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__9965__delegate.call(this, a, b, c, ds);
        };
        G__9965.cljs$lang$maxFixedArity = 3;
        G__9965.cljs$lang$applyTo = function(arglist__9966) {
          var a = cljs.core.first(arglist__9966);
          arglist__9966 = cljs.core.next(arglist__9966);
          var b = cljs.core.first(arglist__9966);
          arglist__9966 = cljs.core.next(arglist__9966);
          var c = cljs.core.first(arglist__9966);
          var ds = cljs.core.rest(arglist__9966);
          return G__9965__delegate(a, b, c, ds);
        };
        G__9965.cljs$core$IFn$_invoke$arity$variadic = G__9965__delegate;
        return G__9965;
      }();
      G__9964 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__9964__2.call(this, a, b);
          case 3:
            return G__9964__3.call(this, a, b, c);
          default:
            return G__9964__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9964.cljs$lang$maxFixedArity = 3;
      G__9964.cljs$lang$applyTo = G__9964__4.cljs$lang$applyTo;
      return G__9964;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__9967 = null;
      var G__9967__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__9967__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c);
      };
      var G__9967__4 = function() {
        var G__9968__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__9968 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__9968__delegate.call(this, a, b, c, ds);
        };
        G__9968.cljs$lang$maxFixedArity = 3;
        G__9968.cljs$lang$applyTo = function(arglist__9969) {
          var a = cljs.core.first(arglist__9969);
          arglist__9969 = cljs.core.next(arglist__9969);
          var b = cljs.core.first(arglist__9969);
          arglist__9969 = cljs.core.next(arglist__9969);
          var c = cljs.core.first(arglist__9969);
          var ds = cljs.core.rest(arglist__9969);
          return G__9968__delegate(a, b, c, ds);
        };
        G__9968.cljs$core$IFn$_invoke$arity$variadic = G__9968__delegate;
        return G__9968;
      }();
      G__9967 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__9967__2.call(this, a, b);
          case 3:
            return G__9967__3.call(this, a, b, c);
          default:
            return G__9967__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9967.cljs$lang$maxFixedArity = 3;
      G__9967.cljs$lang$applyTo = G__9967__4.cljs$lang$applyTo;
      return G__9967;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4326__auto___9970 = size;
          var i_9971 = 0;
          while (true) {
            if (i_9971 < n__4326__auto___9970) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_9971, cljs.core._nth.call(null, c, i_9971)));
              var G__9972 = i_9971 + 1;
              i_9971 = G__9972;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi.call(null, 0, coll);
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__4326__auto___9973 = size;
        var i_9974 = 0;
        while (true) {
          if (i_9974 < n__4326__auto___9973) {
            var x_9975 = f.call(null, cljs.core._nth.call(null, c, i_9974));
            if (x_9975 == null) {
            } else {
              cljs.core.chunk_append.call(null, b, x_9975);
            }
            var G__9976 = i_9974 + 1;
            i_9974 = G__9976;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)));
      } else {
        var x = f.call(null, cljs.core.first.call(null, s));
        if (x == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s));
        } else {
          return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi = function keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4326__auto___9977 = size;
          var i_9978 = 0;
          while (true) {
            if (i_9978 < n__4326__auto___9977) {
              var x_9979 = f.call(null, idx + i_9978, cljs.core._nth.call(null, c, i_9978));
              if (x_9979 == null) {
              } else {
                cljs.core.chunk_append.call(null, b, x_9979);
              }
              var G__9980 = i_9978 + 1;
              i_9978 = G__9980;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          var x = f.call(null, idx, cljs.core.first.call(null, s));
          if (x == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s));
          } else {
            return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi.call(null, 0, coll);
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x));
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3466__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3466__auto__)) {
            return p.call(null, y);
          } else {
            return and__3466__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3466__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3466__auto__)) {
            var and__3466__auto____$1 = p.call(null, y);
            if (cljs.core.truth_(and__3466__auto____$1)) {
              return p.call(null, z);
            } else {
              return and__3466__auto____$1;
            }
          } else {
            return and__3466__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__9987__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep1.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, p, args));
        };
        var G__9987 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__9987__delegate.call(this, x, y, z, args);
        };
        G__9987.cljs$lang$maxFixedArity = 3;
        G__9987.cljs$lang$applyTo = function(arglist__9988) {
          var x = cljs.core.first(arglist__9988);
          arglist__9988 = cljs.core.next(arglist__9988);
          var y = cljs.core.first(arglist__9988);
          arglist__9988 = cljs.core.next(arglist__9988);
          var z = cljs.core.first(arglist__9988);
          var args = cljs.core.rest(arglist__9988);
          return G__9987__delegate(x, y, z, args);
        };
        G__9987.cljs$core$IFn$_invoke$arity$variadic = G__9987__delegate;
        return G__9987;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3466__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3466__auto__)) {
            return p2.call(null, x);
          } else {
            return and__3466__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3466__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3466__auto__)) {
            var and__3466__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3466__auto____$1)) {
              var and__3466__auto____$2 = p2.call(null, x);
              if (cljs.core.truth_(and__3466__auto____$2)) {
                return p2.call(null, y);
              } else {
                return and__3466__auto____$2;
              }
            } else {
              return and__3466__auto____$1;
            }
          } else {
            return and__3466__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3466__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3466__auto__)) {
            var and__3466__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3466__auto____$1)) {
              var and__3466__auto____$2 = p1.call(null, z);
              if (cljs.core.truth_(and__3466__auto____$2)) {
                var and__3466__auto____$3 = p2.call(null, x);
                if (cljs.core.truth_(and__3466__auto____$3)) {
                  var and__3466__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3466__auto____$4)) {
                    return p2.call(null, z);
                  } else {
                    return and__3466__auto____$4;
                  }
                } else {
                  return and__3466__auto____$3;
                }
              } else {
                return and__3466__auto____$2;
              }
            } else {
              return and__3466__auto____$1;
            }
          } else {
            return and__3466__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__9989__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep2.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__9981_SHARP_) {
            var and__3466__auto__ = p1.call(null, p1__9981_SHARP_);
            if (cljs.core.truth_(and__3466__auto__)) {
              return p2.call(null, p1__9981_SHARP_);
            } else {
              return and__3466__auto__;
            }
          }, args));
        };
        var G__9989 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__9989__delegate.call(this, x, y, z, args);
        };
        G__9989.cljs$lang$maxFixedArity = 3;
        G__9989.cljs$lang$applyTo = function(arglist__9990) {
          var x = cljs.core.first(arglist__9990);
          arglist__9990 = cljs.core.next(arglist__9990);
          var y = cljs.core.first(arglist__9990);
          arglist__9990 = cljs.core.next(arglist__9990);
          var z = cljs.core.first(arglist__9990);
          var args = cljs.core.rest(arglist__9990);
          return G__9989__delegate(x, y, z, args);
        };
        G__9989.cljs$core$IFn$_invoke$arity$variadic = G__9989__delegate;
        return G__9989;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3466__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3466__auto__)) {
            var and__3466__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3466__auto____$1)) {
              return p3.call(null, x);
            } else {
              return and__3466__auto____$1;
            }
          } else {
            return and__3466__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3466__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3466__auto__)) {
            var and__3466__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3466__auto____$1)) {
              var and__3466__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3466__auto____$2)) {
                var and__3466__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3466__auto____$3)) {
                  var and__3466__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3466__auto____$4)) {
                    return p3.call(null, y);
                  } else {
                    return and__3466__auto____$4;
                  }
                } else {
                  return and__3466__auto____$3;
                }
              } else {
                return and__3466__auto____$2;
              }
            } else {
              return and__3466__auto____$1;
            }
          } else {
            return and__3466__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3466__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3466__auto__)) {
            var and__3466__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3466__auto____$1)) {
              var and__3466__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3466__auto____$2)) {
                var and__3466__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3466__auto____$3)) {
                  var and__3466__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3466__auto____$4)) {
                    var and__3466__auto____$5 = p3.call(null, y);
                    if (cljs.core.truth_(and__3466__auto____$5)) {
                      var and__3466__auto____$6 = p1.call(null, z);
                      if (cljs.core.truth_(and__3466__auto____$6)) {
                        var and__3466__auto____$7 = p2.call(null, z);
                        if (cljs.core.truth_(and__3466__auto____$7)) {
                          return p3.call(null, z);
                        } else {
                          return and__3466__auto____$7;
                        }
                      } else {
                        return and__3466__auto____$6;
                      }
                    } else {
                      return and__3466__auto____$5;
                    }
                  } else {
                    return and__3466__auto____$4;
                  }
                } else {
                  return and__3466__auto____$3;
                }
              } else {
                return and__3466__auto____$2;
              }
            } else {
              return and__3466__auto____$1;
            }
          } else {
            return and__3466__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__9991__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep3.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__9982_SHARP_) {
            var and__3466__auto__ = p1.call(null, p1__9982_SHARP_);
            if (cljs.core.truth_(and__3466__auto__)) {
              var and__3466__auto____$1 = p2.call(null, p1__9982_SHARP_);
              if (cljs.core.truth_(and__3466__auto____$1)) {
                return p3.call(null, p1__9982_SHARP_);
              } else {
                return and__3466__auto____$1;
              }
            } else {
              return and__3466__auto__;
            }
          }, args));
        };
        var G__9991 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__9991__delegate.call(this, x, y, z, args);
        };
        G__9991.cljs$lang$maxFixedArity = 3;
        G__9991.cljs$lang$applyTo = function(arglist__9992) {
          var x = cljs.core.first(arglist__9992);
          arglist__9992 = cljs.core.next(arglist__9992);
          var y = cljs.core.first(arglist__9992);
          arglist__9992 = cljs.core.next(arglist__9992);
          var z = cljs.core.first(arglist__9992);
          var args = cljs.core.rest(arglist__9992);
          return G__9991__delegate(x, y, z, args);
        };
        G__9991.cljs$core$IFn$_invoke$arity$variadic = G__9991__delegate;
        return G__9991;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__9993__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__9983_SHARP_) {
                return p1__9983_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__9984_SHARP_) {
                var and__3466__auto__ = p1__9984_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3466__auto__)) {
                  return p1__9984_SHARP_.call(null, y);
                } else {
                  return and__3466__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__9985_SHARP_) {
                var and__3466__auto__ = p1__9985_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3466__auto__)) {
                  var and__3466__auto____$1 = p1__9985_SHARP_.call(null, y);
                  if (cljs.core.truth_(and__3466__auto____$1)) {
                    return p1__9985_SHARP_.call(null, z);
                  } else {
                    return and__3466__auto____$1;
                  }
                } else {
                  return and__3466__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__9994__delegate = function(x, y, z, args) {
              return cljs.core.boolean$.call(null, epn.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(ps__$1) {
                return function(p1__9986_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__9986_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__9994 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__9994__delegate.call(this, x, y, z, args);
            };
            G__9994.cljs$lang$maxFixedArity = 3;
            G__9994.cljs$lang$applyTo = function(arglist__9995) {
              var x = cljs.core.first(arglist__9995);
              arglist__9995 = cljs.core.next(arglist__9995);
              var y = cljs.core.first(arglist__9995);
              arglist__9995 = cljs.core.next(arglist__9995);
              var z = cljs.core.first(arglist__9995);
              var args = cljs.core.rest(arglist__9995);
              return G__9994__delegate(x, y, z, args);
            };
            G__9994.cljs$core$IFn$_invoke$arity$variadic = G__9994__delegate;
            return G__9994;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__9993 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__9993__delegate.call(this, p1, p2, p3, ps);
    };
    G__9993.cljs$lang$maxFixedArity = 3;
    G__9993.cljs$lang$applyTo = function(arglist__9996) {
      var p1 = cljs.core.first(arglist__9996);
      arglist__9996 = cljs.core.next(arglist__9996);
      var p2 = cljs.core.first(arglist__9996);
      arglist__9996 = cljs.core.next(arglist__9996);
      var p3 = cljs.core.first(arglist__9996);
      var ps = cljs.core.rest(arglist__9996);
      return G__9993__delegate(p1, p2, p3, ps);
    };
    G__9993.cljs$core$IFn$_invoke$arity$variadic = G__9993__delegate;
    return G__9993;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        return p.call(null, x);
      };
      var sp1__2 = function(x, y) {
        var or__3478__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3478__auto__)) {
          return or__3478__auto__;
        } else {
          return p.call(null, y);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3478__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3478__auto__)) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = p.call(null, y);
          if (cljs.core.truth_(or__3478__auto____$1)) {
            return or__3478__auto____$1;
          } else {
            return p.call(null, z);
          }
        }
      };
      var sp1__4 = function() {
        var G__10003__delegate = function(x, y, z, args) {
          var or__3478__auto__ = sp1.call(null, x, y, z);
          if (cljs.core.truth_(or__3478__auto__)) {
            return or__3478__auto__;
          } else {
            return cljs.core.some.call(null, p, args);
          }
        };
        var G__10003 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10003__delegate.call(this, x, y, z, args);
        };
        G__10003.cljs$lang$maxFixedArity = 3;
        G__10003.cljs$lang$applyTo = function(arglist__10004) {
          var x = cljs.core.first(arglist__10004);
          arglist__10004 = cljs.core.next(arglist__10004);
          var y = cljs.core.first(arglist__10004);
          arglist__10004 = cljs.core.next(arglist__10004);
          var z = cljs.core.first(arglist__10004);
          var args = cljs.core.rest(arglist__10004);
          return G__10003__delegate(x, y, z, args);
        };
        G__10003.cljs$core$IFn$_invoke$arity$variadic = G__10003__delegate;
        return G__10003;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3478__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3478__auto__)) {
          return or__3478__auto__;
        } else {
          return p2.call(null, x);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3478__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3478__auto__)) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3478__auto____$1)) {
            return or__3478__auto____$1;
          } else {
            var or__3478__auto____$2 = p2.call(null, x);
            if (cljs.core.truth_(or__3478__auto____$2)) {
              return or__3478__auto____$2;
            } else {
              return p2.call(null, y);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3478__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3478__auto__)) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3478__auto____$1)) {
            return or__3478__auto____$1;
          } else {
            var or__3478__auto____$2 = p1.call(null, z);
            if (cljs.core.truth_(or__3478__auto____$2)) {
              return or__3478__auto____$2;
            } else {
              var or__3478__auto____$3 = p2.call(null, x);
              if (cljs.core.truth_(or__3478__auto____$3)) {
                return or__3478__auto____$3;
              } else {
                var or__3478__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3478__auto____$4)) {
                  return or__3478__auto____$4;
                } else {
                  return p2.call(null, z);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__10005__delegate = function(x, y, z, args) {
          var or__3478__auto__ = sp2.call(null, x, y, z);
          if (cljs.core.truth_(or__3478__auto__)) {
            return or__3478__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3478__auto__) {
              return function(p1__9997_SHARP_) {
                var or__3478__auto____$1 = p1.call(null, p1__9997_SHARP_);
                if (cljs.core.truth_(or__3478__auto____$1)) {
                  return or__3478__auto____$1;
                } else {
                  return p2.call(null, p1__9997_SHARP_);
                }
              };
            }(or__3478__auto__), args);
          }
        };
        var G__10005 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10005__delegate.call(this, x, y, z, args);
        };
        G__10005.cljs$lang$maxFixedArity = 3;
        G__10005.cljs$lang$applyTo = function(arglist__10006) {
          var x = cljs.core.first(arglist__10006);
          arglist__10006 = cljs.core.next(arglist__10006);
          var y = cljs.core.first(arglist__10006);
          arglist__10006 = cljs.core.next(arglist__10006);
          var z = cljs.core.first(arglist__10006);
          var args = cljs.core.rest(arglist__10006);
          return G__10005__delegate(x, y, z, args);
        };
        G__10005.cljs$core$IFn$_invoke$arity$variadic = G__10005__delegate;
        return G__10005;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3478__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3478__auto__)) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3478__auto____$1)) {
            return or__3478__auto____$1;
          } else {
            return p3.call(null, x);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3478__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3478__auto__)) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3478__auto____$1)) {
            return or__3478__auto____$1;
          } else {
            var or__3478__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3478__auto____$2)) {
              return or__3478__auto____$2;
            } else {
              var or__3478__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3478__auto____$3)) {
                return or__3478__auto____$3;
              } else {
                var or__3478__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3478__auto____$4)) {
                  return or__3478__auto____$4;
                } else {
                  return p3.call(null, y);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3478__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3478__auto__)) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3478__auto____$1)) {
            return or__3478__auto____$1;
          } else {
            var or__3478__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3478__auto____$2)) {
              return or__3478__auto____$2;
            } else {
              var or__3478__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3478__auto____$3)) {
                return or__3478__auto____$3;
              } else {
                var or__3478__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3478__auto____$4)) {
                  return or__3478__auto____$4;
                } else {
                  var or__3478__auto____$5 = p3.call(null, y);
                  if (cljs.core.truth_(or__3478__auto____$5)) {
                    return or__3478__auto____$5;
                  } else {
                    var or__3478__auto____$6 = p1.call(null, z);
                    if (cljs.core.truth_(or__3478__auto____$6)) {
                      return or__3478__auto____$6;
                    } else {
                      var or__3478__auto____$7 = p2.call(null, z);
                      if (cljs.core.truth_(or__3478__auto____$7)) {
                        return or__3478__auto____$7;
                      } else {
                        return p3.call(null, z);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__10007__delegate = function(x, y, z, args) {
          var or__3478__auto__ = sp3.call(null, x, y, z);
          if (cljs.core.truth_(or__3478__auto__)) {
            return or__3478__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3478__auto__) {
              return function(p1__9998_SHARP_) {
                var or__3478__auto____$1 = p1.call(null, p1__9998_SHARP_);
                if (cljs.core.truth_(or__3478__auto____$1)) {
                  return or__3478__auto____$1;
                } else {
                  var or__3478__auto____$2 = p2.call(null, p1__9998_SHARP_);
                  if (cljs.core.truth_(or__3478__auto____$2)) {
                    return or__3478__auto____$2;
                  } else {
                    return p3.call(null, p1__9998_SHARP_);
                  }
                }
              };
            }(or__3478__auto__), args);
          }
        };
        var G__10007 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10007__delegate.call(this, x, y, z, args);
        };
        G__10007.cljs$lang$maxFixedArity = 3;
        G__10007.cljs$lang$applyTo = function(arglist__10008) {
          var x = cljs.core.first(arglist__10008);
          arglist__10008 = cljs.core.next(arglist__10008);
          var y = cljs.core.first(arglist__10008);
          arglist__10008 = cljs.core.next(arglist__10008);
          var z = cljs.core.first(arglist__10008);
          var args = cljs.core.rest(arglist__10008);
          return G__10007__delegate(x, y, z, args);
        };
        G__10007.cljs$core$IFn$_invoke$arity$variadic = G__10007__delegate;
        return G__10007;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__10009__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__9999_SHARP_) {
                return p1__9999_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__10000_SHARP_) {
                var or__3478__auto__ = p1__10000_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3478__auto__)) {
                  return or__3478__auto__;
                } else {
                  return p1__10000_SHARP_.call(null, y);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__10001_SHARP_) {
                var or__3478__auto__ = p1__10001_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3478__auto__)) {
                  return or__3478__auto__;
                } else {
                  var or__3478__auto____$1 = p1__10001_SHARP_.call(null, y);
                  if (cljs.core.truth_(or__3478__auto____$1)) {
                    return or__3478__auto____$1;
                  } else {
                    return p1__10001_SHARP_.call(null, z);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__10010__delegate = function(x, y, z, args) {
              var or__3478__auto__ = spn.call(null, x, y, z);
              if (cljs.core.truth_(or__3478__auto__)) {
                return or__3478__auto__;
              } else {
                return cljs.core.some.call(null, function(or__3478__auto__, ps__$1) {
                  return function(p1__10002_SHARP_) {
                    return cljs.core.some.call(null, p1__10002_SHARP_, args);
                  };
                }(or__3478__auto__, ps__$1), ps__$1);
              }
            };
            var G__10010 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__10010__delegate.call(this, x, y, z, args);
            };
            G__10010.cljs$lang$maxFixedArity = 3;
            G__10010.cljs$lang$applyTo = function(arglist__10011) {
              var x = cljs.core.first(arglist__10011);
              arglist__10011 = cljs.core.next(arglist__10011);
              var y = cljs.core.first(arglist__10011);
              arglist__10011 = cljs.core.next(arglist__10011);
              var z = cljs.core.first(arglist__10011);
              var args = cljs.core.rest(arglist__10011);
              return G__10010__delegate(x, y, z, args);
            };
            G__10010.cljs$core$IFn$_invoke$arity$variadic = G__10010__delegate;
            return G__10010;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__10009 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__10009__delegate.call(this, p1, p2, p3, ps);
    };
    G__10009.cljs$lang$maxFixedArity = 3;
    G__10009.cljs$lang$applyTo = function(arglist__10012) {
      var p1 = cljs.core.first(arglist__10012);
      arglist__10012 = cljs.core.next(arglist__10012);
      var p2 = cljs.core.first(arglist__10012);
      arglist__10012 = cljs.core.next(arglist__10012);
      var p3 = cljs.core.first(arglist__10012);
      var ps = cljs.core.rest(arglist__10012);
      return G__10009__delegate(p1, p2, p3, ps);
    };
    G__10009.cljs$core$IFn$_invoke$arity$variadic = G__10009__delegate;
    return G__10009;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4326__auto___10014 = size;
          var i_10015 = 0;
          while (true) {
            if (i_10015 < n__4326__auto___10014) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_10015)));
              var G__10016 = i_10015 + 1;
              i_10015 = G__10016;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if (s1 && (s2 && s3)) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__10017__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.call(null, function(step) {
        return function(p1__10013_SHARP_) {
          return cljs.core.apply.call(null, f, p1__10013_SHARP_);
        };
      }(step), step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)));
    };
    var G__10017 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__10017__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__10017.cljs$lang$maxFixedArity = 4;
    G__10017.cljs$lang$applyTo = function(arglist__10018) {
      var f = cljs.core.first(arglist__10018);
      arglist__10018 = cljs.core.next(arglist__10018);
      var c1 = cljs.core.first(arglist__10018);
      arglist__10018 = cljs.core.next(arglist__10018);
      var c2 = cljs.core.first(arglist__10018);
      arglist__10018 = cljs.core.next(arglist__10018);
      var c3 = cljs.core.first(arglist__10018);
      var colls = cljs.core.rest(arglist__10018);
      return G__10017__delegate(f, c1, c2, c3, colls);
    };
    G__10017.cljs$core$IFn$_invoke$arity$variadic = G__10017__delegate;
    return G__10017;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.drop = function drop(n, coll) {
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if (n__$1 > 0 && s) {
        var G__10019 = n__$1 - 1;
        var G__10020 = cljs.core.rest.call(null, s);
        n__$1 = G__10019;
        coll__$1 = G__10020;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step.call(null, n, coll);
    };
  }(step), null, null);
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x;
    }, s, cljs.core.drop.call(null, n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while (true) {
    if (lead) {
      var G__10021 = cljs.core.next.call(null, s);
      var G__10022 = cljs.core.next.call(null, lead);
      s = G__10021;
      lead = G__10022;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if (cljs.core.truth_(function() {
        var and__3466__auto__ = s;
        if (and__3466__auto__) {
          return pred__$1.call(null, cljs.core.first.call(null, s));
        } else {
          return and__3466__auto__;
        }
      }())) {
        var G__10023 = pred__$1;
        var G__10024 = cljs.core.rest.call(null, s);
        pred__$1 = G__10023;
        coll__$1 = G__10024;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step.call(null, pred, coll);
    };
  }(step), null, null);
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__10025__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__10025 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10025__delegate.call(this, c1, c2, colls);
    };
    G__10025.cljs$lang$maxFixedArity = 2;
    G__10025.cljs$lang$applyTo = function(arglist__10026) {
      var c1 = cljs.core.first(arglist__10026);
      arglist__10026 = cljs.core.next(arglist__10026);
      var c2 = cljs.core.first(arglist__10026);
      var colls = cljs.core.rest(arglist__10026);
      return G__10025__delegate(c1, c2, colls);
    };
    G__10025.cljs$core$IFn$_invoke$arity$variadic = G__10025__delegate;
    return G__10025;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4090__auto__) {
        var coll__$1 = temp__4090__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1));
      } else {
        if (cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat.call(null, null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll));
  };
  var mapcat__3 = function() {
    var G__10027__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls));
    };
    var G__10027 = function(f, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10027__delegate.call(this, f, coll, colls);
    };
    G__10027.cljs$lang$maxFixedArity = 2;
    G__10027.cljs$lang$applyTo = function(arglist__10028) {
      var f = cljs.core.first(arglist__10028);
      arglist__10028 = cljs.core.next(arglist__10028);
      var coll = cljs.core.first(arglist__10028);
      var colls = cljs.core.rest(arglist__10028);
      return G__10027__delegate(f, coll, colls);
    };
    G__10027.cljs$core$IFn$_invoke$arity$variadic = G__10027__delegate;
    return G__10027;
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__4326__auto___10029 = size;
        var i_10030 = 0;
        while (true) {
          if (i_10030 < n__4326__auto___10029) {
            if (cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_10030)))) {
              cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_10030));
            } else {
            }
            var G__10031 = i_10030 + 1;
            i_10030 = G__10031;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)));
      } else {
        var f = cljs.core.first.call(null, s);
        var r = cljs.core.rest.call(null, s);
        if (cljs.core.truth_(pred.call(null, f))) {
          return cljs.core.cons.call(null, f, filter.call(null, pred, r));
        } else {
          return filter.call(null, pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll);
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null);
    }, null, null);
  };
  return walk.call(null, root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__10032_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__10032_SHARP_);
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function into(to, from) {
  if (!(to == null)) {
    if (function() {
      var G__10034 = to;
      if (G__10034) {
        var bit__4121__auto__ = G__10034.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4121__auto__ || G__10034.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from));
    } else {
      return cljs.core.reduce.call(null, cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o));
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__10035__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls));
    };
    var G__10035 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__10035__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__10035.cljs$lang$maxFixedArity = 4;
    G__10035.cljs$lang$applyTo = function(arglist__10036) {
      var f = cljs.core.first(arglist__10036);
      arglist__10036 = cljs.core.next(arglist__10036);
      var c1 = cljs.core.first(arglist__10036);
      arglist__10036 = cljs.core.next(arglist__10036);
      var c2 = cljs.core.first(arglist__10036);
      arglist__10036 = cljs.core.next(arglist__10036);
      var c3 = cljs.core.first(arglist__10036);
      var colls = cljs.core.rest(arglist__10036);
      return G__10035__delegate(f, c1, c2, c3, colls);
    };
    G__10035.cljs$core$IFn$_invoke$arity$variadic = G__10035__delegate;
    return G__10035;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if (cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)));
        } else {
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__10038 = m__$1;
          if (G__10038) {
            var bit__4128__auto__ = G__10038.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4128__auto__ || G__10038.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__10038.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__10038);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__10038);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__10039 = sentinel;
            var G__10040 = m__$2;
            var G__10041 = cljs.core.next.call(null, ks__$1);
            sentinel = G__10039;
            m__$1 = G__10040;
            ks__$1 = G__10041;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__10042, v) {
  var vec__10044 = p__10042;
  var k = cljs.core.nth.call(null, vec__10044, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__10044, 1);
  if (ks) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v));
  } else {
    return cljs.core.assoc.call(null, m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__10045, f) {
    var vec__10055 = p__10045;
    var k = cljs.core.nth.call(null, vec__10055, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__10055, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
    }
  };
  var update_in__4 = function(m, p__10046, f, a) {
    var vec__10056 = p__10046;
    var k = cljs.core.nth.call(null, vec__10056, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__10056, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a));
    }
  };
  var update_in__5 = function(m, p__10047, f, a, b) {
    var vec__10057 = p__10047;
    var k = cljs.core.nth.call(null, vec__10057, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__10057, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b));
    }
  };
  var update_in__6 = function(m, p__10048, f, a, b, c) {
    var vec__10058 = p__10048;
    var k = cljs.core.nth.call(null, vec__10058, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__10058, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c));
    }
  };
  var update_in__7 = function() {
    var G__10060__delegate = function(m, p__10049, f, a, b, c, args) {
      var vec__10059 = p__10049;
      var k = cljs.core.nth.call(null, vec__10059, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__10059, 1);
      if (ks) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args));
      } else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args));
      }
    };
    var G__10060 = function(m, p__10049, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__10060__delegate.call(this, m, p__10049, f, a, b, c, args);
    };
    G__10060.cljs$lang$maxFixedArity = 6;
    G__10060.cljs$lang$applyTo = function(arglist__10061) {
      var m = cljs.core.first(arglist__10061);
      arglist__10061 = cljs.core.next(arglist__10061);
      var p__10049 = cljs.core.first(arglist__10061);
      arglist__10061 = cljs.core.next(arglist__10061);
      var f = cljs.core.first(arglist__10061);
      arglist__10061 = cljs.core.next(arglist__10061);
      var a = cljs.core.first(arglist__10061);
      arglist__10061 = cljs.core.next(arglist__10061);
      var b = cljs.core.first(arglist__10061);
      arglist__10061 = cljs.core.next(arglist__10061);
      var c = cljs.core.first(arglist__10061);
      var args = cljs.core.rest(arglist__10061);
      return G__10060__delegate(m, p__10049, f, a, b, c, args);
    };
    G__10060.cljs$core$IFn$_invoke$arity$variadic = G__10060__delegate;
    return G__10060;
  }();
  update_in = function(m, p__10049, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__10049, f);
      case 4:
        return update_in__4.call(this, m, p__10049, f, a);
      case 5:
        return update_in__5.call(this, m, p__10049, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__10049, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__10049, f, a, b, c, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opts__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__10062 = ll - 5;
      var G__10063 = r;
      ll = G__10062;
      ret = G__10063;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__10064 = cljs.core.pv_aget.call(null, node, 0);
      var G__10065 = level - 5;
      node = G__10064;
      level = G__10065;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off.call(null, pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__10066 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
        var G__10067 = level - 5;
        node = G__10066;
        level = G__10067;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for.call(null, pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if (level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var ret = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret, subidx, null);
        return ret;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/PersistentVector");
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3889__auto__ = self__.__hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__10069 = null;
  var G__10069__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__10069__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__10069 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10069__2.call(this, self__, k);
      case 3:
        return G__10069__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10069;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args10068) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10068)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var step_init = [0, init];
  var i = 0;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while (true) {
          if (j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2;
            } else {
              var G__10070 = j + 1;
              var G__10071 = init__$2;
              j = G__10070;
              init__$1 = G__10071;
              continue;
            }
          } else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1);
      } else {
        var G__10072 = i + step_init[0];
        i = G__10072;
        continue;
      }
    } else {
      return step_init[1];
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4326__auto___10073 = len;
    var i_10074 = 0;
    while (true) {
      if (i_10074 < n__4326__auto___10073) {
        new_tail[i_10074] = self__.tail[i_10074];
        var G__10075 = i_10074 + 1;
        i_10074 = G__10075;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1);
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f, start);
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.chunked_seq.call(null, coll__$1, cljs.core.first_array_for_longvec.call(null, coll__$1), 0, 0);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_tail = cljs.core.unchecked_array_for.call(null, coll__$1, self__.cnt - 2);
          var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
          var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
          var cnt_1 = self__.cnt - 1;
          if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null);
          } else {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off.call(null, coll__$1) <= n) {
      var new_tail = cljs.core.aclone.call(null, self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, val);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for.call(null, coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone.call(null, xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while (true) {
      if (i < l) {
        var G__10076 = i + 1;
        var G__10077 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__10076;
        out = G__10077;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray.call(null, args.arr, true);
    } else {
      return cljs.core.vec.call(null, args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__10078) {
    var args = cljs.core.seq(arglist__10078);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3889__auto__ = self__.__hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/Subvec");
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3889__auto__ = self__.__hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.call = function() {
  var G__10080 = null;
  var G__10080__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__10080__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__10080 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10080__2.call(this, self__, k);
      case 3:
        return G__10080__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10080;
}();
cljs.core.Subvec.prototype.apply = function(self__, args10079) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10079)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq.call(null, i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq.call(null, self__.start);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3785__auto__ = self__.end;
    var y__3786__auto__ = v_pos + 1;
    return x__3785__auto__ > y__3786__auto__ ? x__3785__auto__ : y__3786__auto__;
  }(), null);
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start);
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__10081 = meta;
      var G__10082 = v.v;
      var G__10083 = v.start + start;
      var G__10084 = v.start + end;
      var G__10085 = __hash;
      meta = G__10081;
      v = G__10082;
      start = G__10083;
      end = G__10084;
      __hash = G__10085;
      continue;
    } else {
      var c = cljs.core.count.call(null, v);
      if (start < 0 || (end < 0 || (start > c || end > c))) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj10089 = {};
    return obj10089;
  }(), cljs.core.aclone.call(null, node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if (!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        cljs.core.pv_aset.call(null, node__$1, subidx, null);
        return node__$1;
      } else {
        return null;
      }
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off.call(null, tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__10090 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
        var G__10091 = level - 5;
        node = G__10090;
        level = G__10091;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/TransientVector");
};
cljs.core.TransientVector.prototype.call = function() {
  var G__10093 = null;
  var G__10093__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10093__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10093 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10093__2.call(this, self__, k);
      case 3:
        return G__10093__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10093;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args10092) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10092)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset.call(null, node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
        } else {
          return null;
        }
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var new_tail = cljs.core.unchecked_editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
            var new_root = function() {
              var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
              if (!(nr == null)) {
                return nr;
              } else {
                return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
              }
            }();
            if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
              var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
              self__.root = new_root__$1;
              self__.shift = self__.shift - 5;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1;
            } else {
              self__.root = new_root;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1;
            }
          } else {
            return null;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3889__auto__ = self__.__hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
  if (temp__4090__auto__) {
    var f1 = temp__4090__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/PersistentQueue");
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3889__auto__ = self__.__hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3478__auto__ = self__.rear;
      if (cljs.core.truth_(or__3478__auto__)) {
        return or__3478__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if (cljs.core.truth_(function() {
    var or__3478__auto__ = self__.front;
    if (cljs.core.truth_(or__3478__auto__)) {
      return or__3478__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
    if (temp__4090__auto__) {
      var f1 = temp__4090__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY;
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/NeverEquiv");
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__10094 = i + incr;
        i = G__10094;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__10095 = i + 1;
      var G__10096 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__10095;
      out = G__10096;
      continue;
    } else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj10100 = {};
    return obj10100;
  }();
  var l = ks.length;
  var i_10101 = 0;
  while (true) {
    if (i_10101 < l) {
      var k_10102 = ks[i_10101];
      new_obj[k_10102] = obj[k_10102];
      var G__10103 = i_10101 + 1;
      i_10101 = G__10103;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/ObjMap");
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3889__auto__ = self__.__hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone.call(null, self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__10106 = null;
  var G__10106__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10106__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10106 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10106__2.call(this, self__, k);
      case 3:
        return G__10106__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10106;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args10105) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10105)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__10107 = cljs.core.rest.call(null, keys__$1);
        var G__10108 = init__$2;
        keys__$1 = G__10107;
        init__$1 = G__10108;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.call(null, function(coll__$1) {
      return function(p1__10104_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__10104_SHARP_, self__.strobj[p1__10104_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone.call(null, self__.keys);
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj10110 = {};
  return obj10110;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__10111 = i + 2;
          i = G__10111;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__10112 = i + 2;
          i = G__10112;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__10113 = i + 2;
          i = G__10113;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__10114 = i + 2;
          i = G__10114;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.call(null, k, arr[i])) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__10115 = i + 2;
          i = G__10115;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_10116 = 0;
  while (true) {
    if (i_10116 < l) {
      narr[i_10116] = arr[i_10116];
      var G__10117 = i_10116 + 1;
      i_10116 = G__10117;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj10120 = {};
    return obj10120;
  }(), self__.arr.length, cljs.core.aclone.call(null, self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3889__auto__ = self__.__hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var arr__$1 = function() {
          var G__10121 = cljs.core.aclone.call(null, self__.arr);
          G__10121[idx + 1] = v;
          return G__10121;
        }();
        return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__10122 = null;
  var G__10122__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10122__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10122 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10122__2.call(this, self__, k);
      case 3:
        return G__10122__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10122;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args10118) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10118)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__10123 = i + 2;
        var G__10124 = init__$2;
        i = G__10123;
        init__$1 = G__10124;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__10125 = s + 2;
            var G__10126 = d;
            s = G__10125;
            d = G__10126;
            continue;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              new_arr[d] = self__.arr[s];
              new_arr[d + 1] = self__.arr[s + 1];
              var G__10127 = s + 2;
              var G__10128 = d + 2;
              s = G__10127;
              d = G__10128;
              continue;
            } else {
              return null;
            }
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone.call(null, arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__10129 = i + 2;
        var G__10130 = cljs.core._assoc_BANG_.call(null, ret, arr__$1[i], arr__$1[i + 1]);
        i = G__10129;
        ret = G__10130;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, ret);
      }
      break;
    }
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__10131_10133 = self__.arr;
      G__10131_10133.pop();
      G__10131_10133.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__10132 = o;
      if (G__10132) {
        var bit__4128__auto__ = G__10132.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4128__auto__ || G__10132.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__10132.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__10132);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__10132);
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__10134 = cljs.core.next.call(null, es);
          var G__10135 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__10134;
          tcoll__$2 = G__10135;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__10136 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__10137 = i + 2;
      out = G__10136;
      i = G__10137;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opts__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core._EQ_.call(null, key, other);
      } else {
        return null;
      }
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__10140 = cljs.core.aclone.call(null, arr);
    G__10140[i] = a;
    return G__10140;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__10141 = cljs.core.aclone.call(null, arr);
    G__10141[i] = a;
    G__10141[j] = b;
    return G__10141;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1]);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__10142 = i + 2;
        var G__10143 = init__$2;
        i = G__10142;
        init__$1 = G__10143;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_10144 = 0;
        var j_10145 = 0;
        while (true) {
          if (i_10144 < 32) {
            if ((self__.bitmap >>> i_10144 & 1) === 0) {
              var G__10146 = i_10144 + 1;
              var G__10147 = j_10145;
              i_10144 = G__10146;
              j_10145 = G__10147;
              continue;
            } else {
              nodes[i_10144] = !(self__.arr[j_10145] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_10145]), self__.arr[j_10145], self__.arr[j_10145 + 1], added_leaf_QMARK_) : self__.arr[j_10145 + 1];
              var G__10148 = i_10144 + 1;
              var G__10149 = j_10145 + 2;
              i_10144 = G__10148;
              j_10145 = G__10149;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_arr = new Array(2 * (n + 4));
          cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
          new_arr[2 * idx] = key;
          new_arr[2 * idx + 1] = val;
          cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
          added_leaf_QMARK_.val = true;
          var editable = inode.ensure_editable(edit__$1);
          editable.arr = new_arr;
          editable.bitmap = editable.bitmap | bit;
          return editable;
        } else {
          return null;
        }
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return inode.edit_and_remove_pair(edit__$1, bit, idx);
            } else {
              return null;
            }
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
            } else {
              return null;
            }
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_10150 = 0;
      var j_10151 = 0;
      while (true) {
        if (i_10150 < 32) {
          if ((self__.bitmap >>> i_10150 & 1) === 0) {
            var G__10152 = i_10150 + 1;
            var G__10153 = j_10151;
            i_10150 = G__10152;
            j_10151 = G__10153;
            continue;
          } else {
            nodes[i_10150] = !(self__.arr[j_10151] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_10151]), self__.arr[j_10151], self__.arr[j_10151 + 1], added_leaf_QMARK_) : self__.arr[j_10151 + 1];
            var G__10154 = i_10150 + 1;
            var G__10155 = j_10151 + 2;
            i_10150 = G__10154;
            j_10151 = G__10155;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val));
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)));
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__10156 = i + 1;
        var G__10157 = j + 2;
        var G__10158 = bitmap | 1 << i;
        i = G__10156;
        j = G__10157;
        bitmap = G__10158;
        continue;
      } else {
        var G__10159 = i + 1;
        var G__10160 = j;
        var G__10161 = bitmap;
        i = G__10159;
        j = G__10160;
        bitmap = G__10161;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/ArrayNode");
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone.call(null, self__.arr));
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2);
        } else {
          var G__10162 = i + 1;
          var G__10163 = init__$2;
          i = G__10162;
          init__$1 = G__10163;
          continue;
        }
      } else {
        var G__10164 = i + 1;
        var G__10165 = init__$1;
        i = G__10164;
        init__$1 = G__10165;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        } else {
          return null;
        }
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test.call(null, key, arr[i])) {
        return i;
      } else {
        var G__10166 = i + 2;
        i = G__10166;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)));
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/NodeSeq");
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3889__auto__ = self__.__hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4090__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4090__auto__)) {
              var node = temp__4090__auto__;
              var temp__4090__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4090__auto____$1)) {
                var node_seq = temp__4090__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__10167 = j + 2;
                j = G__10167;
                continue;
              }
            } else {
              var G__10168 = j + 2;
              j = G__10168;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3889__auto__ = self__.__hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4090__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4090__auto__)) {
            var nj = temp__4090__auto__;
            var temp__4090__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4090__auto____$1)) {
              var ns = temp__4090__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__10169 = j + 1;
              j = G__10169;
              continue;
            }
          } else {
            var G__10170 = j + 1;
            j = G__10170;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj10173 = {};
    return obj10173;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3889__auto__ = self__.__hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__10174 = null;
  var G__10174__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10174__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10174 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10174__2.call(this, self__, k);
      case 3:
        return G__10174__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10174;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args10171) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10171)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return init__$1;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if (new_root === self__.root) {
          return coll__$1;
        } else {
          return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__10175 = i + 1;
      var G__10176 = cljs.core._assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__10175;
      out = G__10176;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, out);
    }
    break;
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/TransientHashMap");
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__10177 = o;
      if (G__10177) {
        var bit__4128__auto__ = G__10177.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4128__auto__ || G__10177.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__10177.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__10177);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__10177);
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__10178 = cljs.core.next.call(null, es);
          var G__10179 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__10178;
          tcoll__$1 = G__10179;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__10180 = ascending_QMARK_ ? t.left : t.right;
      var G__10181 = cljs.core.conj.call(null, stack__$1, t);
      t = G__10180;
      stack__$1 = G__10181;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3889__auto__ = self__.__hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, ins, right, null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, left, ins, null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/BlackNode");
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3889__auto__ = self__.__hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__10183 = null;
  var G__10183__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10183__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10183 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10183__2.call(this, self__, k);
      case 3:
        return G__10183__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10183;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args10182) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10182)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/RedNode");
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3889__auto__ = self__.__hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.call = function() {
  var G__10185 = null;
  var G__10185__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10185__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10185 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10185__2.call(this, self__, k);
      case 3:
        return G__10185__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10185;
}();
cljs.core.RedNode.prototype.apply = function(self__, args10184) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10184)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
          if (!(ins == null)) {
            return tree.add_right(ins);
          } else {
            return null;
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var app = tree_map_append.call(null, left.right, right.left);
            if (app instanceof cljs.core.RedNode) {
              return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
            } else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
            }
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var del = tree_map_remove.call(null, comp, tree.right, k, found);
          if (!(del == null) || !(found[0] == null)) {
            if (tree.right instanceof cljs.core.BlackNode) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del);
            } else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
            }
          } else {
            return null;
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v));
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3889__auto__ = self__.__hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if (cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__10187 = null;
  var G__10187__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10187__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10187 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10187__2.call(this, self__, k);
      case 3:
        return G__10187__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10187;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args10186) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10186)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__10188 = t.left;
          t = G__10188;
          continue;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var G__10189 = t.right;
            t = G__10189;
            continue;
          } else {
            return null;
          }
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__10190 = cljs.core.conj.call(null, stack, t);
              var G__10191 = t.left;
              stack = G__10190;
              t = G__10191;
              continue;
            } else {
              var G__10192 = stack;
              var G__10193 = t.right;
              stack = G__10192;
              t = G__10193;
              continue;
            }
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              if (c > 0) {
                var G__10194 = cljs.core.conj.call(null, stack, t);
                var G__10195 = t.right;
                stack = G__10194;
                t = G__10195;
                continue;
              } else {
                var G__10196 = stack;
                var G__10197 = t.left;
                stack = G__10196;
                t = G__10197;
                continue;
              }
            } else {
              return null;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__10198 = cljs.core.nnext.call(null, in$);
        var G__10199 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__10198;
        out = G__10199;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__10200) {
    var keyvals = cljs.core.seq(arglist__10200);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__10201) {
    var keyvals = cljs.core.seq(arglist__10201);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj10205 = {};
      return obj10205;
    }();
    var kvs = cljs.core.seq.call(null, keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__10206 = cljs.core.nnext.call(null, kvs);
        kvs = G__10206;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject.call(null, ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__10207) {
    var keyvals = cljs.core.seq(arglist__10207);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__10208 = cljs.core.nnext.call(null, in$);
        var G__10209 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__10208;
        out = G__10209;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__10210) {
    var keyvals = cljs.core.seq(arglist__10210);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__10211 = cljs.core.nnext.call(null, in$);
        var G__10212 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__10211;
        out = G__10212;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__10213) {
    var comparator = cljs.core.first(arglist__10213);
    var keyvals = cljs.core.rest(arglist__10213);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/KeySeq");
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__10214 = self__.mseq;
    if (G__10214) {
      var bit__4128__auto__ = G__10214.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4128__auto__ || G__10214.cljs$core$INext$) {
        return true;
      } else {
        if (!G__10214.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__10214);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__10214);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__10215 = self__.mseq;
    if (G__10215) {
      var bit__4128__auto__ = G__10215.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4128__auto__ || G__10215.cljs$core$INext$) {
        return true;
      } else {
        if (!G__10215.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__10215);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__10215);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/ValSeq");
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__10216 = self__.mseq;
    if (G__10216) {
      var bit__4128__auto__ = G__10216.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4128__auto__ || G__10216.cljs$core$INext$) {
        return true;
      } else {
        if (!G__10216.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__10216);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__10216);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__10217 = self__.mseq;
    if (G__10217) {
      var bit__4128__auto__ = G__10217.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4128__auto__ || G__10217.cljs$core$INext$) {
        return true;
      } else {
        if (!G__10217.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__10217);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__10217);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__10218_SHARP_, p2__10219_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3478__auto__ = p1__10218_SHARP_;
          if (cljs.core.truth_(or__3478__auto__)) {
            return or__3478__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__10219_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__10220) {
    var maps = cljs.core.seq(arglist__10220);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if (cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v));
        } else {
          return cljs.core.assoc.call(null, m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3478__auto__ = m1;
            if (cljs.core.truth_(or__3478__auto__)) {
              return or__3478__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq.call(null, m2));
        };
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__10221) {
    var f = cljs.core.first(arglist__10221);
    var maps = cljs.core.rest(arglist__10221);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789));
      var G__10222 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__10223 = cljs.core.next.call(null, keys);
      ret = G__10222;
      keys = G__10223;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3889__auto__ = self__.__hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__10226 = null;
  var G__10226__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10226__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10226 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10226__2.call(this, self__, k);
      case 3:
        return G__10226__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10226;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args10225) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10225)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && (cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__10224_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__10224_SHARP_);
    };
  }(coll__$1), other));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone.call(null, items);
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__10227 = i + 1;
        var G__10228 = cljs.core._assoc_BANG_.call(null, out, items[i], null);
        i = G__10227;
        out = G__10228;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_.call(null, out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__10229 = i + 1;
        var G__10230 = cljs.core._conj_BANG_.call(null, out, items[i]);
        i = G__10229;
        out = G__10230;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/TransientHashSet");
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__10232 = null;
  var G__10232__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__10232__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__10232 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10232__2.call(this, self__, k);
      case 3:
        return G__10232__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10232;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args10231) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10231)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null);
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3889__auto__ = self__.__hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__10235 = null;
  var G__10235__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10235__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10235 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10235__2.call(this, self__, k);
      case 3:
        return G__10235__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10235;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args10234) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10234)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && (cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__10233_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__10233_SHARP_);
    };
  }(coll__$1), other));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4320__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4320__auto__.length) {
        var G__10236 = i + 1;
        var G__10237 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__10236;
        res = G__10237;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq.call(null, in$);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var in$__$1 = in$;
        var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
        while (true) {
          if (!(in$__$1 == null)) {
            var G__10238 = cljs.core._next.call(null, in$__$1);
            var G__10239 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
            in$__$1 = G__10238;
            out = G__10239;
            continue;
          } else {
            return cljs.core._persistent_BANG_.call(null, out);
          }
          break;
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__10240__delegate = function(keys) {
      return cljs.core.set.call(null, keys);
    };
    var G__10240 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__10240__delegate.call(this, keys);
    };
    G__10240.cljs$lang$maxFixedArity = 0;
    G__10240.cljs$lang$applyTo = function(arglist__10241) {
      var keys = cljs.core.seq(arglist__10241);
      return G__10240__delegate(keys);
    };
    G__10240.cljs$core$IFn$_invoke$arity$variadic = G__10240__delegate;
    return G__10240;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__10242) {
    var keys = cljs.core.seq(arglist__10242);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__10243) {
    var comparator = cljs.core.first(arglist__10243);
    var keys = cljs.core.rest(arglist__10243);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function replace(smap, coll) {
  if (cljs.core.vector_QMARK_.call(null, coll)) {
    var n = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(n) {
      return function(v, i) {
        var temp__4090__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
        if (cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)));
  } else {
    return cljs.core.map.call(null, function(p1__10244_SHARP_) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, p1__10244_SHARP_);
      if (cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.second.call(null, e);
      } else {
        return p1__10244_SHARP_;
      }
    }, coll);
  }
};
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__10251, seen__$1) {
        while (true) {
          var vec__10252 = p__10251;
          var f = cljs.core.nth.call(null, vec__10252, 0, null);
          var xs__$1 = vec__10252;
          var temp__4092__auto__ = cljs.core.seq.call(null, xs__$1);
          if (temp__4092__auto__) {
            var s = temp__4092__auto__;
            if (cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__10253 = cljs.core.rest.call(null, s);
              var G__10254 = seen__$1;
              p__10251 = G__10253;
              seen__$1 = G__10254;
              continue;
            } else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next.call(null, s__$1)) {
      var G__10255 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__10256 = cljs.core.next.call(null, s__$1);
      ret = G__10255;
      s__$1 = G__10256;
      continue;
    } else {
      return cljs.core.seq.call(null, ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__10258 = x;
    if (G__10258) {
      var bit__4121__auto__ = G__10258.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4121__auto__ || G__10258.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._name.call(null, x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while (true) {
    if (ks && vs) {
      var G__10259 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__10260 = cljs.core.next.call(null, ks);
      var G__10261 = cljs.core.next.call(null, vs);
      map = G__10259;
      ks = G__10260;
      vs = G__10261;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (k.call(null, x) > k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__10264__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__10262_SHARP_, p2__10263_SHARP_) {
        return max_key.call(null, k, p1__10262_SHARP_, p2__10263_SHARP_);
      }, max_key.call(null, k, x, y), more);
    };
    var G__10264 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__10264__delegate.call(this, k, x, y, more);
    };
    G__10264.cljs$lang$maxFixedArity = 3;
    G__10264.cljs$lang$applyTo = function(arglist__10265) {
      var k = cljs.core.first(arglist__10265);
      arglist__10265 = cljs.core.next(arglist__10265);
      var x = cljs.core.first(arglist__10265);
      arglist__10265 = cljs.core.next(arglist__10265);
      var y = cljs.core.first(arglist__10265);
      var more = cljs.core.rest(arglist__10265);
      return G__10264__delegate(k, x, y, more);
    };
    G__10264.cljs$core$IFn$_invoke$arity$variadic = G__10264__delegate;
    return G__10264;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (k.call(null, x) < k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__10268__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__10266_SHARP_, p2__10267_SHARP_) {
        return min_key.call(null, k, p1__10266_SHARP_, p2__10267_SHARP_);
      }, min_key.call(null, k, x, y), more);
    };
    var G__10268 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__10268__delegate.call(this, k, x, y, more);
    };
    G__10268.cljs$lang$maxFixedArity = 3;
    G__10268.cljs$lang$applyTo = function(arglist__10269) {
      var k = cljs.core.first(arglist__10269);
      arglist__10269 = cljs.core.next(arglist__10269);
      var x = cljs.core.first(arglist__10269);
      arglist__10269 = cljs.core.next(arglist__10269);
      var y = cljs.core.first(arglist__10269);
      var more = cljs.core.rest(arglist__10269);
      return G__10268__delegate(k, x, y, more);
    };
    G__10268.cljs$core$IFn$_invoke$arity$variadic = G__10268__delegate;
    return G__10268;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if (cljs.core.truth_(temp__4092__auto__)) {
        var vec__10272 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__10272, 0, null);
        var s = vec__10272;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var vec__10273 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__10273, 0, null);
      var s = vec__10273;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if (cljs.core.truth_(temp__4092__auto__)) {
        var vec__10276 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__10276, 0, null);
        var s = vec__10276;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var vec__10277 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__10277, 0, null);
      var s = vec__10277;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/Range");
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__3889__auto__ = self__.__hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_coll.call(null, rng__$1);
    self__.__hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1);
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f, s);
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0;
  } else {
    return Math.ceil((self__.end - self__.start) / self__.step);
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq.call(null, rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], null);
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      var fst = cljs.core.first.call(null, s);
      var fv = f.call(null, fst);
      var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv, s, temp__4092__auto__) {
        return function(p1__10278_SHARP_) {
          return cljs.core._EQ_.call(null, fv, f.call(null, p1__10278_SHARP_));
        };
      }(fst, fv, s, temp__4092__auto__), cljs.core.next.call(null, s)));
      return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1);
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4090__auto__) {
        var s = temp__4090__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s));
      } else {
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, f.call(null));
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__10289 = null;
      var G__10289__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null)], null);
      };
      var G__10289__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x)], null);
      };
      var G__10289__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y)], null);
      };
      var G__10289__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z)], null);
      };
      var G__10289__4 = function() {
        var G__10290__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args)], null);
        };
        var G__10290 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10290__delegate.call(this, x, y, z, args);
        };
        G__10290.cljs$lang$maxFixedArity = 3;
        G__10290.cljs$lang$applyTo = function(arglist__10291) {
          var x = cljs.core.first(arglist__10291);
          arglist__10291 = cljs.core.next(arglist__10291);
          var y = cljs.core.first(arglist__10291);
          arglist__10291 = cljs.core.next(arglist__10291);
          var z = cljs.core.first(arglist__10291);
          var args = cljs.core.rest(arglist__10291);
          return G__10290__delegate(x, y, z, args);
        };
        G__10290.cljs$core$IFn$_invoke$arity$variadic = G__10290__delegate;
        return G__10290;
      }();
      G__10289 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10289__0.call(this);
          case 1:
            return G__10289__1.call(this, x);
          case 2:
            return G__10289__2.call(this, x, y);
          case 3:
            return G__10289__3.call(this, x, y, z);
          default:
            return G__10289__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10289.cljs$lang$maxFixedArity = 3;
      G__10289.cljs$lang$applyTo = G__10289__4.cljs$lang$applyTo;
      return G__10289;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__10292 = null;
      var G__10292__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null)], null);
      };
      var G__10292__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x)], null);
      };
      var G__10292__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y)], null);
      };
      var G__10292__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z)], null);
      };
      var G__10292__4 = function() {
        var G__10293__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args)], null);
        };
        var G__10293 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10293__delegate.call(this, x, y, z, args);
        };
        G__10293.cljs$lang$maxFixedArity = 3;
        G__10293.cljs$lang$applyTo = function(arglist__10294) {
          var x = cljs.core.first(arglist__10294);
          arglist__10294 = cljs.core.next(arglist__10294);
          var y = cljs.core.first(arglist__10294);
          arglist__10294 = cljs.core.next(arglist__10294);
          var z = cljs.core.first(arglist__10294);
          var args = cljs.core.rest(arglist__10294);
          return G__10293__delegate(x, y, z, args);
        };
        G__10293.cljs$core$IFn$_invoke$arity$variadic = G__10293__delegate;
        return G__10293;
      }();
      G__10292 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10292__0.call(this);
          case 1:
            return G__10292__1.call(this, x);
          case 2:
            return G__10292__2.call(this, x, y);
          case 3:
            return G__10292__3.call(this, x, y, z);
          default:
            return G__10292__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10292.cljs$lang$maxFixedArity = 3;
      G__10292.cljs$lang$applyTo = G__10292__4.cljs$lang$applyTo;
      return G__10292;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__10295 = null;
      var G__10295__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null), h.call(null)], null);
      };
      var G__10295__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x), h.call(null, x)], null);
      };
      var G__10295__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y), h.call(null, x, y)], null);
      };
      var G__10295__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z)], null);
      };
      var G__10295__4 = function() {
        var G__10296__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args)], null);
        };
        var G__10296 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10296__delegate.call(this, x, y, z, args);
        };
        G__10296.cljs$lang$maxFixedArity = 3;
        G__10296.cljs$lang$applyTo = function(arglist__10297) {
          var x = cljs.core.first(arglist__10297);
          arglist__10297 = cljs.core.next(arglist__10297);
          var y = cljs.core.first(arglist__10297);
          arglist__10297 = cljs.core.next(arglist__10297);
          var z = cljs.core.first(arglist__10297);
          var args = cljs.core.rest(arglist__10297);
          return G__10296__delegate(x, y, z, args);
        };
        G__10296.cljs$core$IFn$_invoke$arity$variadic = G__10296__delegate;
        return G__10296;
      }();
      G__10295 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10295__0.call(this);
          case 1:
            return G__10295__1.call(this, x);
          case 2:
            return G__10295__2.call(this, x, y);
          case 3:
            return G__10295__3.call(this, x, y, z);
          default:
            return G__10295__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10295.cljs$lang$maxFixedArity = 3;
      G__10295.cljs$lang$applyTo = G__10295__4.cljs$lang$applyTo;
      return G__10295;
    }();
  };
  var juxt__4 = function() {
    var G__10298__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__10299 = null;
          var G__10299__0 = function() {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__10279_SHARP_, p2__10280_SHARP_) {
                return cljs.core.conj.call(null, p1__10279_SHARP_, p2__10280_SHARP_.call(null));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__10299__1 = function(x) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__10281_SHARP_, p2__10282_SHARP_) {
                return cljs.core.conj.call(null, p1__10281_SHARP_, p2__10282_SHARP_.call(null, x));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__10299__2 = function(x, y) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__10283_SHARP_, p2__10284_SHARP_) {
                return cljs.core.conj.call(null, p1__10283_SHARP_, p2__10284_SHARP_.call(null, x, y));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__10299__3 = function(x, y, z) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__10285_SHARP_, p2__10286_SHARP_) {
                return cljs.core.conj.call(null, p1__10285_SHARP_, p2__10286_SHARP_.call(null, x, y, z));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__10299__4 = function() {
            var G__10300__delegate = function(x, y, z, args) {
              return cljs.core.reduce.call(null, function(fs__$1) {
                return function(p1__10287_SHARP_, p2__10288_SHARP_) {
                  return cljs.core.conj.call(null, p1__10287_SHARP_, cljs.core.apply.call(null, p2__10288_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__10300 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__10300__delegate.call(this, x, y, z, args);
            };
            G__10300.cljs$lang$maxFixedArity = 3;
            G__10300.cljs$lang$applyTo = function(arglist__10301) {
              var x = cljs.core.first(arglist__10301);
              arglist__10301 = cljs.core.next(arglist__10301);
              var y = cljs.core.first(arglist__10301);
              arglist__10301 = cljs.core.next(arglist__10301);
              var z = cljs.core.first(arglist__10301);
              var args = cljs.core.rest(arglist__10301);
              return G__10300__delegate(x, y, z, args);
            };
            G__10300.cljs$core$IFn$_invoke$arity$variadic = G__10300__delegate;
            return G__10300;
          }();
          G__10299 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__10299__0.call(this);
              case 1:
                return G__10299__1.call(this, x);
              case 2:
                return G__10299__2.call(this, x, y);
              case 3:
                return G__10299__3.call(this, x, y, z);
              default:
                return G__10299__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__10299.cljs$lang$maxFixedArity = 3;
          G__10299.cljs$lang$applyTo = G__10299__4.cljs$lang$applyTo;
          return G__10299;
        }();
      }(fs__$1);
    };
    var G__10298 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__10298__delegate.call(this, f, g, h, fs);
    };
    G__10298.cljs$lang$maxFixedArity = 3;
    G__10298.cljs$lang$applyTo = function(arglist__10302) {
      var f = cljs.core.first(arglist__10302);
      arglist__10302 = cljs.core.next(arglist__10302);
      var g = cljs.core.first(arglist__10302);
      arglist__10302 = cljs.core.next(arglist__10302);
      var h = cljs.core.first(arglist__10302);
      var fs = cljs.core.rest(arglist__10302);
      return G__10298__delegate(f, g, h, fs);
    };
    G__10298.cljs$core$IFn$_invoke$arity$variadic = G__10298__delegate;
    return G__10298;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll)) {
        var G__10303 = cljs.core.next.call(null, coll);
        coll = G__10303;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll) && n > 0) {
        var G__10304 = n - 1;
        var G__10305 = cljs.core.next.call(null, coll);
        n = G__10304;
        coll = G__10305;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches = re.exec(s);
  if (cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
    if (cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches);
    } else {
      return cljs.core.vec.call(null, matches);
    }
  } else {
    return null;
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches = re.exec(s);
  if (matches == null) {
    return null;
  } else {
    if (cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches);
    } else {
      return cljs.core.vec.call(null, matches);
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__10307 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__10307, 0, null);
  var flags = cljs.core.nth.call(null, vec__10307, 1, null);
  var pattern = cljs.core.nth.call(null, vec__10307, 2, null);
  return new RegExp(pattern, flags);
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_10309 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write.call(null, writer, "#");
    } else {
      cljs.core._write.call(null, writer, begin);
      if (cljs.core.seq.call(null, coll)) {
        print_one.call(null, cljs.core.first.call(null, coll), writer, opts);
      } else {
      }
      var coll_10310__$1 = cljs.core.next.call(null, coll);
      var n_10311 = (new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts);
      while (true) {
        if (coll_10310__$1 && (n_10311 == null || !(n_10311 === 0))) {
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, cljs.core.first.call(null, coll_10310__$1), writer, opts);
          var G__10312 = cljs.core.next.call(null, coll_10310__$1);
          var G__10313 = n_10311 - 1;
          coll_10310__$1 = G__10312;
          n_10311 = G__10313;
          continue;
        } else {
        }
        break;
      }
      if (cljs.core.truth_((new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts))) {
        cljs.core._write.call(null, writer, sep);
        print_one.call(null, "...", writer, opts);
      } else {
      }
      return cljs.core._write.call(null, writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_10309;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__10318 = cljs.core.seq.call(null, ss);
    var chunk__10319 = null;
    var count__10320 = 0;
    var i__10321 = 0;
    while (true) {
      if (i__10321 < count__10320) {
        var s = cljs.core._nth.call(null, chunk__10319, i__10321);
        cljs.core._write.call(null, writer, s);
        var G__10322 = seq__10318;
        var G__10323 = chunk__10319;
        var G__10324 = count__10320;
        var G__10325 = i__10321 + 1;
        seq__10318 = G__10322;
        chunk__10319 = G__10323;
        count__10320 = G__10324;
        i__10321 = G__10325;
        continue;
      } else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__10318);
        if (temp__4092__auto__) {
          var seq__10318__$1 = temp__4092__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__10318__$1)) {
            var c__4226__auto__ = cljs.core.chunk_first.call(null, seq__10318__$1);
            var G__10326 = cljs.core.chunk_rest.call(null, seq__10318__$1);
            var G__10327 = c__4226__auto__;
            var G__10328 = cljs.core.count.call(null, c__4226__auto__);
            var G__10329 = 0;
            seq__10318 = G__10326;
            chunk__10319 = G__10327;
            count__10320 = G__10328;
            i__10321 = G__10329;
            continue;
          } else {
            var s = cljs.core.first.call(null, seq__10318__$1);
            cljs.core._write.call(null, writer, s);
            var G__10330 = cljs.core.next.call(null, seq__10318__$1);
            var G__10331 = null;
            var G__10332 = 0;
            var G__10333 = 0;
            seq__10318 = G__10330;
            chunk__10319 = G__10331;
            count__10320 = G__10332;
            i__10321 = G__10333;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__10334) {
    var writer = cljs.core.first(arglist__10334);
    var ss = cljs.core.rest(arglist__10334);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj10336 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj10336;
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write.call(null, writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e");
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        if (cljs.core.truth_(function() {
          var and__3466__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
          if (cljs.core.truth_(and__3466__auto__)) {
            var and__3466__auto____$1 = function() {
              var G__10342 = obj;
              if (G__10342) {
                var bit__4128__auto__ = G__10342.cljs$lang$protocol_mask$partition0$ & 131072;
                if (bit__4128__auto__ || G__10342.cljs$core$IMeta$) {
                  return true;
                } else {
                  if (!G__10342.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__10342);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__10342);
              }
            }();
            if (and__3466__auto____$1) {
              return cljs.core.meta.call(null, obj);
            } else {
              return and__3466__auto____$1;
            }
          } else {
            return and__3466__auto__;
          }
        }())) {
          cljs.core._write.call(null, writer, "^");
          pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
          cljs.core._write.call(null, writer, " ");
        } else {
        }
        if (obj == null) {
          return cljs.core._write.call(null, writer, "nil");
        } else {
          if (obj.cljs$lang$type) {
            return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
          } else {
            if (function() {
              var G__10343 = obj;
              if (G__10343) {
                var bit__4121__auto__ = G__10343.cljs$lang$protocol_mask$partition0$ & 2147483648;
                if (bit__4121__auto__ || G__10343.cljs$core$IPrintWithWriter$) {
                  return true;
                } else {
                  return false;
                }
              } else {
                return false;
              }
            }()) {
              return cljs.core._pr_writer.call(null, obj, writer, opts);
            } else {
              if (cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
                return cljs.core._write.call(null, writer, [cljs.core.str(obj)].join(""));
              } else {
                if (cljs.core.object_QMARK_.call(null, obj)) {
                  cljs.core._write.call(null, writer, "#js ");
                  return cljs.core.print_map.call(null, cljs.core.map.call(null, function(k) {
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), obj[k]], null);
                  }, cljs.core.js_keys.call(null, obj)), pr_writer, writer, opts);
                } else {
                  if (obj instanceof Array) {
                    return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#js [", " ", "]", opts, obj);
                  } else {
                    if (goog.isString(obj)) {
                      if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 4441712502)).cljs$core$IFn$_invoke$arity$1(opts))) {
                        return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj));
                      } else {
                        return cljs.core._write.call(null, writer, obj);
                      }
                    } else {
                      if (cljs.core.fn_QMARK_.call(null, obj)) {
                        return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e");
                      } else {
                        if (obj instanceof Date) {
                          var normalize = function(n, len) {
                            var ns = [cljs.core.str(n)].join("");
                            while (true) {
                              if (cljs.core.count.call(null, ns) < len) {
                                var G__10345 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                                ns = G__10345;
                                continue;
                              } else {
                                return ns;
                              }
                              break;
                            }
                          };
                          return cljs.core.write_all.call(null, writer, '#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"');
                        } else {
                          if (cljs.core.regexp_QMARK_.call(null, obj)) {
                            return cljs.core.write_all.call(null, writer, '#"', obj.source, '"');
                          } else {
                            if (function() {
                              var G__10344 = obj;
                              if (G__10344) {
                                var bit__4128__auto__ = G__10344.cljs$lang$protocol_mask$partition0$ & 2147483648;
                                if (bit__4128__auto__ || G__10344.cljs$core$IPrintWithWriter$) {
                                  return true;
                                } else {
                                  if (!G__10344.cljs$lang$protocol_mask$partition0$) {
                                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__10344);
                                  } else {
                                    return false;
                                  }
                                }
                              } else {
                                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__10344);
                              }
                            }()) {
                              return cljs.core._pr_writer.call(null, obj, writer, opts);
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e");
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__10350 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__10351 = null;
  var count__10352 = 0;
  var i__10353 = 0;
  while (true) {
    if (i__10353 < count__10352) {
      var obj = cljs.core._nth.call(null, chunk__10351, i__10353);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__10354 = seq__10350;
      var G__10355 = chunk__10351;
      var G__10356 = count__10352;
      var G__10357 = i__10353 + 1;
      seq__10350 = G__10354;
      chunk__10351 = G__10355;
      count__10352 = G__10356;
      i__10353 = G__10357;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__10350);
      if (temp__4092__auto__) {
        var seq__10350__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__10350__$1)) {
          var c__4226__auto__ = cljs.core.chunk_first.call(null, seq__10350__$1);
          var G__10358 = cljs.core.chunk_rest.call(null, seq__10350__$1);
          var G__10359 = c__4226__auto__;
          var G__10360 = cljs.core.count.call(null, c__4226__auto__);
          var G__10361 = 0;
          seq__10350 = G__10358;
          chunk__10351 = G__10359;
          count__10352 = G__10360;
          i__10353 = G__10361;
          continue;
        } else {
          var obj = cljs.core.first.call(null, seq__10350__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__10362 = cljs.core.next.call(null, seq__10350__$1);
          var G__10363 = null;
          var G__10364 = 0;
          var G__10365 = 0;
          seq__10350 = G__10362;
          chunk__10351 = G__10363;
          count__10352 = G__10364;
          i__10353 = G__10365;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts.call(null, objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if (cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857)))) {
    return cljs.core.flush.call(null);
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__10366) {
    var objs = cljs.core.seq(arglist__10366);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__10367) {
    var objs = cljs.core.seq(arglist__10367);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__10368) {
    var objs = cljs.core.seq(arglist__10368);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__10369) {
    var objs = cljs.core.seq(arglist__10369);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__10370) {
    var objs = cljs.core.seq(arglist__10370);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__10371) {
    var objs = cljs.core.seq(arglist__10371);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__10372) {
    var objs = cljs.core.seq(arglist__10372);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__10373) {
    var objs = cljs.core.seq(arglist__10373);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, function(e, w, opts__$1) {
    print_one.call(null, cljs.core.key.call(null, e), w, opts__$1);
    cljs.core._write.call(null, w, " ");
    return print_one.call(null, cljs.core.val.call(null, e), w, opts__$1);
  }, "{", ", ", "}", opts, cljs.core.seq.call(null, m));
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1));
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()");
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.IAtom = function() {
  var obj10375 = {};
  return obj10375;
}();
cljs.core.IReset = function() {
  var obj10377 = {};
  return obj10377;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3466__auto__ = o;
    if (and__3466__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4105__auto__ = o == null ? null : o;
    return function() {
      var or__3478__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj10379 = {};
  return obj10379;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3466__auto__ = o;
      if (and__3466__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4105__auto__ = o == null ? null : o;
      return function() {
        var or__3478__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3466__auto__ = o;
      if (and__3466__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4105__auto__ = o == null ? null : o;
      return function() {
        var or__3478__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3466__auto__ = o;
      if (and__3466__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4105__auto__ = o == null ? null : o;
      return function() {
        var or__3478__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3466__auto__ = o;
      if (and__3466__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4105__auto__ = o == null ? null : o;
      return function() {
        var or__3478__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/Atom");
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__10380 = cljs.core.seq.call(null, self__.watches);
  var chunk__10381 = null;
  var count__10382 = 0;
  var i__10383 = 0;
  while (true) {
    if (i__10383 < count__10382) {
      var vec__10384 = cljs.core._nth.call(null, chunk__10381, i__10383);
      var key = cljs.core.nth.call(null, vec__10384, 0, null);
      var f = cljs.core.nth.call(null, vec__10384, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__10386 = seq__10380;
      var G__10387 = chunk__10381;
      var G__10388 = count__10382;
      var G__10389 = i__10383 + 1;
      seq__10380 = G__10386;
      chunk__10381 = G__10387;
      count__10382 = G__10388;
      i__10383 = G__10389;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__10380);
      if (temp__4092__auto__) {
        var seq__10380__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__10380__$1)) {
          var c__4226__auto__ = cljs.core.chunk_first.call(null, seq__10380__$1);
          var G__10390 = cljs.core.chunk_rest.call(null, seq__10380__$1);
          var G__10391 = c__4226__auto__;
          var G__10392 = cljs.core.count.call(null, c__4226__auto__);
          var G__10393 = 0;
          seq__10380 = G__10390;
          chunk__10381 = G__10391;
          count__10382 = G__10392;
          i__10383 = G__10393;
          continue;
        } else {
          var vec__10385 = cljs.core.first.call(null, seq__10380__$1);
          var key = cljs.core.nth.call(null, vec__10385, 0, null);
          var f = cljs.core.nth.call(null, vec__10385, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__10394 = cljs.core.next.call(null, seq__10380__$1);
          var G__10395 = null;
          var G__10396 = 0;
          var G__10397 = 0;
          seq__10380 = G__10394;
          chunk__10381 = G__10395;
          count__10382 = G__10396;
          i__10383 = G__10397;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__10401__delegate = function(x, p__10398) {
      var map__10400 = p__10398;
      var map__10400__$1 = cljs.core.seq_QMARK_.call(null, map__10400) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10400) : map__10400;
      var validator = cljs.core.get.call(null, map__10400__$1, new cljs.core.Keyword(null, "validator", "validator", 4199087812));
      var meta = cljs.core.get.call(null, map__10400__$1, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__10401 = function(x, var_args) {
      var p__10398 = null;
      if (arguments.length > 1) {
        p__10398 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__10401__delegate.call(this, x, p__10398);
    };
    G__10401.cljs$lang$maxFixedArity = 1;
    G__10401.cljs$lang$applyTo = function(arglist__10402) {
      var x = cljs.core.first(arglist__10402);
      var p__10398 = cljs.core.rest(arglist__10402);
      return G__10401__delegate(x, p__10398);
    };
    G__10401.cljs$core$IFn$_invoke$arity$variadic = G__10401__delegate;
    return G__10401;
  }();
  atom = function(x, var_args) {
    var p__10398 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.call(null, new_value))) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1233162959, null), new cljs.core.Symbol(null, "new-value", "new-value", 972165309, null))))].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches.call(null, a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_.call(null, a, new_value);
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o);
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__10403__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.call(null, a, f, x, y, more);
      }
    };
    var G__10403 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__10403__delegate.call(this, a, f, x, y, more);
    };
    G__10403.cljs$lang$maxFixedArity = 4;
    G__10403.cljs$lang$applyTo = function(arglist__10404) {
      var a = cljs.core.first(arglist__10404);
      arglist__10404 = cljs.core.next(arglist__10404);
      var f = cljs.core.first(arglist__10404);
      arglist__10404 = cljs.core.next(arglist__10404);
      var x = cljs.core.first(arglist__10404);
      arglist__10404 = cljs.core.next(arglist__10404);
      var y = cljs.core.first(arglist__10404);
      var more = cljs.core.rest(arglist__10404);
      return G__10403__delegate(a, f, x, y, more);
    };
    G__10403.cljs$core$IFn$_invoke$arity$variadic = G__10403__delegate;
    return G__10403;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__10405) {
    var iref = cljs.core.first(arglist__10405);
    arglist__10405 = cljs.core.next(arglist__10405);
    var f = cljs.core.first(arglist__10405);
    var args = cljs.core.rest(arglist__10405);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f);
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key);
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0);
    } else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/Delay");
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return(new cljs.core.Keyword(null, "done", "done", 1016993524)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.state));
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return(new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null, self__.state, function(___$1) {
    return function(p__10406) {
      var map__10407 = p__10406;
      var map__10407__$1 = cljs.core.seq_QMARK_.call(null, map__10407) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10407) : map__10407;
      var curr_state = map__10407__$1;
      var done = cljs.core.get.call(null, map__10407__$1, new cljs.core.Keyword(null, "done", "done", 1016993524));
      if (cljs.core.truth_(done)) {
        return curr_state;
      } else {
        return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "done", "done", 1016993524), true, new cljs.core.Keyword(null, "value", "value", 1125876963), self__.f.call(null)], null);
      }
    };
  }(___$1)));
};
cljs.core.__GT_Delay = function __GT_Delay(state, f) {
  return new cljs.core.Delay(state, f);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d);
};
cljs.core.IEncodeJS = function() {
  var obj10409 = {};
  return obj10409;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3466__auto__ = x;
    if (and__3466__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4105__auto__ = x == null ? null : x;
    return function() {
      var or__3478__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3466__auto__ = x;
    if (and__3466__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4105__auto__ = x == null ? null : x;
    return function() {
      var or__3478__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__10411 = k;
    if (G__10411) {
      var bit__4128__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3478__auto__ = bit__4128__auto__;
        if (cljs.core.truth_(or__3478__auto__)) {
          return or__3478__auto__;
        } else {
          return G__10411.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__10411.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__10411);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__10411);
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k);
  } else {
    if (typeof k === "string" || (typeof k === "number" || (k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol))) {
      return cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.call(null, k);
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__10425 = x;
      if (G__10425) {
        var bit__4128__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3478__auto__ = bit__4128__auto__;
          if (cljs.core.truth_(or__3478__auto__)) {
            return or__3478__auto__;
          } else {
            return G__10425.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__10425.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__10425);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__10425);
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_.call(null, x)) {
            var m = function() {
              var obj10427 = {};
              return obj10427;
            }();
            var seq__10428_10438 = cljs.core.seq.call(null, x);
            var chunk__10429_10439 = null;
            var count__10430_10440 = 0;
            var i__10431_10441 = 0;
            while (true) {
              if (i__10431_10441 < count__10430_10440) {
                var vec__10432_10442 = cljs.core._nth.call(null, chunk__10429_10439, i__10431_10441);
                var k_10443 = cljs.core.nth.call(null, vec__10432_10442, 0, null);
                var v_10444 = cljs.core.nth.call(null, vec__10432_10442, 1, null);
                m[cljs.core.key__GT_js.call(null, k_10443)] = clj__GT_js.call(null, v_10444);
                var G__10445 = seq__10428_10438;
                var G__10446 = chunk__10429_10439;
                var G__10447 = count__10430_10440;
                var G__10448 = i__10431_10441 + 1;
                seq__10428_10438 = G__10445;
                chunk__10429_10439 = G__10446;
                count__10430_10440 = G__10447;
                i__10431_10441 = G__10448;
                continue;
              } else {
                var temp__4092__auto___10449 = cljs.core.seq.call(null, seq__10428_10438);
                if (temp__4092__auto___10449) {
                  var seq__10428_10450__$1 = temp__4092__auto___10449;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__10428_10450__$1)) {
                    var c__4226__auto___10451 = cljs.core.chunk_first.call(null, seq__10428_10450__$1);
                    var G__10452 = cljs.core.chunk_rest.call(null, seq__10428_10450__$1);
                    var G__10453 = c__4226__auto___10451;
                    var G__10454 = cljs.core.count.call(null, c__4226__auto___10451);
                    var G__10455 = 0;
                    seq__10428_10438 = G__10452;
                    chunk__10429_10439 = G__10453;
                    count__10430_10440 = G__10454;
                    i__10431_10441 = G__10455;
                    continue;
                  } else {
                    var vec__10433_10456 = cljs.core.first.call(null, seq__10428_10450__$1);
                    var k_10457 = cljs.core.nth.call(null, vec__10433_10456, 0, null);
                    var v_10458 = cljs.core.nth.call(null, vec__10433_10456, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_10457)] = clj__GT_js.call(null, v_10458);
                    var G__10459 = cljs.core.next.call(null, seq__10428_10450__$1);
                    var G__10460 = null;
                    var G__10461 = 0;
                    var G__10462 = 0;
                    seq__10428_10438 = G__10459;
                    chunk__10429_10439 = G__10460;
                    count__10430_10440 = G__10461;
                    i__10431_10441 = G__10462;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_.call(null, x)) {
              var arr = [];
              var seq__10434_10463 = cljs.core.seq.call(null, cljs.core.map.call(null, clj__GT_js, x));
              var chunk__10435_10464 = null;
              var count__10436_10465 = 0;
              var i__10437_10466 = 0;
              while (true) {
                if (i__10437_10466 < count__10436_10465) {
                  var x_10467__$1 = cljs.core._nth.call(null, chunk__10435_10464, i__10437_10466);
                  arr.push(x_10467__$1);
                  var G__10468 = seq__10434_10463;
                  var G__10469 = chunk__10435_10464;
                  var G__10470 = count__10436_10465;
                  var G__10471 = i__10437_10466 + 1;
                  seq__10434_10463 = G__10468;
                  chunk__10435_10464 = G__10469;
                  count__10436_10465 = G__10470;
                  i__10437_10466 = G__10471;
                  continue;
                } else {
                  var temp__4092__auto___10472 = cljs.core.seq.call(null, seq__10434_10463);
                  if (temp__4092__auto___10472) {
                    var seq__10434_10473__$1 = temp__4092__auto___10472;
                    if (cljs.core.chunked_seq_QMARK_.call(null, seq__10434_10473__$1)) {
                      var c__4226__auto___10474 = cljs.core.chunk_first.call(null, seq__10434_10473__$1);
                      var G__10475 = cljs.core.chunk_rest.call(null, seq__10434_10473__$1);
                      var G__10476 = c__4226__auto___10474;
                      var G__10477 = cljs.core.count.call(null, c__4226__auto___10474);
                      var G__10478 = 0;
                      seq__10434_10463 = G__10475;
                      chunk__10435_10464 = G__10476;
                      count__10436_10465 = G__10477;
                      i__10437_10466 = G__10478;
                      continue;
                    } else {
                      var x_10479__$1 = cljs.core.first.call(null, seq__10434_10473__$1);
                      arr.push(x_10479__$1);
                      var G__10480 = cljs.core.next.call(null, seq__10434_10473__$1);
                      var G__10481 = null;
                      var G__10482 = 0;
                      var G__10483 = 0;
                      seq__10434_10463 = G__10480;
                      chunk__10435_10464 = G__10481;
                      count__10436_10465 = G__10482;
                      i__10437_10466 = G__10483;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return x;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj10485 = {};
  return obj10485;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3466__auto__ = x;
    if (and__3466__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4105__auto__ = x == null ? null : x;
    return function() {
      var or__3478__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), false], null));
  };
  var js__GT_clj__2 = function() {
    var G__10506__delegate = function(x, opts) {
      if (function() {
        var G__10496 = x;
        if (G__10496) {
          var bit__4128__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3478__auto__ = bit__4128__auto__;
            if (cljs.core.truth_(or__3478__auto__)) {
              return or__3478__auto__;
            } else {
              return G__10496.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__10496.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__10496);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__10496);
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq.call(null, opts)) {
          var map__10497 = opts;
          var map__10497__$1 = cljs.core.seq_QMARK_.call(null, map__10497) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10497) : map__10497;
          var keywordize_keys = cljs.core.get.call(null, map__10497__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__10497, map__10497__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if (cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1));
              } else {
                if (cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1));
                } else {
                  if (x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1));
                  } else {
                    if (cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__4195__auto__ = function(map__10497, map__10497__$1, keywordize_keys, keyfn) {
                          return function iter__10502(s__10503) {
                            return new cljs.core.LazySeq(null, function(map__10497, map__10497__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__10503__$1 = s__10503;
                                while (true) {
                                  var temp__4092__auto__ = cljs.core.seq.call(null, s__10503__$1);
                                  if (temp__4092__auto__) {
                                    var s__10503__$2 = temp__4092__auto__;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__10503__$2)) {
                                      var c__4193__auto__ = cljs.core.chunk_first.call(null, s__10503__$2);
                                      var size__4194__auto__ = cljs.core.count.call(null, c__4193__auto__);
                                      var b__10505 = cljs.core.chunk_buffer.call(null, size__4194__auto__);
                                      if (function() {
                                        var i__10504 = 0;
                                        while (true) {
                                          if (i__10504 < size__4194__auto__) {
                                            var k = cljs.core._nth.call(null, c__4193__auto__, i__10504);
                                            cljs.core.chunk_append.call(null, b__10505, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null));
                                            var G__10507 = i__10504 + 1;
                                            i__10504 = G__10507;
                                            continue;
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10505), iter__10502.call(null, cljs.core.chunk_rest.call(null, s__10503__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10505), null);
                                      }
                                    } else {
                                      var k = cljs.core.first.call(null, s__10503__$2);
                                      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null), iter__10502.call(null, cljs.core.rest.call(null, s__10503__$2)));
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(map__10497, map__10497__$1, keywordize_keys, keyfn), null, null);
                          };
                        }(map__10497, map__10497__$1, keywordize_keys, keyfn);
                        return iter__4195__auto__.call(null, cljs.core.js_keys.call(null, x__$1));
                      }());
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        return x__$1;
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }
            };
          }(map__10497, map__10497__$1, keywordize_keys, keyfn);
          return f.call(null, x);
        } else {
          return null;
        }
      }
    };
    var G__10506 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__10506__delegate.call(this, x, opts);
    };
    G__10506.cljs$lang$maxFixedArity = 1;
    G__10506.cljs$lang$applyTo = function(arglist__10508) {
      var x = cljs.core.first(arglist__10508);
      var opts = cljs.core.rest(arglist__10508);
      return G__10506__delegate(x, opts);
    };
    G__10506.cljs$core$IFn$_invoke$arity$variadic = G__10506__delegate;
    return G__10506;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(mem) {
    return function() {
      var G__10509__delegate = function(args) {
        var temp__4090__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args);
        if (cljs.core.truth_(temp__4090__auto__)) {
          var v = temp__4090__auto__;
          return v;
        } else {
          var ret = cljs.core.apply.call(null, f, args);
          cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
          return ret;
        }
      };
      var G__10509 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__10509__delegate.call(this, args);
      };
      G__10509.cljs$lang$maxFixedArity = 0;
      G__10509.cljs$lang$applyTo = function(arglist__10510) {
        var args = cljs.core.seq(arglist__10510);
        return G__10509__delegate(args);
      };
      G__10509.cljs$core$IFn$_invoke$arity$variadic = G__10509__delegate;
      return G__10509;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = f.call(null);
      if (cljs.core.fn_QMARK_.call(null, ret)) {
        var G__10511 = ret;
        f = G__10511;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__10512__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args);
      });
    };
    var G__10512 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__10512__delegate.call(this, f, args);
    };
    G__10512.cljs$lang$maxFixedArity = 1;
    G__10512.cljs$lang$applyTo = function(arglist__10513) {
      var f = cljs.core.first(arglist__10513);
      var args = cljs.core.rest(arglist__10513);
      return G__10512__delegate(f, args);
    };
    G__10512.cljs$core$IFn$_invoke$arity$variadic = G__10512__delegate;
    return G__10512;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1);
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, coll);
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 768214664), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__10514) {
    var f = cljs.core.first(arglist__10514);
    var args = cljs.core.rest(arglist__10514);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3478__auto__ = cljs.core._EQ_.call(null, child, parent);
    if (or__3478__auto__) {
      return or__3478__auto__;
    } else {
      var or__3478__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3478__auto____$1) {
        return or__3478__auto____$1;
      } else {
        var and__3466__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if (and__3466__auto__) {
          var and__3466__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if (and__3466__auto____$1) {
            var and__3466__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if (and__3466__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count.call(null, parent)) {
                  return ret;
                } else {
                  var G__10515 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__10516 = i + 1;
                  ret = G__10515;
                  i = G__10516;
                  continue;
                }
                break;
              }
            } else {
              return and__3466__auto____$2;
            }
          } else {
            return and__3466__auto____$1;
          }
        } else {
          return and__3466__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", -388313324, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.call(null, tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", -1637144189, null), new cljs.core.Symbol(null, "tag", "tag", -1640416941, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))));
          };
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)));
      };
    }(tp, td, ta);
    var or__3478__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 768214664), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3478__auto__)) {
      return or__3478__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__10517_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__10517_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__10517_SHARP_), cljs.core.second.call(null, p1__10517_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if (cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__10518_SHARP_, p2__10519_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.derive, p1__10518_SHARP_, p2__10519_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3478__auto__ = cljs.core.truth_(function() {
    var and__3466__auto__ = xprefs;
    if (cljs.core.truth_(and__3466__auto__)) {
      return xprefs.call(null, y);
    } else {
      return and__3466__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3478__auto__)) {
    return or__3478__auto__;
  } else {
    var or__3478__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while (true) {
        if (cljs.core.count.call(null, ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          } else {
          }
          var G__10520 = cljs.core.rest.call(null, ps);
          ps = G__10520;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3478__auto____$1)) {
      return or__3478__auto____$1;
    } else {
      var or__3478__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while (true) {
          if (cljs.core.count.call(null, ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            } else {
            }
            var G__10521 = cljs.core.rest.call(null, ps);
            ps = G__10521;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3478__auto____$2)) {
        return or__3478__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3478__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if (cljs.core.truth_(or__3478__auto__)) {
    return or__3478__auto__;
  } else {
    return cljs.core.isa_QMARK_.call(null, x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__10524) {
    var vec__10525 = p__10524;
    var k = cljs.core.nth.call(null, vec__10525, 0, null);
    var _ = cljs.core.nth.call(null, vec__10525, 1, null);
    var e = vec__10525;
    if (cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3478__auto__ = be == null;
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry);
    } else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj10527 = {};
  return obj10527;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3466__auto__ = mf;
    if (and__3466__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4105__auto__ = mf == null ? null : mf;
    return function() {
      var or__3478__auto__ = cljs.core._reset[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._reset["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3466__auto__ = mf;
    if (and__3466__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4105__auto__ = mf == null ? null : mf;
    return function() {
      var or__3478__auto__ = cljs.core._add_method[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._add_method["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3466__auto__ = mf;
    if (and__3466__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4105__auto__ = mf == null ? null : mf;
    return function() {
      var or__3478__auto__ = cljs.core._remove_method[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._remove_method["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3466__auto__ = mf;
    if (and__3466__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4105__auto__ = mf == null ? null : mf;
    return function() {
      var or__3478__auto__ = cljs.core._prefer_method[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3466__auto__ = mf;
    if (and__3466__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4105__auto__ = mf == null ? null : mf;
    return function() {
      var or__3478__auto__ = cljs.core._get_method[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._get_method["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3466__auto__ = mf;
    if (and__3466__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4105__auto__ = mf == null ? null : mf;
    return function() {
      var or__3478__auto__ = cljs.core._methods[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._methods["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3466__auto__ = mf;
    if (and__3466__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4105__auto__ = mf == null ? null : mf;
    return function() {
      var or__3478__auto__ = cljs.core._prefers[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._prefers["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if (function() {
    var and__3466__auto__ = mf;
    if (and__3466__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args);
  } else {
    var x__4105__auto__ = mf == null ? null : mf;
    return function() {
      var or__3478__auto__ = cljs.core._dispatch[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core._dispatch["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args);
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, name, dispatch_fn, args) {
  var dispatch_val = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
  }
  return cljs.core.apply.call(null, target_fn, args);
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 256;
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/MultiFn");
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4090__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4090__auto__)) {
    var target_fn = temp__4090__auto__;
    return target_fn;
  } else {
    var temp__4090__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4090__auto____$1)) {
      var target_fn = temp__4090__auto____$1;
      return target_fn;
    } else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.do_dispatch.call(null, mf__$1, self__.name, self__.dispatch_fn, args);
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__10528__delegate = function(_, args) {
    var self = this;
    return cljs.core._dispatch.call(null, self, args);
  };
  var G__10528 = function(_, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return G__10528__delegate.call(this, _, args);
  };
  G__10528.cljs$lang$maxFixedArity = 1;
  G__10528.cljs$lang$applyTo = function(arglist__10529) {
    var _ = cljs.core.first(arglist__10529);
    var args = cljs.core.rest(arglist__10529);
    return G__10528__delegate(_, args);
  };
  G__10528.cljs$core$IFn$_invoke$arity$variadic = G__10528__delegate;
  return G__10528;
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self = this;
  return cljs.core._dispatch.call(null, self, args);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core/UUID");
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1));
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opts__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.call(null, x, y))) {
      return-1;
    } else {
      if (cljs.core.truth_(pred.call(null, y, x))) {
        return 1;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return 0;
        } else {
          return null;
        }
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "deftype*", "deftype*", -978581244, null), null, new cljs.core.Symbol(null, "new", "new", -1640422567, null), null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), null, new cljs.core.Symbol(null, "\x26", "\x26", -1640531489, null), null, new cljs.core.Symbol(null, "set!", "set!", -1637004872, null), null, new cljs.core.Symbol(null, 
  "recur", "recur", -1532142362, null), null, new cljs.core.Symbol(null, ".", ".", -1640531481, null), null, new cljs.core.Symbol(null, "ns", "ns", -1640528002, null), null, new cljs.core.Symbol(null, "do", "do", -1640528316, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -1640430053, null), null, new cljs.core.Symbol(null, "throw", "throw", -1530191713, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", 1548249632, null), null, new cljs.core.Symbol(null, "js*", "js*", -1640426054, 
  null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", 774272013, null), null, new cljs.core.Symbol(null, "let*", "let*", -1637213400, null), null, new cljs.core.Symbol(null, "loop*", "loop*", -1537374273, null), null, new cljs.core.Symbol(null, "try", "try", -1640416396, null), null, new cljs.core.Symbol(null, "if", "if", -1640528170, null), null, new cljs.core.Symbol(null, "def", "def", -1640432194, null), null], null), null), x);
};
goog.provide("om.dom");
goog.require("cljs.core");
om.dom.a = function() {
  var a__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.a.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var a = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return a__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  a.cljs$lang$maxFixedArity = 1;
  a.cljs$lang$applyTo = function(arglist__10672) {
    var opts__5000__auto__ = cljs.core.first(arglist__10672);
    var children__5001__auto__ = cljs.core.rest(arglist__10672);
    return a__delegate(opts__5000__auto__, children__5001__auto__);
  };
  a.cljs$core$IFn$_invoke$arity$variadic = a__delegate;
  return a;
}();
om.dom.abbr = function() {
  var abbr__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.abbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var abbr = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return abbr__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  abbr.cljs$lang$maxFixedArity = 1;
  abbr.cljs$lang$applyTo = function(arglist__10673) {
    var opts__5000__auto__ = cljs.core.first(arglist__10673);
    var children__5001__auto__ = cljs.core.rest(arglist__10673);
    return abbr__delegate(opts__5000__auto__, children__5001__auto__);
  };
  abbr.cljs$core$IFn$_invoke$arity$variadic = abbr__delegate;
  return abbr;
}();
om.dom.address = function() {
  var address__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.address.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var address = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return address__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  address.cljs$lang$maxFixedArity = 1;
  address.cljs$lang$applyTo = function(arglist__10674) {
    var opts__5000__auto__ = cljs.core.first(arglist__10674);
    var children__5001__auto__ = cljs.core.rest(arglist__10674);
    return address__delegate(opts__5000__auto__, children__5001__auto__);
  };
  address.cljs$core$IFn$_invoke$arity$variadic = address__delegate;
  return address;
}();
om.dom.area = function() {
  var area__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.area.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var area = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return area__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  area.cljs$lang$maxFixedArity = 1;
  area.cljs$lang$applyTo = function(arglist__10675) {
    var opts__5000__auto__ = cljs.core.first(arglist__10675);
    var children__5001__auto__ = cljs.core.rest(arglist__10675);
    return area__delegate(opts__5000__auto__, children__5001__auto__);
  };
  area.cljs$core$IFn$_invoke$arity$variadic = area__delegate;
  return area;
}();
om.dom.article = function() {
  var article__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.article.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var article = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return article__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  article.cljs$lang$maxFixedArity = 1;
  article.cljs$lang$applyTo = function(arglist__10676) {
    var opts__5000__auto__ = cljs.core.first(arglist__10676);
    var children__5001__auto__ = cljs.core.rest(arglist__10676);
    return article__delegate(opts__5000__auto__, children__5001__auto__);
  };
  article.cljs$core$IFn$_invoke$arity$variadic = article__delegate;
  return article;
}();
om.dom.aside = function() {
  var aside__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.aside.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var aside = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return aside__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  aside.cljs$lang$maxFixedArity = 1;
  aside.cljs$lang$applyTo = function(arglist__10677) {
    var opts__5000__auto__ = cljs.core.first(arglist__10677);
    var children__5001__auto__ = cljs.core.rest(arglist__10677);
    return aside__delegate(opts__5000__auto__, children__5001__auto__);
  };
  aside.cljs$core$IFn$_invoke$arity$variadic = aside__delegate;
  return aside;
}();
om.dom.audio = function() {
  var audio__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.audio.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var audio = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return audio__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  audio.cljs$lang$maxFixedArity = 1;
  audio.cljs$lang$applyTo = function(arglist__10678) {
    var opts__5000__auto__ = cljs.core.first(arglist__10678);
    var children__5001__auto__ = cljs.core.rest(arglist__10678);
    return audio__delegate(opts__5000__auto__, children__5001__auto__);
  };
  audio.cljs$core$IFn$_invoke$arity$variadic = audio__delegate;
  return audio;
}();
om.dom.b = function() {
  var b__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.b.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var b = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return b__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  b.cljs$lang$maxFixedArity = 1;
  b.cljs$lang$applyTo = function(arglist__10679) {
    var opts__5000__auto__ = cljs.core.first(arglist__10679);
    var children__5001__auto__ = cljs.core.rest(arglist__10679);
    return b__delegate(opts__5000__auto__, children__5001__auto__);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = b__delegate;
  return b;
}();
om.dom.base = function() {
  var base__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.base.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var base = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return base__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  base.cljs$lang$maxFixedArity = 1;
  base.cljs$lang$applyTo = function(arglist__10680) {
    var opts__5000__auto__ = cljs.core.first(arglist__10680);
    var children__5001__auto__ = cljs.core.rest(arglist__10680);
    return base__delegate(opts__5000__auto__, children__5001__auto__);
  };
  base.cljs$core$IFn$_invoke$arity$variadic = base__delegate;
  return base;
}();
om.dom.bdi = function() {
  var bdi__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.bdi.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var bdi = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdi__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  bdi.cljs$lang$maxFixedArity = 1;
  bdi.cljs$lang$applyTo = function(arglist__10681) {
    var opts__5000__auto__ = cljs.core.first(arglist__10681);
    var children__5001__auto__ = cljs.core.rest(arglist__10681);
    return bdi__delegate(opts__5000__auto__, children__5001__auto__);
  };
  bdi.cljs$core$IFn$_invoke$arity$variadic = bdi__delegate;
  return bdi;
}();
om.dom.bdo = function() {
  var bdo__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.bdo.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var bdo = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdo__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  bdo.cljs$lang$maxFixedArity = 1;
  bdo.cljs$lang$applyTo = function(arglist__10682) {
    var opts__5000__auto__ = cljs.core.first(arglist__10682);
    var children__5001__auto__ = cljs.core.rest(arglist__10682);
    return bdo__delegate(opts__5000__auto__, children__5001__auto__);
  };
  bdo.cljs$core$IFn$_invoke$arity$variadic = bdo__delegate;
  return bdo;
}();
om.dom.big = function() {
  var big__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.big.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var big = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return big__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  big.cljs$lang$maxFixedArity = 1;
  big.cljs$lang$applyTo = function(arglist__10683) {
    var opts__5000__auto__ = cljs.core.first(arglist__10683);
    var children__5001__auto__ = cljs.core.rest(arglist__10683);
    return big__delegate(opts__5000__auto__, children__5001__auto__);
  };
  big.cljs$core$IFn$_invoke$arity$variadic = big__delegate;
  return big;
}();
om.dom.blockquote = function() {
  var blockquote__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.blockquote.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var blockquote = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return blockquote__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  blockquote.cljs$lang$maxFixedArity = 1;
  blockquote.cljs$lang$applyTo = function(arglist__10684) {
    var opts__5000__auto__ = cljs.core.first(arglist__10684);
    var children__5001__auto__ = cljs.core.rest(arglist__10684);
    return blockquote__delegate(opts__5000__auto__, children__5001__auto__);
  };
  blockquote.cljs$core$IFn$_invoke$arity$variadic = blockquote__delegate;
  return blockquote;
}();
om.dom.body = function() {
  var body__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.body.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var body = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return body__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  body.cljs$lang$maxFixedArity = 1;
  body.cljs$lang$applyTo = function(arglist__10685) {
    var opts__5000__auto__ = cljs.core.first(arglist__10685);
    var children__5001__auto__ = cljs.core.rest(arglist__10685);
    return body__delegate(opts__5000__auto__, children__5001__auto__);
  };
  body.cljs$core$IFn$_invoke$arity$variadic = body__delegate;
  return body;
}();
om.dom.br = function() {
  var br__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.br.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var br = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return br__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  br.cljs$lang$maxFixedArity = 1;
  br.cljs$lang$applyTo = function(arglist__10686) {
    var opts__5000__auto__ = cljs.core.first(arglist__10686);
    var children__5001__auto__ = cljs.core.rest(arglist__10686);
    return br__delegate(opts__5000__auto__, children__5001__auto__);
  };
  br.cljs$core$IFn$_invoke$arity$variadic = br__delegate;
  return br;
}();
om.dom.button = function() {
  var button__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.button.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var button = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return button__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  button.cljs$lang$maxFixedArity = 1;
  button.cljs$lang$applyTo = function(arglist__10687) {
    var opts__5000__auto__ = cljs.core.first(arglist__10687);
    var children__5001__auto__ = cljs.core.rest(arglist__10687);
    return button__delegate(opts__5000__auto__, children__5001__auto__);
  };
  button.cljs$core$IFn$_invoke$arity$variadic = button__delegate;
  return button;
}();
om.dom.canvas = function() {
  var canvas__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.canvas.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var canvas = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return canvas__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  canvas.cljs$lang$maxFixedArity = 1;
  canvas.cljs$lang$applyTo = function(arglist__10688) {
    var opts__5000__auto__ = cljs.core.first(arglist__10688);
    var children__5001__auto__ = cljs.core.rest(arglist__10688);
    return canvas__delegate(opts__5000__auto__, children__5001__auto__);
  };
  canvas.cljs$core$IFn$_invoke$arity$variadic = canvas__delegate;
  return canvas;
}();
om.dom.caption = function() {
  var caption__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.caption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var caption = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return caption__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  caption.cljs$lang$maxFixedArity = 1;
  caption.cljs$lang$applyTo = function(arglist__10689) {
    var opts__5000__auto__ = cljs.core.first(arglist__10689);
    var children__5001__auto__ = cljs.core.rest(arglist__10689);
    return caption__delegate(opts__5000__auto__, children__5001__auto__);
  };
  caption.cljs$core$IFn$_invoke$arity$variadic = caption__delegate;
  return caption;
}();
om.dom.cite = function() {
  var cite__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.cite.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var cite = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return cite__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  cite.cljs$lang$maxFixedArity = 1;
  cite.cljs$lang$applyTo = function(arglist__10690) {
    var opts__5000__auto__ = cljs.core.first(arglist__10690);
    var children__5001__auto__ = cljs.core.rest(arglist__10690);
    return cite__delegate(opts__5000__auto__, children__5001__auto__);
  };
  cite.cljs$core$IFn$_invoke$arity$variadic = cite__delegate;
  return cite;
}();
om.dom.code = function() {
  var code__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.code.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var code = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return code__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  code.cljs$lang$maxFixedArity = 1;
  code.cljs$lang$applyTo = function(arglist__10691) {
    var opts__5000__auto__ = cljs.core.first(arglist__10691);
    var children__5001__auto__ = cljs.core.rest(arglist__10691);
    return code__delegate(opts__5000__auto__, children__5001__auto__);
  };
  code.cljs$core$IFn$_invoke$arity$variadic = code__delegate;
  return code;
}();
om.dom.col = function() {
  var col__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.col.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var col = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return col__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  col.cljs$lang$maxFixedArity = 1;
  col.cljs$lang$applyTo = function(arglist__10692) {
    var opts__5000__auto__ = cljs.core.first(arglist__10692);
    var children__5001__auto__ = cljs.core.rest(arglist__10692);
    return col__delegate(opts__5000__auto__, children__5001__auto__);
  };
  col.cljs$core$IFn$_invoke$arity$variadic = col__delegate;
  return col;
}();
om.dom.colgroup = function() {
  var colgroup__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.colgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var colgroup = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return colgroup__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  colgroup.cljs$lang$maxFixedArity = 1;
  colgroup.cljs$lang$applyTo = function(arglist__10693) {
    var opts__5000__auto__ = cljs.core.first(arglist__10693);
    var children__5001__auto__ = cljs.core.rest(arglist__10693);
    return colgroup__delegate(opts__5000__auto__, children__5001__auto__);
  };
  colgroup.cljs$core$IFn$_invoke$arity$variadic = colgroup__delegate;
  return colgroup;
}();
om.dom.data = function() {
  var data__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.data.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var data = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return data__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  data.cljs$lang$maxFixedArity = 1;
  data.cljs$lang$applyTo = function(arglist__10694) {
    var opts__5000__auto__ = cljs.core.first(arglist__10694);
    var children__5001__auto__ = cljs.core.rest(arglist__10694);
    return data__delegate(opts__5000__auto__, children__5001__auto__);
  };
  data.cljs$core$IFn$_invoke$arity$variadic = data__delegate;
  return data;
}();
om.dom.datalist = function() {
  var datalist__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.datalist.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var datalist = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return datalist__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  datalist.cljs$lang$maxFixedArity = 1;
  datalist.cljs$lang$applyTo = function(arglist__10695) {
    var opts__5000__auto__ = cljs.core.first(arglist__10695);
    var children__5001__auto__ = cljs.core.rest(arglist__10695);
    return datalist__delegate(opts__5000__auto__, children__5001__auto__);
  };
  datalist.cljs$core$IFn$_invoke$arity$variadic = datalist__delegate;
  return datalist;
}();
om.dom.dd = function() {
  var dd__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.dd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var dd = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dd__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  dd.cljs$lang$maxFixedArity = 1;
  dd.cljs$lang$applyTo = function(arglist__10696) {
    var opts__5000__auto__ = cljs.core.first(arglist__10696);
    var children__5001__auto__ = cljs.core.rest(arglist__10696);
    return dd__delegate(opts__5000__auto__, children__5001__auto__);
  };
  dd.cljs$core$IFn$_invoke$arity$variadic = dd__delegate;
  return dd;
}();
om.dom.del = function() {
  var del__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.del.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var del = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return del__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  del.cljs$lang$maxFixedArity = 1;
  del.cljs$lang$applyTo = function(arglist__10697) {
    var opts__5000__auto__ = cljs.core.first(arglist__10697);
    var children__5001__auto__ = cljs.core.rest(arglist__10697);
    return del__delegate(opts__5000__auto__, children__5001__auto__);
  };
  del.cljs$core$IFn$_invoke$arity$variadic = del__delegate;
  return del;
}();
om.dom.dfn = function() {
  var dfn__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.dfn.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var dfn = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dfn__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  dfn.cljs$lang$maxFixedArity = 1;
  dfn.cljs$lang$applyTo = function(arglist__10698) {
    var opts__5000__auto__ = cljs.core.first(arglist__10698);
    var children__5001__auto__ = cljs.core.rest(arglist__10698);
    return dfn__delegate(opts__5000__auto__, children__5001__auto__);
  };
  dfn.cljs$core$IFn$_invoke$arity$variadic = dfn__delegate;
  return dfn;
}();
om.dom.div = function() {
  var div__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.div.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var div = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return div__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  div.cljs$lang$maxFixedArity = 1;
  div.cljs$lang$applyTo = function(arglist__10699) {
    var opts__5000__auto__ = cljs.core.first(arglist__10699);
    var children__5001__auto__ = cljs.core.rest(arglist__10699);
    return div__delegate(opts__5000__auto__, children__5001__auto__);
  };
  div.cljs$core$IFn$_invoke$arity$variadic = div__delegate;
  return div;
}();
om.dom.dl = function() {
  var dl__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.dl.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var dl = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dl__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  dl.cljs$lang$maxFixedArity = 1;
  dl.cljs$lang$applyTo = function(arglist__10700) {
    var opts__5000__auto__ = cljs.core.first(arglist__10700);
    var children__5001__auto__ = cljs.core.rest(arglist__10700);
    return dl__delegate(opts__5000__auto__, children__5001__auto__);
  };
  dl.cljs$core$IFn$_invoke$arity$variadic = dl__delegate;
  return dl;
}();
om.dom.dt = function() {
  var dt__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.dt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var dt = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dt__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  dt.cljs$lang$maxFixedArity = 1;
  dt.cljs$lang$applyTo = function(arglist__10701) {
    var opts__5000__auto__ = cljs.core.first(arglist__10701);
    var children__5001__auto__ = cljs.core.rest(arglist__10701);
    return dt__delegate(opts__5000__auto__, children__5001__auto__);
  };
  dt.cljs$core$IFn$_invoke$arity$variadic = dt__delegate;
  return dt;
}();
om.dom.em = function() {
  var em__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.em.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var em = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return em__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  em.cljs$lang$maxFixedArity = 1;
  em.cljs$lang$applyTo = function(arglist__10702) {
    var opts__5000__auto__ = cljs.core.first(arglist__10702);
    var children__5001__auto__ = cljs.core.rest(arglist__10702);
    return em__delegate(opts__5000__auto__, children__5001__auto__);
  };
  em.cljs$core$IFn$_invoke$arity$variadic = em__delegate;
  return em;
}();
om.dom.embed = function() {
  var embed__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.embed.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var embed = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return embed__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  embed.cljs$lang$maxFixedArity = 1;
  embed.cljs$lang$applyTo = function(arglist__10703) {
    var opts__5000__auto__ = cljs.core.first(arglist__10703);
    var children__5001__auto__ = cljs.core.rest(arglist__10703);
    return embed__delegate(opts__5000__auto__, children__5001__auto__);
  };
  embed.cljs$core$IFn$_invoke$arity$variadic = embed__delegate;
  return embed;
}();
om.dom.fieldset = function() {
  var fieldset__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.fieldset.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var fieldset = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fieldset__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  fieldset.cljs$lang$maxFixedArity = 1;
  fieldset.cljs$lang$applyTo = function(arglist__10704) {
    var opts__5000__auto__ = cljs.core.first(arglist__10704);
    var children__5001__auto__ = cljs.core.rest(arglist__10704);
    return fieldset__delegate(opts__5000__auto__, children__5001__auto__);
  };
  fieldset.cljs$core$IFn$_invoke$arity$variadic = fieldset__delegate;
  return fieldset;
}();
om.dom.figcaption = function() {
  var figcaption__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.figcaption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var figcaption = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figcaption__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  figcaption.cljs$lang$maxFixedArity = 1;
  figcaption.cljs$lang$applyTo = function(arglist__10705) {
    var opts__5000__auto__ = cljs.core.first(arglist__10705);
    var children__5001__auto__ = cljs.core.rest(arglist__10705);
    return figcaption__delegate(opts__5000__auto__, children__5001__auto__);
  };
  figcaption.cljs$core$IFn$_invoke$arity$variadic = figcaption__delegate;
  return figcaption;
}();
om.dom.figure = function() {
  var figure__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.figure.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var figure = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figure__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  figure.cljs$lang$maxFixedArity = 1;
  figure.cljs$lang$applyTo = function(arglist__10706) {
    var opts__5000__auto__ = cljs.core.first(arglist__10706);
    var children__5001__auto__ = cljs.core.rest(arglist__10706);
    return figure__delegate(opts__5000__auto__, children__5001__auto__);
  };
  figure.cljs$core$IFn$_invoke$arity$variadic = figure__delegate;
  return figure;
}();
om.dom.footer = function() {
  var footer__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.footer.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var footer = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return footer__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  footer.cljs$lang$maxFixedArity = 1;
  footer.cljs$lang$applyTo = function(arglist__10707) {
    var opts__5000__auto__ = cljs.core.first(arglist__10707);
    var children__5001__auto__ = cljs.core.rest(arglist__10707);
    return footer__delegate(opts__5000__auto__, children__5001__auto__);
  };
  footer.cljs$core$IFn$_invoke$arity$variadic = footer__delegate;
  return footer;
}();
om.dom.form = function() {
  var form__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.form.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var form = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return form__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  form.cljs$lang$maxFixedArity = 1;
  form.cljs$lang$applyTo = function(arglist__10708) {
    var opts__5000__auto__ = cljs.core.first(arglist__10708);
    var children__5001__auto__ = cljs.core.rest(arglist__10708);
    return form__delegate(opts__5000__auto__, children__5001__auto__);
  };
  form.cljs$core$IFn$_invoke$arity$variadic = form__delegate;
  return form;
}();
om.dom.h1 = function() {
  var h1__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.h1.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var h1 = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h1__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  h1.cljs$lang$maxFixedArity = 1;
  h1.cljs$lang$applyTo = function(arglist__10709) {
    var opts__5000__auto__ = cljs.core.first(arglist__10709);
    var children__5001__auto__ = cljs.core.rest(arglist__10709);
    return h1__delegate(opts__5000__auto__, children__5001__auto__);
  };
  h1.cljs$core$IFn$_invoke$arity$variadic = h1__delegate;
  return h1;
}();
om.dom.h2 = function() {
  var h2__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.h2.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var h2 = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h2__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  h2.cljs$lang$maxFixedArity = 1;
  h2.cljs$lang$applyTo = function(arglist__10710) {
    var opts__5000__auto__ = cljs.core.first(arglist__10710);
    var children__5001__auto__ = cljs.core.rest(arglist__10710);
    return h2__delegate(opts__5000__auto__, children__5001__auto__);
  };
  h2.cljs$core$IFn$_invoke$arity$variadic = h2__delegate;
  return h2;
}();
om.dom.h3 = function() {
  var h3__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.h3.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var h3 = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h3__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  h3.cljs$lang$maxFixedArity = 1;
  h3.cljs$lang$applyTo = function(arglist__10711) {
    var opts__5000__auto__ = cljs.core.first(arglist__10711);
    var children__5001__auto__ = cljs.core.rest(arglist__10711);
    return h3__delegate(opts__5000__auto__, children__5001__auto__);
  };
  h3.cljs$core$IFn$_invoke$arity$variadic = h3__delegate;
  return h3;
}();
om.dom.h4 = function() {
  var h4__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.h4.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var h4 = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h4__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  h4.cljs$lang$maxFixedArity = 1;
  h4.cljs$lang$applyTo = function(arglist__10712) {
    var opts__5000__auto__ = cljs.core.first(arglist__10712);
    var children__5001__auto__ = cljs.core.rest(arglist__10712);
    return h4__delegate(opts__5000__auto__, children__5001__auto__);
  };
  h4.cljs$core$IFn$_invoke$arity$variadic = h4__delegate;
  return h4;
}();
om.dom.h5 = function() {
  var h5__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.h5.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var h5 = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h5__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  h5.cljs$lang$maxFixedArity = 1;
  h5.cljs$lang$applyTo = function(arglist__10713) {
    var opts__5000__auto__ = cljs.core.first(arglist__10713);
    var children__5001__auto__ = cljs.core.rest(arglist__10713);
    return h5__delegate(opts__5000__auto__, children__5001__auto__);
  };
  h5.cljs$core$IFn$_invoke$arity$variadic = h5__delegate;
  return h5;
}();
om.dom.h6 = function() {
  var h6__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.h6.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var h6 = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h6__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  h6.cljs$lang$maxFixedArity = 1;
  h6.cljs$lang$applyTo = function(arglist__10714) {
    var opts__5000__auto__ = cljs.core.first(arglist__10714);
    var children__5001__auto__ = cljs.core.rest(arglist__10714);
    return h6__delegate(opts__5000__auto__, children__5001__auto__);
  };
  h6.cljs$core$IFn$_invoke$arity$variadic = h6__delegate;
  return h6;
}();
om.dom.head = function() {
  var head__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.head.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var head = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return head__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  head.cljs$lang$maxFixedArity = 1;
  head.cljs$lang$applyTo = function(arglist__10715) {
    var opts__5000__auto__ = cljs.core.first(arglist__10715);
    var children__5001__auto__ = cljs.core.rest(arglist__10715);
    return head__delegate(opts__5000__auto__, children__5001__auto__);
  };
  head.cljs$core$IFn$_invoke$arity$variadic = head__delegate;
  return head;
}();
om.dom.header = function() {
  var header__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.header.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var header = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return header__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  header.cljs$lang$maxFixedArity = 1;
  header.cljs$lang$applyTo = function(arglist__10716) {
    var opts__5000__auto__ = cljs.core.first(arglist__10716);
    var children__5001__auto__ = cljs.core.rest(arglist__10716);
    return header__delegate(opts__5000__auto__, children__5001__auto__);
  };
  header.cljs$core$IFn$_invoke$arity$variadic = header__delegate;
  return header;
}();
om.dom.hr = function() {
  var hr__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.hr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var hr = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return hr__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  hr.cljs$lang$maxFixedArity = 1;
  hr.cljs$lang$applyTo = function(arglist__10717) {
    var opts__5000__auto__ = cljs.core.first(arglist__10717);
    var children__5001__auto__ = cljs.core.rest(arglist__10717);
    return hr__delegate(opts__5000__auto__, children__5001__auto__);
  };
  hr.cljs$core$IFn$_invoke$arity$variadic = hr__delegate;
  return hr;
}();
om.dom.html = function() {
  var html__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.html.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var html = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return html__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  html.cljs$lang$maxFixedArity = 1;
  html.cljs$lang$applyTo = function(arglist__10718) {
    var opts__5000__auto__ = cljs.core.first(arglist__10718);
    var children__5001__auto__ = cljs.core.rest(arglist__10718);
    return html__delegate(opts__5000__auto__, children__5001__auto__);
  };
  html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
  return html;
}();
om.dom.i = function() {
  var i__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.i.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var i = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return i__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  i.cljs$lang$maxFixedArity = 1;
  i.cljs$lang$applyTo = function(arglist__10719) {
    var opts__5000__auto__ = cljs.core.first(arglist__10719);
    var children__5001__auto__ = cljs.core.rest(arglist__10719);
    return i__delegate(opts__5000__auto__, children__5001__auto__);
  };
  i.cljs$core$IFn$_invoke$arity$variadic = i__delegate;
  return i;
}();
om.dom.iframe = function() {
  var iframe__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.iframe.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var iframe = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return iframe__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  iframe.cljs$lang$maxFixedArity = 1;
  iframe.cljs$lang$applyTo = function(arglist__10720) {
    var opts__5000__auto__ = cljs.core.first(arglist__10720);
    var children__5001__auto__ = cljs.core.rest(arglist__10720);
    return iframe__delegate(opts__5000__auto__, children__5001__auto__);
  };
  iframe.cljs$core$IFn$_invoke$arity$variadic = iframe__delegate;
  return iframe;
}();
om.dom.img = function() {
  var img__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.img.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var img = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return img__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  img.cljs$lang$maxFixedArity = 1;
  img.cljs$lang$applyTo = function(arglist__10721) {
    var opts__5000__auto__ = cljs.core.first(arglist__10721);
    var children__5001__auto__ = cljs.core.rest(arglist__10721);
    return img__delegate(opts__5000__auto__, children__5001__auto__);
  };
  img.cljs$core$IFn$_invoke$arity$variadic = img__delegate;
  return img;
}();
om.dom.ins = function() {
  var ins__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.ins.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var ins = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ins__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  ins.cljs$lang$maxFixedArity = 1;
  ins.cljs$lang$applyTo = function(arglist__10722) {
    var opts__5000__auto__ = cljs.core.first(arglist__10722);
    var children__5001__auto__ = cljs.core.rest(arglist__10722);
    return ins__delegate(opts__5000__auto__, children__5001__auto__);
  };
  ins.cljs$core$IFn$_invoke$arity$variadic = ins__delegate;
  return ins;
}();
om.dom.kbd = function() {
  var kbd__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.kbd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var kbd = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return kbd__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  kbd.cljs$lang$maxFixedArity = 1;
  kbd.cljs$lang$applyTo = function(arglist__10723) {
    var opts__5000__auto__ = cljs.core.first(arglist__10723);
    var children__5001__auto__ = cljs.core.rest(arglist__10723);
    return kbd__delegate(opts__5000__auto__, children__5001__auto__);
  };
  kbd.cljs$core$IFn$_invoke$arity$variadic = kbd__delegate;
  return kbd;
}();
om.dom.keygen = function() {
  var keygen__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.keygen.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var keygen = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return keygen__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  keygen.cljs$lang$maxFixedArity = 1;
  keygen.cljs$lang$applyTo = function(arglist__10724) {
    var opts__5000__auto__ = cljs.core.first(arglist__10724);
    var children__5001__auto__ = cljs.core.rest(arglist__10724);
    return keygen__delegate(opts__5000__auto__, children__5001__auto__);
  };
  keygen.cljs$core$IFn$_invoke$arity$variadic = keygen__delegate;
  return keygen;
}();
om.dom.label = function() {
  var label__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.label.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var label = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return label__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  label.cljs$lang$maxFixedArity = 1;
  label.cljs$lang$applyTo = function(arglist__10725) {
    var opts__5000__auto__ = cljs.core.first(arglist__10725);
    var children__5001__auto__ = cljs.core.rest(arglist__10725);
    return label__delegate(opts__5000__auto__, children__5001__auto__);
  };
  label.cljs$core$IFn$_invoke$arity$variadic = label__delegate;
  return label;
}();
om.dom.legend = function() {
  var legend__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.legend.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var legend = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return legend__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  legend.cljs$lang$maxFixedArity = 1;
  legend.cljs$lang$applyTo = function(arglist__10726) {
    var opts__5000__auto__ = cljs.core.first(arglist__10726);
    var children__5001__auto__ = cljs.core.rest(arglist__10726);
    return legend__delegate(opts__5000__auto__, children__5001__auto__);
  };
  legend.cljs$core$IFn$_invoke$arity$variadic = legend__delegate;
  return legend;
}();
om.dom.li = function() {
  var li__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.li.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var li = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return li__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  li.cljs$lang$maxFixedArity = 1;
  li.cljs$lang$applyTo = function(arglist__10727) {
    var opts__5000__auto__ = cljs.core.first(arglist__10727);
    var children__5001__auto__ = cljs.core.rest(arglist__10727);
    return li__delegate(opts__5000__auto__, children__5001__auto__);
  };
  li.cljs$core$IFn$_invoke$arity$variadic = li__delegate;
  return li;
}();
om.dom.link = function() {
  var link__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.link.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var link = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return link__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  link.cljs$lang$maxFixedArity = 1;
  link.cljs$lang$applyTo = function(arglist__10728) {
    var opts__5000__auto__ = cljs.core.first(arglist__10728);
    var children__5001__auto__ = cljs.core.rest(arglist__10728);
    return link__delegate(opts__5000__auto__, children__5001__auto__);
  };
  link.cljs$core$IFn$_invoke$arity$variadic = link__delegate;
  return link;
}();
om.dom.main = function() {
  var main__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.main.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var main = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return main__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  main.cljs$lang$maxFixedArity = 1;
  main.cljs$lang$applyTo = function(arglist__10729) {
    var opts__5000__auto__ = cljs.core.first(arglist__10729);
    var children__5001__auto__ = cljs.core.rest(arglist__10729);
    return main__delegate(opts__5000__auto__, children__5001__auto__);
  };
  main.cljs$core$IFn$_invoke$arity$variadic = main__delegate;
  return main;
}();
om.dom.map = function() {
  var map__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.map.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var map = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return map__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  map.cljs$lang$maxFixedArity = 1;
  map.cljs$lang$applyTo = function(arglist__10730) {
    var opts__5000__auto__ = cljs.core.first(arglist__10730);
    var children__5001__auto__ = cljs.core.rest(arglist__10730);
    return map__delegate(opts__5000__auto__, children__5001__auto__);
  };
  map.cljs$core$IFn$_invoke$arity$variadic = map__delegate;
  return map;
}();
om.dom.mark = function() {
  var mark__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.mark.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var mark = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mark__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  mark.cljs$lang$maxFixedArity = 1;
  mark.cljs$lang$applyTo = function(arglist__10731) {
    var opts__5000__auto__ = cljs.core.first(arglist__10731);
    var children__5001__auto__ = cljs.core.rest(arglist__10731);
    return mark__delegate(opts__5000__auto__, children__5001__auto__);
  };
  mark.cljs$core$IFn$_invoke$arity$variadic = mark__delegate;
  return mark;
}();
om.dom.menu = function() {
  var menu__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.menu.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var menu = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menu__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  menu.cljs$lang$maxFixedArity = 1;
  menu.cljs$lang$applyTo = function(arglist__10732) {
    var opts__5000__auto__ = cljs.core.first(arglist__10732);
    var children__5001__auto__ = cljs.core.rest(arglist__10732);
    return menu__delegate(opts__5000__auto__, children__5001__auto__);
  };
  menu.cljs$core$IFn$_invoke$arity$variadic = menu__delegate;
  return menu;
}();
om.dom.menuitem = function() {
  var menuitem__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.menuitem.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var menuitem = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menuitem__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  menuitem.cljs$lang$maxFixedArity = 1;
  menuitem.cljs$lang$applyTo = function(arglist__10733) {
    var opts__5000__auto__ = cljs.core.first(arglist__10733);
    var children__5001__auto__ = cljs.core.rest(arglist__10733);
    return menuitem__delegate(opts__5000__auto__, children__5001__auto__);
  };
  menuitem.cljs$core$IFn$_invoke$arity$variadic = menuitem__delegate;
  return menuitem;
}();
om.dom.meta = function() {
  var meta__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.meta.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var meta = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meta__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  meta.cljs$lang$maxFixedArity = 1;
  meta.cljs$lang$applyTo = function(arglist__10734) {
    var opts__5000__auto__ = cljs.core.first(arglist__10734);
    var children__5001__auto__ = cljs.core.rest(arglist__10734);
    return meta__delegate(opts__5000__auto__, children__5001__auto__);
  };
  meta.cljs$core$IFn$_invoke$arity$variadic = meta__delegate;
  return meta;
}();
om.dom.meter = function() {
  var meter__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.meter.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var meter = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meter__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  meter.cljs$lang$maxFixedArity = 1;
  meter.cljs$lang$applyTo = function(arglist__10735) {
    var opts__5000__auto__ = cljs.core.first(arglist__10735);
    var children__5001__auto__ = cljs.core.rest(arglist__10735);
    return meter__delegate(opts__5000__auto__, children__5001__auto__);
  };
  meter.cljs$core$IFn$_invoke$arity$variadic = meter__delegate;
  return meter;
}();
om.dom.nav = function() {
  var nav__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.nav.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var nav = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return nav__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  nav.cljs$lang$maxFixedArity = 1;
  nav.cljs$lang$applyTo = function(arglist__10736) {
    var opts__5000__auto__ = cljs.core.first(arglist__10736);
    var children__5001__auto__ = cljs.core.rest(arglist__10736);
    return nav__delegate(opts__5000__auto__, children__5001__auto__);
  };
  nav.cljs$core$IFn$_invoke$arity$variadic = nav__delegate;
  return nav;
}();
om.dom.noscript = function() {
  var noscript__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.noscript.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var noscript = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return noscript__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  noscript.cljs$lang$maxFixedArity = 1;
  noscript.cljs$lang$applyTo = function(arglist__10737) {
    var opts__5000__auto__ = cljs.core.first(arglist__10737);
    var children__5001__auto__ = cljs.core.rest(arglist__10737);
    return noscript__delegate(opts__5000__auto__, children__5001__auto__);
  };
  noscript.cljs$core$IFn$_invoke$arity$variadic = noscript__delegate;
  return noscript;
}();
om.dom.object = function() {
  var object__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.object.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var object = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return object__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  object.cljs$lang$maxFixedArity = 1;
  object.cljs$lang$applyTo = function(arglist__10738) {
    var opts__5000__auto__ = cljs.core.first(arglist__10738);
    var children__5001__auto__ = cljs.core.rest(arglist__10738);
    return object__delegate(opts__5000__auto__, children__5001__auto__);
  };
  object.cljs$core$IFn$_invoke$arity$variadic = object__delegate;
  return object;
}();
om.dom.ol = function() {
  var ol__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.ol.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var ol = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ol__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  ol.cljs$lang$maxFixedArity = 1;
  ol.cljs$lang$applyTo = function(arglist__10739) {
    var opts__5000__auto__ = cljs.core.first(arglist__10739);
    var children__5001__auto__ = cljs.core.rest(arglist__10739);
    return ol__delegate(opts__5000__auto__, children__5001__auto__);
  };
  ol.cljs$core$IFn$_invoke$arity$variadic = ol__delegate;
  return ol;
}();
om.dom.optgroup = function() {
  var optgroup__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.optgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var optgroup = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return optgroup__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  optgroup.cljs$lang$maxFixedArity = 1;
  optgroup.cljs$lang$applyTo = function(arglist__10740) {
    var opts__5000__auto__ = cljs.core.first(arglist__10740);
    var children__5001__auto__ = cljs.core.rest(arglist__10740);
    return optgroup__delegate(opts__5000__auto__, children__5001__auto__);
  };
  optgroup.cljs$core$IFn$_invoke$arity$variadic = optgroup__delegate;
  return optgroup;
}();
om.dom.output = function() {
  var output__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.output.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var output = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return output__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  output.cljs$lang$maxFixedArity = 1;
  output.cljs$lang$applyTo = function(arglist__10741) {
    var opts__5000__auto__ = cljs.core.first(arglist__10741);
    var children__5001__auto__ = cljs.core.rest(arglist__10741);
    return output__delegate(opts__5000__auto__, children__5001__auto__);
  };
  output.cljs$core$IFn$_invoke$arity$variadic = output__delegate;
  return output;
}();
om.dom.p = function() {
  var p__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.p.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var p = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return p__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  p.cljs$lang$maxFixedArity = 1;
  p.cljs$lang$applyTo = function(arglist__10742) {
    var opts__5000__auto__ = cljs.core.first(arglist__10742);
    var children__5001__auto__ = cljs.core.rest(arglist__10742);
    return p__delegate(opts__5000__auto__, children__5001__auto__);
  };
  p.cljs$core$IFn$_invoke$arity$variadic = p__delegate;
  return p;
}();
om.dom.param = function() {
  var param__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.param.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var param = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return param__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  param.cljs$lang$maxFixedArity = 1;
  param.cljs$lang$applyTo = function(arglist__10743) {
    var opts__5000__auto__ = cljs.core.first(arglist__10743);
    var children__5001__auto__ = cljs.core.rest(arglist__10743);
    return param__delegate(opts__5000__auto__, children__5001__auto__);
  };
  param.cljs$core$IFn$_invoke$arity$variadic = param__delegate;
  return param;
}();
om.dom.pre = function() {
  var pre__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.pre.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var pre = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return pre__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  pre.cljs$lang$maxFixedArity = 1;
  pre.cljs$lang$applyTo = function(arglist__10744) {
    var opts__5000__auto__ = cljs.core.first(arglist__10744);
    var children__5001__auto__ = cljs.core.rest(arglist__10744);
    return pre__delegate(opts__5000__auto__, children__5001__auto__);
  };
  pre.cljs$core$IFn$_invoke$arity$variadic = pre__delegate;
  return pre;
}();
om.dom.progress = function() {
  var progress__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.progress.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var progress = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return progress__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  progress.cljs$lang$maxFixedArity = 1;
  progress.cljs$lang$applyTo = function(arglist__10745) {
    var opts__5000__auto__ = cljs.core.first(arglist__10745);
    var children__5001__auto__ = cljs.core.rest(arglist__10745);
    return progress__delegate(opts__5000__auto__, children__5001__auto__);
  };
  progress.cljs$core$IFn$_invoke$arity$variadic = progress__delegate;
  return progress;
}();
om.dom.q = function() {
  var q__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.q.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var q = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return q__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  q.cljs$lang$maxFixedArity = 1;
  q.cljs$lang$applyTo = function(arglist__10746) {
    var opts__5000__auto__ = cljs.core.first(arglist__10746);
    var children__5001__auto__ = cljs.core.rest(arglist__10746);
    return q__delegate(opts__5000__auto__, children__5001__auto__);
  };
  q.cljs$core$IFn$_invoke$arity$variadic = q__delegate;
  return q;
}();
om.dom.rp = function() {
  var rp__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.rp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var rp = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rp__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  rp.cljs$lang$maxFixedArity = 1;
  rp.cljs$lang$applyTo = function(arglist__10747) {
    var opts__5000__auto__ = cljs.core.first(arglist__10747);
    var children__5001__auto__ = cljs.core.rest(arglist__10747);
    return rp__delegate(opts__5000__auto__, children__5001__auto__);
  };
  rp.cljs$core$IFn$_invoke$arity$variadic = rp__delegate;
  return rp;
}();
om.dom.rt = function() {
  var rt__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.rt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var rt = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rt__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  rt.cljs$lang$maxFixedArity = 1;
  rt.cljs$lang$applyTo = function(arglist__10748) {
    var opts__5000__auto__ = cljs.core.first(arglist__10748);
    var children__5001__auto__ = cljs.core.rest(arglist__10748);
    return rt__delegate(opts__5000__auto__, children__5001__auto__);
  };
  rt.cljs$core$IFn$_invoke$arity$variadic = rt__delegate;
  return rt;
}();
om.dom.ruby = function() {
  var ruby__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.ruby.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var ruby = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ruby__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  ruby.cljs$lang$maxFixedArity = 1;
  ruby.cljs$lang$applyTo = function(arglist__10749) {
    var opts__5000__auto__ = cljs.core.first(arglist__10749);
    var children__5001__auto__ = cljs.core.rest(arglist__10749);
    return ruby__delegate(opts__5000__auto__, children__5001__auto__);
  };
  ruby.cljs$core$IFn$_invoke$arity$variadic = ruby__delegate;
  return ruby;
}();
om.dom.s = function() {
  var s__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.s.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var s = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return s__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  s.cljs$lang$maxFixedArity = 1;
  s.cljs$lang$applyTo = function(arglist__10750) {
    var opts__5000__auto__ = cljs.core.first(arglist__10750);
    var children__5001__auto__ = cljs.core.rest(arglist__10750);
    return s__delegate(opts__5000__auto__, children__5001__auto__);
  };
  s.cljs$core$IFn$_invoke$arity$variadic = s__delegate;
  return s;
}();
om.dom.samp = function() {
  var samp__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.samp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var samp = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return samp__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  samp.cljs$lang$maxFixedArity = 1;
  samp.cljs$lang$applyTo = function(arglist__10751) {
    var opts__5000__auto__ = cljs.core.first(arglist__10751);
    var children__5001__auto__ = cljs.core.rest(arglist__10751);
    return samp__delegate(opts__5000__auto__, children__5001__auto__);
  };
  samp.cljs$core$IFn$_invoke$arity$variadic = samp__delegate;
  return samp;
}();
om.dom.script = function() {
  var script__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.script.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var script = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return script__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  script.cljs$lang$maxFixedArity = 1;
  script.cljs$lang$applyTo = function(arglist__10752) {
    var opts__5000__auto__ = cljs.core.first(arglist__10752);
    var children__5001__auto__ = cljs.core.rest(arglist__10752);
    return script__delegate(opts__5000__auto__, children__5001__auto__);
  };
  script.cljs$core$IFn$_invoke$arity$variadic = script__delegate;
  return script;
}();
om.dom.section = function() {
  var section__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.section.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var section = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return section__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  section.cljs$lang$maxFixedArity = 1;
  section.cljs$lang$applyTo = function(arglist__10753) {
    var opts__5000__auto__ = cljs.core.first(arglist__10753);
    var children__5001__auto__ = cljs.core.rest(arglist__10753);
    return section__delegate(opts__5000__auto__, children__5001__auto__);
  };
  section.cljs$core$IFn$_invoke$arity$variadic = section__delegate;
  return section;
}();
om.dom.select = function() {
  var select__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.select.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var select = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return select__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  select.cljs$lang$maxFixedArity = 1;
  select.cljs$lang$applyTo = function(arglist__10754) {
    var opts__5000__auto__ = cljs.core.first(arglist__10754);
    var children__5001__auto__ = cljs.core.rest(arglist__10754);
    return select__delegate(opts__5000__auto__, children__5001__auto__);
  };
  select.cljs$core$IFn$_invoke$arity$variadic = select__delegate;
  return select;
}();
om.dom.small = function() {
  var small__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.small.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var small = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return small__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  small.cljs$lang$maxFixedArity = 1;
  small.cljs$lang$applyTo = function(arglist__10755) {
    var opts__5000__auto__ = cljs.core.first(arglist__10755);
    var children__5001__auto__ = cljs.core.rest(arglist__10755);
    return small__delegate(opts__5000__auto__, children__5001__auto__);
  };
  small.cljs$core$IFn$_invoke$arity$variadic = small__delegate;
  return small;
}();
om.dom.source = function() {
  var source__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.source.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var source = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return source__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  source.cljs$lang$maxFixedArity = 1;
  source.cljs$lang$applyTo = function(arglist__10756) {
    var opts__5000__auto__ = cljs.core.first(arglist__10756);
    var children__5001__auto__ = cljs.core.rest(arglist__10756);
    return source__delegate(opts__5000__auto__, children__5001__auto__);
  };
  source.cljs$core$IFn$_invoke$arity$variadic = source__delegate;
  return source;
}();
om.dom.span = function() {
  var span__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.span.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var span = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return span__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  span.cljs$lang$maxFixedArity = 1;
  span.cljs$lang$applyTo = function(arglist__10757) {
    var opts__5000__auto__ = cljs.core.first(arglist__10757);
    var children__5001__auto__ = cljs.core.rest(arglist__10757);
    return span__delegate(opts__5000__auto__, children__5001__auto__);
  };
  span.cljs$core$IFn$_invoke$arity$variadic = span__delegate;
  return span;
}();
om.dom.strong = function() {
  var strong__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.strong.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var strong = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return strong__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  strong.cljs$lang$maxFixedArity = 1;
  strong.cljs$lang$applyTo = function(arglist__10758) {
    var opts__5000__auto__ = cljs.core.first(arglist__10758);
    var children__5001__auto__ = cljs.core.rest(arglist__10758);
    return strong__delegate(opts__5000__auto__, children__5001__auto__);
  };
  strong.cljs$core$IFn$_invoke$arity$variadic = strong__delegate;
  return strong;
}();
om.dom.style = function() {
  var style__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.style.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var style = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return style__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  style.cljs$lang$maxFixedArity = 1;
  style.cljs$lang$applyTo = function(arglist__10759) {
    var opts__5000__auto__ = cljs.core.first(arglist__10759);
    var children__5001__auto__ = cljs.core.rest(arglist__10759);
    return style__delegate(opts__5000__auto__, children__5001__auto__);
  };
  style.cljs$core$IFn$_invoke$arity$variadic = style__delegate;
  return style;
}();
om.dom.sub = function() {
  var sub__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.sub.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var sub = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sub__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  sub.cljs$lang$maxFixedArity = 1;
  sub.cljs$lang$applyTo = function(arglist__10760) {
    var opts__5000__auto__ = cljs.core.first(arglist__10760);
    var children__5001__auto__ = cljs.core.rest(arglist__10760);
    return sub__delegate(opts__5000__auto__, children__5001__auto__);
  };
  sub.cljs$core$IFn$_invoke$arity$variadic = sub__delegate;
  return sub;
}();
om.dom.summary = function() {
  var summary__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.summary.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var summary = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return summary__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  summary.cljs$lang$maxFixedArity = 1;
  summary.cljs$lang$applyTo = function(arglist__10761) {
    var opts__5000__auto__ = cljs.core.first(arglist__10761);
    var children__5001__auto__ = cljs.core.rest(arglist__10761);
    return summary__delegate(opts__5000__auto__, children__5001__auto__);
  };
  summary.cljs$core$IFn$_invoke$arity$variadic = summary__delegate;
  return summary;
}();
om.dom.sup = function() {
  var sup__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.sup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var sup = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sup__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  sup.cljs$lang$maxFixedArity = 1;
  sup.cljs$lang$applyTo = function(arglist__10762) {
    var opts__5000__auto__ = cljs.core.first(arglist__10762);
    var children__5001__auto__ = cljs.core.rest(arglist__10762);
    return sup__delegate(opts__5000__auto__, children__5001__auto__);
  };
  sup.cljs$core$IFn$_invoke$arity$variadic = sup__delegate;
  return sup;
}();
om.dom.table = function() {
  var table__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.table.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var table = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return table__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  table.cljs$lang$maxFixedArity = 1;
  table.cljs$lang$applyTo = function(arglist__10763) {
    var opts__5000__auto__ = cljs.core.first(arglist__10763);
    var children__5001__auto__ = cljs.core.rest(arglist__10763);
    return table__delegate(opts__5000__auto__, children__5001__auto__);
  };
  table.cljs$core$IFn$_invoke$arity$variadic = table__delegate;
  return table;
}();
om.dom.tbody = function() {
  var tbody__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.tbody.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var tbody = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tbody__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  tbody.cljs$lang$maxFixedArity = 1;
  tbody.cljs$lang$applyTo = function(arglist__10764) {
    var opts__5000__auto__ = cljs.core.first(arglist__10764);
    var children__5001__auto__ = cljs.core.rest(arglist__10764);
    return tbody__delegate(opts__5000__auto__, children__5001__auto__);
  };
  tbody.cljs$core$IFn$_invoke$arity$variadic = tbody__delegate;
  return tbody;
}();
om.dom.td = function() {
  var td__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.td.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var td = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return td__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  td.cljs$lang$maxFixedArity = 1;
  td.cljs$lang$applyTo = function(arglist__10765) {
    var opts__5000__auto__ = cljs.core.first(arglist__10765);
    var children__5001__auto__ = cljs.core.rest(arglist__10765);
    return td__delegate(opts__5000__auto__, children__5001__auto__);
  };
  td.cljs$core$IFn$_invoke$arity$variadic = td__delegate;
  return td;
}();
om.dom.tfoot = function() {
  var tfoot__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.tfoot.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var tfoot = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tfoot__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  tfoot.cljs$lang$maxFixedArity = 1;
  tfoot.cljs$lang$applyTo = function(arglist__10766) {
    var opts__5000__auto__ = cljs.core.first(arglist__10766);
    var children__5001__auto__ = cljs.core.rest(arglist__10766);
    return tfoot__delegate(opts__5000__auto__, children__5001__auto__);
  };
  tfoot.cljs$core$IFn$_invoke$arity$variadic = tfoot__delegate;
  return tfoot;
}();
om.dom.th = function() {
  var th__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.th.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var th = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return th__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  th.cljs$lang$maxFixedArity = 1;
  th.cljs$lang$applyTo = function(arglist__10767) {
    var opts__5000__auto__ = cljs.core.first(arglist__10767);
    var children__5001__auto__ = cljs.core.rest(arglist__10767);
    return th__delegate(opts__5000__auto__, children__5001__auto__);
  };
  th.cljs$core$IFn$_invoke$arity$variadic = th__delegate;
  return th;
}();
om.dom.thead = function() {
  var thead__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.thead.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var thead = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return thead__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  thead.cljs$lang$maxFixedArity = 1;
  thead.cljs$lang$applyTo = function(arglist__10768) {
    var opts__5000__auto__ = cljs.core.first(arglist__10768);
    var children__5001__auto__ = cljs.core.rest(arglist__10768);
    return thead__delegate(opts__5000__auto__, children__5001__auto__);
  };
  thead.cljs$core$IFn$_invoke$arity$variadic = thead__delegate;
  return thead;
}();
om.dom.time = function() {
  var time__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.time.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var time = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return time__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  time.cljs$lang$maxFixedArity = 1;
  time.cljs$lang$applyTo = function(arglist__10769) {
    var opts__5000__auto__ = cljs.core.first(arglist__10769);
    var children__5001__auto__ = cljs.core.rest(arglist__10769);
    return time__delegate(opts__5000__auto__, children__5001__auto__);
  };
  time.cljs$core$IFn$_invoke$arity$variadic = time__delegate;
  return time;
}();
om.dom.title = function() {
  var title__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.title.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var title = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return title__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  title.cljs$lang$maxFixedArity = 1;
  title.cljs$lang$applyTo = function(arglist__10770) {
    var opts__5000__auto__ = cljs.core.first(arglist__10770);
    var children__5001__auto__ = cljs.core.rest(arglist__10770);
    return title__delegate(opts__5000__auto__, children__5001__auto__);
  };
  title.cljs$core$IFn$_invoke$arity$variadic = title__delegate;
  return title;
}();
om.dom.tr = function() {
  var tr__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.tr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var tr = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tr__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  tr.cljs$lang$maxFixedArity = 1;
  tr.cljs$lang$applyTo = function(arglist__10771) {
    var opts__5000__auto__ = cljs.core.first(arglist__10771);
    var children__5001__auto__ = cljs.core.rest(arglist__10771);
    return tr__delegate(opts__5000__auto__, children__5001__auto__);
  };
  tr.cljs$core$IFn$_invoke$arity$variadic = tr__delegate;
  return tr;
}();
om.dom.track = function() {
  var track__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.track.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var track = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return track__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  track.cljs$lang$maxFixedArity = 1;
  track.cljs$lang$applyTo = function(arglist__10772) {
    var opts__5000__auto__ = cljs.core.first(arglist__10772);
    var children__5001__auto__ = cljs.core.rest(arglist__10772);
    return track__delegate(opts__5000__auto__, children__5001__auto__);
  };
  track.cljs$core$IFn$_invoke$arity$variadic = track__delegate;
  return track;
}();
om.dom.u = function() {
  var u__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.u.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var u = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return u__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  u.cljs$lang$maxFixedArity = 1;
  u.cljs$lang$applyTo = function(arglist__10773) {
    var opts__5000__auto__ = cljs.core.first(arglist__10773);
    var children__5001__auto__ = cljs.core.rest(arglist__10773);
    return u__delegate(opts__5000__auto__, children__5001__auto__);
  };
  u.cljs$core$IFn$_invoke$arity$variadic = u__delegate;
  return u;
}();
om.dom.ul = function() {
  var ul__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.ul.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var ul = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ul__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  ul.cljs$lang$maxFixedArity = 1;
  ul.cljs$lang$applyTo = function(arglist__10774) {
    var opts__5000__auto__ = cljs.core.first(arglist__10774);
    var children__5001__auto__ = cljs.core.rest(arglist__10774);
    return ul__delegate(opts__5000__auto__, children__5001__auto__);
  };
  ul.cljs$core$IFn$_invoke$arity$variadic = ul__delegate;
  return ul;
}();
om.dom.var$ = function() {
  var var$__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.var$.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var var$ = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return var$__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  var$.cljs$lang$maxFixedArity = 1;
  var$.cljs$lang$applyTo = function(arglist__10775) {
    var opts__5000__auto__ = cljs.core.first(arglist__10775);
    var children__5001__auto__ = cljs.core.rest(arglist__10775);
    return var$__delegate(opts__5000__auto__, children__5001__auto__);
  };
  var$.cljs$core$IFn$_invoke$arity$variadic = var$__delegate;
  return var$;
}();
om.dom.video = function() {
  var video__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.video.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var video = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return video__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  video.cljs$lang$maxFixedArity = 1;
  video.cljs$lang$applyTo = function(arglist__10776) {
    var opts__5000__auto__ = cljs.core.first(arglist__10776);
    var children__5001__auto__ = cljs.core.rest(arglist__10776);
    return video__delegate(opts__5000__auto__, children__5001__auto__);
  };
  video.cljs$core$IFn$_invoke$arity$variadic = video__delegate;
  return video;
}();
om.dom.wbr = function() {
  var wbr__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.wbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var wbr = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return wbr__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  wbr.cljs$lang$maxFixedArity = 1;
  wbr.cljs$lang$applyTo = function(arglist__10777) {
    var opts__5000__auto__ = cljs.core.first(arglist__10777);
    var children__5001__auto__ = cljs.core.rest(arglist__10777);
    return wbr__delegate(opts__5000__auto__, children__5001__auto__);
  };
  wbr.cljs$core$IFn$_invoke$arity$variadic = wbr__delegate;
  return wbr;
}();
om.dom.circle = function() {
  var circle__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.circle.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var circle = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return circle__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  circle.cljs$lang$maxFixedArity = 1;
  circle.cljs$lang$applyTo = function(arglist__10778) {
    var opts__5000__auto__ = cljs.core.first(arglist__10778);
    var children__5001__auto__ = cljs.core.rest(arglist__10778);
    return circle__delegate(opts__5000__auto__, children__5001__auto__);
  };
  circle.cljs$core$IFn$_invoke$arity$variadic = circle__delegate;
  return circle;
}();
om.dom.g = function() {
  var g__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.g.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var g = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return g__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  g.cljs$lang$maxFixedArity = 1;
  g.cljs$lang$applyTo = function(arglist__10779) {
    var opts__5000__auto__ = cljs.core.first(arglist__10779);
    var children__5001__auto__ = cljs.core.rest(arglist__10779);
    return g__delegate(opts__5000__auto__, children__5001__auto__);
  };
  g.cljs$core$IFn$_invoke$arity$variadic = g__delegate;
  return g;
}();
om.dom.line = function() {
  var line__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.line.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var line = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return line__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  line.cljs$lang$maxFixedArity = 1;
  line.cljs$lang$applyTo = function(arglist__10780) {
    var opts__5000__auto__ = cljs.core.first(arglist__10780);
    var children__5001__auto__ = cljs.core.rest(arglist__10780);
    return line__delegate(opts__5000__auto__, children__5001__auto__);
  };
  line.cljs$core$IFn$_invoke$arity$variadic = line__delegate;
  return line;
}();
om.dom.path = function() {
  var path__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.path.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var path = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return path__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  path.cljs$lang$maxFixedArity = 1;
  path.cljs$lang$applyTo = function(arglist__10781) {
    var opts__5000__auto__ = cljs.core.first(arglist__10781);
    var children__5001__auto__ = cljs.core.rest(arglist__10781);
    return path__delegate(opts__5000__auto__, children__5001__auto__);
  };
  path.cljs$core$IFn$_invoke$arity$variadic = path__delegate;
  return path;
}();
om.dom.polyline = function() {
  var polyline__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.polyline.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var polyline = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polyline__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  polyline.cljs$lang$maxFixedArity = 1;
  polyline.cljs$lang$applyTo = function(arglist__10782) {
    var opts__5000__auto__ = cljs.core.first(arglist__10782);
    var children__5001__auto__ = cljs.core.rest(arglist__10782);
    return polyline__delegate(opts__5000__auto__, children__5001__auto__);
  };
  polyline.cljs$core$IFn$_invoke$arity$variadic = polyline__delegate;
  return polyline;
}();
om.dom.rect = function() {
  var rect__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.rect.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var rect = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rect__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  rect.cljs$lang$maxFixedArity = 1;
  rect.cljs$lang$applyTo = function(arglist__10783) {
    var opts__5000__auto__ = cljs.core.first(arglist__10783);
    var children__5001__auto__ = cljs.core.rest(arglist__10783);
    return rect__delegate(opts__5000__auto__, children__5001__auto__);
  };
  rect.cljs$core$IFn$_invoke$arity$variadic = rect__delegate;
  return rect;
}();
om.dom.svg = function() {
  var svg__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.svg.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var svg = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return svg__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  svg.cljs$lang$maxFixedArity = 1;
  svg.cljs$lang$applyTo = function(arglist__10784) {
    var opts__5000__auto__ = cljs.core.first(arglist__10784);
    var children__5001__auto__ = cljs.core.rest(arglist__10784);
    return svg__delegate(opts__5000__auto__, children__5001__auto__);
  };
  svg.cljs$core$IFn$_invoke$arity$variadic = svg__delegate;
  return svg;
}();
om.dom.text = function() {
  var text__delegate = function(opts__5000__auto__, children__5001__auto__) {
    return React.DOM.text.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5000__auto__, children__5001__auto__)));
  };
  var text = function(opts__5000__auto__, var_args) {
    var children__5001__auto__ = null;
    if (arguments.length > 1) {
      children__5001__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return text__delegate.call(this, opts__5000__auto__, children__5001__auto__);
  };
  text.cljs$lang$maxFixedArity = 1;
  text.cljs$lang$applyTo = function(arglist__10785) {
    var opts__5000__auto__ = cljs.core.first(arglist__10785);
    var children__5001__auto__ = cljs.core.rest(arglist__10785);
    return text__delegate(opts__5000__auto__, children__5001__auto__);
  };
  text.cljs$core$IFn$_invoke$arity$variadic = text__delegate;
  return text;
}();
om.dom.wrap_form_element = function wrap_form_element(ctor, display_name) {
  return React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }, "getDisplayName":function() {
    return display_name;
  }});
};
om.dom.input = om.dom.wrap_form_element.call(null, React.DOM.input, "input");
om.dom.textarea = om.dom.wrap_form_element.call(null, React.DOM.textarea, "textarea");
om.dom.option = om.dom.wrap_form_element.call(null, React.DOM.option, "option");
om.dom.render = function render(component, el) {
  return React.renderComponent(component, el);
};
om.dom.render_to_str = function render_to_str(c) {
  return React.renderComponentToString(c);
};
goog.provide("goog.ui.IdGenerator");
goog.ui.IdGenerator = function() {
};
goog.addSingletonGetter(goog.ui.IdGenerator);
goog.ui.IdGenerator.prototype.nextId_ = 0;
goog.ui.IdGenerator.prototype.getNextUniqueId = function() {
  return ":" + (this.nextId_++).toString(36);
};
goog.provide("om.core");
goog.require("cljs.core");
goog.require("goog.ui.IdGenerator");
goog.require("om.dom");
goog.require("om.dom");
om.core._STAR_read_enabled_STAR_ = false;
om.core._STAR_parent_STAR_ = null;
om.core._STAR_instrument_STAR_ = null;
om.core.IDisplayName = function() {
  var obj10531 = {};
  return obj10531;
}();
om.core.display_name = function display_name(this$) {
  if (function() {
    var and__3466__auto__ = this$;
    if (and__3466__auto__) {
      return this$.om$core$IDisplayName$display_name$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return this$.om$core$IDisplayName$display_name$arity$1(this$);
  } else {
    var x__4105__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3478__auto__ = om.core.display_name[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = om.core.display_name["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDisplayName.display-name", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IInitState = function() {
  var obj10533 = {};
  return obj10533;
}();
om.core.init_state = function init_state(this$) {
  if (function() {
    var and__3466__auto__ = this$;
    if (and__3466__auto__) {
      return this$.om$core$IInitState$init_state$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return this$.om$core$IInitState$init_state$arity$1(this$);
  } else {
    var x__4105__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3478__auto__ = om.core.init_state[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = om.core.init_state["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInitState.init-state", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IShouldUpdate = function() {
  var obj10535 = {};
  return obj10535;
}();
om.core.should_update = function should_update(this$, next_props, next_state) {
  if (function() {
    var and__3466__auto__ = this$;
    if (and__3466__auto__) {
      return this$.om$core$IShouldUpdate$should_update$arity$3;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return this$.om$core$IShouldUpdate$should_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4105__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3478__auto__ = om.core.should_update[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = om.core.should_update["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IShouldUpdate.should-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IWillMount = function() {
  var obj10537 = {};
  return obj10537;
}();
om.core.will_mount = function will_mount(this$) {
  if (function() {
    var and__3466__auto__ = this$;
    if (and__3466__auto__) {
      return this$.om$core$IWillMount$will_mount$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return this$.om$core$IWillMount$will_mount$arity$1(this$);
  } else {
    var x__4105__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3478__auto__ = om.core.will_mount[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = om.core.will_mount["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillMount.will-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IDidMount = function() {
  var obj10539 = {};
  return obj10539;
}();
om.core.did_mount = function did_mount(this$) {
  if (function() {
    var and__3466__auto__ = this$;
    if (and__3466__auto__) {
      return this$.om$core$IDidMount$did_mount$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return this$.om$core$IDidMount$did_mount$arity$1(this$);
  } else {
    var x__4105__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3478__auto__ = om.core.did_mount[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = om.core.did_mount["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidMount.did-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUnmount = function() {
  var obj10541 = {};
  return obj10541;
}();
om.core.will_unmount = function will_unmount(this$) {
  if (function() {
    var and__3466__auto__ = this$;
    if (and__3466__auto__) {
      return this$.om$core$IWillUnmount$will_unmount$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return this$.om$core$IWillUnmount$will_unmount$arity$1(this$);
  } else {
    var x__4105__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3478__auto__ = om.core.will_unmount[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = om.core.will_unmount["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUnmount.will-unmount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUpdate = function() {
  var obj10543 = {};
  return obj10543;
}();
om.core.will_update = function will_update(this$, next_props, next_state) {
  if (function() {
    var and__3466__auto__ = this$;
    if (and__3466__auto__) {
      return this$.om$core$IWillUpdate$will_update$arity$3;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return this$.om$core$IWillUpdate$will_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4105__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3478__auto__ = om.core.will_update[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = om.core.will_update["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUpdate.will-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IDidUpdate = function() {
  var obj10545 = {};
  return obj10545;
}();
om.core.did_update = function did_update(this$, prev_props, prev_state) {
  if (function() {
    var and__3466__auto__ = this$;
    if (and__3466__auto__) {
      return this$.om$core$IDidUpdate$did_update$arity$3;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return this$.om$core$IDidUpdate$did_update$arity$3(this$, prev_props, prev_state);
  } else {
    var x__4105__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3478__auto__ = om.core.did_update[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = om.core.did_update["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidUpdate.did-update", this$);
        }
      }
    }().call(null, this$, prev_props, prev_state);
  }
};
om.core.IWillReceiveProps = function() {
  var obj10547 = {};
  return obj10547;
}();
om.core.will_receive_props = function will_receive_props(this$, next_props) {
  if (function() {
    var and__3466__auto__ = this$;
    if (and__3466__auto__) {
      return this$.om$core$IWillReceiveProps$will_receive_props$arity$2;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return this$.om$core$IWillReceiveProps$will_receive_props$arity$2(this$, next_props);
  } else {
    var x__4105__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3478__auto__ = om.core.will_receive_props[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = om.core.will_receive_props["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillReceiveProps.will-receive-props", this$);
        }
      }
    }().call(null, this$, next_props);
  }
};
om.core.IRender = function() {
  var obj10549 = {};
  return obj10549;
}();
om.core.render = function render(this$) {
  if (function() {
    var and__3466__auto__ = this$;
    if (and__3466__auto__) {
      return this$.om$core$IRender$render$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return this$.om$core$IRender$render$arity$1(this$);
  } else {
    var x__4105__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3478__auto__ = om.core.render[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = om.core.render["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRender.render", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IRenderState = function() {
  var obj10551 = {};
  return obj10551;
}();
om.core.render_state = function render_state(this$, state) {
  if (function() {
    var and__3466__auto__ = this$;
    if (and__3466__auto__) {
      return this$.om$core$IRenderState$render_state$arity$2;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return this$.om$core$IRenderState$render_state$arity$2(this$, state);
  } else {
    var x__4105__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3478__auto__ = om.core.render_state[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = om.core.render_state["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderState.render-state", this$);
        }
      }
    }().call(null, this$, state);
  }
};
om.core.IOmSwap = function() {
  var obj10553 = {};
  return obj10553;
}();
om.core._om_swap_BANG_ = function _om_swap_BANG_(this$, cursor, korks, f, tag) {
  if (function() {
    var and__3466__auto__ = this$;
    if (and__3466__auto__) {
      return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5(this$, cursor, korks, f, tag);
  } else {
    var x__4105__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3478__auto__ = om.core._om_swap_BANG_[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = om.core._om_swap_BANG_["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmSwap.-om-swap!", this$);
        }
      }
    }().call(null, this$, cursor, korks, f, tag);
  }
};
om.core.IGetState = function() {
  var obj10555 = {};
  return obj10555;
}();
om.core._get_state = function() {
  var _get_state = null;
  var _get_state__1 = function(this$) {
    if (function() {
      var and__3466__auto__ = this$;
      if (and__3466__auto__) {
        return this$.om$core$IGetState$_get_state$arity$1;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$1(this$);
    } else {
      var x__4105__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3478__auto__ = om.core._get_state[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = om.core._get_state["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_state__2 = function(this$, ks) {
    if (function() {
      var and__3466__auto__ = this$;
      if (and__3466__auto__) {
        return this$.om$core$IGetState$_get_state$arity$2;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$2(this$, ks);
    } else {
      var x__4105__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3478__auto__ = om.core._get_state[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = om.core._get_state["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_state__1.call(this, this$);
      case 2:
        return _get_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_state.cljs$core$IFn$_invoke$arity$1 = _get_state__1;
  _get_state.cljs$core$IFn$_invoke$arity$2 = _get_state__2;
  return _get_state;
}();
om.core.IGetRenderState = function() {
  var obj10557 = {};
  return obj10557;
}();
om.core._get_render_state = function() {
  var _get_render_state = null;
  var _get_render_state__1 = function(this$) {
    if (function() {
      var and__3466__auto__ = this$;
      if (and__3466__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$1;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$1(this$);
    } else {
      var x__4105__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3478__auto__ = om.core._get_render_state[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = om.core._get_render_state["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_render_state__2 = function(this$, ks) {
    if (function() {
      var and__3466__auto__ = this$;
      if (and__3466__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$2;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$2(this$, ks);
    } else {
      var x__4105__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3478__auto__ = om.core._get_render_state[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = om.core._get_render_state["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_render_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_render_state__1.call(this, this$);
      case 2:
        return _get_render_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_render_state.cljs$core$IFn$_invoke$arity$1 = _get_render_state__1;
  _get_render_state.cljs$core$IFn$_invoke$arity$2 = _get_render_state__2;
  return _get_render_state;
}();
om.core.ISetState = function() {
  var obj10559 = {};
  return obj10559;
}();
om.core._set_state_BANG_ = function() {
  var _set_state_BANG_ = null;
  var _set_state_BANG___2 = function(this$, val) {
    if (function() {
      var and__3466__auto__ = this$;
      if (and__3466__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$2;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$2(this$, val);
    } else {
      var x__4105__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3478__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, val);
    }
  };
  var _set_state_BANG___3 = function(this$, ks, val) {
    if (function() {
      var and__3466__auto__ = this$;
      if (and__3466__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$3;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$3(this$, ks, val);
    } else {
      var x__4105__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3478__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, ks, val);
    }
  };
  _set_state_BANG_ = function(this$, ks, val) {
    switch(arguments.length) {
      case 2:
        return _set_state_BANG___2.call(this, this$, ks);
      case 3:
        return _set_state_BANG___3.call(this, this$, ks, val);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$2 = _set_state_BANG___2;
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = _set_state_BANG___3;
  return _set_state_BANG_;
}();
om.core.IValue = function() {
  var obj10561 = {};
  return obj10561;
}();
om.core._value = function _value(x) {
  if (function() {
    var and__3466__auto__ = x;
    if (and__3466__auto__) {
      return x.om$core$IValue$_value$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return x.om$core$IValue$_value$arity$1(x);
  } else {
    var x__4105__auto__ = x == null ? null : x;
    return function() {
      var or__3478__auto__ = om.core._value[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = om.core._value["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IValue.-value", x);
        }
      }
    }().call(null, x);
  }
};
om.core.IValue["_"] = true;
om.core._value["_"] = function(x) {
  return x;
};
om.core.ICursor = function() {
  var obj10563 = {};
  return obj10563;
}();
om.core._path = function _path(cursor) {
  if (function() {
    var and__3466__auto__ = cursor;
    if (and__3466__auto__) {
      return cursor.om$core$ICursor$_path$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_path$arity$1(cursor);
  } else {
    var x__4105__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3478__auto__ = om.core._path[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = om.core._path["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-path", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core._state = function _state(cursor) {
  if (function() {
    var and__3466__auto__ = cursor;
    if (and__3466__auto__) {
      return cursor.om$core$ICursor$_state$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_state$arity$1(cursor);
  } else {
    var x__4105__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3478__auto__ = om.core._state[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = om.core._state["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-state", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core.IToCursor = function() {
  var obj10565 = {};
  return obj10565;
}();
om.core._to_cursor = function() {
  var _to_cursor = null;
  var _to_cursor__2 = function(value, state) {
    if (function() {
      var and__3466__auto__ = value;
      if (and__3466__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$2;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$2(value, state);
    } else {
      var x__4105__auto__ = value == null ? null : value;
      return function() {
        var or__3478__auto__ = om.core._to_cursor[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = om.core._to_cursor["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state);
    }
  };
  var _to_cursor__3 = function(value, state, path) {
    if (function() {
      var and__3466__auto__ = value;
      if (and__3466__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$3;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$3(value, state, path);
    } else {
      var x__4105__auto__ = value == null ? null : value;
      return function() {
        var or__3478__auto__ = om.core._to_cursor[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = om.core._to_cursor["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state, path);
    }
  };
  _to_cursor = function(value, state, path) {
    switch(arguments.length) {
      case 2:
        return _to_cursor__2.call(this, value, state);
      case 3:
        return _to_cursor__3.call(this, value, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _to_cursor.cljs$core$IFn$_invoke$arity$2 = _to_cursor__2;
  _to_cursor.cljs$core$IFn$_invoke$arity$3 = _to_cursor__3;
  return _to_cursor;
}();
om.core.path = function path(cursor) {
  return om.core._path.call(null, cursor);
};
om.core.value = function value(cursor) {
  return om.core._value.call(null, cursor);
};
om.core.state = function state(cursor) {
  return om.core._state.call(null, cursor);
};
om.core.ITransact = function() {
  var obj10567 = {};
  return obj10567;
}();
om.core._transact_BANG_ = function _transact_BANG_(cursor, korks, f, tag) {
  if (function() {
    var and__3466__auto__ = cursor;
    if (and__3466__auto__) {
      return cursor.om$core$ITransact$_transact_BANG_$arity$4;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return cursor.om$core$ITransact$_transact_BANG_$arity$4(cursor, korks, f, tag);
  } else {
    var x__4105__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3478__auto__ = om.core._transact_BANG_[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = om.core._transact_BANG_["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransact.-transact!", cursor);
        }
      }
    }().call(null, cursor, korks, f, tag);
  }
};
om.core.INotify = function() {
  var obj10569 = {};
  return obj10569;
}();
om.core._notify = function _notify(x, tx_data, root_cursor) {
  if (function() {
    var and__3466__auto__ = x;
    if (and__3466__auto__) {
      return x.om$core$INotify$_notify$arity$3;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return x.om$core$INotify$_notify$arity$3(x, tx_data, root_cursor);
  } else {
    var x__4105__auto__ = x == null ? null : x;
    return function() {
      var or__3478__auto__ = om.core._notify[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = om.core._notify["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-notify", x);
        }
      }
    }().call(null, x, tx_data, root_cursor);
  }
};
om.core.transact_STAR_ = function transact_STAR_(state, cursor, korks, f, tag) {
  var old_state = cljs.core.deref.call(null, state);
  var path = cljs.core.into.call(null, om.core.path.call(null, cursor), korks);
  var ret = function() {
    var G__10571 = state;
    if (G__10571) {
      var bit__4128__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3478__auto__ = bit__4128__auto__;
        if (cljs.core.truth_(or__3478__auto__)) {
          return or__3478__auto__;
        } else {
          return G__10571.om$core$IOmSwap$;
        }
      }())) {
        return true;
      } else {
        if (!G__10571.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__10571);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__10571);
    }
  }() ? om.core._om_swap_BANG_.call(null, state, cursor, korks, f, tag) : cljs.core.empty_QMARK_.call(null, path) ? cljs.core.swap_BANG_.call(null, state, f) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, path, f) : null;
  if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "defer", "om.core/defer", 3145885106))) {
    return null;
  } else {
    var tx_data = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", 1017337751), path, new cljs.core.Keyword(null, "old-value", "old-value", 1451216317), cljs.core.get_in.call(null, old_state, path), new cljs.core.Keyword(null, "new-value", "new-value", 3626601078), cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path), new cljs.core.Keyword(null, "old-state", "old-state", 1449001181), old_state, new cljs.core.Keyword(null, "new-state", "new-state", 
    3624385942), cljs.core.deref.call(null, state)], null);
    if (!(tag == null)) {
      return om.core.notify_STAR_.call(null, cursor, cljs.core.assoc.call(null, tx_data, new cljs.core.Keyword(null, "tag", "tag", 1014018828), tag));
    } else {
      return om.core.notify_STAR_.call(null, cursor, tx_data);
    }
  }
};
om.core.children = function children(node) {
  var c = node.props.children;
  if (cljs.core.fn_QMARK_.call(null, c)) {
    return node.props.children = function() {
      var _STAR_read_enabled_STAR_10573 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        return c.call(null, node);
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10573;
      }
    }();
  } else {
    return c;
  }
};
om.core.get_props = function get_props(x) {
  return x.props["__om_cursor"];
};
om.core.get_state = function() {
  var get_state = null;
  var get_state__1 = function(owner) {
    return om.core._get_state.call(null, owner);
  };
  var get_state__2 = function(owner, korks) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_state.call(null, owner, ks);
  };
  get_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_state__1.call(this, owner);
      case 2:
        return get_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_state.cljs$core$IFn$_invoke$arity$1 = get_state__1;
  get_state.cljs$core$IFn$_invoke$arity$2 = get_state__2;
  return get_state;
}();
om.core.get_shared = function() {
  var get_shared = null;
  var get_shared__1 = function(owner) {
    if (owner == null) {
      return null;
    } else {
      return owner.props["__om_shared"];
    }
  };
  var get_shared__2 = function(owner, korks) {
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      return cljs.core.get.call(null, get_shared.call(null, owner), korks);
    } else {
      if (cljs.core.empty_QMARK_.call(null, korks)) {
        return get_shared.call(null, owner);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.get_in.call(null, get_shared.call(null, owner), korks);
        } else {
          return null;
        }
      }
    }
  };
  get_shared = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_shared__1.call(this, owner);
      case 2:
        return get_shared__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_shared.cljs$core$IFn$_invoke$arity$1 = get_shared__1;
  get_shared.cljs$core$IFn$_invoke$arity$2 = get_shared__2;
  return get_shared;
}();
om.core.merge_pending_state = function merge_pending_state(owner) {
  var state = owner.state;
  var temp__4092__auto__ = state["__om_pending_state"];
  if (cljs.core.truth_(temp__4092__auto__)) {
    var pending_state = temp__4092__auto__;
    var G__10575 = state;
    G__10575["__om_prev_state"] = state["__om_state"];
    G__10575["__om_state"] = pending_state;
    G__10575["__om_pending_state"] = null;
    return G__10575;
  } else {
    return null;
  }
};
om.core.merge_props_state = function() {
  var merge_props_state = null;
  var merge_props_state__1 = function(owner) {
    return merge_props_state.call(null, owner, null);
  };
  var merge_props_state__2 = function(owner, props) {
    var props__$1 = function() {
      var or__3478__auto__ = props;
      if (cljs.core.truth_(or__3478__auto__)) {
        return or__3478__auto__;
      } else {
        return owner.props;
      }
    }();
    var temp__4092__auto__ = props__$1["__om_state"];
    if (cljs.core.truth_(temp__4092__auto__)) {
      var props_state = temp__4092__auto__;
      var state = owner.state;
      state["__om_pending_state"] = cljs.core.merge.call(null, function() {
        var or__3478__auto__ = state["__om_pending_state"];
        if (cljs.core.truth_(or__3478__auto__)) {
          return or__3478__auto__;
        } else {
          return state["__om_state"];
        }
      }(), props_state);
      return props__$1["__om_state"] = null;
    } else {
      return null;
    }
  };
  merge_props_state = function(owner, props) {
    switch(arguments.length) {
      case 1:
        return merge_props_state__1.call(this, owner);
      case 2:
        return merge_props_state__2.call(this, owner, props);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge_props_state.cljs$core$IFn$_invoke$arity$1 = merge_props_state__1;
  merge_props_state.cljs$core$IFn$_invoke$arity$2 = merge_props_state__2;
  return merge_props_state;
}();
om.core.pure_methods = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "componentWillUpdate", "componentWillUpdate", 2086388618), new cljs.core.Keyword(null, "componentDidUpdate", "componentDidUpdate", 4103164189), new cljs.core.Keyword(null, "render", "render", 4374279432), new cljs.core.Keyword(null, "componentWillReceiveProps", "componentWillReceiveProps", 2122862542), new cljs.core.Keyword(null, "getDisplayName", "getDisplayName", 2087784617), new cljs.core.Keyword(null, "componentWillUnmount", 
"componentWillUnmount", 4147620643), new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", 3257856604), new cljs.core.Keyword(null, "componentDidMount", "componentDidMount", 3877103209), new cljs.core.Keyword(null, "getInitialState", "getInitialState", 2219830677), new cljs.core.Keyword(null, "shouldComponentUpdate", "shouldComponentUpdate", 3193956709)], [function(next_props, next_state) {
  var this$ = this;
  var c_10601 = om.core.children.call(null, this$);
  if (function() {
    var G__10576 = c_10601;
    if (G__10576) {
      var bit__4128__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3478__auto__ = bit__4128__auto__;
        if (cljs.core.truth_(or__3478__auto__)) {
          return or__3478__auto__;
        } else {
          return G__10576.om$core$IWillUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__10576.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__10576);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__10576);
    }
  }()) {
    var state_10602 = this$.state;
    var _STAR_read_enabled_STAR_10577_10603 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_update.call(null, c_10601, om.core.get_props.call(null, {"props":next_props}), om.core._get_state.call(null, this$));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10577_10603;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}, function(prev_props, prev_state) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__10578 = c;
    if (G__10578) {
      var bit__4128__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3478__auto__ = bit__4128__auto__;
        if (cljs.core.truth_(or__3478__auto__)) {
          return or__3478__auto__;
        } else {
          return G__10578.om$core$IDidUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__10578.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__10578);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__10578);
    }
  }()) {
    var state_10604 = this$.state;
    var _STAR_read_enabled_STAR_10579_10605 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.did_update.call(null, c, om.core.get_props.call(null, {"props":prev_props}), function() {
        var or__3478__auto__ = state_10604["__om_prev_state"];
        if (cljs.core.truth_(or__3478__auto__)) {
          return or__3478__auto__;
        } else {
          return state_10604["__om_state"];
        }
      }());
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10579_10605;
    }
  } else {
  }
  return this$.state["__om_prev_state"] = null;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var _STAR_read_enabled_STAR_10580 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    if (function() {
      var G__10581 = c;
      if (G__10581) {
        var bit__4128__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3478__auto__ = bit__4128__auto__;
          if (cljs.core.truth_(or__3478__auto__)) {
            return or__3478__auto__;
          } else {
            return G__10581.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__10581.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__10581);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__10581);
      }
    }()) {
      var _STAR_parent_STAR_10582 = om.core._STAR_parent_STAR_;
      var _STAR_instrument_STAR_10583 = om.core._STAR_instrument_STAR_;
      try {
        om.core._STAR_parent_STAR_ = this$;
        om.core._STAR_instrument_STAR_ = props["__om_instrument"];
        return om.core.render.call(null, c);
      } finally {
        om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_10583;
        om.core._STAR_parent_STAR_ = _STAR_parent_STAR_10582;
      }
    } else {
      if (function() {
        var G__10584 = c;
        if (G__10584) {
          var bit__4128__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3478__auto__ = bit__4128__auto__;
            if (cljs.core.truth_(or__3478__auto__)) {
              return or__3478__auto__;
            } else {
              return G__10584.om$core$IRenderState$;
            }
          }())) {
            return true;
          } else {
            if (!G__10584.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__10584);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__10584);
        }
      }()) {
        var _STAR_parent_STAR_10585 = om.core._STAR_parent_STAR_;
        var _STAR_instrument_STAR_10586 = om.core._STAR_instrument_STAR_;
        try {
          om.core._STAR_parent_STAR_ = this$;
          om.core._STAR_instrument_STAR_ = props["__om_instrument"];
          return om.core.render_state.call(null, c, om.core.get_state.call(null, this$));
        } finally {
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_10586;
          om.core._STAR_parent_STAR_ = _STAR_parent_STAR_10585;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return c;
        } else {
          return null;
        }
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10580;
  }
}, function(next_props) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__10587 = c;
    if (G__10587) {
      var bit__4128__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3478__auto__ = bit__4128__auto__;
        if (cljs.core.truth_(or__3478__auto__)) {
          return or__3478__auto__;
        } else {
          return G__10587.om$core$IWillReceiveProps$;
        }
      }())) {
        return true;
      } else {
        if (!G__10587.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__10587);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__10587);
    }
  }()) {
    var _STAR_read_enabled_STAR_10588 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_receive_props.call(null, c, om.core.get_props.call(null, {"props":next_props}));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10588;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__10589 = c;
    if (G__10589) {
      var bit__4128__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3478__auto__ = bit__4128__auto__;
        if (cljs.core.truth_(or__3478__auto__)) {
          return or__3478__auto__;
        } else {
          return G__10589.om$core$IDisplayName$;
        }
      }())) {
        return true;
      } else {
        if (!G__10589.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__10589);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__10589);
    }
  }()) {
    var _STAR_read_enabled_STAR_10590 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.display_name.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10590;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__10591 = c;
    if (G__10591) {
      var bit__4128__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3478__auto__ = bit__4128__auto__;
        if (cljs.core.truth_(or__3478__auto__)) {
          return or__3478__auto__;
        } else {
          return G__10591.om$core$IWillUnmount$;
        }
      }())) {
        return true;
      } else {
        if (!G__10591.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__10591);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__10591);
    }
  }()) {
    var _STAR_read_enabled_STAR_10592 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_unmount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10592;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  om.core.merge_props_state.call(null, this$);
  var c_10606 = om.core.children.call(null, this$);
  if (function() {
    var G__10593 = c_10606;
    if (G__10593) {
      var bit__4128__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3478__auto__ = bit__4128__auto__;
        if (cljs.core.truth_(or__3478__auto__)) {
          return or__3478__auto__;
        } else {
          return G__10593.om$core$IWillMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__10593.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__10593);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__10593);
    }
  }()) {
    var _STAR_read_enabled_STAR_10594_10607 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_mount.call(null, c_10606);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10594_10607;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__10595 = c;
    if (G__10595) {
      var bit__4128__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3478__auto__ = bit__4128__auto__;
        if (cljs.core.truth_(or__3478__auto__)) {
          return or__3478__auto__;
        } else {
          return G__10595.om$core$IDidMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__10595.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__10595);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__10595);
    }
  }()) {
    var _STAR_read_enabled_STAR_10596 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.did_mount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10596;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var istate = function() {
    var or__3478__auto__ = props["__om_init_state"];
    if (cljs.core.truth_(or__3478__auto__)) {
      return or__3478__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  var id = (new cljs.core.Keyword("om.core", "id", "om.core/id", 2663181321)).cljs$core$IFn$_invoke$arity$1(istate);
  var ret = {"__om_state":cljs.core.merge.call(null, cljs.core.dissoc.call(null, istate, new cljs.core.Keyword("om.core", "id", "om.core/id", 2663181321)), function() {
    var G__10597 = c;
    if (G__10597) {
      var bit__4128__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3478__auto__ = bit__4128__auto__;
        if (cljs.core.truth_(or__3478__auto__)) {
          return or__3478__auto__;
        } else {
          return G__10597.om$core$IInitState$;
        }
      }())) {
        return true;
      } else {
        if (!G__10597.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__10597);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__10597);
    }
  }() ? function() {
    var _STAR_read_enabled_STAR_10598 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.init_state.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10598;
    }
  }() : null), "__om_id":function() {
    var or__3478__auto__ = id;
    if (cljs.core.truth_(or__3478__auto__)) {
      return or__3478__auto__;
    } else {
      return goog.ui.IdGenerator.getInstance().getNextUniqueId();
    }
  }()};
  props["__om_init_state"] = null;
  return ret;
}, function(next_props, next_state) {
  var this$ = this;
  var _STAR_read_enabled_STAR_10599 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    var props = this$.props;
    var state = this$.state;
    var c = om.core.children.call(null, this$);
    om.core.merge_props_state.call(null, this$, next_props);
    if (function() {
      var G__10600 = c;
      if (G__10600) {
        var bit__4128__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3478__auto__ = bit__4128__auto__;
          if (cljs.core.truth_(or__3478__auto__)) {
            return or__3478__auto__;
          } else {
            return G__10600.om$core$IShouldUpdate$;
          }
        }())) {
          return true;
        } else {
          if (!G__10600.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__10600);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__10600);
      }
    }()) {
      return om.core.should_update.call(null, c, om.core.get_props.call(null, {"props":next_props}), om.core._get_state.call(null, this$));
    } else {
      if (!(om.core._value.call(null, props["__om_cursor"]) === om.core._value.call(null, next_props["__om_cursor"]))) {
        return true;
      } else {
        if (!(state["__om_pending_state"] == null)) {
          return true;
        } else {
          if (!(props["__om_index"] === next_props["__om_index"])) {
            return true;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false;
            } else {
              return null;
            }
          }
        }
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10599;
  }
}]);
om.core.specify_state_methods_BANG_ = function specify_state_methods_BANG_(obj) {
  var x10611 = obj;
  x10611.om$core$IGetState$ = true;
  x10611.om$core$IGetState$_get_state$arity$1 = function(x10611) {
    return function(this$) {
      var this$__$1 = this;
      var state = this$__$1.state;
      var or__3478__auto__ = state["__om_pending_state"];
      if (cljs.core.truth_(or__3478__auto__)) {
        return or__3478__auto__;
      } else {
        return state["__om_state"];
      }
    };
  }(x10611);
  x10611.om$core$IGetState$_get_state$arity$2 = function(x10611) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_state.call(null, this$__$1), ks);
    };
  }(x10611);
  x10611.om$core$IGetRenderState$ = true;
  x10611.om$core$IGetRenderState$_get_render_state$arity$1 = function(x10611) {
    return function(this$) {
      var this$__$1 = this;
      return this$__$1.state["__om_state"];
    };
  }(x10611);
  x10611.om$core$IGetRenderState$_get_render_state$arity$2 = function(x10611) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_render_state.call(null, this$__$1), ks);
    };
  }(x10611);
  x10611.om$core$ISetState$ = true;
  x10611.om$core$ISetState$_set_state_BANG_$arity$2 = function(x10611) {
    return function(this$, val) {
      var this$__$1 = this;
      var _STAR_read_enabled_STAR_10612 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        var cursor = this$__$1.props["__om_cursor"];
        var path = om.core._path.call(null, cursor);
        this$__$1.state["__om_pending_state"] = val;
        if (cljs.core.empty_QMARK_.call(null, path)) {
          return cljs.core.swap_BANG_.call(null, om.core._state.call(null, cursor), cljs.core.clone);
        } else {
          return cljs.core.swap_BANG_.call(null, om.core._state.call(null, cursor), cljs.core.update_in, path, cljs.core.clone);
        }
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10612;
      }
    };
  }(x10611);
  x10611.om$core$ISetState$_set_state_BANG_$arity$3 = function(x10611) {
    return function(this$, ks, val) {
      var this$__$1 = this;
      var _STAR_read_enabled_STAR_10613 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        var props = this$__$1.props;
        var state = this$__$1.state;
        var cursor = props["__om_cursor"];
        var path = om.core._path.call(null, cursor);
        var pstate = om.core._get_state.call(null, this$__$1);
        state["__om_pending_state"] = cljs.core.assoc_in.call(null, pstate, ks, val);
        if (cljs.core.empty_QMARK_.call(null, path)) {
          return cljs.core.swap_BANG_.call(null, om.core._state.call(null, cursor), cljs.core.clone);
        } else {
          return cljs.core.swap_BANG_.call(null, om.core._state.call(null, cursor), cljs.core.update_in, path, cljs.core.clone);
        }
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10613;
      }
    };
  }(x10611);
  return x10611;
};
om.core.Pure = React.createClass(om.core.specify_state_methods_BANG_.call(null, cljs.core.clj__GT_js.call(null, om.core.pure_methods)));
om.core.pure = function pure(obj) {
  return new om.core.Pure(obj);
};
om.core.cursor_QMARK_ = function cursor_QMARK_(x) {
  var G__10615 = x;
  if (G__10615) {
    var bit__4128__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3478__auto__ = bit__4128__auto__;
      if (cljs.core.truth_(or__3478__auto__)) {
        return or__3478__auto__;
      } else {
        return G__10615.om$core$ICursor$;
      }
    }())) {
      return true;
    } else {
      if (!G__10615.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__10615);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__10615);
  }
};
om.core.MapCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2158397195;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.MapCursor.cljs$lang$type = true;
om.core.MapCursor.cljs$lang$ctorStr = "om.core/MapCursor";
om.core.MapCursor.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "om.core/MapCursor");
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null);
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(_, k, not_found) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    var v = cljs.core._lookup.call(null, self__.value, k, not_found);
    if (!cljs.core._EQ_.call(null, v, not_found)) {
      return om.core.to_cursor.call(null, v, self__.state, cljs.core.conj.call(null, self__.path, k));
    } else {
      return not_found;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, k, v) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._assoc.call(null, self__.value, k, v), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.call = function() {
  var G__10619 = null;
  var G__10619__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10619__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10619 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10619__2.call(this, self__, k);
      case 3:
        return G__10619__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10619;
}();
om.core.MapCursor.prototype.apply = function(self__, args10616) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10616)));
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.MapCursor.prototype.om$core$ICursor$ = true;
om.core.MapCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.MapCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.MapCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot deref cursor during render phase: "), cljs.core.str(this$__$1)].join(""));
  }
};
om.core.MapCursor.prototype.om$core$IValue$ = true;
om.core.MapCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.MapCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(this$__$1) {
        return function(p__10617) {
          var vec__10618 = p__10617;
          var k = cljs.core.nth.call(null, vec__10618, 0, null);
          var v = cljs.core.nth.call(null, vec__10618, 1, null);
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, om.core.to_cursor.call(null, v, self__.state, cljs.core.conj.call(null, self__.path, k))], null);
        };
      }(this$__$1), self__.value);
    } else {
      return null;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(self__.value, self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IMap$_dissoc$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._dissoc.call(null, self__.value, k), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.om$core$ITransact$ = true;
om.core.MapCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.__GT_MapCursor = function __GT_MapCursor(value, state, path) {
  return new om.core.MapCursor(value, state, path);
};
om.core.IndexedCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2175181595;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.IndexedCursor.cljs$lang$type = true;
om.core.IndexedCursor.cljs$lang$ctorStr = "om.core/IndexedCursor";
om.core.IndexedCursor.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "om.core/IndexedCursor");
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, null);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, not_found);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, n, v) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core.to_cursor.call(null, cljs.core._assoc_n.call(null, self__.value, n, v), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.call = function() {
  var G__10621 = null;
  var G__10621__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10621__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10621 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10621__2.call(this, self__, k);
      case 3:
        return G__10621__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10621;
}();
om.core.IndexedCursor.prototype.apply = function(self__, args10620) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10620)));
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.IndexedCursor.prototype.om$core$ICursor$ = true;
om.core.IndexedCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.IndexedCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.IndexedCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot deref cursor during render phase: "), cljs.core.str(this$__$1)].join(""));
  }
};
om.core.IndexedCursor.prototype.om$core$IValue$ = true;
om.core.IndexedCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.IndexedCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(this$__$1) {
        return function(v, i) {
          return om.core.to_cursor.call(null, v, self__.state, cljs.core.conj.call(null, self__.path, i));
        };
      }(this$__$1), self__.value, cljs.core.range.call(null));
    } else {
      return null;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_peek$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core.to_cursor.call(null, cljs.core._peek.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_pop$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core.to_cursor.call(null, cljs.core._pop.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(self__.value, self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$2 = function(_, n) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core.to_cursor.call(null, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$3 = function(_, n, not_found) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (n < cljs.core._count.call(null, self__.value)) {
      return om.core.to_cursor.call(null, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
    } else {
      return not_found;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.om$core$ITransact$ = true;
om.core.IndexedCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.__GT_IndexedCursor = function __GT_IndexedCursor(value, state, path) {
  return new om.core.IndexedCursor(value, state, path);
};
om.core.to_cursor_STAR_ = function to_cursor_STAR_(val, state, path) {
  var x10623 = cljs.core.clone.call(null, val);
  x10623.cljs$core$IEquiv$ = true;
  x10623.cljs$core$IEquiv$_equiv$arity$2 = function(x10623) {
    return function(_, other) {
      var ___$1 = this;
      if (om.core._STAR_read_enabled_STAR_) {
        if (om.core.cursor_QMARK_.call(null, other)) {
          return cljs.core._EQ_.call(null, val, om.core._value.call(null, other));
        } else {
          return cljs.core._EQ_.call(null, val, other);
        }
      } else {
        throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
      }
    };
  }(x10623);
  x10623.om$core$ITransact$ = true;
  x10623.om$core$ITransact$_transact_BANG_$arity$4 = function(x10623) {
    return function(this$, korks, f, tag) {
      var this$__$1 = this;
      return om.core.transact_STAR_.call(null, state, this$__$1, korks, f, tag);
    };
  }(x10623);
  x10623.om$core$ICursor$ = true;
  x10623.om$core$ICursor$_path$arity$1 = function(x10623) {
    return function(_) {
      var ___$1 = this;
      return path;
    };
  }(x10623);
  x10623.om$core$ICursor$_state$arity$1 = function(x10623) {
    return function(_) {
      var ___$1 = this;
      return state;
    };
  }(x10623);
  x10623.cljs$core$IDeref$ = true;
  x10623.cljs$core$IDeref$_deref$arity$1 = function(x10623) {
    return function(this$) {
      var this$__$1 = this;
      if (!om.core._STAR_read_enabled_STAR_) {
        return cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path);
      } else {
        throw new Error([cljs.core.str("Cannot deref cursor during render phase: "), cljs.core.str(this$__$1)].join(""));
      }
    };
  }(x10623);
  return x10623;
};
om.core.to_cursor = function() {
  var to_cursor = null;
  var to_cursor__1 = function(val) {
    return to_cursor.call(null, val, null, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__2 = function(val, state) {
    return to_cursor.call(null, val, state, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__3 = function(val, state, path) {
    if (om.core.cursor_QMARK_.call(null, val)) {
      return val;
    } else {
      if (function() {
        var G__10626 = val;
        if (G__10626) {
          var bit__4128__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3478__auto__ = bit__4128__auto__;
            if (cljs.core.truth_(or__3478__auto__)) {
              return or__3478__auto__;
            } else {
              return G__10626.om$core$IToCursor$;
            }
          }())) {
            return true;
          } else {
            if (!G__10626.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__10626);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__10626);
        }
      }()) {
        return om.core._to_cursor.call(null, val, state, path);
      } else {
        if (cljs.core.indexed_QMARK_.call(null, val)) {
          return new om.core.IndexedCursor(val, state, path);
        } else {
          if (cljs.core.map_QMARK_.call(null, val)) {
            return new om.core.MapCursor(val, state, path);
          } else {
            if (function() {
              var G__10627 = val;
              if (G__10627) {
                var bit__4128__auto__ = G__10627.cljs$lang$protocol_mask$partition1$ & 8192;
                if (bit__4128__auto__ || G__10627.cljs$core$ICloneable$) {
                  return true;
                } else {
                  if (!G__10627.cljs$lang$protocol_mask$partition1$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__10627);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__10627);
              }
            }()) {
              return om.core.to_cursor_STAR_.call(null, val, state, path);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return val;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  to_cursor = function(val, state, path) {
    switch(arguments.length) {
      case 1:
        return to_cursor__1.call(this, val);
      case 2:
        return to_cursor__2.call(this, val, state);
      case 3:
        return to_cursor__3.call(this, val, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  to_cursor.cljs$core$IFn$_invoke$arity$1 = to_cursor__1;
  to_cursor.cljs$core$IFn$_invoke$arity$2 = to_cursor__2;
  to_cursor.cljs$core$IFn$_invoke$arity$3 = to_cursor__3;
  return to_cursor;
}();
om.core.notify_STAR_ = function notify_STAR_(cursor, tx_data) {
  var state = om.core._state.call(null, cursor);
  return om.core._notify.call(null, state, tx_data, om.core.to_cursor.call(null, cljs.core.deref.call(null, state), state));
};
om.core.refresh_queued = false;
om.core.refresh_set = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
om.core.render_all = function render_all() {
  om.core.refresh_queued = false;
  var seq__10632 = cljs.core.seq.call(null, cljs.core.deref.call(null, om.core.refresh_set));
  var chunk__10633 = null;
  var count__10634 = 0;
  var i__10635 = 0;
  while (true) {
    if (i__10635 < count__10634) {
      var f = cljs.core._nth.call(null, chunk__10633, i__10635);
      f.call(null);
      var G__10636 = seq__10632;
      var G__10637 = chunk__10633;
      var G__10638 = count__10634;
      var G__10639 = i__10635 + 1;
      seq__10632 = G__10636;
      chunk__10633 = G__10637;
      count__10634 = G__10638;
      i__10635 = G__10639;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__10632);
      if (temp__4092__auto__) {
        var seq__10632__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__10632__$1)) {
          var c__4226__auto__ = cljs.core.chunk_first.call(null, seq__10632__$1);
          var G__10640 = cljs.core.chunk_rest.call(null, seq__10632__$1);
          var G__10641 = c__4226__auto__;
          var G__10642 = cljs.core.count.call(null, c__4226__auto__);
          var G__10643 = 0;
          seq__10632 = G__10640;
          chunk__10633 = G__10641;
          count__10634 = G__10642;
          i__10635 = G__10643;
          continue;
        } else {
          var f = cljs.core.first.call(null, seq__10632__$1);
          f.call(null);
          var G__10644 = cljs.core.next.call(null, seq__10632__$1);
          var G__10645 = null;
          var G__10646 = 0;
          var G__10647 = 0;
          seq__10632 = G__10644;
          chunk__10633 = G__10645;
          count__10634 = G__10646;
          i__10635 = G__10647;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
om.core.roots = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
om.core.valid_QMARK_ = function valid_QMARK_(m) {
  return cljs.core.every_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "init-state", "init-state", 4479067398), null, new cljs.core.Keyword(null, "ctor", "ctor", 1016968582), null, new cljs.core.Keyword(null, "state", "state", 1123661827), null, new cljs.core.Keyword(null, "react-key", "react-key", 4184082563), null, new cljs.core.Keyword("om.core", "index", "om.core/index", 3166146514), null, new cljs.core.Keyword(null, 
  "key", "key", 1014010321), null, new cljs.core.Keyword(null, "instrument", "instrument", 2409387865), null, new cljs.core.Keyword(null, "shared", "shared", 4405305303), null, new cljs.core.Keyword(null, "opts", "opts", 1017322386), null, new cljs.core.Keyword(null, "fn", "fn", 1013907514), null], null), null), cljs.core.keys.call(null, m));
};
om.core.id = function id(owner) {
  return owner.state["__om_id"];
};
om.core.build_STAR_ = function() {
  var build_STAR_ = null;
  var build_STAR___2 = function(f, cursor) {
    return build_STAR_.call(null, f, cursor, null);
  };
  var build_STAR___3 = function(f, cursor, m) {
    if (om.core.valid_QMARK_.call(null, m)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, "build options contains invalid keys, only :key, :react-key, ", ":fn, :init-state, :state, and :opts allowed, given ", cljs.core.interpose.call(null, ", ", cljs.core.keys.call(null, m)))), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "valid?", "valid?", 1830611324, null), new cljs.core.Symbol(null, "m", "m", -1640531418, null))))].join(""));
    }
    if (m == null) {
      var shared = function() {
        var or__3478__auto__ = (new cljs.core.Keyword(null, "shared", "shared", 4405305303)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3478__auto__)) {
          return or__3478__auto__;
        } else {
          return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
        }
      }();
      var ctor = function() {
        var or__3478__auto__ = (new cljs.core.Keyword(null, "ctor", "ctor", 1016968582)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3478__auto__)) {
          return or__3478__auto__;
        } else {
          return om.core.pure;
        }
      }();
      var pure__5034__auto__ = ctor.call(null, {"children":function(shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_10652 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            return f.call(null, cursor, this$);
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10652;
          }
        };
      }(shared, ctor), "__om_instrument":om.core._STAR_instrument_STAR_, "__om_shared":shared, "__om_cursor":cursor});
      pure__5034__auto__.constructor = goog.getUid(f);
      return pure__5034__auto__;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var map__10653 = m;
        var map__10653__$1 = cljs.core.seq_QMARK_.call(null, map__10653) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10653) : map__10653;
        var opts = cljs.core.get.call(null, map__10653__$1, new cljs.core.Keyword(null, "opts", "opts", 1017322386));
        var init_state = cljs.core.get.call(null, map__10653__$1, new cljs.core.Keyword(null, "init-state", "init-state", 4479067398));
        var state = cljs.core.get.call(null, map__10653__$1, new cljs.core.Keyword(null, "state", "state", 1123661827));
        var key = cljs.core.get.call(null, map__10653__$1, new cljs.core.Keyword(null, "key", "key", 1014010321));
        var dataf = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "fn", "fn", 1013907514));
        var cursor_SINGLEQUOTE_ = !(dataf == null) ? dataf.call(null, cursor) : cursor;
        var rkey = !(key == null) ? cljs.core.get.call(null, cursor_SINGLEQUOTE_, key) : cljs.core.get.call(null, m, new cljs.core.Keyword(null, "react-key", "react-key", 4184082563));
        var shared = function() {
          var or__3478__auto__ = (new cljs.core.Keyword(null, "shared", "shared", 4405305303)).cljs$core$IFn$_invoke$arity$1(m);
          if (cljs.core.truth_(or__3478__auto__)) {
            return or__3478__auto__;
          } else {
            return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
          }
        }();
        var ctor = function() {
          var or__3478__auto__ = (new cljs.core.Keyword(null, "ctor", "ctor", 1016968582)).cljs$core$IFn$_invoke$arity$1(m);
          if (cljs.core.truth_(or__3478__auto__)) {
            return or__3478__auto__;
          } else {
            return om.core.pure;
          }
        }();
        var pure__5034__auto__ = ctor.call(null, {"children":opts == null ? function(map__10653, map__10653__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
          return function(this$) {
            var _STAR_read_enabled_STAR_10654 = om.core._STAR_read_enabled_STAR_;
            try {
              om.core._STAR_read_enabled_STAR_ = true;
              return f.call(null, cursor_SINGLEQUOTE_, this$);
            } finally {
              om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10654;
            }
          };
        }(map__10653, map__10653__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) : function(map__10653, map__10653__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
          return function(this$) {
            var _STAR_read_enabled_STAR_10655 = om.core._STAR_read_enabled_STAR_;
            try {
              om.core._STAR_read_enabled_STAR_ = true;
              return f.call(null, cursor_SINGLEQUOTE_, this$, opts);
            } finally {
              om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10655;
            }
          };
        }(map__10653, map__10653__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor), "key":rkey, "__om_instrument":om.core._STAR_instrument_STAR_, "__om_shared":shared, "__om_state":state, "__om_init_state":init_state, "__om_index":(new cljs.core.Keyword("om.core", "index", "om.core/index", 3166146514)).cljs$core$IFn$_invoke$arity$1(m), "__om_cursor":cursor_SINGLEQUOTE_});
        pure__5034__auto__.constructor = goog.getUid(f);
        return pure__5034__auto__;
      } else {
        return null;
      }
    }
  };
  build_STAR_ = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build_STAR___2.call(this, f, cursor);
      case 3:
        return build_STAR___3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_STAR_.cljs$core$IFn$_invoke$arity$2 = build_STAR___2;
  build_STAR_.cljs$core$IFn$_invoke$arity$3 = build_STAR___3;
  return build_STAR_;
}();
om.core.build = function() {
  var build = null;
  var build__2 = function(f, cursor) {
    return build.call(null, f, cursor, null);
  };
  var build__3 = function(f, cursor, m) {
    if (!(om.core._STAR_instrument_STAR_ == null)) {
      var ret = function() {
        var _STAR_read_enabled_STAR_10657 = om.core._STAR_read_enabled_STAR_;
        try {
          om.core._STAR_read_enabled_STAR_ = true;
          return om.core._STAR_instrument_STAR_.call(null, f, cursor, m);
        } finally {
          om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10657;
        }
      }();
      if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "pass", "om.core/pass", 2667619603))) {
        return om.core.build_STAR_.call(null, f, cursor, m);
      } else {
        return ret;
      }
    } else {
      return om.core.build_STAR_.call(null, f, cursor, m);
    }
  };
  build = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build__2.call(this, f, cursor);
      case 3:
        return build__3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build.cljs$core$IFn$_invoke$arity$2 = build__2;
  build.cljs$core$IFn$_invoke$arity$3 = build__3;
  return build;
}();
om.core.build_all = function() {
  var build_all = null;
  var build_all__2 = function(f, xs) {
    return build_all.call(null, f, xs, null);
  };
  var build_all__3 = function(f, xs, m) {
    return cljs.core.map.call(null, function(x, i) {
      return om.core.build.call(null, f, x, cljs.core.assoc.call(null, m, new cljs.core.Keyword("om.core", "index", "om.core/index", 3166146514), i));
    }, xs, cljs.core.range.call(null));
  };
  build_all = function(f, xs, m) {
    switch(arguments.length) {
      case 2:
        return build_all__2.call(this, f, xs);
      case 3:
        return build_all__3.call(this, f, xs, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_all.cljs$core$IFn$_invoke$arity$2 = build_all__2;
  build_all.cljs$core$IFn$_invoke$arity$3 = build_all__3;
  return build_all;
}();
om.core.root = function root(f, value, p__10658) {
  var map__10664 = p__10658;
  var map__10664__$1 = cljs.core.seq_QMARK_.call(null, map__10664) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10664) : map__10664;
  var options = map__10664__$1;
  var instrument = cljs.core.get.call(null, map__10664__$1, new cljs.core.Keyword(null, "instrument", "instrument", 2409387865));
  var path = cljs.core.get.call(null, map__10664__$1, new cljs.core.Keyword(null, "path", "path", 1017337751));
  var tx_listen = cljs.core.get.call(null, map__10664__$1, new cljs.core.Keyword(null, "tx-listen", "tx-listen", 666878114));
  var shared = cljs.core.get.call(null, map__10664__$1, new cljs.core.Keyword(null, "shared", "shared", 4405305303));
  var target = cljs.core.get.call(null, map__10664__$1, new cljs.core.Keyword(null, "target", "target", 4427965699));
  if (!(target == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("No target specified to om.core/root"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "target", "target", 1773529930, null)))))].join(""));
  }
  var roots_SINGLEQUOTE__10669 = cljs.core.deref.call(null, om.core.roots);
  if (cljs.core.contains_QMARK_.call(null, roots_SINGLEQUOTE__10669, target)) {
    cljs.core.get.call(null, roots_SINGLEQUOTE__10669, target).call(null);
  } else {
  }
  var state = function() {
    var G__10665 = value;
    if (G__10665) {
      var bit__4128__auto__ = G__10665.cljs$lang$protocol_mask$partition1$ & 16384;
      if (bit__4128__auto__ || G__10665.cljs$core$IAtom$) {
        return true;
      } else {
        if (!G__10665.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__10665);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__10665);
    }
  }() ? value : cljs.core.atom.call(null, value);
  var state__$1 = function() {
    var x10666 = state;
    x10666.om$core$INotify$ = true;
    x10666.om$core$INotify$_notify$arity$3 = function(x10666, state, map__10664, map__10664__$1, options, instrument, path, tx_listen, shared, target) {
      return function(_, tx_data, root_cursor) {
        var ___$1 = this;
        if (tx_listen == null) {
          return null;
        } else {
          return tx_listen.call(null, tx_data, root_cursor);
        }
      };
    }(x10666, state, map__10664, map__10664__$1, options, instrument, path, tx_listen, shared, target);
    return x10666;
  }();
  var m = cljs.core.dissoc.call(null, options, new cljs.core.Keyword(null, "target", "target", 4427965699), new cljs.core.Keyword(null, "tx-listen", "tx-listen", 666878114), new cljs.core.Keyword(null, "path", "path", 1017337751));
  var rootf = function(state, state__$1, m, map__10664, map__10664__$1, options, instrument, path, tx_listen, shared, target) {
    return function rootf() {
      cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.disj, rootf);
      var value__$1 = cljs.core.deref.call(null, state__$1);
      var cursor = path == null ? om.core.to_cursor.call(null, value__$1, state__$1, cljs.core.PersistentVector.EMPTY) : om.core.to_cursor.call(null, cljs.core.get_in.call(null, value__$1, path), state__$1, path);
      return om.dom.render.call(null, function() {
        var _STAR_instrument_STAR_10668 = om.core._STAR_instrument_STAR_;
        try {
          om.core._STAR_instrument_STAR_ = instrument;
          return om.core.build.call(null, f, cursor, m);
        } finally {
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_10668;
        }
      }(), target);
    };
  }(state, state__$1, m, map__10664, map__10664__$1, options, instrument, path, tx_listen, shared, target);
  var watch_key = cljs.core.gensym.call(null);
  cljs.core.add_watch.call(null, state__$1, watch_key, function(state, state__$1, m, rootf, watch_key, map__10664, map__10664__$1, options, instrument, path, tx_listen, shared, target) {
    return function(_, ___$1, ___$2, ___$3) {
      if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, om.core.refresh_set), rootf)) {
      } else {
        cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.conj, rootf);
      }
      if (cljs.core.truth_(om.core.refresh_queued)) {
        return null;
      } else {
        om.core.refresh_queued = true;
        if (typeof requestAnimationFrame !== "undefined") {
          return requestAnimationFrame(om.core.render_all);
        } else {
          return setTimeout(om.core.render_all, 16);
        }
      }
    };
  }(state, state__$1, m, rootf, watch_key, map__10664, map__10664__$1, options, instrument, path, tx_listen, shared, target));
  cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.assoc, target, function(state, state__$1, m, rootf, watch_key, map__10664, map__10664__$1, options, instrument, path, tx_listen, shared, target) {
    return function() {
      cljs.core.remove_watch.call(null, state__$1, watch_key);
      cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.dissoc, target);
      return React.unmountComponentAtNode(target);
    };
  }(state, state__$1, m, rootf, watch_key, map__10664, map__10664__$1, options, instrument, path, tx_listen, shared, target));
  return rootf.call(null);
};
om.core.transact_BANG_ = function() {
  var transact_BANG_ = null;
  var transact_BANG___2 = function(cursor, f) {
    return transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, f, null);
  };
  var transact_BANG___3 = function(cursor, korks, f) {
    return transact_BANG_.call(null, cursor, korks, f, null);
  };
  var transact_BANG___4 = function(cursor, korks, f, tag) {
    var korks__$1 = korks == null ? cljs.core.PersistentVector.EMPTY : cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.Keyword(null, "else", "else", 1017020587) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null) : null;
    return om.core._transact_BANG_.call(null, cursor, korks__$1, f, tag);
  };
  transact_BANG_ = function(cursor, korks, f, tag) {
    switch(arguments.length) {
      case 2:
        return transact_BANG___2.call(this, cursor, korks);
      case 3:
        return transact_BANG___3.call(this, cursor, korks, f);
      case 4:
        return transact_BANG___4.call(this, cursor, korks, f, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transact_BANG_.cljs$core$IFn$_invoke$arity$2 = transact_BANG___2;
  transact_BANG_.cljs$core$IFn$_invoke$arity$3 = transact_BANG___3;
  transact_BANG_.cljs$core$IFn$_invoke$arity$4 = transact_BANG___4;
  return transact_BANG_;
}();
om.core.update_BANG_ = function() {
  var update_BANG_ = null;
  var update_BANG___2 = function(cursor, v) {
    return om.core.transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, function(_) {
      return v;
    }, null);
  };
  var update_BANG___3 = function(cursor, korks, v) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, null);
  };
  var update_BANG___4 = function(cursor, korks, v, tag) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, tag);
  };
  update_BANG_ = function(cursor, korks, v, tag) {
    switch(arguments.length) {
      case 2:
        return update_BANG___2.call(this, cursor, korks);
      case 3:
        return update_BANG___3.call(this, cursor, korks, v);
      case 4:
        return update_BANG___4.call(this, cursor, korks, v, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_BANG_.cljs$core$IFn$_invoke$arity$2 = update_BANG___2;
  update_BANG_.cljs$core$IFn$_invoke$arity$3 = update_BANG___3;
  update_BANG_.cljs$core$IFn$_invoke$arity$4 = update_BANG___4;
  return update_BANG_;
}();
om.core.get_node = function() {
  var get_node = null;
  var get_node__1 = function(owner) {
    return owner.getDOMNode();
  };
  var get_node__2 = function(owner, name) {
    var temp__4092__auto__ = owner.refs;
    if (cljs.core.truth_(temp__4092__auto__)) {
      var refs = temp__4092__auto__;
      return refs[name].getDOMNode();
    } else {
      return null;
    }
  };
  get_node = function(owner, name) {
    switch(arguments.length) {
      case 1:
        return get_node__1.call(this, owner);
      case 2:
        return get_node__2.call(this, owner, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_node.cljs$core$IFn$_invoke$arity$1 = get_node__1;
  get_node.cljs$core$IFn$_invoke$arity$2 = get_node__2;
  return get_node;
}();
om.core.set_state_BANG_ = function() {
  var set_state_BANG_ = null;
  var set_state_BANG___2 = function(owner, v) {
    return om.core._set_state_BANG_.call(null, owner, v);
  };
  var set_state_BANG___3 = function(owner, korks, v) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v);
  };
  set_state_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_BANG___2;
  set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_BANG___3;
  return set_state_BANG_;
}();
om.core.update_state_BANG_ = function() {
  var update_state_BANG_ = null;
  var update_state_BANG___2 = function(owner, f) {
    return om.core.set_state_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_BANG___3 = function(owner, korks, f) {
    return om.core.set_state_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_BANG___2;
  update_state_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_BANG___3;
  return update_state_BANG_;
}();
om.core.refresh_BANG_ = function refresh_BANG_(owner) {
  return om.core.update_state_BANG_.call(null, owner, cljs.core.identity);
};
om.core.get_render_state = function() {
  var get_render_state = null;
  var get_render_state__1 = function(owner) {
    return om.core._get_render_state.call(null, owner);
  };
  var get_render_state__2 = function(owner, korks) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_render_state.call(null, owner, ks);
  };
  get_render_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_render_state__1.call(this, owner);
      case 2:
        return get_render_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_render_state.cljs$core$IFn$_invoke$arity$1 = get_render_state__1;
  get_render_state.cljs$core$IFn$_invoke$arity$2 = get_render_state__2;
  return get_render_state;
}();
om.core.graft = function graft(value, cursor) {
  var state = om.core._state.call(null, cursor);
  var path = om.core._path.call(null, cursor);
  if (om.core.cursor_QMARK_.call(null, value)) {
    throw new Error([cljs.core.str(value), cljs.core.str(" is already a cursor.")].join(""));
  } else {
    var x10671 = cljs.core.clone.call(null, value);
    x10671.om$core$ICursor$ = true;
    x10671.om$core$ICursor$_state$arity$1 = function(x10671, state, path) {
      return function(_) {
        var ___$1 = this;
        return state;
      };
    }(x10671, state, path);
    x10671.om$core$ICursor$_path$arity$1 = function(x10671, state, path) {
      return function(_) {
        var ___$1 = this;
        return path;
      };
    }(x10671, state, path);
    x10671.om$core$ITransact$ = true;
    x10671.om$core$ITransact$_transact_BANG_$arity$4 = function(x10671, state, path) {
      return function(_, ___$1, ___$2, ___$3) {
        var ___$4 = this;
        throw new Error("Cannot transact on graft");
      };
    }(x10671, state, path);
    return x10671;
  }
};
goog.provide("yantra.datatypes");
goog.require("cljs.core");
yantra.datatypes.Slider = function(value, range, channel, __meta, __extmap) {
  this.value = value;
  this.range = range;
  this.channel = channel;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 3) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
yantra.datatypes.Slider.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4059__auto__) {
  var self__ = this;
  var this__4059__auto____$1 = this;
  var h__3889__auto__ = self__.__hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_imap.call(null, this__4059__auto____$1);
    self__.__hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
yantra.datatypes.Slider.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4064__auto__, k__4065__auto__) {
  var self__ = this;
  var this__4064__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4064__auto____$1, k__4065__auto__, null);
};
yantra.datatypes.Slider.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4066__auto__, k9273, else__4067__auto__) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k9273, new cljs.core.Keyword(null, "value", "value", 1125876963))) {
    return self__.value;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k9273, new cljs.core.Keyword(null, "range", "range", 1122184367))) {
      return self__.range;
    } else {
      if (cljs.core.keyword_identical_QMARK_.call(null, k9273, new cljs.core.Keyword(null, "channel", "channel", 1752854645))) {
        return self__.channel;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.get.call(null, self__.__extmap, k9273, else__4067__auto__);
        } else {
          return null;
        }
      }
    }
  }
};
yantra.datatypes.Slider.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4071__auto__, k__4072__auto__, G__9272) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  var pred__9275 = cljs.core.keyword_identical_QMARK_;
  var expr__9276 = k__4072__auto__;
  if (cljs.core.truth_(pred__9275.call(null, new cljs.core.Keyword(null, "value", "value", 1125876963), expr__9276))) {
    return new yantra.datatypes.Slider(G__9272, self__.range, self__.channel, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__9275.call(null, new cljs.core.Keyword(null, "range", "range", 1122184367), expr__9276))) {
      return new yantra.datatypes.Slider(self__.value, G__9272, self__.channel, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__9275.call(null, new cljs.core.Keyword(null, "channel", "channel", 1752854645), expr__9276))) {
        return new yantra.datatypes.Slider(self__.value, self__.range, G__9272, self__.__meta, self__.__extmap, null);
      } else {
        return new yantra.datatypes.Slider(self__.value, self__.range, self__.channel, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4072__auto__, G__9272), null);
      }
    }
  }
};
yantra.datatypes.Slider.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4078__auto__, writer__4079__auto__, opts__4080__auto__) {
  var self__ = this;
  var this__4078__auto____$1 = this;
  var pr_pair__4081__auto__ = function(this__4078__auto____$1) {
    return function(keyval__4082__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4079__auto__, cljs.core.pr_writer, "", " ", "", opts__4080__auto__, keyval__4082__auto__);
    };
  }(this__4078__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4079__auto__, pr_pair__4081__auto__, "#yantra.datatypes.Slider{", ", ", "}", opts__4080__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 1125876963), self__.value], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "range", "range", 1122184367), self__.range], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channel", "channel", 1752854645), self__.channel], null)], null), self__.__extmap));
};
yantra.datatypes.Slider.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4069__auto__, entry__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4070__auto__)) {
    return cljs.core._assoc.call(null, this__4069__auto____$1, cljs.core._nth.call(null, entry__4070__auto__, 0), cljs.core._nth.call(null, entry__4070__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4069__auto____$1, entry__4070__auto__);
  }
};
yantra.datatypes.Slider.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4076__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 1125876963), self__.value], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "range", "range", 1122184367), self__.range], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channel", "channel", 1752854645), self__.channel], null)], null), self__.__extmap));
};
yantra.datatypes.Slider.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4068__auto__) {
  var self__ = this;
  var this__4068__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap);
};
yantra.datatypes.Slider.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4060__auto__, other__4061__auto__) {
  var self__ = this;
  var this__4060__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3466__auto__ = other__4061__auto__;
    if (cljs.core.truth_(and__3466__auto__)) {
      return this__4060__auto____$1.constructor === other__4061__auto__.constructor && cljs.core.equiv_map.call(null, this__4060__auto____$1, other__4061__auto__);
    } else {
      return and__3466__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
yantra.datatypes.Slider.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4063__auto__, G__9272) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  return new yantra.datatypes.Slider(self__.value, self__.range, self__.channel, G__9272, self__.__extmap, self__.__hash);
};
yantra.datatypes.Slider.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4058__auto__) {
  var self__ = this;
  var this__4058__auto____$1 = this;
  return new yantra.datatypes.Slider(self__.value, self__.range, self__.channel, self__.__meta, self__.__extmap, self__.__hash);
};
yantra.datatypes.Slider.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  return self__.__meta;
};
yantra.datatypes.Slider.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4073__auto__, k__4074__auto__) {
  var self__ = this;
  var this__4073__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "range", "range", 1122184367), null, new cljs.core.Keyword(null, "channel", "channel", 1752854645), null, new cljs.core.Keyword(null, "value", "value", 1125876963), null], null), null), k__4074__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4073__auto____$1), self__.__meta), k__4074__auto__);
  } else {
    return new yantra.datatypes.Slider(self__.value, self__.range, self__.channel, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4074__auto__)), null);
  }
};
yantra.datatypes.Slider.cljs$lang$type = true;
yantra.datatypes.Slider.cljs$lang$ctorPrSeq = function(this__4098__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "yantra.datatypes/Slider");
};
yantra.datatypes.Slider.cljs$lang$ctorPrWriter = function(this__4098__auto__, writer__4099__auto__) {
  return cljs.core._write.call(null, writer__4099__auto__, "yantra.datatypes/Slider");
};
yantra.datatypes.__GT_Slider = function __GT_Slider(value, range, channel) {
  return new yantra.datatypes.Slider(value, range, channel);
};
yantra.datatypes.map__GT_Slider = function map__GT_Slider(G__9274) {
  return new yantra.datatypes.Slider((new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(G__9274), (new cljs.core.Keyword(null, "range", "range", 1122184367)).cljs$core$IFn$_invoke$arity$1(G__9274), (new cljs.core.Keyword(null, "channel", "channel", 1752854645)).cljs$core$IFn$_invoke$arity$1(G__9274), null, cljs.core.dissoc.call(null, G__9274, new cljs.core.Keyword(null, "value", "value", 1125876963), new cljs.core.Keyword(null, "range", "range", 1122184367), 
  new cljs.core.Keyword(null, "channel", "channel", 1752854645)));
};
yantra.datatypes.Column = function(contents, __meta, __extmap) {
  this.contents = contents;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
yantra.datatypes.Column.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4059__auto__) {
  var self__ = this;
  var this__4059__auto____$1 = this;
  var h__3889__auto__ = self__.__hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_imap.call(null, this__4059__auto____$1);
    self__.__hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
yantra.datatypes.Column.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4064__auto__, k__4065__auto__) {
  var self__ = this;
  var this__4064__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4064__auto____$1, k__4065__auto__, null);
};
yantra.datatypes.Column.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4066__auto__, k9279, else__4067__auto__) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k9279, new cljs.core.Keyword(null, "contents", "contents", 4741549708))) {
    return self__.contents;
  } else {
    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return cljs.core.get.call(null, self__.__extmap, k9279, else__4067__auto__);
    } else {
      return null;
    }
  }
};
yantra.datatypes.Column.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4071__auto__, k__4072__auto__, G__9278) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  var pred__9281 = cljs.core.keyword_identical_QMARK_;
  var expr__9282 = k__4072__auto__;
  if (cljs.core.truth_(pred__9281.call(null, new cljs.core.Keyword(null, "contents", "contents", 4741549708), expr__9282))) {
    return new yantra.datatypes.Column(G__9278, self__.__meta, self__.__extmap, null);
  } else {
    return new yantra.datatypes.Column(self__.contents, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4072__auto__, G__9278), null);
  }
};
yantra.datatypes.Column.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4078__auto__, writer__4079__auto__, opts__4080__auto__) {
  var self__ = this;
  var this__4078__auto____$1 = this;
  var pr_pair__4081__auto__ = function(this__4078__auto____$1) {
    return function(keyval__4082__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4079__auto__, cljs.core.pr_writer, "", " ", "", opts__4080__auto__, keyval__4082__auto__);
    };
  }(this__4078__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4079__auto__, pr_pair__4081__auto__, "#yantra.datatypes.Column{", ", ", "}", opts__4080__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "contents", "contents", 4741549708), self__.contents], null)], null), self__.__extmap));
};
yantra.datatypes.Column.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4069__auto__, entry__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4070__auto__)) {
    return cljs.core._assoc.call(null, this__4069__auto____$1, cljs.core._nth.call(null, entry__4070__auto__, 0), cljs.core._nth.call(null, entry__4070__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4069__auto____$1, entry__4070__auto__);
  }
};
yantra.datatypes.Column.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4076__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "contents", "contents", 4741549708), self__.contents], null)], null), self__.__extmap));
};
yantra.datatypes.Column.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4068__auto__) {
  var self__ = this;
  var this__4068__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
yantra.datatypes.Column.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4060__auto__, other__4061__auto__) {
  var self__ = this;
  var this__4060__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3466__auto__ = other__4061__auto__;
    if (cljs.core.truth_(and__3466__auto__)) {
      return this__4060__auto____$1.constructor === other__4061__auto__.constructor && cljs.core.equiv_map.call(null, this__4060__auto____$1, other__4061__auto__);
    } else {
      return and__3466__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
yantra.datatypes.Column.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4063__auto__, G__9278) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  return new yantra.datatypes.Column(self__.contents, G__9278, self__.__extmap, self__.__hash);
};
yantra.datatypes.Column.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4058__auto__) {
  var self__ = this;
  var this__4058__auto____$1 = this;
  return new yantra.datatypes.Column(self__.contents, self__.__meta, self__.__extmap, self__.__hash);
};
yantra.datatypes.Column.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  return self__.__meta;
};
yantra.datatypes.Column.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4073__auto__, k__4074__auto__) {
  var self__ = this;
  var this__4073__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "contents", "contents", 4741549708), null], null), null), k__4074__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4073__auto____$1), self__.__meta), k__4074__auto__);
  } else {
    return new yantra.datatypes.Column(self__.contents, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4074__auto__)), null);
  }
};
yantra.datatypes.Column.cljs$lang$type = true;
yantra.datatypes.Column.cljs$lang$ctorPrSeq = function(this__4098__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "yantra.datatypes/Column");
};
yantra.datatypes.Column.cljs$lang$ctorPrWriter = function(this__4098__auto__, writer__4099__auto__) {
  return cljs.core._write.call(null, writer__4099__auto__, "yantra.datatypes/Column");
};
yantra.datatypes.__GT_Column = function __GT_Column(contents) {
  return new yantra.datatypes.Column(contents);
};
yantra.datatypes.map__GT_Column = function map__GT_Column(G__9280) {
  return new yantra.datatypes.Column((new cljs.core.Keyword(null, "contents", "contents", 4741549708)).cljs$core$IFn$_invoke$arity$1(G__9280), null, cljs.core.dissoc.call(null, G__9280, new cljs.core.Keyword(null, "contents", "contents", 4741549708)));
};
yantra.datatypes.Graphics = function(contents, __meta, __extmap) {
  this.contents = contents;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
yantra.datatypes.Graphics.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4059__auto__) {
  var self__ = this;
  var this__4059__auto____$1 = this;
  var h__3889__auto__ = self__.__hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_imap.call(null, this__4059__auto____$1);
    self__.__hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
yantra.datatypes.Graphics.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4064__auto__, k__4065__auto__) {
  var self__ = this;
  var this__4064__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4064__auto____$1, k__4065__auto__, null);
};
yantra.datatypes.Graphics.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4066__auto__, k9285, else__4067__auto__) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k9285, new cljs.core.Keyword(null, "contents", "contents", 4741549708))) {
    return self__.contents;
  } else {
    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return cljs.core.get.call(null, self__.__extmap, k9285, else__4067__auto__);
    } else {
      return null;
    }
  }
};
yantra.datatypes.Graphics.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4071__auto__, k__4072__auto__, G__9284) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  var pred__9287 = cljs.core.keyword_identical_QMARK_;
  var expr__9288 = k__4072__auto__;
  if (cljs.core.truth_(pred__9287.call(null, new cljs.core.Keyword(null, "contents", "contents", 4741549708), expr__9288))) {
    return new yantra.datatypes.Graphics(G__9284, self__.__meta, self__.__extmap, null);
  } else {
    return new yantra.datatypes.Graphics(self__.contents, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4072__auto__, G__9284), null);
  }
};
yantra.datatypes.Graphics.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4078__auto__, writer__4079__auto__, opts__4080__auto__) {
  var self__ = this;
  var this__4078__auto____$1 = this;
  var pr_pair__4081__auto__ = function(this__4078__auto____$1) {
    return function(keyval__4082__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4079__auto__, cljs.core.pr_writer, "", " ", "", opts__4080__auto__, keyval__4082__auto__);
    };
  }(this__4078__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4079__auto__, pr_pair__4081__auto__, "#yantra.datatypes.Graphics{", ", ", "}", opts__4080__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "contents", "contents", 4741549708), self__.contents], null)], null), self__.__extmap));
};
yantra.datatypes.Graphics.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4069__auto__, entry__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4070__auto__)) {
    return cljs.core._assoc.call(null, this__4069__auto____$1, cljs.core._nth.call(null, entry__4070__auto__, 0), cljs.core._nth.call(null, entry__4070__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4069__auto____$1, entry__4070__auto__);
  }
};
yantra.datatypes.Graphics.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4076__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "contents", "contents", 4741549708), self__.contents], null)], null), self__.__extmap));
};
yantra.datatypes.Graphics.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4068__auto__) {
  var self__ = this;
  var this__4068__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
yantra.datatypes.Graphics.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4060__auto__, other__4061__auto__) {
  var self__ = this;
  var this__4060__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3466__auto__ = other__4061__auto__;
    if (cljs.core.truth_(and__3466__auto__)) {
      return this__4060__auto____$1.constructor === other__4061__auto__.constructor && cljs.core.equiv_map.call(null, this__4060__auto____$1, other__4061__auto__);
    } else {
      return and__3466__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
yantra.datatypes.Graphics.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4063__auto__, G__9284) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  return new yantra.datatypes.Graphics(self__.contents, G__9284, self__.__extmap, self__.__hash);
};
yantra.datatypes.Graphics.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4058__auto__) {
  var self__ = this;
  var this__4058__auto____$1 = this;
  return new yantra.datatypes.Graphics(self__.contents, self__.__meta, self__.__extmap, self__.__hash);
};
yantra.datatypes.Graphics.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  return self__.__meta;
};
yantra.datatypes.Graphics.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4073__auto__, k__4074__auto__) {
  var self__ = this;
  var this__4073__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "contents", "contents", 4741549708), null], null), null), k__4074__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4073__auto____$1), self__.__meta), k__4074__auto__);
  } else {
    return new yantra.datatypes.Graphics(self__.contents, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4074__auto__)), null);
  }
};
yantra.datatypes.Graphics.cljs$lang$type = true;
yantra.datatypes.Graphics.cljs$lang$ctorPrSeq = function(this__4098__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "yantra.datatypes/Graphics");
};
yantra.datatypes.Graphics.cljs$lang$ctorPrWriter = function(this__4098__auto__, writer__4099__auto__) {
  return cljs.core._write.call(null, writer__4099__auto__, "yantra.datatypes/Graphics");
};
yantra.datatypes.__GT_Graphics = function __GT_Graphics(contents) {
  return new yantra.datatypes.Graphics(contents);
};
yantra.datatypes.map__GT_Graphics = function map__GT_Graphics(G__9286) {
  return new yantra.datatypes.Graphics((new cljs.core.Keyword(null, "contents", "contents", 4741549708)).cljs$core$IFn$_invoke$arity$1(G__9286), null, cljs.core.dissoc.call(null, G__9286, new cljs.core.Keyword(null, "contents", "contents", 4741549708)));
};
yantra.datatypes.Point = function(point, __meta, __extmap) {
  this.point = point;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
yantra.datatypes.Point.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4059__auto__) {
  var self__ = this;
  var this__4059__auto____$1 = this;
  var h__3889__auto__ = self__.__hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_imap.call(null, this__4059__auto____$1);
    self__.__hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
yantra.datatypes.Point.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4064__auto__, k__4065__auto__) {
  var self__ = this;
  var this__4064__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4064__auto____$1, k__4065__auto__, null);
};
yantra.datatypes.Point.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4066__auto__, k9291, else__4067__auto__) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k9291, new cljs.core.Keyword(null, "point", "point", 1120749826))) {
    return self__.point;
  } else {
    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return cljs.core.get.call(null, self__.__extmap, k9291, else__4067__auto__);
    } else {
      return null;
    }
  }
};
yantra.datatypes.Point.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4071__auto__, k__4072__auto__, G__9290) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  var pred__9293 = cljs.core.keyword_identical_QMARK_;
  var expr__9294 = k__4072__auto__;
  if (cljs.core.truth_(pred__9293.call(null, new cljs.core.Keyword(null, "point", "point", 1120749826), expr__9294))) {
    return new yantra.datatypes.Point(G__9290, self__.__meta, self__.__extmap, null);
  } else {
    return new yantra.datatypes.Point(self__.point, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4072__auto__, G__9290), null);
  }
};
yantra.datatypes.Point.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4078__auto__, writer__4079__auto__, opts__4080__auto__) {
  var self__ = this;
  var this__4078__auto____$1 = this;
  var pr_pair__4081__auto__ = function(this__4078__auto____$1) {
    return function(keyval__4082__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4079__auto__, cljs.core.pr_writer, "", " ", "", opts__4080__auto__, keyval__4082__auto__);
    };
  }(this__4078__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4079__auto__, pr_pair__4081__auto__, "#yantra.datatypes.Point{", ", ", "}", opts__4080__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "point", "point", 1120749826), self__.point], null)], null), self__.__extmap));
};
yantra.datatypes.Point.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4069__auto__, entry__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4070__auto__)) {
    return cljs.core._assoc.call(null, this__4069__auto____$1, cljs.core._nth.call(null, entry__4070__auto__, 0), cljs.core._nth.call(null, entry__4070__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4069__auto____$1, entry__4070__auto__);
  }
};
yantra.datatypes.Point.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4076__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "point", "point", 1120749826), self__.point], null)], null), self__.__extmap));
};
yantra.datatypes.Point.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4068__auto__) {
  var self__ = this;
  var this__4068__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
yantra.datatypes.Point.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4060__auto__, other__4061__auto__) {
  var self__ = this;
  var this__4060__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3466__auto__ = other__4061__auto__;
    if (cljs.core.truth_(and__3466__auto__)) {
      return this__4060__auto____$1.constructor === other__4061__auto__.constructor && cljs.core.equiv_map.call(null, this__4060__auto____$1, other__4061__auto__);
    } else {
      return and__3466__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
yantra.datatypes.Point.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4063__auto__, G__9290) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  return new yantra.datatypes.Point(self__.point, G__9290, self__.__extmap, self__.__hash);
};
yantra.datatypes.Point.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4058__auto__) {
  var self__ = this;
  var this__4058__auto____$1 = this;
  return new yantra.datatypes.Point(self__.point, self__.__meta, self__.__extmap, self__.__hash);
};
yantra.datatypes.Point.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  return self__.__meta;
};
yantra.datatypes.Point.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4073__auto__, k__4074__auto__) {
  var self__ = this;
  var this__4073__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "point", "point", 1120749826), null], null), null), k__4074__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4073__auto____$1), self__.__meta), k__4074__auto__);
  } else {
    return new yantra.datatypes.Point(self__.point, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4074__auto__)), null);
  }
};
yantra.datatypes.Point.cljs$lang$type = true;
yantra.datatypes.Point.cljs$lang$ctorPrSeq = function(this__4098__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "yantra.datatypes/Point");
};
yantra.datatypes.Point.cljs$lang$ctorPrWriter = function(this__4098__auto__, writer__4099__auto__) {
  return cljs.core._write.call(null, writer__4099__auto__, "yantra.datatypes/Point");
};
yantra.datatypes.__GT_Point = function __GT_Point(point) {
  return new yantra.datatypes.Point(point);
};
yantra.datatypes.map__GT_Point = function map__GT_Point(G__9292) {
  return new yantra.datatypes.Point((new cljs.core.Keyword(null, "point", "point", 1120749826)).cljs$core$IFn$_invoke$arity$1(G__9292), null, cljs.core.dissoc.call(null, G__9292, new cljs.core.Keyword(null, "point", "point", 1120749826)));
};
yantra.datatypes.Line = function(points, __meta, __extmap) {
  this.points = points;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
yantra.datatypes.Line.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4059__auto__) {
  var self__ = this;
  var this__4059__auto____$1 = this;
  var h__3889__auto__ = self__.__hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_imap.call(null, this__4059__auto____$1);
    self__.__hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
yantra.datatypes.Line.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4064__auto__, k__4065__auto__) {
  var self__ = this;
  var this__4064__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4064__auto____$1, k__4065__auto__, null);
};
yantra.datatypes.Line.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4066__auto__, k9297, else__4067__auto__) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k9297, new cljs.core.Keyword(null, "points", "points", 4326117461))) {
    return self__.points;
  } else {
    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return cljs.core.get.call(null, self__.__extmap, k9297, else__4067__auto__);
    } else {
      return null;
    }
  }
};
yantra.datatypes.Line.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4071__auto__, k__4072__auto__, G__9296) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  var pred__9299 = cljs.core.keyword_identical_QMARK_;
  var expr__9300 = k__4072__auto__;
  if (cljs.core.truth_(pred__9299.call(null, new cljs.core.Keyword(null, "points", "points", 4326117461), expr__9300))) {
    return new yantra.datatypes.Line(G__9296, self__.__meta, self__.__extmap, null);
  } else {
    return new yantra.datatypes.Line(self__.points, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4072__auto__, G__9296), null);
  }
};
yantra.datatypes.Line.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4078__auto__, writer__4079__auto__, opts__4080__auto__) {
  var self__ = this;
  var this__4078__auto____$1 = this;
  var pr_pair__4081__auto__ = function(this__4078__auto____$1) {
    return function(keyval__4082__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4079__auto__, cljs.core.pr_writer, "", " ", "", opts__4080__auto__, keyval__4082__auto__);
    };
  }(this__4078__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4079__auto__, pr_pair__4081__auto__, "#yantra.datatypes.Line{", ", ", "}", opts__4080__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "points", "points", 4326117461), self__.points], null)], null), self__.__extmap));
};
yantra.datatypes.Line.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4069__auto__, entry__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4070__auto__)) {
    return cljs.core._assoc.call(null, this__4069__auto____$1, cljs.core._nth.call(null, entry__4070__auto__, 0), cljs.core._nth.call(null, entry__4070__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4069__auto____$1, entry__4070__auto__);
  }
};
yantra.datatypes.Line.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4076__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "points", "points", 4326117461), self__.points], null)], null), self__.__extmap));
};
yantra.datatypes.Line.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4068__auto__) {
  var self__ = this;
  var this__4068__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
yantra.datatypes.Line.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4060__auto__, other__4061__auto__) {
  var self__ = this;
  var this__4060__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3466__auto__ = other__4061__auto__;
    if (cljs.core.truth_(and__3466__auto__)) {
      return this__4060__auto____$1.constructor === other__4061__auto__.constructor && cljs.core.equiv_map.call(null, this__4060__auto____$1, other__4061__auto__);
    } else {
      return and__3466__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
yantra.datatypes.Line.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4063__auto__, G__9296) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  return new yantra.datatypes.Line(self__.points, G__9296, self__.__extmap, self__.__hash);
};
yantra.datatypes.Line.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4058__auto__) {
  var self__ = this;
  var this__4058__auto____$1 = this;
  return new yantra.datatypes.Line(self__.points, self__.__meta, self__.__extmap, self__.__hash);
};
yantra.datatypes.Line.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  return self__.__meta;
};
yantra.datatypes.Line.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4073__auto__, k__4074__auto__) {
  var self__ = this;
  var this__4073__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "points", "points", 4326117461), null], null), null), k__4074__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4073__auto____$1), self__.__meta), k__4074__auto__);
  } else {
    return new yantra.datatypes.Line(self__.points, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4074__auto__)), null);
  }
};
yantra.datatypes.Line.cljs$lang$type = true;
yantra.datatypes.Line.cljs$lang$ctorPrSeq = function(this__4098__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "yantra.datatypes/Line");
};
yantra.datatypes.Line.cljs$lang$ctorPrWriter = function(this__4098__auto__, writer__4099__auto__) {
  return cljs.core._write.call(null, writer__4099__auto__, "yantra.datatypes/Line");
};
yantra.datatypes.__GT_Line = function __GT_Line(points) {
  return new yantra.datatypes.Line(points);
};
yantra.datatypes.map__GT_Line = function map__GT_Line(G__9298) {
  return new yantra.datatypes.Line((new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(G__9298), null, cljs.core.dissoc.call(null, G__9298, new cljs.core.Keyword(null, "points", "points", 4326117461)));
};
yantra.datatypes.Disk = function(point, radius, __meta, __extmap) {
  this.point = point;
  this.radius = radius;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
yantra.datatypes.Disk.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4059__auto__) {
  var self__ = this;
  var this__4059__auto____$1 = this;
  var h__3889__auto__ = self__.__hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_imap.call(null, this__4059__auto____$1);
    self__.__hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
yantra.datatypes.Disk.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4064__auto__, k__4065__auto__) {
  var self__ = this;
  var this__4064__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4064__auto____$1, k__4065__auto__, null);
};
yantra.datatypes.Disk.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4066__auto__, k9303, else__4067__auto__) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k9303, new cljs.core.Keyword(null, "point", "point", 1120749826))) {
    return self__.point;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k9303, new cljs.core.Keyword(null, "radius", "radius", 4370292740))) {
      return self__.radius;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.get.call(null, self__.__extmap, k9303, else__4067__auto__);
      } else {
        return null;
      }
    }
  }
};
yantra.datatypes.Disk.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4071__auto__, k__4072__auto__, G__9302) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  var pred__9305 = cljs.core.keyword_identical_QMARK_;
  var expr__9306 = k__4072__auto__;
  if (cljs.core.truth_(pred__9305.call(null, new cljs.core.Keyword(null, "point", "point", 1120749826), expr__9306))) {
    return new yantra.datatypes.Disk(G__9302, self__.radius, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__9305.call(null, new cljs.core.Keyword(null, "radius", "radius", 4370292740), expr__9306))) {
      return new yantra.datatypes.Disk(self__.point, G__9302, self__.__meta, self__.__extmap, null);
    } else {
      return new yantra.datatypes.Disk(self__.point, self__.radius, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4072__auto__, G__9302), null);
    }
  }
};
yantra.datatypes.Disk.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4078__auto__, writer__4079__auto__, opts__4080__auto__) {
  var self__ = this;
  var this__4078__auto____$1 = this;
  var pr_pair__4081__auto__ = function(this__4078__auto____$1) {
    return function(keyval__4082__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4079__auto__, cljs.core.pr_writer, "", " ", "", opts__4080__auto__, keyval__4082__auto__);
    };
  }(this__4078__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4079__auto__, pr_pair__4081__auto__, "#yantra.datatypes.Disk{", ", ", "}", opts__4080__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "point", "point", 1120749826), self__.point], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "radius", "radius", 4370292740), self__.radius], null)], null), self__.__extmap));
};
yantra.datatypes.Disk.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4069__auto__, entry__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4070__auto__)) {
    return cljs.core._assoc.call(null, this__4069__auto____$1, cljs.core._nth.call(null, entry__4070__auto__, 0), cljs.core._nth.call(null, entry__4070__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4069__auto____$1, entry__4070__auto__);
  }
};
yantra.datatypes.Disk.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4076__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "point", "point", 1120749826), self__.point], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "radius", "radius", 4370292740), self__.radius], null)], null), self__.__extmap));
};
yantra.datatypes.Disk.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4068__auto__) {
  var self__ = this;
  var this__4068__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
yantra.datatypes.Disk.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4060__auto__, other__4061__auto__) {
  var self__ = this;
  var this__4060__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3466__auto__ = other__4061__auto__;
    if (cljs.core.truth_(and__3466__auto__)) {
      return this__4060__auto____$1.constructor === other__4061__auto__.constructor && cljs.core.equiv_map.call(null, this__4060__auto____$1, other__4061__auto__);
    } else {
      return and__3466__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
yantra.datatypes.Disk.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4063__auto__, G__9302) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  return new yantra.datatypes.Disk(self__.point, self__.radius, G__9302, self__.__extmap, self__.__hash);
};
yantra.datatypes.Disk.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4058__auto__) {
  var self__ = this;
  var this__4058__auto____$1 = this;
  return new yantra.datatypes.Disk(self__.point, self__.radius, self__.__meta, self__.__extmap, self__.__hash);
};
yantra.datatypes.Disk.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  return self__.__meta;
};
yantra.datatypes.Disk.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4073__auto__, k__4074__auto__) {
  var self__ = this;
  var this__4073__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "point", "point", 1120749826), null, new cljs.core.Keyword(null, "radius", "radius", 4370292740), null], null), null), k__4074__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4073__auto____$1), self__.__meta), k__4074__auto__);
  } else {
    return new yantra.datatypes.Disk(self__.point, self__.radius, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4074__auto__)), null);
  }
};
yantra.datatypes.Disk.cljs$lang$type = true;
yantra.datatypes.Disk.cljs$lang$ctorPrSeq = function(this__4098__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "yantra.datatypes/Disk");
};
yantra.datatypes.Disk.cljs$lang$ctorPrWriter = function(this__4098__auto__, writer__4099__auto__) {
  return cljs.core._write.call(null, writer__4099__auto__, "yantra.datatypes/Disk");
};
yantra.datatypes.__GT_Disk = function __GT_Disk(point, radius) {
  return new yantra.datatypes.Disk(point, radius);
};
yantra.datatypes.map__GT_Disk = function map__GT_Disk(G__9304) {
  return new yantra.datatypes.Disk((new cljs.core.Keyword(null, "point", "point", 1120749826)).cljs$core$IFn$_invoke$arity$1(G__9304), (new cljs.core.Keyword(null, "radius", "radius", 4370292740)).cljs$core$IFn$_invoke$arity$1(G__9304), null, cljs.core.dissoc.call(null, G__9304, new cljs.core.Keyword(null, "point", "point", 1120749826), new cljs.core.Keyword(null, "radius", "radius", 4370292740)));
};
yantra.datatypes.Rectangle = function(p1, p2, __meta, __extmap) {
  this.p1 = p1;
  this.p2 = p2;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
yantra.datatypes.Rectangle.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4059__auto__) {
  var self__ = this;
  var this__4059__auto____$1 = this;
  var h__3889__auto__ = self__.__hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_imap.call(null, this__4059__auto____$1);
    self__.__hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
yantra.datatypes.Rectangle.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4064__auto__, k__4065__auto__) {
  var self__ = this;
  var this__4064__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4064__auto____$1, k__4065__auto__, null);
};
yantra.datatypes.Rectangle.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4066__auto__, k9309, else__4067__auto__) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k9309, new cljs.core.Keyword(null, "p1", "p1", 1013907763))) {
    return self__.p1;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k9309, new cljs.core.Keyword(null, "p2", "p2", 1013907764))) {
      return self__.p2;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.get.call(null, self__.__extmap, k9309, else__4067__auto__);
      } else {
        return null;
      }
    }
  }
};
yantra.datatypes.Rectangle.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4071__auto__, k__4072__auto__, G__9308) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  var pred__9311 = cljs.core.keyword_identical_QMARK_;
  var expr__9312 = k__4072__auto__;
  if (cljs.core.truth_(pred__9311.call(null, new cljs.core.Keyword(null, "p1", "p1", 1013907763), expr__9312))) {
    return new yantra.datatypes.Rectangle(G__9308, self__.p2, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__9311.call(null, new cljs.core.Keyword(null, "p2", "p2", 1013907764), expr__9312))) {
      return new yantra.datatypes.Rectangle(self__.p1, G__9308, self__.__meta, self__.__extmap, null);
    } else {
      return new yantra.datatypes.Rectangle(self__.p1, self__.p2, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4072__auto__, G__9308), null);
    }
  }
};
yantra.datatypes.Rectangle.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4078__auto__, writer__4079__auto__, opts__4080__auto__) {
  var self__ = this;
  var this__4078__auto____$1 = this;
  var pr_pair__4081__auto__ = function(this__4078__auto____$1) {
    return function(keyval__4082__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4079__auto__, cljs.core.pr_writer, "", " ", "", opts__4080__auto__, keyval__4082__auto__);
    };
  }(this__4078__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4079__auto__, pr_pair__4081__auto__, "#yantra.datatypes.Rectangle{", ", ", "}", opts__4080__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p1", "p1", 1013907763), self__.p1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "p2", "p2", 1013907764), self__.p2], null)], null), self__.__extmap));
};
yantra.datatypes.Rectangle.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4069__auto__, entry__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4070__auto__)) {
    return cljs.core._assoc.call(null, this__4069__auto____$1, cljs.core._nth.call(null, entry__4070__auto__, 0), cljs.core._nth.call(null, entry__4070__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4069__auto____$1, entry__4070__auto__);
  }
};
yantra.datatypes.Rectangle.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4076__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p1", "p1", 1013907763), self__.p1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p2", "p2", 1013907764), self__.p2], null)], null), self__.__extmap));
};
yantra.datatypes.Rectangle.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4068__auto__) {
  var self__ = this;
  var this__4068__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
yantra.datatypes.Rectangle.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4060__auto__, other__4061__auto__) {
  var self__ = this;
  var this__4060__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3466__auto__ = other__4061__auto__;
    if (cljs.core.truth_(and__3466__auto__)) {
      return this__4060__auto____$1.constructor === other__4061__auto__.constructor && cljs.core.equiv_map.call(null, this__4060__auto____$1, other__4061__auto__);
    } else {
      return and__3466__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
yantra.datatypes.Rectangle.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4063__auto__, G__9308) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  return new yantra.datatypes.Rectangle(self__.p1, self__.p2, G__9308, self__.__extmap, self__.__hash);
};
yantra.datatypes.Rectangle.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4058__auto__) {
  var self__ = this;
  var this__4058__auto____$1 = this;
  return new yantra.datatypes.Rectangle(self__.p1, self__.p2, self__.__meta, self__.__extmap, self__.__hash);
};
yantra.datatypes.Rectangle.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  return self__.__meta;
};
yantra.datatypes.Rectangle.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4073__auto__, k__4074__auto__) {
  var self__ = this;
  var this__4073__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "p1", "p1", 1013907763), null, new cljs.core.Keyword(null, "p2", "p2", 1013907764), null], null), null), k__4074__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4073__auto____$1), self__.__meta), k__4074__auto__);
  } else {
    return new yantra.datatypes.Rectangle(self__.p1, self__.p2, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4074__auto__)), null);
  }
};
yantra.datatypes.Rectangle.cljs$lang$type = true;
yantra.datatypes.Rectangle.cljs$lang$ctorPrSeq = function(this__4098__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "yantra.datatypes/Rectangle");
};
yantra.datatypes.Rectangle.cljs$lang$ctorPrWriter = function(this__4098__auto__, writer__4099__auto__) {
  return cljs.core._write.call(null, writer__4099__auto__, "yantra.datatypes/Rectangle");
};
yantra.datatypes.__GT_Rectangle = function __GT_Rectangle(p1, p2) {
  return new yantra.datatypes.Rectangle(p1, p2);
};
yantra.datatypes.map__GT_Rectangle = function map__GT_Rectangle(G__9310) {
  return new yantra.datatypes.Rectangle((new cljs.core.Keyword(null, "p1", "p1", 1013907763)).cljs$core$IFn$_invoke$arity$1(G__9310), (new cljs.core.Keyword(null, "p2", "p2", 1013907764)).cljs$core$IFn$_invoke$arity$1(G__9310), null, cljs.core.dissoc.call(null, G__9310, new cljs.core.Keyword(null, "p1", "p1", 1013907763), new cljs.core.Keyword(null, "p2", "p2", 1013907764)));
};
yantra.datatypes.Style = function(style, prims, __meta, __extmap) {
  this.style = style;
  this.prims = prims;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
yantra.datatypes.Style.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4059__auto__) {
  var self__ = this;
  var this__4059__auto____$1 = this;
  var h__3889__auto__ = self__.__hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_imap.call(null, this__4059__auto____$1);
    self__.__hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
yantra.datatypes.Style.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4064__auto__, k__4065__auto__) {
  var self__ = this;
  var this__4064__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4064__auto____$1, k__4065__auto__, null);
};
yantra.datatypes.Style.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4066__auto__, k9315, else__4067__auto__) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k9315, new cljs.core.Keyword(null, "style", "style", 1123684643))) {
    return self__.style;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k9315, new cljs.core.Keyword(null, "prims", "prims", 1120839167))) {
      return self__.prims;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.get.call(null, self__.__extmap, k9315, else__4067__auto__);
      } else {
        return null;
      }
    }
  }
};
yantra.datatypes.Style.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4071__auto__, k__4072__auto__, G__9314) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  var pred__9317 = cljs.core.keyword_identical_QMARK_;
  var expr__9318 = k__4072__auto__;
  if (cljs.core.truth_(pred__9317.call(null, new cljs.core.Keyword(null, "style", "style", 1123684643), expr__9318))) {
    return new yantra.datatypes.Style(G__9314, self__.prims, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__9317.call(null, new cljs.core.Keyword(null, "prims", "prims", 1120839167), expr__9318))) {
      return new yantra.datatypes.Style(self__.style, G__9314, self__.__meta, self__.__extmap, null);
    } else {
      return new yantra.datatypes.Style(self__.style, self__.prims, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4072__auto__, G__9314), null);
    }
  }
};
yantra.datatypes.Style.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4078__auto__, writer__4079__auto__, opts__4080__auto__) {
  var self__ = this;
  var this__4078__auto____$1 = this;
  var pr_pair__4081__auto__ = function(this__4078__auto____$1) {
    return function(keyval__4082__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4079__auto__, cljs.core.pr_writer, "", " ", "", opts__4080__auto__, keyval__4082__auto__);
    };
  }(this__4078__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4079__auto__, pr_pair__4081__auto__, "#yantra.datatypes.Style{", ", ", "}", opts__4080__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "style", "style", 1123684643), self__.style], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "prims", "prims", 1120839167), self__.prims], null)], null), self__.__extmap));
};
yantra.datatypes.Style.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4069__auto__, entry__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4070__auto__)) {
    return cljs.core._assoc.call(null, this__4069__auto____$1, cljs.core._nth.call(null, entry__4070__auto__, 0), cljs.core._nth.call(null, entry__4070__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4069__auto____$1, entry__4070__auto__);
  }
};
yantra.datatypes.Style.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4076__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "style", "style", 1123684643), self__.style], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prims", "prims", 1120839167), self__.prims], null)], null), self__.__extmap));
};
yantra.datatypes.Style.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4068__auto__) {
  var self__ = this;
  var this__4068__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
yantra.datatypes.Style.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4060__auto__, other__4061__auto__) {
  var self__ = this;
  var this__4060__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3466__auto__ = other__4061__auto__;
    if (cljs.core.truth_(and__3466__auto__)) {
      return this__4060__auto____$1.constructor === other__4061__auto__.constructor && cljs.core.equiv_map.call(null, this__4060__auto____$1, other__4061__auto__);
    } else {
      return and__3466__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
yantra.datatypes.Style.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4063__auto__, G__9314) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  return new yantra.datatypes.Style(self__.style, self__.prims, G__9314, self__.__extmap, self__.__hash);
};
yantra.datatypes.Style.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4058__auto__) {
  var self__ = this;
  var this__4058__auto____$1 = this;
  return new yantra.datatypes.Style(self__.style, self__.prims, self__.__meta, self__.__extmap, self__.__hash);
};
yantra.datatypes.Style.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  return self__.__meta;
};
yantra.datatypes.Style.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4073__auto__, k__4074__auto__) {
  var self__ = this;
  var this__4073__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "prims", "prims", 1120839167), null, new cljs.core.Keyword(null, "style", "style", 1123684643), null], null), null), k__4074__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4073__auto____$1), self__.__meta), k__4074__auto__);
  } else {
    return new yantra.datatypes.Style(self__.style, self__.prims, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4074__auto__)), null);
  }
};
yantra.datatypes.Style.cljs$lang$type = true;
yantra.datatypes.Style.cljs$lang$ctorPrSeq = function(this__4098__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "yantra.datatypes/Style");
};
yantra.datatypes.Style.cljs$lang$ctorPrWriter = function(this__4098__auto__, writer__4099__auto__) {
  return cljs.core._write.call(null, writer__4099__auto__, "yantra.datatypes/Style");
};
yantra.datatypes.__GT_Style = function __GT_Style(style, prims) {
  return new yantra.datatypes.Style(style, prims);
};
yantra.datatypes.map__GT_Style = function map__GT_Style(G__9316) {
  return new yantra.datatypes.Style((new cljs.core.Keyword(null, "style", "style", 1123684643)).cljs$core$IFn$_invoke$arity$1(G__9316), (new cljs.core.Keyword(null, "prims", "prims", 1120839167)).cljs$core$IFn$_invoke$arity$1(G__9316), null, cljs.core.dissoc.call(null, G__9316, new cljs.core.Keyword(null, "style", "style", 1123684643), new cljs.core.Keyword(null, "prims", "prims", 1120839167)));
};
yantra.datatypes.ListLinePlot = function(data, opts, __meta, __extmap) {
  this.data = data;
  this.opts = opts;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
yantra.datatypes.ListLinePlot.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4059__auto__) {
  var self__ = this;
  var this__4059__auto____$1 = this;
  var h__3889__auto__ = self__.__hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_imap.call(null, this__4059__auto____$1);
    self__.__hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
yantra.datatypes.ListLinePlot.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4064__auto__, k__4065__auto__) {
  var self__ = this;
  var this__4064__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4064__auto____$1, k__4065__auto__, null);
};
yantra.datatypes.ListLinePlot.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4066__auto__, k9321, else__4067__auto__) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k9321, new cljs.core.Keyword(null, "data", "data", 1016980252))) {
    return self__.data;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k9321, new cljs.core.Keyword(null, "opts", "opts", 1017322386))) {
      return self__.opts;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.get.call(null, self__.__extmap, k9321, else__4067__auto__);
      } else {
        return null;
      }
    }
  }
};
yantra.datatypes.ListLinePlot.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4071__auto__, k__4072__auto__, G__9320) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  var pred__9323 = cljs.core.keyword_identical_QMARK_;
  var expr__9324 = k__4072__auto__;
  if (cljs.core.truth_(pred__9323.call(null, new cljs.core.Keyword(null, "data", "data", 1016980252), expr__9324))) {
    return new yantra.datatypes.ListLinePlot(G__9320, self__.opts, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__9323.call(null, new cljs.core.Keyword(null, "opts", "opts", 1017322386), expr__9324))) {
      return new yantra.datatypes.ListLinePlot(self__.data, G__9320, self__.__meta, self__.__extmap, null);
    } else {
      return new yantra.datatypes.ListLinePlot(self__.data, self__.opts, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4072__auto__, G__9320), null);
    }
  }
};
yantra.datatypes.ListLinePlot.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4078__auto__, writer__4079__auto__, opts__4080__auto__) {
  var self__ = this;
  var this__4078__auto____$1 = this;
  var pr_pair__4081__auto__ = function(this__4078__auto____$1) {
    return function(keyval__4082__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4079__auto__, cljs.core.pr_writer, "", " ", "", opts__4080__auto__, keyval__4082__auto__);
    };
  }(this__4078__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4079__auto__, pr_pair__4081__auto__, "#yantra.datatypes.ListLinePlot{", ", ", "}", opts__4080__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", 1016980252), self__.data], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "opts", "opts", 1017322386), self__.opts], null)], null), self__.__extmap));
};
yantra.datatypes.ListLinePlot.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4069__auto__, entry__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4070__auto__)) {
    return cljs.core._assoc.call(null, this__4069__auto____$1, cljs.core._nth.call(null, entry__4070__auto__, 0), cljs.core._nth.call(null, entry__4070__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4069__auto____$1, entry__4070__auto__);
  }
};
yantra.datatypes.ListLinePlot.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4076__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", 1016980252), self__.data], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), self__.opts], null)], null), self__.__extmap));
};
yantra.datatypes.ListLinePlot.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4068__auto__) {
  var self__ = this;
  var this__4068__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
yantra.datatypes.ListLinePlot.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4060__auto__, other__4061__auto__) {
  var self__ = this;
  var this__4060__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3466__auto__ = other__4061__auto__;
    if (cljs.core.truth_(and__3466__auto__)) {
      return this__4060__auto____$1.constructor === other__4061__auto__.constructor && cljs.core.equiv_map.call(null, this__4060__auto____$1, other__4061__auto__);
    } else {
      return and__3466__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
yantra.datatypes.ListLinePlot.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4063__auto__, G__9320) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  return new yantra.datatypes.ListLinePlot(self__.data, self__.opts, G__9320, self__.__extmap, self__.__hash);
};
yantra.datatypes.ListLinePlot.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4058__auto__) {
  var self__ = this;
  var this__4058__auto____$1 = this;
  return new yantra.datatypes.ListLinePlot(self__.data, self__.opts, self__.__meta, self__.__extmap, self__.__hash);
};
yantra.datatypes.ListLinePlot.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  return self__.__meta;
};
yantra.datatypes.ListLinePlot.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4073__auto__, k__4074__auto__) {
  var self__ = this;
  var this__4073__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "data", "data", 1016980252), null, new cljs.core.Keyword(null, "opts", "opts", 1017322386), null], null), null), k__4074__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4073__auto____$1), self__.__meta), k__4074__auto__);
  } else {
    return new yantra.datatypes.ListLinePlot(self__.data, self__.opts, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4074__auto__)), null);
  }
};
yantra.datatypes.ListLinePlot.cljs$lang$type = true;
yantra.datatypes.ListLinePlot.cljs$lang$ctorPrSeq = function(this__4098__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "yantra.datatypes/ListLinePlot");
};
yantra.datatypes.ListLinePlot.cljs$lang$ctorPrWriter = function(this__4098__auto__, writer__4099__auto__) {
  return cljs.core._write.call(null, writer__4099__auto__, "yantra.datatypes/ListLinePlot");
};
yantra.datatypes.__GT_ListLinePlot = function __GT_ListLinePlot(data, opts) {
  return new yantra.datatypes.ListLinePlot(data, opts);
};
yantra.datatypes.map__GT_ListLinePlot = function map__GT_ListLinePlot(G__9322) {
  return new yantra.datatypes.ListLinePlot((new cljs.core.Keyword(null, "data", "data", 1016980252)).cljs$core$IFn$_invoke$arity$1(G__9322), (new cljs.core.Keyword(null, "opts", "opts", 1017322386)).cljs$core$IFn$_invoke$arity$1(G__9322), null, cljs.core.dissoc.call(null, G__9322, new cljs.core.Keyword(null, "data", "data", 1016980252), new cljs.core.Keyword(null, "opts", "opts", 1017322386)));
};
yantra.datatypes.BarChart = function(data, opts, __meta, __extmap) {
  this.data = data;
  this.opts = opts;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
yantra.datatypes.BarChart.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4059__auto__) {
  var self__ = this;
  var this__4059__auto____$1 = this;
  var h__3889__auto__ = self__.__hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_imap.call(null, this__4059__auto____$1);
    self__.__hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
yantra.datatypes.BarChart.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4064__auto__, k__4065__auto__) {
  var self__ = this;
  var this__4064__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4064__auto____$1, k__4065__auto__, null);
};
yantra.datatypes.BarChart.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4066__auto__, k9327, else__4067__auto__) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k9327, new cljs.core.Keyword(null, "data", "data", 1016980252))) {
    return self__.data;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k9327, new cljs.core.Keyword(null, "opts", "opts", 1017322386))) {
      return self__.opts;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.get.call(null, self__.__extmap, k9327, else__4067__auto__);
      } else {
        return null;
      }
    }
  }
};
yantra.datatypes.BarChart.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4071__auto__, k__4072__auto__, G__9326) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  var pred__9329 = cljs.core.keyword_identical_QMARK_;
  var expr__9330 = k__4072__auto__;
  if (cljs.core.truth_(pred__9329.call(null, new cljs.core.Keyword(null, "data", "data", 1016980252), expr__9330))) {
    return new yantra.datatypes.BarChart(G__9326, self__.opts, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__9329.call(null, new cljs.core.Keyword(null, "opts", "opts", 1017322386), expr__9330))) {
      return new yantra.datatypes.BarChart(self__.data, G__9326, self__.__meta, self__.__extmap, null);
    } else {
      return new yantra.datatypes.BarChart(self__.data, self__.opts, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4072__auto__, G__9326), null);
    }
  }
};
yantra.datatypes.BarChart.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4078__auto__, writer__4079__auto__, opts__4080__auto__) {
  var self__ = this;
  var this__4078__auto____$1 = this;
  var pr_pair__4081__auto__ = function(this__4078__auto____$1) {
    return function(keyval__4082__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4079__auto__, cljs.core.pr_writer, "", " ", "", opts__4080__auto__, keyval__4082__auto__);
    };
  }(this__4078__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4079__auto__, pr_pair__4081__auto__, "#yantra.datatypes.BarChart{", ", ", "}", opts__4080__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", 1016980252), self__.data], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "opts", "opts", 1017322386), self__.opts], null)], null), self__.__extmap));
};
yantra.datatypes.BarChart.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4069__auto__, entry__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4070__auto__)) {
    return cljs.core._assoc.call(null, this__4069__auto____$1, cljs.core._nth.call(null, entry__4070__auto__, 0), cljs.core._nth.call(null, entry__4070__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4069__auto____$1, entry__4070__auto__);
  }
};
yantra.datatypes.BarChart.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4076__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", 1016980252), self__.data], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), self__.opts], null)], null), self__.__extmap));
};
yantra.datatypes.BarChart.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4068__auto__) {
  var self__ = this;
  var this__4068__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
yantra.datatypes.BarChart.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4060__auto__, other__4061__auto__) {
  var self__ = this;
  var this__4060__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3466__auto__ = other__4061__auto__;
    if (cljs.core.truth_(and__3466__auto__)) {
      return this__4060__auto____$1.constructor === other__4061__auto__.constructor && cljs.core.equiv_map.call(null, this__4060__auto____$1, other__4061__auto__);
    } else {
      return and__3466__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
yantra.datatypes.BarChart.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4063__auto__, G__9326) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  return new yantra.datatypes.BarChart(self__.data, self__.opts, G__9326, self__.__extmap, self__.__hash);
};
yantra.datatypes.BarChart.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4058__auto__) {
  var self__ = this;
  var this__4058__auto____$1 = this;
  return new yantra.datatypes.BarChart(self__.data, self__.opts, self__.__meta, self__.__extmap, self__.__hash);
};
yantra.datatypes.BarChart.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  return self__.__meta;
};
yantra.datatypes.BarChart.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4073__auto__, k__4074__auto__) {
  var self__ = this;
  var this__4073__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "data", "data", 1016980252), null, new cljs.core.Keyword(null, "opts", "opts", 1017322386), null], null), null), k__4074__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4073__auto____$1), self__.__meta), k__4074__auto__);
  } else {
    return new yantra.datatypes.BarChart(self__.data, self__.opts, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4074__auto__)), null);
  }
};
yantra.datatypes.BarChart.cljs$lang$type = true;
yantra.datatypes.BarChart.cljs$lang$ctorPrSeq = function(this__4098__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "yantra.datatypes/BarChart");
};
yantra.datatypes.BarChart.cljs$lang$ctorPrWriter = function(this__4098__auto__, writer__4099__auto__) {
  return cljs.core._write.call(null, writer__4099__auto__, "yantra.datatypes/BarChart");
};
yantra.datatypes.__GT_BarChart = function __GT_BarChart(data, opts) {
  return new yantra.datatypes.BarChart(data, opts);
};
yantra.datatypes.map__GT_BarChart = function map__GT_BarChart(G__9328) {
  return new yantra.datatypes.BarChart((new cljs.core.Keyword(null, "data", "data", 1016980252)).cljs$core$IFn$_invoke$arity$1(G__9328), (new cljs.core.Keyword(null, "opts", "opts", 1017322386)).cljs$core$IFn$_invoke$arity$1(G__9328), null, cljs.core.dissoc.call(null, G__9328, new cljs.core.Keyword(null, "data", "data", 1016980252), new cljs.core.Keyword(null, "opts", "opts", 1017322386)));
};
yantra.datatypes.HTMLElement = function(tag, attributes, children, __meta, __extmap) {
  this.tag = tag;
  this.attributes = attributes;
  this.children = children;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 3) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
yantra.datatypes.HTMLElement.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4059__auto__) {
  var self__ = this;
  var this__4059__auto____$1 = this;
  var h__3889__auto__ = self__.__hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_imap.call(null, this__4059__auto____$1);
    self__.__hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
yantra.datatypes.HTMLElement.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4064__auto__, k__4065__auto__) {
  var self__ = this;
  var this__4064__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4064__auto____$1, k__4065__auto__, null);
};
yantra.datatypes.HTMLElement.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4066__auto__, k9333, else__4067__auto__) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k9333, new cljs.core.Keyword(null, "tag", "tag", 1014018828))) {
    return self__.tag;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k9333, new cljs.core.Keyword(null, "attributes", "attributes", 1419549897))) {
      return self__.attributes;
    } else {
      if (cljs.core.keyword_identical_QMARK_.call(null, k9333, new cljs.core.Keyword(null, "children", "children", 2673430897))) {
        return self__.children;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.get.call(null, self__.__extmap, k9333, else__4067__auto__);
        } else {
          return null;
        }
      }
    }
  }
};
yantra.datatypes.HTMLElement.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4071__auto__, k__4072__auto__, G__9332) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  var pred__9335 = cljs.core.keyword_identical_QMARK_;
  var expr__9336 = k__4072__auto__;
  if (cljs.core.truth_(pred__9335.call(null, new cljs.core.Keyword(null, "tag", "tag", 1014018828), expr__9336))) {
    return new yantra.datatypes.HTMLElement(G__9332, self__.attributes, self__.children, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__9335.call(null, new cljs.core.Keyword(null, "attributes", "attributes", 1419549897), expr__9336))) {
      return new yantra.datatypes.HTMLElement(self__.tag, G__9332, self__.children, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__9335.call(null, new cljs.core.Keyword(null, "children", "children", 2673430897), expr__9336))) {
        return new yantra.datatypes.HTMLElement(self__.tag, self__.attributes, G__9332, self__.__meta, self__.__extmap, null);
      } else {
        return new yantra.datatypes.HTMLElement(self__.tag, self__.attributes, self__.children, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4072__auto__, G__9332), null);
      }
    }
  }
};
yantra.datatypes.HTMLElement.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4078__auto__, writer__4079__auto__, opts__4080__auto__) {
  var self__ = this;
  var this__4078__auto____$1 = this;
  var pr_pair__4081__auto__ = function(this__4078__auto____$1) {
    return function(keyval__4082__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4079__auto__, cljs.core.pr_writer, "", " ", "", opts__4080__auto__, keyval__4082__auto__);
    };
  }(this__4078__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4079__auto__, pr_pair__4081__auto__, "#yantra.datatypes.HTMLElement{", ", ", "}", opts__4080__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), self__.tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "attributes", "attributes", 1419549897), self__.attributes], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "children", "children", 2673430897), self__.children], null)], null), self__.__extmap));
};
yantra.datatypes.HTMLElement.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4069__auto__, entry__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4070__auto__)) {
    return cljs.core._assoc.call(null, this__4069__auto____$1, cljs.core._nth.call(null, entry__4070__auto__, 0), cljs.core._nth.call(null, entry__4070__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4069__auto____$1, entry__4070__auto__);
  }
};
yantra.datatypes.HTMLElement.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4076__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), self__.tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attributes", "attributes", 1419549897), self__.attributes], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "children", "children", 2673430897), self__.children], null)], null), self__.__extmap));
};
yantra.datatypes.HTMLElement.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4068__auto__) {
  var self__ = this;
  var this__4068__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap);
};
yantra.datatypes.HTMLElement.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4060__auto__, other__4061__auto__) {
  var self__ = this;
  var this__4060__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3466__auto__ = other__4061__auto__;
    if (cljs.core.truth_(and__3466__auto__)) {
      return this__4060__auto____$1.constructor === other__4061__auto__.constructor && cljs.core.equiv_map.call(null, this__4060__auto____$1, other__4061__auto__);
    } else {
      return and__3466__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
yantra.datatypes.HTMLElement.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4063__auto__, G__9332) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  return new yantra.datatypes.HTMLElement(self__.tag, self__.attributes, self__.children, G__9332, self__.__extmap, self__.__hash);
};
yantra.datatypes.HTMLElement.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4058__auto__) {
  var self__ = this;
  var this__4058__auto____$1 = this;
  return new yantra.datatypes.HTMLElement(self__.tag, self__.attributes, self__.children, self__.__meta, self__.__extmap, self__.__hash);
};
yantra.datatypes.HTMLElement.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  return self__.__meta;
};
yantra.datatypes.HTMLElement.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4073__auto__, k__4074__auto__) {
  var self__ = this;
  var this__4073__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "children", "children", 2673430897), null, new cljs.core.Keyword(null, "attributes", "attributes", 1419549897), null, new cljs.core.Keyword(null, "tag", "tag", 1014018828), null], null), null), k__4074__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4073__auto____$1), self__.__meta), k__4074__auto__);
  } else {
    return new yantra.datatypes.HTMLElement(self__.tag, self__.attributes, self__.children, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4074__auto__)), null);
  }
};
yantra.datatypes.HTMLElement.cljs$lang$type = true;
yantra.datatypes.HTMLElement.cljs$lang$ctorPrSeq = function(this__4098__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "yantra.datatypes/HTMLElement");
};
yantra.datatypes.HTMLElement.cljs$lang$ctorPrWriter = function(this__4098__auto__, writer__4099__auto__) {
  return cljs.core._write.call(null, writer__4099__auto__, "yantra.datatypes/HTMLElement");
};
yantra.datatypes.__GT_HTMLElement = function __GT_HTMLElement(tag, attributes, children) {
  return new yantra.datatypes.HTMLElement(tag, attributes, children);
};
yantra.datatypes.map__GT_HTMLElement = function map__GT_HTMLElement(G__9334) {
  return new yantra.datatypes.HTMLElement((new cljs.core.Keyword(null, "tag", "tag", 1014018828)).cljs$core$IFn$_invoke$arity$1(G__9334), (new cljs.core.Keyword(null, "attributes", "attributes", 1419549897)).cljs$core$IFn$_invoke$arity$1(G__9334), (new cljs.core.Keyword(null, "children", "children", 2673430897)).cljs$core$IFn$_invoke$arity$1(G__9334), null, cljs.core.dissoc.call(null, G__9334, new cljs.core.Keyword(null, "tag", "tag", 1014018828), new cljs.core.Keyword(null, "attributes", "attributes", 
  1419549897), new cljs.core.Keyword(null, "children", "children", 2673430897)));
};
yantra.datatypes.ChannelDisplay = function(channel, value, __meta, __extmap) {
  this.channel = channel;
  this.value = value;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
yantra.datatypes.ChannelDisplay.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4059__auto__) {
  var self__ = this;
  var this__4059__auto____$1 = this;
  var h__3889__auto__ = self__.__hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_imap.call(null, this__4059__auto____$1);
    self__.__hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
yantra.datatypes.ChannelDisplay.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4064__auto__, k__4065__auto__) {
  var self__ = this;
  var this__4064__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4064__auto____$1, k__4065__auto__, null);
};
yantra.datatypes.ChannelDisplay.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4066__auto__, k9339, else__4067__auto__) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k9339, new cljs.core.Keyword(null, "channel", "channel", 1752854645))) {
    return self__.channel;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k9339, new cljs.core.Keyword(null, "value", "value", 1125876963))) {
      return self__.value;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.get.call(null, self__.__extmap, k9339, else__4067__auto__);
      } else {
        return null;
      }
    }
  }
};
yantra.datatypes.ChannelDisplay.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4071__auto__, k__4072__auto__, G__9338) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  var pred__9341 = cljs.core.keyword_identical_QMARK_;
  var expr__9342 = k__4072__auto__;
  if (cljs.core.truth_(pred__9341.call(null, new cljs.core.Keyword(null, "channel", "channel", 1752854645), expr__9342))) {
    return new yantra.datatypes.ChannelDisplay(G__9338, self__.value, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__9341.call(null, new cljs.core.Keyword(null, "value", "value", 1125876963), expr__9342))) {
      return new yantra.datatypes.ChannelDisplay(self__.channel, G__9338, self__.__meta, self__.__extmap, null);
    } else {
      return new yantra.datatypes.ChannelDisplay(self__.channel, self__.value, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4072__auto__, G__9338), null);
    }
  }
};
yantra.datatypes.ChannelDisplay.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4078__auto__, writer__4079__auto__, opts__4080__auto__) {
  var self__ = this;
  var this__4078__auto____$1 = this;
  var pr_pair__4081__auto__ = function(this__4078__auto____$1) {
    return function(keyval__4082__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4079__auto__, cljs.core.pr_writer, "", " ", "", opts__4080__auto__, keyval__4082__auto__);
    };
  }(this__4078__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4079__auto__, pr_pair__4081__auto__, "#yantra.datatypes.ChannelDisplay{", ", ", "}", opts__4080__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channel", "channel", 1752854645), self__.channel], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "value", "value", 1125876963), self__.value], null)], null), self__.__extmap));
};
yantra.datatypes.ChannelDisplay.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4069__auto__, entry__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4070__auto__)) {
    return cljs.core._assoc.call(null, this__4069__auto____$1, cljs.core._nth.call(null, entry__4070__auto__, 0), cljs.core._nth.call(null, entry__4070__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4069__auto____$1, entry__4070__auto__);
  }
};
yantra.datatypes.ChannelDisplay.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4076__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channel", "channel", 1752854645), self__.channel], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 1125876963), self__.value], null)], null), self__.__extmap));
};
yantra.datatypes.ChannelDisplay.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4068__auto__) {
  var self__ = this;
  var this__4068__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
yantra.datatypes.ChannelDisplay.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4060__auto__, other__4061__auto__) {
  var self__ = this;
  var this__4060__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3466__auto__ = other__4061__auto__;
    if (cljs.core.truth_(and__3466__auto__)) {
      return this__4060__auto____$1.constructor === other__4061__auto__.constructor && cljs.core.equiv_map.call(null, this__4060__auto____$1, other__4061__auto__);
    } else {
      return and__3466__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
yantra.datatypes.ChannelDisplay.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4063__auto__, G__9338) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  return new yantra.datatypes.ChannelDisplay(self__.channel, self__.value, G__9338, self__.__extmap, self__.__hash);
};
yantra.datatypes.ChannelDisplay.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4058__auto__) {
  var self__ = this;
  var this__4058__auto____$1 = this;
  return new yantra.datatypes.ChannelDisplay(self__.channel, self__.value, self__.__meta, self__.__extmap, self__.__hash);
};
yantra.datatypes.ChannelDisplay.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  return self__.__meta;
};
yantra.datatypes.ChannelDisplay.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4073__auto__, k__4074__auto__) {
  var self__ = this;
  var this__4073__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "channel", "channel", 1752854645), null, new cljs.core.Keyword(null, "value", "value", 1125876963), null], null), null), k__4074__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4073__auto____$1), self__.__meta), k__4074__auto__);
  } else {
    return new yantra.datatypes.ChannelDisplay(self__.channel, self__.value, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4074__auto__)), null);
  }
};
yantra.datatypes.ChannelDisplay.cljs$lang$type = true;
yantra.datatypes.ChannelDisplay.cljs$lang$ctorPrSeq = function(this__4098__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "yantra.datatypes/ChannelDisplay");
};
yantra.datatypes.ChannelDisplay.cljs$lang$ctorPrWriter = function(this__4098__auto__, writer__4099__auto__) {
  return cljs.core._write.call(null, writer__4099__auto__, "yantra.datatypes/ChannelDisplay");
};
yantra.datatypes.__GT_ChannelDisplay = function __GT_ChannelDisplay(channel, value) {
  return new yantra.datatypes.ChannelDisplay(channel, value);
};
yantra.datatypes.map__GT_ChannelDisplay = function map__GT_ChannelDisplay(G__9340) {
  return new yantra.datatypes.ChannelDisplay((new cljs.core.Keyword(null, "channel", "channel", 1752854645)).cljs$core$IFn$_invoke$arity$1(G__9340), (new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(G__9340), null, cljs.core.dissoc.call(null, G__9340, new cljs.core.Keyword(null, "channel", "channel", 1752854645), new cljs.core.Keyword(null, "value", "value", 1125876963)));
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj13365 = {};
  return obj13365;
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if (function() {
    var and__3466__auto__ = port;
    if (and__3466__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4105__auto__ = port == null ? null : port;
    return function() {
      var or__3478__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj13367 = {};
  return obj13367;
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn0_handler) {
  if (function() {
    var and__3466__auto__ = port;
    if (and__3466__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn0_handler);
  } else {
    var x__4105__auto__ = port == null ? null : port;
    return function() {
      var or__3478__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn0_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj13369 = {};
  return obj13369;
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if (function() {
    var and__3466__auto__ = chan;
    if (and__3466__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4105__auto__ = chan == null ? null : chan;
    return function() {
      var or__3478__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj13371 = {};
  return obj13371;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if (function() {
    var and__3466__auto__ = h;
    if (and__3466__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4105__auto__ = h == null ? null : h;
    return function() {
      var or__3478__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if (function() {
    var and__3466__auto__ = h;
    if (and__3466__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4105__auto__ = h == null ? null : h;
    return function() {
      var or__3478__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj13373 = {};
  return obj13373;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if (function() {
    var and__3466__auto__ = b;
    if (and__3466__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4105__auto__ = b == null ? null : b;
    return function() {
      var or__3478__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if (function() {
    var and__3466__auto__ = b;
    if (and__3466__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4105__auto__ = b == null ? null : b;
    return function() {
      var or__3478__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function add_BANG_(b, itm) {
  if (function() {
    var and__3466__auto__ = b;
    if (and__3466__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(b, itm);
  } else {
    var x__4105__auto__ = b == null ? null : b;
    return function() {
      var or__3478__auto__ = cljs.core.async.impl.protocols.add_BANG_[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core.async.impl.protocols.add_BANG_["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!", b);
        }
      }
    }().call(null, b, itm);
  }
};
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
  var obj13375 = {};
  return obj13375;
}();
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", 4635210724));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t13393 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t13393 = function(f, fn_handler, meta13394) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta13394 = meta13394;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t13393.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t13393.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t13393";
    cljs.core.async.impl.ioc_helpers.t13393.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
      return cljs.core._write.call(null, writer__4046__auto__, "cljs.core.async.impl.ioc-helpers/t13393");
    };
    cljs.core.async.impl.ioc_helpers.t13393.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t13393.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t13393.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t13393.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13395) {
      var self__ = this;
      var _13395__$1 = this;
      return self__.meta13394;
    };
    cljs.core.async.impl.ioc_helpers.t13393.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13395, meta13394__$1) {
      var self__ = this;
      var _13395__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t13393(self__.f, self__.fn_handler, meta13394__$1);
    };
    cljs.core.async.impl.ioc_helpers.__GT_t13393 = function __GT_t13393(f__$1, fn_handler__$1, meta13394) {
      return new cljs.core.async.impl.ioc_helpers.t13393(f__$1, fn_handler__$1, meta13394);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t13393(f, fn_handler, null);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e13397) {
    if (e13397 instanceof Object) {
      var ex = e13397;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e13397;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_13400_13402 = state;
    statearr_13400_13402[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_13400_13402[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_13401_13403 = state;
    statearr_13401_13403[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_13401_13403[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
    var statearr_13406_13408 = state;
    statearr_13406_13408[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = null;
    statearr_13406_13408[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_13407_13409 = state;
    statearr_13407_13409[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_13407_13409[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__13410) {
    var map__13415 = p__13410;
    var map__13415__$1 = cljs.core.seq_QMARK_.call(null, map__13415) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13415) : map__13415;
    var opts = map__13415__$1;
    var statearr_13416_13419 = state;
    statearr_13416_13419[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4092__auto__ = cljs.core.async.do_alts.call(null, function(map__13415, map__13415__$1, opts) {
      return function(val) {
        var statearr_13417_13420 = state;
        statearr_13417_13420[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
      };
    }(map__13415, map__13415__$1, opts), ports, opts);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var cb = temp__4092__auto__;
      var statearr_13418_13421 = state;
      statearr_13418_13421[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
    } else {
      return null;
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__13410 = null;
    if (arguments.length > 3) {
      p__13410 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__13410);
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__13422) {
    var state = cljs.core.first(arglist__13422);
    arglist__13422 = cljs.core.next(arglist__13422);
    var cont_block = cljs.core.first(arglist__13422);
    arglist__13422 = cljs.core.next(arglist__13422);
    var ports = cljs.core.first(arglist__13422);
    var p__13410 = cljs.core.rest(arglist__13422);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__13410);
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_;
}();
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 5) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4059__auto__) {
  var self__ = this;
  var this__4059__auto____$1 = this;
  var h__3889__auto__ = self__.__hash;
  if (!(h__3889__auto__ == null)) {
    return h__3889__auto__;
  } else {
    var h__3889__auto____$1 = cljs.core.hash_imap.call(null, this__4059__auto____$1);
    self__.__hash = h__3889__auto____$1;
    return h__3889__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4064__auto__, k__4065__auto__) {
  var self__ = this;
  var this__4064__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4064__auto____$1, k__4065__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4066__auto__, k13424, else__4067__auto__) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k13424, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893))) {
    return self__.catch_block;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k13424, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687))) {
      return self__.catch_exception;
    } else {
      if (cljs.core.keyword_identical_QMARK_.call(null, k13424, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429))) {
        return self__.finally_block;
      } else {
        if (cljs.core.keyword_identical_QMARK_.call(null, k13424, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097))) {
          return self__.continue_block;
        } else {
          if (cljs.core.keyword_identical_QMARK_.call(null, k13424, new cljs.core.Keyword(null, "prev", "prev", 1017353637))) {
            return self__.prev;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.get.call(null, self__.__extmap, k13424, else__4067__auto__);
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4071__auto__, k__4072__auto__, G__13423) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  var pred__13426 = cljs.core.keyword_identical_QMARK_;
  var expr__13427 = k__4072__auto__;
  if (cljs.core.truth_(pred__13426.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), expr__13427))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__13423, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__13426.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), expr__13427))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__13423, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__13426.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), expr__13427))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__13423, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__13426.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), expr__13427))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__13423, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__13426.call(null, new cljs.core.Keyword(null, "prev", "prev", 1017353637), expr__13427))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__13423, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4072__auto__, G__13423), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4078__auto__, writer__4079__auto__, opts__4080__auto__) {
  var self__ = this;
  var this__4078__auto____$1 = this;
  var pr_pair__4081__auto__ = function(this__4078__auto____$1) {
    return function(keyval__4082__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4079__auto__, cljs.core.pr_writer, "", " ", "", opts__4080__auto__, keyval__4082__auto__);
    };
  }(this__4078__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4079__auto__, pr_pair__4081__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4080__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", 1017353637), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4069__auto__, entry__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4070__auto__)) {
    return cljs.core._assoc.call(null, this__4069__auto____$1, cljs.core._nth.call(null, entry__4070__auto__, 0), cljs.core._nth.call(null, entry__4070__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4069__auto____$1, entry__4070__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4076__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", 1017353637), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4068__auto__) {
  var self__ = this;
  var this__4068__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4060__auto__, other__4061__auto__) {
  var self__ = this;
  var this__4060__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3466__auto__ = other__4061__auto__;
    if (cljs.core.truth_(and__3466__auto__)) {
      return this__4060__auto____$1.constructor === other__4061__auto__.constructor && cljs.core.equiv_map.call(null, this__4060__auto____$1, other__4061__auto__);
    } else {
      return and__3466__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4063__auto__, G__13423) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__13423, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4058__auto__) {
  var self__ = this;
  var this__4058__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4073__auto__, k__4074__auto__) {
  var self__ = this;
  var this__4073__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), null, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), null, new cljs.core.Keyword(null, "prev", "prev", 1017353637), 
  null], null), null), k__4074__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4073__auto____$1), self__.__meta), k__4074__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4074__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4098__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4098__auto__, writer__4099__auto__) {
  return cljs.core._write.call(null, writer__4099__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function __GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function map__GT_ExceptionFrame(G__13425) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893)).cljs$core$IFn$_invoke$arity$1(G__13425), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687)).cljs$core$IFn$_invoke$arity$1(G__13425), (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(G__13425), (new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097)).cljs$core$IFn$_invoke$arity$1(G__13425), 
  (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(G__13425), null, cljs.core.dissoc.call(null, G__13425, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), new cljs.core.Keyword(null, "prev", "prev", 1017353637)));
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_13430 = state;
  statearr_13430[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_13430;
};
cljs.core.async.impl.ioc_helpers.process_exception = function process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__3466__auto__ = exception;
      if (cljs.core.truth_(and__3466__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__3466__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__3466__auto__ = exception;
        if (cljs.core.truth_(and__3466__auto__)) {
          var and__3466__auto____$1 = catch_block;
          if (cljs.core.truth_(and__3466__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__3466__auto____$1;
          }
        } else {
          return and__3466__auto__;
        }
      }())) {
        var statearr_13436 = state;
        statearr_13436[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_13436[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_13436[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_13436[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), null);
        return statearr_13436;
      } else {
        if (cljs.core.truth_(function() {
          var and__3466__auto__ = exception;
          if (cljs.core.truth_(and__3466__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__3466__auto__;
          }
        }())) {
          var statearr_13437_13441 = state;
          statearr_13437_13441[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__13442 = state;
          state = G__13442;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__3466__auto__ = exception;
            if (cljs.core.truth_(and__3466__auto__)) {
              var and__3466__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__3466__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3466__auto____$1;
              }
            } else {
              return and__3466__auto__;
            }
          }())) {
            var statearr_13438 = state;
            statearr_13438[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_13438[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null);
            return statearr_13438;
          } else {
            if (cljs.core.truth_(function() {
              var and__3466__auto__ = cljs.core.not.call(null, exception);
              if (and__3466__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3466__auto__;
              }
            }())) {
              var statearr_13439 = state;
              statearr_13439[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_13439[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null);
              return statearr_13439;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_13440 = state;
                statearr_13440[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_13440[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_13440;
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  if (false) {
                    return null;
                  } else {
                    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("No matching clause"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, false))].join(""));
                  }
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__13387 = cnt + 1;
      cnt = G__13387;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4326__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4326__auto__) {
      var v_13388 = this$.pop();
      if (keep_QMARK_.call(null, v_13388)) {
        this$.unshift(v_13388);
      } else {
      }
      var G__13389 = x + 1;
      x = G__13389;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", -1640531465, null), new cljs.core.Symbol(null, "n", "n", -1640531417, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, this$__$1))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't add to a full buffer"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol("impl", "full?", "impl/full?", -1337857039, null), new cljs.core.Symbol(null, "this", "this", -1636972457, null)))))].join(""));
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    return null;
  } else {
    return self__.buf.unshift(itm);
  }
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.message_channel = null;
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_13376 = 0;
  while (true) {
    var m_13377 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_13377 == null) {
    } else {
      m_13377.call(null);
      if (count_13376 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__13378 = count_13376 + 1;
        count_13376 = G__13378;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
if (typeof MessageChannel !== "undefined") {
  cljs.core.async.impl.dispatch.message_channel = new MessageChannel;
  cljs.core.async.impl.dispatch.message_channel.port1.onmessage = function(msg) {
    return cljs.core.async.impl.dispatch.process_messages.call(null);
  };
} else {
}
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__3466__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (and__3466__auto__) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__3466__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    if (typeof MessageChannel !== "undefined") {
      return cljs.core.async.impl.dispatch.message_channel.port2.postMessage(0);
    } else {
      if (typeof setImmediate !== "undefined") {
        return setImmediate(cljs.core.async.impl.dispatch.process_messages);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return setTimeout(cljs.core.async.impl.dispatch.process_messages, 0);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if (typeof cljs.core.async.impl.channels.t13382 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t13382 = function(val, box, meta13383) {
      this.val = val;
      this.box = box;
      this.meta13383 = meta13383;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t13382.cljs$lang$type = true;
    cljs.core.async.impl.channels.t13382.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t13382";
    cljs.core.async.impl.channels.t13382.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
      return cljs.core._write.call(null, writer__4046__auto__, "cljs.core.async.impl.channels/t13382");
    };
    cljs.core.async.impl.channels.t13382.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t13382.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13384) {
      var self__ = this;
      var _13384__$1 = this;
      return self__.meta13383;
    };
    cljs.core.async.impl.channels.t13382.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13384, meta13383__$1) {
      var self__ = this;
      var _13384__$1 = this;
      return new cljs.core.async.impl.channels.t13382(self__.val, self__.box, meta13383__$1);
    };
    cljs.core.async.impl.channels.__GT_t13382 = function __GT_t13382(val__$1, box__$1, meta13383) {
      return new cljs.core.async.impl.channels.t13382(val__$1, box__$1, meta13383);
    };
  }
  return new cljs.core.async.impl.channels.t13382(val, box, null);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opts__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    while (true) {
      var taker_13385 = self__.takes.pop();
      if (taker_13385 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_13385)) {
          var take_cb_13386 = cljs.core.async.impl.protocols.commit.call(null, taker_13385);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_13386, taker_13385, this$__$1) {
            return function() {
              return take_cb_13386.call(null, null);
            };
          }(take_cb_13386, taker_13385, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      return cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
    } else {
      while (true) {
        var putter = self__.puts.pop();
        if (!(putter == null)) {
          var put_handler = putter.handler;
          var val = putter.val;
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler)) {
            var put_cb = cljs.core.async.impl.protocols.commit.call(null, put_handler);
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, put_cb);
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            continue;
          }
        } else {
          if (self__.closed) {
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            return cljs.core.async.impl.channels.box.call(null, null);
          } else {
            if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
              self__.dirty_takes = 0;
              self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
            } else {
              self__.dirty_takes = self__.dirty_takes + 1;
            }
            if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            } else {
              throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 1395928862, null), new cljs.core.Symbol(null, 
              "takes", "takes", -1530407291, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
            }
            self__.takes.unbounded_unshift(handler);
            return null;
          }
        }
        break;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "val", "val", -1640415014, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, null);
  } else {
    while (true) {
      var taker = self__.takes.pop();
      if (!(taker == null)) {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker)) {
          var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb, _, taker, closed__$1, this$__$1) {
            return function() {
              return take_cb.call(null, val);
            };
          }(take_cb, _, taker, closed__$1, this$__$1));
          return cljs.core.async.impl.channels.box.call(null, null);
        } else {
          continue;
        }
      } else {
        if (!(self__.buf == null || cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val);
          return cljs.core.async.impl.channels.box.call(null, null);
        } else {
          if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_puts = 0;
            self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
          } else {
            self__.dirty_puts = self__.dirty_puts + 1;
          }
          if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
            1395928862, null), new cljs.core.Symbol(null, "puts", "puts", -1637078787, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
          return null;
        }
      }
      break;
    }
  }
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed);
};
cljs.core.async.impl.channels.chan = function chan(buf) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, null);
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0);
  };
  var random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__13340 = level + 1;
        level = G__13340;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level);
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_13341 = 0;
    while (true) {
      if (i_13341 < arr.length) {
        arr[i_13341] = null;
        var G__13342 = i_13341 + 1;
        i_13341 = G__13342;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null);
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4090__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4090__auto__)) {
              var x_SINGLEQUOTE_ = temp__4090__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__13343 = x_SINGLEQUOTE_;
                x__$1 = G__13343;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__13344 = x__$1;
        var G__13345 = k;
        var G__13346 = level - 1;
        var G__13347 = update;
        x = G__13344;
        k = G__13345;
        level = G__13346;
        update = G__13347;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_13348 = self__.level + 1;
      while (true) {
        if (i_13348 <= new_level + 1) {
          update[i_13348] = self__.header;
          var G__13349 = i_13348 + 1;
          i_13348 = G__13349;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_13350 = 0;
    while (true) {
      if (i_13350 <= self__.level) {
        var links_13351 = update[i_13350].forward;
        if (links_13351[i_13350] === x__$1) {
          links_13351[i_13350] = x__$1.forward[i_13350];
          var G__13352 = i_13350 + 1;
          i_13350 = G__13352;
          continue;
        } else {
          var G__13353 = i_13350 + 1;
          i_13350 = G__13353;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__13354 = x_SINGLEQUOTE_;
              x__$1 = G__13354;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__13355 = nx;
        var G__13356 = level__$1 - 1;
        x = G__13355;
        level__$1 = G__13356;
        continue;
      } else {
        var G__13357 = x;
        var G__13358 = level__$1 - 1;
        x = G__13357;
        level__$1 = G__13358;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__13359 = x_SINGLEQUOTE_;
              x__$1 = G__13359;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__13360 = nx;
        var G__13361 = level__$1 - 1;
        x = G__13360;
        level__$1 = G__13361;
        continue;
      } else {
        var G__13362 = x;
        var G__13363 = level__$1 - 1;
        x = G__13362;
        level__$1 = G__13363;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3478__auto__ = cljs.core.truth_(function() {
    var and__3466__auto__ = me;
    if (cljs.core.truth_(and__3466__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__3466__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__3478__auto__)) {
    return or__3478__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__3478__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__3478__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.ioc_helpers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.t10789 !== "undefined") {
  } else {
    cljs.core.async.t10789 = function(f, fn_handler, meta10790) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta10790 = meta10790;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t10789.cljs$lang$type = true;
    cljs.core.async.t10789.cljs$lang$ctorStr = "cljs.core.async/t10789";
    cljs.core.async.t10789.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
      return cljs.core._write.call(null, writer__4046__auto__, "cljs.core.async/t10789");
    };
    cljs.core.async.t10789.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t10789.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t10789.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t10789.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10791) {
      var self__ = this;
      var _10791__$1 = this;
      return self__.meta10790;
    };
    cljs.core.async.t10789.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10791, meta10790__$1) {
      var self__ = this;
      var _10791__$1 = this;
      return new cljs.core.async.t10789(self__.f, self__.fn_handler, meta10790__$1);
    };
    cljs.core.async.__GT_t10789 = function __GT_t10789(f__$1, fn_handler__$1, meta10790) {
      return new cljs.core.async.t10789(f__$1, fn_handler__$1, meta10790);
    };
  }
  return new cljs.core.async.t10789(f, fn_handler, null);
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function unblocking_buffer_QMARK_(buff) {
  var G__10793 = buff;
  if (G__10793) {
    var bit__4128__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3478__auto__ = bit__4128__auto__;
      if (cljs.core.truth_(or__3478__auto__)) {
        return or__3478__auto__;
      } else {
        return G__10793.cljs$core$async$impl$protocols$UnblockingBuffer$;
      }
    }())) {
      return true;
    } else {
      if (!G__10793.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__10793);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__10793);
  }
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null);
  };
  var chan__1 = function(buf_or_n) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1);
  };
  chan = function(buf_or_n) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  return chan;
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  if (null) {
    return null;
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3c! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true);
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(ret)) {
      var val_10794 = cljs.core.deref.call(null, ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_10794);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(val_10794, ret) {
          return function() {
            return fn1.call(null, val_10794);
          };
        }(val_10794, ret));
      }
    } else {
    }
    return null;
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_;
}();
cljs.core.async.nop = function nop() {
  return null;
};
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  if (null) {
    return null;
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3e! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    return put_BANG_.call(null, port, val, cljs.core.async.nop);
  };
  var put_BANG___3 = function(port, val, fn0) {
    return put_BANG_.call(null, port, val, fn0, true);
  };
  var put_BANG___4 = function(port, val, fn0, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn0));
    if (cljs.core.truth_(function() {
      var and__3466__auto__ = ret;
      if (cljs.core.truth_(and__3466__auto__)) {
        return cljs.core.not_EQ_.call(null, fn0, cljs.core.async.nop);
      } else {
        return and__3466__auto__;
      }
    }())) {
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn0.call(null);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, fn0);
      }
    } else {
    }
    return null;
  };
  put_BANG_ = function(port, val, fn0, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn0);
      case 4:
        return put_BANG___4.call(this, port, val, fn0, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_;
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4326__auto___10795 = n;
  var x_10796 = 0;
  while (true) {
    if (x_10796 < n__4326__auto___10795) {
      a[x_10796] = 0;
      var G__10797 = x_10796 + 1;
      x_10796 = G__10797;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__10798 = i + 1;
      i = G__10798;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t10802 !== "undefined") {
  } else {
    cljs.core.async.t10802 = function(flag, alt_flag, meta10803) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta10803 = meta10803;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t10802.cljs$lang$type = true;
    cljs.core.async.t10802.cljs$lang$ctorStr = "cljs.core.async/t10802";
    cljs.core.async.t10802.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
        return cljs.core._write.call(null, writer__4046__auto__, "cljs.core.async/t10802");
      };
    }(flag);
    cljs.core.async.t10802.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t10802.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t10802.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t10802.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_10804) {
        var self__ = this;
        var _10804__$1 = this;
        return self__.meta10803;
      };
    }(flag);
    cljs.core.async.t10802.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_10804, meta10803__$1) {
        var self__ = this;
        var _10804__$1 = this;
        return new cljs.core.async.t10802(self__.flag, self__.alt_flag, meta10803__$1);
      };
    }(flag);
    cljs.core.async.__GT_t10802 = function(flag) {
      return function __GT_t10802(flag__$1, alt_flag__$1, meta10803) {
        return new cljs.core.async.t10802(flag__$1, alt_flag__$1, meta10803);
      };
    }(flag);
  }
  return new cljs.core.async.t10802(flag, alt_flag, null);
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if (typeof cljs.core.async.t10808 !== "undefined") {
  } else {
    cljs.core.async.t10808 = function(cb, flag, alt_handler, meta10809) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta10809 = meta10809;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t10808.cljs$lang$type = true;
    cljs.core.async.t10808.cljs$lang$ctorStr = "cljs.core.async/t10808";
    cljs.core.async.t10808.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
      return cljs.core._write.call(null, writer__4046__auto__, "cljs.core.async/t10808");
    };
    cljs.core.async.t10808.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t10808.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t10808.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t10808.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10810) {
      var self__ = this;
      var _10810__$1 = this;
      return self__.meta10809;
    };
    cljs.core.async.t10808.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10810, meta10809__$1) {
      var self__ = this;
      var _10810__$1 = this;
      return new cljs.core.async.t10808(self__.cb, self__.flag, self__.alt_handler, meta10809__$1);
    };
    cljs.core.async.__GT_t10808 = function __GT_t10808(cb__$1, flag__$1, alt_handler__$1, meta10809) {
      return new cljs.core.async.t10808(cb__$1, flag__$1, alt_handler__$1, meta10809);
    };
  }
  return new cljs.core.async.t10808(cb, flag, alt_handler, null);
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 4143410454)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function() {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__10811_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__10811_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__3478__auto__ = wport;
            if (cljs.core.truth_(or__3478__auto__)) {
              return or__3478__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__10812 = i + 1;
          i = G__10812;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__3478__auto__ = ret;
  if (cljs.core.truth_(or__3478__auto__)) {
    return or__3478__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
      var temp__4092__auto__ = function() {
        var and__3466__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__3466__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__3466__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4092__auto__)) {
        var got = temp__4092__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", 2558708147)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", 2558708147)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__10813) {
    var map__10815 = p__10813;
    var map__10815__$1 = cljs.core.seq_QMARK_.call(null, map__10815) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10815) : map__10815;
    var opts = map__10815__$1;
    if (null) {
      return null;
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("alts! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
    }
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__10813 = null;
    if (arguments.length > 1) {
      p__10813 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return alts_BANG___delegate.call(this, ports, p__10813);
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__10816) {
    var ports = cljs.core.first(arglist__10816);
    var p__10813 = cljs.core.rest(arglist__10816);
    return alts_BANG___delegate(ports, p__10813);
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_;
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if (typeof cljs.core.async.t10824 !== "undefined") {
  } else {
    cljs.core.async.t10824 = function(ch, f, map_LT_, meta10825) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta10825 = meta10825;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t10824.cljs$lang$type = true;
    cljs.core.async.t10824.cljs$lang$ctorStr = "cljs.core.async/t10824";
    cljs.core.async.t10824.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
      return cljs.core._write.call(null, writer__4046__auto__, "cljs.core.async/t10824");
    };
    cljs.core.async.t10824.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t10824.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0);
    };
    cljs.core.async.t10824.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t10824.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t10827 !== "undefined") {
        } else {
          cljs.core.async.t10827 = function(fn1, _, meta10825, ch, f, map_LT_, meta10828) {
            this.fn1 = fn1;
            this._ = _;
            this.meta10825 = meta10825;
            this.ch = ch;
            this.f = f;
            this.map_LT_ = map_LT_;
            this.meta10828 = meta10828;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t10827.cljs$lang$type = true;
          cljs.core.async.t10827.cljs$lang$ctorStr = "cljs.core.async/t10827";
          cljs.core.async.t10827.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
              return cljs.core._write.call(null, writer__4046__auto__, "cljs.core.async/t10827");
            };
          }(___$1);
          cljs.core.async.t10827.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t10827.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t10827.prototype.cljs$core$async$impl$protocols$Handler$lock_id$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              return cljs.core.async.impl.protocols.lock_id.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t10827.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$4, ___$1) {
                return function(p1__10817_SHARP_) {
                  return f1.call(null, p1__10817_SHARP_ == null ? null : self__.f.call(null, p1__10817_SHARP_));
                };
              }(f1, ___$4, ___$1);
            };
          }(___$1);
          cljs.core.async.t10827.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_10829) {
              var self__ = this;
              var _10829__$1 = this;
              return self__.meta10828;
            };
          }(___$1);
          cljs.core.async.t10827.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_10829, meta10828__$1) {
              var self__ = this;
              var _10829__$1 = this;
              return new cljs.core.async.t10827(self__.fn1, self__._, self__.meta10825, self__.ch, self__.f, self__.map_LT_, meta10828__$1);
            };
          }(___$1);
          cljs.core.async.__GT_t10827 = function(___$1) {
            return function __GT_t10827(fn1__$1, ___$2, meta10825__$1, ch__$2, f__$2, map_LT___$2, meta10828) {
              return new cljs.core.async.t10827(fn1__$1, ___$2, meta10825__$1, ch__$2, f__$2, map_LT___$2, meta10828);
            };
          }(___$1);
        }
        return new cljs.core.async.t10827(fn1, ___$1, self__.meta10825, self__.ch, self__.f, self__.map_LT_, null);
      }());
      if (cljs.core.truth_(function() {
        var and__3466__auto__ = ret;
        if (cljs.core.truth_(and__3466__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__3466__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t10824.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t10824.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t10824.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10826) {
      var self__ = this;
      var _10826__$1 = this;
      return self__.meta10825;
    };
    cljs.core.async.t10824.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10826, meta10825__$1) {
      var self__ = this;
      var _10826__$1 = this;
      return new cljs.core.async.t10824(self__.ch, self__.f, self__.map_LT_, meta10825__$1);
    };
    cljs.core.async.__GT_t10824 = function __GT_t10824(ch__$1, f__$1, map_LT___$1, meta10825) {
      return new cljs.core.async.t10824(ch__$1, f__$1, map_LT___$1, meta10825);
    };
  }
  return new cljs.core.async.t10824(ch, f, map_LT_, null);
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if (typeof cljs.core.async.t10833 !== "undefined") {
  } else {
    cljs.core.async.t10833 = function(ch, f, map_GT_, meta10834) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta10834 = meta10834;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t10833.cljs$lang$type = true;
    cljs.core.async.t10833.cljs$lang$ctorStr = "cljs.core.async/t10833";
    cljs.core.async.t10833.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
      return cljs.core._write.call(null, writer__4046__auto__, "cljs.core.async/t10833");
    };
    cljs.core.async.t10833.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t10833.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn0);
    };
    cljs.core.async.t10833.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t10833.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t10833.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t10833.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t10833.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10835) {
      var self__ = this;
      var _10835__$1 = this;
      return self__.meta10834;
    };
    cljs.core.async.t10833.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10835, meta10834__$1) {
      var self__ = this;
      var _10835__$1 = this;
      return new cljs.core.async.t10833(self__.ch, self__.f, self__.map_GT_, meta10834__$1);
    };
    cljs.core.async.__GT_t10833 = function __GT_t10833(ch__$1, f__$1, map_GT___$1, meta10834) {
      return new cljs.core.async.t10833(ch__$1, f__$1, map_GT___$1, meta10834);
    };
  }
  return new cljs.core.async.t10833(ch, f, map_GT_, null);
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if (typeof cljs.core.async.t10839 !== "undefined") {
  } else {
    cljs.core.async.t10839 = function(ch, p, filter_GT_, meta10840) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta10840 = meta10840;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t10839.cljs$lang$type = true;
    cljs.core.async.t10839.cljs$lang$ctorStr = "cljs.core.async/t10839";
    cljs.core.async.t10839.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
      return cljs.core._write.call(null, writer__4046__auto__, "cljs.core.async/t10839");
    };
    cljs.core.async.t10839.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t10839.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0);
      } else {
        return cljs.core.async.impl.channels.box.call(null, null);
      }
    };
    cljs.core.async.t10839.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t10839.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t10839.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t10839.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t10839.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10841) {
      var self__ = this;
      var _10841__$1 = this;
      return self__.meta10840;
    };
    cljs.core.async.t10839.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10841, meta10840__$1) {
      var self__ = this;
      var _10841__$1 = this;
      return new cljs.core.async.t10839(self__.ch, self__.p, self__.filter_GT_, meta10840__$1);
    };
    cljs.core.async.__GT_t10839 = function __GT_t10839(ch__$1, p__$1, filter_GT___$1, meta10840) {
      return new cljs.core.async.t10839(ch__$1, p__$1, filter_GT___$1, meta10840);
    };
  }
  return new cljs.core.async.t10839(ch, p, filter_GT_, null);
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null);
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6248__auto___10924 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6248__auto___10924, out) {
      return function() {
        var f__6249__auto__ = function() {
          var switch__6233__auto__ = function(c__6248__auto___10924, out) {
            return function(state_10903) {
              var state_val_10904 = state_10903[1];
              if (state_val_10904 === 1) {
                var state_10903__$1 = state_10903;
                var statearr_10905_10925 = state_10903__$1;
                statearr_10905_10925[2] = null;
                statearr_10905_10925[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_10904 === 2) {
                  var state_10903__$1 = state_10903;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10903__$1, 4, ch);
                } else {
                  if (state_val_10904 === 3) {
                    var inst_10901 = state_10903[2];
                    var state_10903__$1 = state_10903;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10903__$1, inst_10901);
                  } else {
                    if (state_val_10904 === 4) {
                      var inst_10885 = state_10903[7];
                      var inst_10885__$1 = state_10903[2];
                      var inst_10886 = inst_10885__$1 == null;
                      var state_10903__$1 = function() {
                        var statearr_10906 = state_10903;
                        statearr_10906[7] = inst_10885__$1;
                        return statearr_10906;
                      }();
                      if (cljs.core.truth_(inst_10886)) {
                        var statearr_10907_10926 = state_10903__$1;
                        statearr_10907_10926[1] = 5;
                      } else {
                        var statearr_10908_10927 = state_10903__$1;
                        statearr_10908_10927[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_10904 === 5) {
                        var inst_10888 = cljs.core.async.close_BANG_.call(null, out);
                        var state_10903__$1 = state_10903;
                        var statearr_10909_10928 = state_10903__$1;
                        statearr_10909_10928[2] = inst_10888;
                        statearr_10909_10928[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_10904 === 6) {
                          var inst_10885 = state_10903[7];
                          var inst_10890 = p.call(null, inst_10885);
                          var state_10903__$1 = state_10903;
                          if (cljs.core.truth_(inst_10890)) {
                            var statearr_10910_10929 = state_10903__$1;
                            statearr_10910_10929[1] = 8;
                          } else {
                            var statearr_10911_10930 = state_10903__$1;
                            statearr_10911_10930[1] = 9;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_10904 === 7) {
                            var inst_10899 = state_10903[2];
                            var state_10903__$1 = state_10903;
                            var statearr_10912_10931 = state_10903__$1;
                            statearr_10912_10931[2] = inst_10899;
                            statearr_10912_10931[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_10904 === 8) {
                              var inst_10885 = state_10903[7];
                              var state_10903__$1 = state_10903;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_10903__$1, 11, out, inst_10885);
                            } else {
                              if (state_val_10904 === 9) {
                                var state_10903__$1 = state_10903;
                                var statearr_10913_10932 = state_10903__$1;
                                statearr_10913_10932[2] = null;
                                statearr_10913_10932[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_10904 === 10) {
                                  var inst_10896 = state_10903[2];
                                  var state_10903__$1 = function() {
                                    var statearr_10914 = state_10903;
                                    statearr_10914[8] = inst_10896;
                                    return statearr_10914;
                                  }();
                                  var statearr_10915_10933 = state_10903__$1;
                                  statearr_10915_10933[2] = null;
                                  statearr_10915_10933[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_10904 === 11) {
                                    var inst_10893 = state_10903[2];
                                    var state_10903__$1 = state_10903;
                                    var statearr_10916_10934 = state_10903__$1;
                                    statearr_10916_10934[2] = inst_10893;
                                    statearr_10916_10934[1] = 10;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6248__auto___10924, out);
          return function(switch__6233__auto__, c__6248__auto___10924, out) {
            return function() {
              var state_machine__6234__auto__ = null;
              var state_machine__6234__auto____0 = function() {
                var statearr_10920 = [null, null, null, null, null, null, null, null, null];
                statearr_10920[0] = state_machine__6234__auto__;
                statearr_10920[1] = 1;
                return statearr_10920;
              };
              var state_machine__6234__auto____1 = function(state_10903) {
                while (true) {
                  var ret_value__6235__auto__ = function() {
                    try {
                      while (true) {
                        var result__6236__auto__ = switch__6233__auto__.call(null, state_10903);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6236__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6236__auto__;
                        }
                        break;
                      }
                    } catch (e10921) {
                      if (e10921 instanceof Object) {
                        var ex__6237__auto__ = e10921;
                        var statearr_10922_10935 = state_10903;
                        statearr_10922_10935[5] = ex__6237__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10903);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e10921;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6235__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__10936 = state_10903;
                    state_10903 = G__10936;
                    continue;
                  } else {
                    return ret_value__6235__auto__;
                  }
                  break;
                }
              };
              state_machine__6234__auto__ = function(state_10903) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6234__auto____0.call(this);
                  case 1:
                    return state_machine__6234__auto____1.call(this, state_10903);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6234__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6234__auto____0;
              state_machine__6234__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6234__auto____1;
              return state_machine__6234__auto__;
            }();
          }(switch__6233__auto__, c__6248__auto___10924, out);
        }();
        var state__6250__auto__ = function() {
          var statearr_10923 = f__6249__auto__.call(null);
          statearr_10923[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6248__auto___10924;
          return statearr_10923;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6250__auto__);
      };
    }(c__6248__auto___10924, out));
    return out;
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null);
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__6248__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6248__auto__) {
    return function() {
      var f__6249__auto__ = function() {
        var switch__6233__auto__ = function(c__6248__auto__) {
          return function(state_11088) {
            var state_val_11089 = state_11088[1];
            if (state_val_11089 === 1) {
              var state_11088__$1 = state_11088;
              var statearr_11090_11127 = state_11088__$1;
              statearr_11090_11127[2] = null;
              statearr_11090_11127[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_11089 === 2) {
                var state_11088__$1 = state_11088;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11088__$1, 4, in$);
              } else {
                if (state_val_11089 === 3) {
                  var inst_11086 = state_11088[2];
                  var state_11088__$1 = state_11088;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11088__$1, inst_11086);
                } else {
                  if (state_val_11089 === 4) {
                    var inst_11034 = state_11088[7];
                    var inst_11034__$1 = state_11088[2];
                    var inst_11035 = inst_11034__$1 == null;
                    var state_11088__$1 = function() {
                      var statearr_11091 = state_11088;
                      statearr_11091[7] = inst_11034__$1;
                      return statearr_11091;
                    }();
                    if (cljs.core.truth_(inst_11035)) {
                      var statearr_11092_11128 = state_11088__$1;
                      statearr_11092_11128[1] = 5;
                    } else {
                      var statearr_11093_11129 = state_11088__$1;
                      statearr_11093_11129[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_11089 === 5) {
                      var inst_11037 = cljs.core.async.close_BANG_.call(null, out);
                      var state_11088__$1 = state_11088;
                      var statearr_11094_11130 = state_11088__$1;
                      statearr_11094_11130[2] = inst_11037;
                      statearr_11094_11130[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_11089 === 6) {
                        var inst_11034 = state_11088[7];
                        var inst_11039 = f.call(null, inst_11034);
                        var inst_11044 = cljs.core.seq.call(null, inst_11039);
                        var inst_11045 = inst_11044;
                        var inst_11046 = null;
                        var inst_11047 = 0;
                        var inst_11048 = 0;
                        var state_11088__$1 = function() {
                          var statearr_11095 = state_11088;
                          statearr_11095[8] = inst_11048;
                          statearr_11095[9] = inst_11047;
                          statearr_11095[10] = inst_11046;
                          statearr_11095[11] = inst_11045;
                          return statearr_11095;
                        }();
                        var statearr_11096_11131 = state_11088__$1;
                        statearr_11096_11131[2] = null;
                        statearr_11096_11131[1] = 8;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_11089 === 7) {
                          var inst_11084 = state_11088[2];
                          var state_11088__$1 = state_11088;
                          var statearr_11097_11132 = state_11088__$1;
                          statearr_11097_11132[2] = inst_11084;
                          statearr_11097_11132[1] = 3;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_11089 === 8) {
                            var inst_11048 = state_11088[8];
                            var inst_11047 = state_11088[9];
                            var inst_11050 = inst_11048 < inst_11047;
                            var inst_11051 = inst_11050;
                            var state_11088__$1 = state_11088;
                            if (cljs.core.truth_(inst_11051)) {
                              var statearr_11098_11133 = state_11088__$1;
                              statearr_11098_11133[1] = 10;
                            } else {
                              var statearr_11099_11134 = state_11088__$1;
                              statearr_11099_11134[1] = 11;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_11089 === 9) {
                              var inst_11081 = state_11088[2];
                              var state_11088__$1 = function() {
                                var statearr_11100 = state_11088;
                                statearr_11100[12] = inst_11081;
                                return statearr_11100;
                              }();
                              var statearr_11101_11135 = state_11088__$1;
                              statearr_11101_11135[2] = null;
                              statearr_11101_11135[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_11089 === 10) {
                                var inst_11048 = state_11088[8];
                                var inst_11046 = state_11088[10];
                                var inst_11053 = cljs.core._nth.call(null, inst_11046, inst_11048);
                                var state_11088__$1 = state_11088;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11088__$1, 13, out, inst_11053);
                              } else {
                                if (state_val_11089 === 11) {
                                  var inst_11059 = state_11088[13];
                                  var inst_11045 = state_11088[11];
                                  var inst_11059__$1 = cljs.core.seq.call(null, inst_11045);
                                  var state_11088__$1 = function() {
                                    var statearr_11105 = state_11088;
                                    statearr_11105[13] = inst_11059__$1;
                                    return statearr_11105;
                                  }();
                                  if (inst_11059__$1) {
                                    var statearr_11106_11136 = state_11088__$1;
                                    statearr_11106_11136[1] = 14;
                                  } else {
                                    var statearr_11107_11137 = state_11088__$1;
                                    statearr_11107_11137[1] = 15;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_11089 === 12) {
                                    var inst_11079 = state_11088[2];
                                    var state_11088__$1 = state_11088;
                                    var statearr_11108_11138 = state_11088__$1;
                                    statearr_11108_11138[2] = inst_11079;
                                    statearr_11108_11138[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_11089 === 13) {
                                      var inst_11048 = state_11088[8];
                                      var inst_11047 = state_11088[9];
                                      var inst_11046 = state_11088[10];
                                      var inst_11045 = state_11088[11];
                                      var inst_11055 = state_11088[2];
                                      var inst_11056 = inst_11048 + 1;
                                      var tmp11102 = inst_11047;
                                      var tmp11103 = inst_11046;
                                      var tmp11104 = inst_11045;
                                      var inst_11045__$1 = tmp11104;
                                      var inst_11046__$1 = tmp11103;
                                      var inst_11047__$1 = tmp11102;
                                      var inst_11048__$1 = inst_11056;
                                      var state_11088__$1 = function() {
                                        var statearr_11109 = state_11088;
                                        statearr_11109[14] = inst_11055;
                                        statearr_11109[8] = inst_11048__$1;
                                        statearr_11109[9] = inst_11047__$1;
                                        statearr_11109[10] = inst_11046__$1;
                                        statearr_11109[11] = inst_11045__$1;
                                        return statearr_11109;
                                      }();
                                      var statearr_11110_11139 = state_11088__$1;
                                      statearr_11110_11139[2] = null;
                                      statearr_11110_11139[1] = 8;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_11089 === 14) {
                                        var inst_11059 = state_11088[13];
                                        var inst_11061 = cljs.core.chunked_seq_QMARK_.call(null, inst_11059);
                                        var state_11088__$1 = state_11088;
                                        if (inst_11061) {
                                          var statearr_11111_11140 = state_11088__$1;
                                          statearr_11111_11140[1] = 17;
                                        } else {
                                          var statearr_11112_11141 = state_11088__$1;
                                          statearr_11112_11141[1] = 18;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_11089 === 15) {
                                          var state_11088__$1 = state_11088;
                                          var statearr_11113_11142 = state_11088__$1;
                                          statearr_11113_11142[2] = null;
                                          statearr_11113_11142[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_11089 === 16) {
                                            var inst_11077 = state_11088[2];
                                            var state_11088__$1 = state_11088;
                                            var statearr_11114_11143 = state_11088__$1;
                                            statearr_11114_11143[2] = inst_11077;
                                            statearr_11114_11143[1] = 12;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_11089 === 17) {
                                              var inst_11059 = state_11088[13];
                                              var inst_11063 = cljs.core.chunk_first.call(null, inst_11059);
                                              var inst_11064 = cljs.core.chunk_rest.call(null, inst_11059);
                                              var inst_11065 = cljs.core.count.call(null, inst_11063);
                                              var inst_11045 = inst_11064;
                                              var inst_11046 = inst_11063;
                                              var inst_11047 = inst_11065;
                                              var inst_11048 = 0;
                                              var state_11088__$1 = function() {
                                                var statearr_11115 = state_11088;
                                                statearr_11115[8] = inst_11048;
                                                statearr_11115[9] = inst_11047;
                                                statearr_11115[10] = inst_11046;
                                                statearr_11115[11] = inst_11045;
                                                return statearr_11115;
                                              }();
                                              var statearr_11116_11144 = state_11088__$1;
                                              statearr_11116_11144[2] = null;
                                              statearr_11116_11144[1] = 8;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_11089 === 18) {
                                                var inst_11059 = state_11088[13];
                                                var inst_11068 = cljs.core.first.call(null, inst_11059);
                                                var state_11088__$1 = state_11088;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11088__$1, 20, out, inst_11068);
                                              } else {
                                                if (state_val_11089 === 19) {
                                                  var inst_11074 = state_11088[2];
                                                  var state_11088__$1 = state_11088;
                                                  var statearr_11117_11145 = state_11088__$1;
                                                  statearr_11117_11145[2] = inst_11074;
                                                  statearr_11117_11145[1] = 16;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_11089 === 20) {
                                                    var inst_11059 = state_11088[13];
                                                    var inst_11070 = state_11088[2];
                                                    var inst_11071 = cljs.core.next.call(null, inst_11059);
                                                    var inst_11045 = inst_11071;
                                                    var inst_11046 = null;
                                                    var inst_11047 = 0;
                                                    var inst_11048 = 0;
                                                    var state_11088__$1 = function() {
                                                      var statearr_11118 = state_11088;
                                                      statearr_11118[8] = inst_11048;
                                                      statearr_11118[15] = inst_11070;
                                                      statearr_11118[9] = inst_11047;
                                                      statearr_11118[10] = inst_11046;
                                                      statearr_11118[11] = inst_11045;
                                                      return statearr_11118;
                                                    }();
                                                    var statearr_11119_11146 = state_11088__$1;
                                                    statearr_11119_11146[2] = null;
                                                    statearr_11119_11146[1] = 8;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    return null;
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6248__auto__);
        return function(switch__6233__auto__, c__6248__auto__) {
          return function() {
            var state_machine__6234__auto__ = null;
            var state_machine__6234__auto____0 = function() {
              var statearr_11123 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_11123[0] = state_machine__6234__auto__;
              statearr_11123[1] = 1;
              return statearr_11123;
            };
            var state_machine__6234__auto____1 = function(state_11088) {
              while (true) {
                var ret_value__6235__auto__ = function() {
                  try {
                    while (true) {
                      var result__6236__auto__ = switch__6233__auto__.call(null, state_11088);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6236__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6236__auto__;
                      }
                      break;
                    }
                  } catch (e11124) {
                    if (e11124 instanceof Object) {
                      var ex__6237__auto__ = e11124;
                      var statearr_11125_11147 = state_11088;
                      statearr_11125_11147[5] = ex__6237__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11088);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e11124;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6235__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__11148 = state_11088;
                  state_11088 = G__11148;
                  continue;
                } else {
                  return ret_value__6235__auto__;
                }
                break;
              }
            };
            state_machine__6234__auto__ = function(state_11088) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6234__auto____0.call(this);
                case 1:
                  return state_machine__6234__auto____1.call(this, state_11088);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6234__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6234__auto____0;
            state_machine__6234__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6234__auto____1;
            return state_machine__6234__auto__;
          }();
        }(switch__6233__auto__, c__6248__auto__);
      }();
      var state__6250__auto__ = function() {
        var statearr_11126 = f__6249__auto__.call(null);
        statearr_11126[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6248__auto__;
        return statearr_11126;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6250__auto__);
    };
  }(c__6248__auto__));
  return c__6248__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null);
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out;
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null);
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$;
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_;
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true);
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__6248__auto___11229 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6248__auto___11229) {
      return function() {
        var f__6249__auto__ = function() {
          var switch__6233__auto__ = function(c__6248__auto___11229) {
            return function(state_11208) {
              var state_val_11209 = state_11208[1];
              if (state_val_11209 === 1) {
                var state_11208__$1 = state_11208;
                var statearr_11210_11230 = state_11208__$1;
                statearr_11210_11230[2] = null;
                statearr_11210_11230[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_11209 === 2) {
                  var state_11208__$1 = state_11208;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11208__$1, 4, from);
                } else {
                  if (state_val_11209 === 3) {
                    var inst_11206 = state_11208[2];
                    var state_11208__$1 = state_11208;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11208__$1, inst_11206);
                  } else {
                    if (state_val_11209 === 4) {
                      var inst_11191 = state_11208[7];
                      var inst_11191__$1 = state_11208[2];
                      var inst_11192 = inst_11191__$1 == null;
                      var state_11208__$1 = function() {
                        var statearr_11211 = state_11208;
                        statearr_11211[7] = inst_11191__$1;
                        return statearr_11211;
                      }();
                      if (cljs.core.truth_(inst_11192)) {
                        var statearr_11212_11231 = state_11208__$1;
                        statearr_11212_11231[1] = 5;
                      } else {
                        var statearr_11213_11232 = state_11208__$1;
                        statearr_11213_11232[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_11209 === 5) {
                        var state_11208__$1 = state_11208;
                        if (cljs.core.truth_(close_QMARK_)) {
                          var statearr_11214_11233 = state_11208__$1;
                          statearr_11214_11233[1] = 8;
                        } else {
                          var statearr_11215_11234 = state_11208__$1;
                          statearr_11215_11234[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_11209 === 6) {
                          var inst_11191 = state_11208[7];
                          var state_11208__$1 = state_11208;
                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11208__$1, 11, to, inst_11191);
                        } else {
                          if (state_val_11209 === 7) {
                            var inst_11204 = state_11208[2];
                            var state_11208__$1 = state_11208;
                            var statearr_11216_11235 = state_11208__$1;
                            statearr_11216_11235[2] = inst_11204;
                            statearr_11216_11235[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_11209 === 8) {
                              var inst_11195 = cljs.core.async.close_BANG_.call(null, to);
                              var state_11208__$1 = state_11208;
                              var statearr_11217_11236 = state_11208__$1;
                              statearr_11217_11236[2] = inst_11195;
                              statearr_11217_11236[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_11209 === 9) {
                                var state_11208__$1 = state_11208;
                                var statearr_11218_11237 = state_11208__$1;
                                statearr_11218_11237[2] = null;
                                statearr_11218_11237[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_11209 === 10) {
                                  var inst_11198 = state_11208[2];
                                  var state_11208__$1 = state_11208;
                                  var statearr_11219_11238 = state_11208__$1;
                                  statearr_11219_11238[2] = inst_11198;
                                  statearr_11219_11238[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_11209 === 11) {
                                    var inst_11201 = state_11208[2];
                                    var state_11208__$1 = function() {
                                      var statearr_11220 = state_11208;
                                      statearr_11220[8] = inst_11201;
                                      return statearr_11220;
                                    }();
                                    var statearr_11221_11239 = state_11208__$1;
                                    statearr_11221_11239[2] = null;
                                    statearr_11221_11239[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6248__auto___11229);
          return function(switch__6233__auto__, c__6248__auto___11229) {
            return function() {
              var state_machine__6234__auto__ = null;
              var state_machine__6234__auto____0 = function() {
                var statearr_11225 = [null, null, null, null, null, null, null, null, null];
                statearr_11225[0] = state_machine__6234__auto__;
                statearr_11225[1] = 1;
                return statearr_11225;
              };
              var state_machine__6234__auto____1 = function(state_11208) {
                while (true) {
                  var ret_value__6235__auto__ = function() {
                    try {
                      while (true) {
                        var result__6236__auto__ = switch__6233__auto__.call(null, state_11208);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6236__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6236__auto__;
                        }
                        break;
                      }
                    } catch (e11226) {
                      if (e11226 instanceof Object) {
                        var ex__6237__auto__ = e11226;
                        var statearr_11227_11240 = state_11208;
                        statearr_11227_11240[5] = ex__6237__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11208);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e11226;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6235__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__11241 = state_11208;
                    state_11208 = G__11241;
                    continue;
                  } else {
                    return ret_value__6235__auto__;
                  }
                  break;
                }
              };
              state_machine__6234__auto__ = function(state_11208) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6234__auto____0.call(this);
                  case 1:
                    return state_machine__6234__auto____1.call(this, state_11208);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6234__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6234__auto____0;
              state_machine__6234__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6234__auto____1;
              return state_machine__6234__auto__;
            }();
          }(switch__6233__auto__, c__6248__auto___11229);
        }();
        var state__6250__auto__ = function() {
          var statearr_11228 = f__6249__auto__.call(null);
          statearr_11228[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6248__auto___11229;
          return statearr_11228;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6250__auto__);
      };
    }(c__6248__auto___11229));
    return to;
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe;
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null);
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__6248__auto___11328 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6248__auto___11328, tc, fc) {
      return function() {
        var f__6249__auto__ = function() {
          var switch__6233__auto__ = function(c__6248__auto___11328, tc, fc) {
            return function(state_11306) {
              var state_val_11307 = state_11306[1];
              if (state_val_11307 === 1) {
                var state_11306__$1 = state_11306;
                var statearr_11308_11329 = state_11306__$1;
                statearr_11308_11329[2] = null;
                statearr_11308_11329[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_11307 === 2) {
                  var state_11306__$1 = state_11306;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11306__$1, 4, ch);
                } else {
                  if (state_val_11307 === 3) {
                    var inst_11304 = state_11306[2];
                    var state_11306__$1 = state_11306;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11306__$1, inst_11304);
                  } else {
                    if (state_val_11307 === 4) {
                      var inst_11287 = state_11306[7];
                      var inst_11287__$1 = state_11306[2];
                      var inst_11288 = inst_11287__$1 == null;
                      var state_11306__$1 = function() {
                        var statearr_11309 = state_11306;
                        statearr_11309[7] = inst_11287__$1;
                        return statearr_11309;
                      }();
                      if (cljs.core.truth_(inst_11288)) {
                        var statearr_11310_11330 = state_11306__$1;
                        statearr_11310_11330[1] = 5;
                      } else {
                        var statearr_11311_11331 = state_11306__$1;
                        statearr_11311_11331[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_11307 === 5) {
                        var inst_11290 = cljs.core.async.close_BANG_.call(null, tc);
                        var inst_11291 = cljs.core.async.close_BANG_.call(null, fc);
                        var state_11306__$1 = function() {
                          var statearr_11312 = state_11306;
                          statearr_11312[8] = inst_11290;
                          return statearr_11312;
                        }();
                        var statearr_11313_11332 = state_11306__$1;
                        statearr_11313_11332[2] = inst_11291;
                        statearr_11313_11332[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_11307 === 6) {
                          var inst_11287 = state_11306[7];
                          var inst_11293 = p.call(null, inst_11287);
                          var state_11306__$1 = state_11306;
                          if (cljs.core.truth_(inst_11293)) {
                            var statearr_11314_11333 = state_11306__$1;
                            statearr_11314_11333[1] = 9;
                          } else {
                            var statearr_11315_11334 = state_11306__$1;
                            statearr_11315_11334[1] = 10;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_11307 === 7) {
                            var inst_11302 = state_11306[2];
                            var state_11306__$1 = state_11306;
                            var statearr_11316_11335 = state_11306__$1;
                            statearr_11316_11335[2] = inst_11302;
                            statearr_11316_11335[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_11307 === 8) {
                              var inst_11299 = state_11306[2];
                              var state_11306__$1 = function() {
                                var statearr_11317 = state_11306;
                                statearr_11317[9] = inst_11299;
                                return statearr_11317;
                              }();
                              var statearr_11318_11336 = state_11306__$1;
                              statearr_11318_11336[2] = null;
                              statearr_11318_11336[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_11307 === 9) {
                                var state_11306__$1 = state_11306;
                                var statearr_11319_11337 = state_11306__$1;
                                statearr_11319_11337[2] = tc;
                                statearr_11319_11337[1] = 11;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_11307 === 10) {
                                  var state_11306__$1 = state_11306;
                                  var statearr_11320_11338 = state_11306__$1;
                                  statearr_11320_11338[2] = fc;
                                  statearr_11320_11338[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_11307 === 11) {
                                    var inst_11287 = state_11306[7];
                                    var inst_11297 = state_11306[2];
                                    var state_11306__$1 = state_11306;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11306__$1, 8, inst_11297, inst_11287);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6248__auto___11328, tc, fc);
          return function(switch__6233__auto__, c__6248__auto___11328, tc, fc) {
            return function() {
              var state_machine__6234__auto__ = null;
              var state_machine__6234__auto____0 = function() {
                var statearr_11324 = [null, null, null, null, null, null, null, null, null, null];
                statearr_11324[0] = state_machine__6234__auto__;
                statearr_11324[1] = 1;
                return statearr_11324;
              };
              var state_machine__6234__auto____1 = function(state_11306) {
                while (true) {
                  var ret_value__6235__auto__ = function() {
                    try {
                      while (true) {
                        var result__6236__auto__ = switch__6233__auto__.call(null, state_11306);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6236__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6236__auto__;
                        }
                        break;
                      }
                    } catch (e11325) {
                      if (e11325 instanceof Object) {
                        var ex__6237__auto__ = e11325;
                        var statearr_11326_11339 = state_11306;
                        statearr_11326_11339[5] = ex__6237__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11306);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e11325;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6235__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__11340 = state_11306;
                    state_11306 = G__11340;
                    continue;
                  } else {
                    return ret_value__6235__auto__;
                  }
                  break;
                }
              };
              state_machine__6234__auto__ = function(state_11306) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6234__auto____0.call(this);
                  case 1:
                    return state_machine__6234__auto____1.call(this, state_11306);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6234__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6234__auto____0;
              state_machine__6234__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6234__auto____1;
              return state_machine__6234__auto__;
            }();
          }(switch__6233__auto__, c__6248__auto___11328, tc, fc);
        }();
        var state__6250__auto__ = function() {
          var statearr_11327 = f__6249__auto__.call(null);
          statearr_11327[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6248__auto___11328;
          return statearr_11327;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6250__auto__);
      };
    }(c__6248__auto___11328, tc, fc));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split;
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__6248__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6248__auto__) {
    return function() {
      var f__6249__auto__ = function() {
        var switch__6233__auto__ = function(c__6248__auto__) {
          return function(state_11387) {
            var state_val_11388 = state_11387[1];
            if (state_val_11388 === 7) {
              var inst_11383 = state_11387[2];
              var state_11387__$1 = state_11387;
              var statearr_11389_11405 = state_11387__$1;
              statearr_11389_11405[2] = inst_11383;
              statearr_11389_11405[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_11388 === 6) {
                var inst_11373 = state_11387[7];
                var inst_11376 = state_11387[8];
                var inst_11380 = f.call(null, inst_11373, inst_11376);
                var inst_11373__$1 = inst_11380;
                var state_11387__$1 = function() {
                  var statearr_11390 = state_11387;
                  statearr_11390[7] = inst_11373__$1;
                  return statearr_11390;
                }();
                var statearr_11391_11406 = state_11387__$1;
                statearr_11391_11406[2] = null;
                statearr_11391_11406[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_11388 === 5) {
                  var inst_11373 = state_11387[7];
                  var state_11387__$1 = state_11387;
                  var statearr_11392_11407 = state_11387__$1;
                  statearr_11392_11407[2] = inst_11373;
                  statearr_11392_11407[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_11388 === 4) {
                    var inst_11376 = state_11387[8];
                    var inst_11376__$1 = state_11387[2];
                    var inst_11377 = inst_11376__$1 == null;
                    var state_11387__$1 = function() {
                      var statearr_11393 = state_11387;
                      statearr_11393[8] = inst_11376__$1;
                      return statearr_11393;
                    }();
                    if (cljs.core.truth_(inst_11377)) {
                      var statearr_11394_11408 = state_11387__$1;
                      statearr_11394_11408[1] = 5;
                    } else {
                      var statearr_11395_11409 = state_11387__$1;
                      statearr_11395_11409[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_11388 === 3) {
                      var inst_11385 = state_11387[2];
                      var state_11387__$1 = state_11387;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11387__$1, inst_11385);
                    } else {
                      if (state_val_11388 === 2) {
                        var state_11387__$1 = state_11387;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11387__$1, 4, ch);
                      } else {
                        if (state_val_11388 === 1) {
                          var inst_11373 = init;
                          var state_11387__$1 = function() {
                            var statearr_11396 = state_11387;
                            statearr_11396[7] = inst_11373;
                            return statearr_11396;
                          }();
                          var statearr_11397_11410 = state_11387__$1;
                          statearr_11397_11410[2] = null;
                          statearr_11397_11410[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6248__auto__);
        return function(switch__6233__auto__, c__6248__auto__) {
          return function() {
            var state_machine__6234__auto__ = null;
            var state_machine__6234__auto____0 = function() {
              var statearr_11401 = [null, null, null, null, null, null, null, null, null];
              statearr_11401[0] = state_machine__6234__auto__;
              statearr_11401[1] = 1;
              return statearr_11401;
            };
            var state_machine__6234__auto____1 = function(state_11387) {
              while (true) {
                var ret_value__6235__auto__ = function() {
                  try {
                    while (true) {
                      var result__6236__auto__ = switch__6233__auto__.call(null, state_11387);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6236__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6236__auto__;
                      }
                      break;
                    }
                  } catch (e11402) {
                    if (e11402 instanceof Object) {
                      var ex__6237__auto__ = e11402;
                      var statearr_11403_11411 = state_11387;
                      statearr_11403_11411[5] = ex__6237__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11387);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e11402;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6235__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__11412 = state_11387;
                  state_11387 = G__11412;
                  continue;
                } else {
                  return ret_value__6235__auto__;
                }
                break;
              }
            };
            state_machine__6234__auto__ = function(state_11387) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6234__auto____0.call(this);
                case 1:
                  return state_machine__6234__auto____1.call(this, state_11387);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6234__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6234__auto____0;
            state_machine__6234__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6234__auto____1;
            return state_machine__6234__auto__;
          }();
        }(switch__6233__auto__, c__6248__auto__);
      }();
      var state__6250__auto__ = function() {
        var statearr_11404 = f__6249__auto__.call(null);
        statearr_11404[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6248__auto__;
        return statearr_11404;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6250__auto__);
    };
  }(c__6248__auto__));
  return c__6248__auto__;
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true);
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__6248__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6248__auto__) {
      return function() {
        var f__6249__auto__ = function() {
          var switch__6233__auto__ = function(c__6248__auto__) {
            return function(state_11474) {
              var state_val_11475 = state_11474[1];
              if (state_val_11475 === 1) {
                var inst_11454 = cljs.core.seq.call(null, coll);
                var inst_11455 = inst_11454;
                var state_11474__$1 = function() {
                  var statearr_11476 = state_11474;
                  statearr_11476[7] = inst_11455;
                  return statearr_11476;
                }();
                var statearr_11477_11495 = state_11474__$1;
                statearr_11477_11495[2] = null;
                statearr_11477_11495[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_11475 === 2) {
                  var inst_11455 = state_11474[7];
                  var state_11474__$1 = state_11474;
                  if (cljs.core.truth_(inst_11455)) {
                    var statearr_11478_11496 = state_11474__$1;
                    statearr_11478_11496[1] = 4;
                  } else {
                    var statearr_11479_11497 = state_11474__$1;
                    statearr_11479_11497[1] = 5;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_11475 === 3) {
                    var inst_11472 = state_11474[2];
                    var state_11474__$1 = state_11474;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11474__$1, inst_11472);
                  } else {
                    if (state_val_11475 === 4) {
                      var inst_11455 = state_11474[7];
                      var inst_11458 = cljs.core.first.call(null, inst_11455);
                      var state_11474__$1 = state_11474;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11474__$1, 7, ch, inst_11458);
                    } else {
                      if (state_val_11475 === 5) {
                        var state_11474__$1 = state_11474;
                        if (cljs.core.truth_(close_QMARK_)) {
                          var statearr_11480_11498 = state_11474__$1;
                          statearr_11480_11498[1] = 8;
                        } else {
                          var statearr_11481_11499 = state_11474__$1;
                          statearr_11481_11499[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_11475 === 6) {
                          var inst_11470 = state_11474[2];
                          var state_11474__$1 = state_11474;
                          var statearr_11482_11500 = state_11474__$1;
                          statearr_11482_11500[2] = inst_11470;
                          statearr_11482_11500[1] = 3;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_11475 === 7) {
                            var inst_11455 = state_11474[7];
                            var inst_11460 = state_11474[2];
                            var inst_11461 = cljs.core.next.call(null, inst_11455);
                            var inst_11455__$1 = inst_11461;
                            var state_11474__$1 = function() {
                              var statearr_11483 = state_11474;
                              statearr_11483[8] = inst_11460;
                              statearr_11483[7] = inst_11455__$1;
                              return statearr_11483;
                            }();
                            var statearr_11484_11501 = state_11474__$1;
                            statearr_11484_11501[2] = null;
                            statearr_11484_11501[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_11475 === 8) {
                              var inst_11465 = cljs.core.async.close_BANG_.call(null, ch);
                              var state_11474__$1 = state_11474;
                              var statearr_11485_11502 = state_11474__$1;
                              statearr_11485_11502[2] = inst_11465;
                              statearr_11485_11502[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_11475 === 9) {
                                var state_11474__$1 = state_11474;
                                var statearr_11486_11503 = state_11474__$1;
                                statearr_11486_11503[2] = null;
                                statearr_11486_11503[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_11475 === 10) {
                                  var inst_11468 = state_11474[2];
                                  var state_11474__$1 = state_11474;
                                  var statearr_11487_11504 = state_11474__$1;
                                  statearr_11487_11504[2] = inst_11468;
                                  statearr_11487_11504[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6248__auto__);
          return function(switch__6233__auto__, c__6248__auto__) {
            return function() {
              var state_machine__6234__auto__ = null;
              var state_machine__6234__auto____0 = function() {
                var statearr_11491 = [null, null, null, null, null, null, null, null, null];
                statearr_11491[0] = state_machine__6234__auto__;
                statearr_11491[1] = 1;
                return statearr_11491;
              };
              var state_machine__6234__auto____1 = function(state_11474) {
                while (true) {
                  var ret_value__6235__auto__ = function() {
                    try {
                      while (true) {
                        var result__6236__auto__ = switch__6233__auto__.call(null, state_11474);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6236__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6236__auto__;
                        }
                        break;
                      }
                    } catch (e11492) {
                      if (e11492 instanceof Object) {
                        var ex__6237__auto__ = e11492;
                        var statearr_11493_11505 = state_11474;
                        statearr_11493_11505[5] = ex__6237__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11474);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e11492;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6235__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__11506 = state_11474;
                    state_11474 = G__11506;
                    continue;
                  } else {
                    return ret_value__6235__auto__;
                  }
                  break;
                }
              };
              state_machine__6234__auto__ = function(state_11474) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6234__auto____0.call(this);
                  case 1:
                    return state_machine__6234__auto____1.call(this, state_11474);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6234__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6234__auto____0;
              state_machine__6234__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6234__auto____1;
              return state_machine__6234__auto__;
            }();
          }(switch__6233__auto__, c__6248__auto__);
        }();
        var state__6250__auto__ = function() {
          var statearr_11494 = f__6249__auto__.call(null);
          statearr_11494[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6248__auto__;
          return statearr_11494;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6250__auto__);
      };
    }(c__6248__auto__));
    return c__6248__auto__;
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan;
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj11508 = {};
  return obj11508;
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if (function() {
    var and__3466__auto__ = _;
    if (and__3466__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4105__auto__ = _ == null ? null : _;
    return function() {
      var or__3478__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj11510 = {};
  return obj11510;
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__3466__auto__ = m;
    if (and__3466__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4105__auto__ = m == null ? null : m;
    return function() {
      var or__3478__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if (function() {
    var and__3466__auto__ = m;
    if (and__3466__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4105__auto__ = m == null ? null : m;
    return function() {
      var or__3478__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if (function() {
    var and__3466__auto__ = m;
    if (and__3466__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4105__auto__ = m == null ? null : m;
    return function() {
      var or__3478__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t11734 !== "undefined") {
    } else {
      cljs.core.async.t11734 = function(cs, ch, mult, meta11735) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta11735 = meta11735;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t11734.cljs$lang$type = true;
      cljs.core.async.t11734.cljs$lang$ctorStr = "cljs.core.async/t11734";
      cljs.core.async.t11734.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
          return cljs.core._write.call(null, writer__4046__auto__, "cljs.core.async/t11734");
        };
      }(cs);
      cljs.core.async.t11734.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t11734.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$2, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$2, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t11734.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$2) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$2);
          return null;
        };
      }(cs);
      cljs.core.async.t11734.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t11734.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t11734.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t11734.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_11736) {
          var self__ = this;
          var _11736__$1 = this;
          return self__.meta11735;
        };
      }(cs);
      cljs.core.async.t11734.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_11736, meta11735__$1) {
          var self__ = this;
          var _11736__$1 = this;
          return new cljs.core.async.t11734(self__.cs, self__.ch, self__.mult, meta11735__$1);
        };
      }(cs);
      cljs.core.async.__GT_t11734 = function(cs) {
        return function __GT_t11734(cs__$1, ch__$1, mult__$1, meta11735) {
          return new cljs.core.async.t11734(cs__$1, ch__$1, mult__$1, meta11735);
        };
      }(cs);
    }
    return new cljs.core.async.t11734(cs, ch, mult, null);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function() {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__6248__auto___11957 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6248__auto___11957, cs, m, dchan, dctr, done) {
    return function() {
      var f__6249__auto__ = function() {
        var switch__6233__auto__ = function(c__6248__auto___11957, cs, m, dchan, dctr, done) {
          return function(state_11871) {
            var state_val_11872 = state_11871[1];
            if (state_val_11872 === 32) {
              var inst_11815 = state_11871[7];
              var inst_11739 = state_11871[8];
              var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_11871, 31, Object, null, 30);
              var inst_11822 = cljs.core.async.put_BANG_.call(null, inst_11815, inst_11739, done);
              var state_11871__$1 = state_11871;
              var statearr_11873_11958 = state_11871__$1;
              statearr_11873_11958[2] = inst_11822;
              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11871__$1);
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_11872 === 1) {
                var state_11871__$1 = state_11871;
                var statearr_11874_11959 = state_11871__$1;
                statearr_11874_11959[2] = null;
                statearr_11874_11959[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_11872 === 33) {
                  var inst_11828 = state_11871[9];
                  var inst_11830 = cljs.core.chunked_seq_QMARK_.call(null, inst_11828);
                  var state_11871__$1 = state_11871;
                  if (inst_11830) {
                    var statearr_11875_11960 = state_11871__$1;
                    statearr_11875_11960[1] = 36;
                  } else {
                    var statearr_11876_11961 = state_11871__$1;
                    statearr_11876_11961[1] = 37;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_11872 === 2) {
                    var state_11871__$1 = state_11871;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11871__$1, 4, ch);
                  } else {
                    if (state_val_11872 === 34) {
                      var state_11871__$1 = state_11871;
                      var statearr_11877_11962 = state_11871__$1;
                      statearr_11877_11962[2] = null;
                      statearr_11877_11962[1] = 35;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_11872 === 3) {
                        var inst_11869 = state_11871[2];
                        var state_11871__$1 = state_11871;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11871__$1, inst_11869);
                      } else {
                        if (state_val_11872 === 35) {
                          var inst_11853 = state_11871[2];
                          var state_11871__$1 = state_11871;
                          var statearr_11878_11963 = state_11871__$1;
                          statearr_11878_11963[2] = inst_11853;
                          statearr_11878_11963[1] = 29;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_11872 === 4) {
                            var inst_11739 = state_11871[8];
                            var inst_11739__$1 = state_11871[2];
                            var inst_11740 = inst_11739__$1 == null;
                            var state_11871__$1 = function() {
                              var statearr_11879 = state_11871;
                              statearr_11879[8] = inst_11739__$1;
                              return statearr_11879;
                            }();
                            if (cljs.core.truth_(inst_11740)) {
                              var statearr_11880_11964 = state_11871__$1;
                              statearr_11880_11964[1] = 5;
                            } else {
                              var statearr_11881_11965 = state_11871__$1;
                              statearr_11881_11965[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_11872 === 36) {
                              var inst_11828 = state_11871[9];
                              var inst_11832 = cljs.core.chunk_first.call(null, inst_11828);
                              var inst_11833 = cljs.core.chunk_rest.call(null, inst_11828);
                              var inst_11834 = cljs.core.count.call(null, inst_11832);
                              var inst_11807 = inst_11833;
                              var inst_11808 = inst_11832;
                              var inst_11809 = inst_11834;
                              var inst_11810 = 0;
                              var state_11871__$1 = function() {
                                var statearr_11882 = state_11871;
                                statearr_11882[10] = inst_11810;
                                statearr_11882[11] = inst_11807;
                                statearr_11882[12] = inst_11808;
                                statearr_11882[13] = inst_11809;
                                return statearr_11882;
                              }();
                              var statearr_11883_11966 = state_11871__$1;
                              statearr_11883_11966[2] = null;
                              statearr_11883_11966[1] = 25;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_11872 === 5) {
                                var inst_11746 = cljs.core.deref.call(null, cs);
                                var inst_11747 = cljs.core.seq.call(null, inst_11746);
                                var inst_11748 = inst_11747;
                                var inst_11749 = null;
                                var inst_11750 = 0;
                                var inst_11751 = 0;
                                var state_11871__$1 = function() {
                                  var statearr_11884 = state_11871;
                                  statearr_11884[14] = inst_11749;
                                  statearr_11884[15] = inst_11748;
                                  statearr_11884[16] = inst_11751;
                                  statearr_11884[17] = inst_11750;
                                  return statearr_11884;
                                }();
                                var statearr_11885_11967 = state_11871__$1;
                                statearr_11885_11967[2] = null;
                                statearr_11885_11967[1] = 8;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_11872 === 37) {
                                  var inst_11828 = state_11871[9];
                                  var inst_11837 = cljs.core.first.call(null, inst_11828);
                                  var state_11871__$1 = function() {
                                    var statearr_11886 = state_11871;
                                    statearr_11886[18] = inst_11837;
                                    return statearr_11886;
                                  }();
                                  var statearr_11887_11968 = state_11871__$1;
                                  statearr_11887_11968[2] = null;
                                  statearr_11887_11968[1] = 41;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_11872 === 6) {
                                    var inst_11799 = state_11871[19];
                                    var inst_11798 = cljs.core.deref.call(null, cs);
                                    var inst_11799__$1 = cljs.core.keys.call(null, inst_11798);
                                    var inst_11800 = cljs.core.count.call(null, inst_11799__$1);
                                    var inst_11801 = cljs.core.reset_BANG_.call(null, dctr, inst_11800);
                                    var inst_11806 = cljs.core.seq.call(null, inst_11799__$1);
                                    var inst_11807 = inst_11806;
                                    var inst_11808 = null;
                                    var inst_11809 = 0;
                                    var inst_11810 = 0;
                                    var state_11871__$1 = function() {
                                      var statearr_11888 = state_11871;
                                      statearr_11888[10] = inst_11810;
                                      statearr_11888[20] = inst_11801;
                                      statearr_11888[11] = inst_11807;
                                      statearr_11888[12] = inst_11808;
                                      statearr_11888[19] = inst_11799__$1;
                                      statearr_11888[13] = inst_11809;
                                      return statearr_11888;
                                    }();
                                    var statearr_11889_11969 = state_11871__$1;
                                    statearr_11889_11969[2] = null;
                                    statearr_11889_11969[1] = 25;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_11872 === 38) {
                                      var inst_11850 = state_11871[2];
                                      var state_11871__$1 = state_11871;
                                      var statearr_11890_11970 = state_11871__$1;
                                      statearr_11890_11970[2] = inst_11850;
                                      statearr_11890_11970[1] = 35;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_11872 === 7) {
                                        var inst_11867 = state_11871[2];
                                        var state_11871__$1 = state_11871;
                                        var statearr_11891_11971 = state_11871__$1;
                                        statearr_11891_11971[2] = inst_11867;
                                        statearr_11891_11971[1] = 3;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_11872 === 39) {
                                          var inst_11828 = state_11871[9];
                                          var inst_11846 = state_11871[2];
                                          var inst_11847 = cljs.core.next.call(null, inst_11828);
                                          var inst_11807 = inst_11847;
                                          var inst_11808 = null;
                                          var inst_11809 = 0;
                                          var inst_11810 = 0;
                                          var state_11871__$1 = function() {
                                            var statearr_11892 = state_11871;
                                            statearr_11892[10] = inst_11810;
                                            statearr_11892[21] = inst_11846;
                                            statearr_11892[11] = inst_11807;
                                            statearr_11892[12] = inst_11808;
                                            statearr_11892[13] = inst_11809;
                                            return statearr_11892;
                                          }();
                                          var statearr_11893_11972 = state_11871__$1;
                                          statearr_11893_11972[2] = null;
                                          statearr_11893_11972[1] = 25;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_11872 === 8) {
                                            var inst_11751 = state_11871[16];
                                            var inst_11750 = state_11871[17];
                                            var inst_11753 = inst_11751 < inst_11750;
                                            var inst_11754 = inst_11753;
                                            var state_11871__$1 = state_11871;
                                            if (cljs.core.truth_(inst_11754)) {
                                              var statearr_11894_11973 = state_11871__$1;
                                              statearr_11894_11973[1] = 10;
                                            } else {
                                              var statearr_11895_11974 = state_11871__$1;
                                              statearr_11895_11974[1] = 11;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_11872 === 40) {
                                              var inst_11837 = state_11871[18];
                                              var inst_11838 = state_11871[2];
                                              var inst_11839 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                              var inst_11840 = cljs.core.async.untap_STAR_.call(null, m, inst_11837);
                                              var state_11871__$1 = function() {
                                                var statearr_11896 = state_11871;
                                                statearr_11896[22] = inst_11838;
                                                statearr_11896[23] = inst_11839;
                                                return statearr_11896;
                                              }();
                                              var statearr_11897_11975 = state_11871__$1;
                                              statearr_11897_11975[2] = inst_11840;
                                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11871__$1);
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_11872 === 9) {
                                                var inst_11796 = state_11871[2];
                                                var state_11871__$1 = state_11871;
                                                var statearr_11898_11976 = state_11871__$1;
                                                statearr_11898_11976[2] = inst_11796;
                                                statearr_11898_11976[1] = 7;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                if (state_val_11872 === 41) {
                                                  var inst_11837 = state_11871[18];
                                                  var inst_11739 = state_11871[8];
                                                  var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_11871, 40, Object, null, 39);
                                                  var inst_11844 = cljs.core.async.put_BANG_.call(null, inst_11837, inst_11739, done);
                                                  var state_11871__$1 = state_11871;
                                                  var statearr_11899_11977 = state_11871__$1;
                                                  statearr_11899_11977[2] = inst_11844;
                                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11871__$1);
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_11872 === 10) {
                                                    var inst_11749 = state_11871[14];
                                                    var inst_11751 = state_11871[16];
                                                    var inst_11757 = cljs.core._nth.call(null, inst_11749, inst_11751);
                                                    var inst_11758 = cljs.core.nth.call(null, inst_11757, 0, null);
                                                    var inst_11759 = cljs.core.nth.call(null, inst_11757, 1, null);
                                                    var state_11871__$1 = function() {
                                                      var statearr_11900 = state_11871;
                                                      statearr_11900[24] = inst_11758;
                                                      return statearr_11900;
                                                    }();
                                                    if (cljs.core.truth_(inst_11759)) {
                                                      var statearr_11901_11978 = state_11871__$1;
                                                      statearr_11901_11978[1] = 13;
                                                    } else {
                                                      var statearr_11902_11979 = state_11871__$1;
                                                      statearr_11902_11979[1] = 14;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_11872 === 42) {
                                                      var state_11871__$1 = state_11871;
                                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11871__$1, 45, dchan);
                                                    } else {
                                                      if (state_val_11872 === 11) {
                                                        var inst_11748 = state_11871[15];
                                                        var inst_11768 = state_11871[25];
                                                        var inst_11768__$1 = cljs.core.seq.call(null, inst_11748);
                                                        var state_11871__$1 = function() {
                                                          var statearr_11903 = state_11871;
                                                          statearr_11903[25] = inst_11768__$1;
                                                          return statearr_11903;
                                                        }();
                                                        if (inst_11768__$1) {
                                                          var statearr_11904_11980 = state_11871__$1;
                                                          statearr_11904_11980[1] = 16;
                                                        } else {
                                                          var statearr_11905_11981 = state_11871__$1;
                                                          statearr_11905_11981[1] = 17;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                      } else {
                                                        if (state_val_11872 === 43) {
                                                          var state_11871__$1 = state_11871;
                                                          var statearr_11906_11982 = state_11871__$1;
                                                          statearr_11906_11982[2] = null;
                                                          statearr_11906_11982[1] = 44;
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                        } else {
                                                          if (state_val_11872 === 12) {
                                                            var inst_11794 = state_11871[2];
                                                            var state_11871__$1 = state_11871;
                                                            var statearr_11907_11983 = state_11871__$1;
                                                            statearr_11907_11983[2] = inst_11794;
                                                            statearr_11907_11983[1] = 9;
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                          } else {
                                                            if (state_val_11872 === 44) {
                                                              var inst_11864 = state_11871[2];
                                                              var state_11871__$1 = function() {
                                                                var statearr_11908 = state_11871;
                                                                statearr_11908[26] = inst_11864;
                                                                return statearr_11908;
                                                              }();
                                                              var statearr_11909_11984 = state_11871__$1;
                                                              statearr_11909_11984[2] = null;
                                                              statearr_11909_11984[1] = 2;
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                            } else {
                                                              if (state_val_11872 === 13) {
                                                                var inst_11758 = state_11871[24];
                                                                var inst_11761 = cljs.core.async.close_BANG_.call(null, inst_11758);
                                                                var state_11871__$1 = state_11871;
                                                                var statearr_11910_11985 = state_11871__$1;
                                                                statearr_11910_11985[2] = inst_11761;
                                                                statearr_11910_11985[1] = 15;
                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                              } else {
                                                                if (state_val_11872 === 45) {
                                                                  var inst_11861 = state_11871[2];
                                                                  var state_11871__$1 = state_11871;
                                                                  var statearr_11914_11986 = state_11871__$1;
                                                                  statearr_11914_11986[2] = inst_11861;
                                                                  statearr_11914_11986[1] = 44;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                } else {
                                                                  if (state_val_11872 === 14) {
                                                                    var state_11871__$1 = state_11871;
                                                                    var statearr_11915_11987 = state_11871__$1;
                                                                    statearr_11915_11987[2] = null;
                                                                    statearr_11915_11987[1] = 15;
                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                  } else {
                                                                    if (state_val_11872 === 15) {
                                                                      var inst_11749 = state_11871[14];
                                                                      var inst_11748 = state_11871[15];
                                                                      var inst_11751 = state_11871[16];
                                                                      var inst_11750 = state_11871[17];
                                                                      var inst_11764 = state_11871[2];
                                                                      var inst_11765 = inst_11751 + 1;
                                                                      var tmp11911 = inst_11749;
                                                                      var tmp11912 = inst_11748;
                                                                      var tmp11913 = inst_11750;
                                                                      var inst_11748__$1 = tmp11912;
                                                                      var inst_11749__$1 = tmp11911;
                                                                      var inst_11750__$1 = tmp11913;
                                                                      var inst_11751__$1 = inst_11765;
                                                                      var state_11871__$1 = function() {
                                                                        var statearr_11916 = state_11871;
                                                                        statearr_11916[14] = inst_11749__$1;
                                                                        statearr_11916[15] = inst_11748__$1;
                                                                        statearr_11916[27] = inst_11764;
                                                                        statearr_11916[16] = inst_11751__$1;
                                                                        statearr_11916[17] = inst_11750__$1;
                                                                        return statearr_11916;
                                                                      }();
                                                                      var statearr_11917_11988 = state_11871__$1;
                                                                      statearr_11917_11988[2] = null;
                                                                      statearr_11917_11988[1] = 8;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                    } else {
                                                                      if (state_val_11872 === 16) {
                                                                        var inst_11768 = state_11871[25];
                                                                        var inst_11770 = cljs.core.chunked_seq_QMARK_.call(null, inst_11768);
                                                                        var state_11871__$1 = state_11871;
                                                                        if (inst_11770) {
                                                                          var statearr_11918_11989 = state_11871__$1;
                                                                          statearr_11918_11989[1] = 19;
                                                                        } else {
                                                                          var statearr_11919_11990 = state_11871__$1;
                                                                          statearr_11919_11990[1] = 20;
                                                                        }
                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                      } else {
                                                                        if (state_val_11872 === 17) {
                                                                          var state_11871__$1 = state_11871;
                                                                          var statearr_11920_11991 = state_11871__$1;
                                                                          statearr_11920_11991[2] = null;
                                                                          statearr_11920_11991[1] = 18;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                        } else {
                                                                          if (state_val_11872 === 18) {
                                                                            var inst_11792 = state_11871[2];
                                                                            var state_11871__$1 = state_11871;
                                                                            var statearr_11921_11992 = state_11871__$1;
                                                                            statearr_11921_11992[2] = inst_11792;
                                                                            statearr_11921_11992[1] = 12;
                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                          } else {
                                                                            if (state_val_11872 === 19) {
                                                                              var inst_11768 = state_11871[25];
                                                                              var inst_11772 = cljs.core.chunk_first.call(null, inst_11768);
                                                                              var inst_11773 = cljs.core.chunk_rest.call(null, inst_11768);
                                                                              var inst_11774 = cljs.core.count.call(null, inst_11772);
                                                                              var inst_11748 = inst_11773;
                                                                              var inst_11749 = inst_11772;
                                                                              var inst_11750 = inst_11774;
                                                                              var inst_11751 = 0;
                                                                              var state_11871__$1 = function() {
                                                                                var statearr_11922 = state_11871;
                                                                                statearr_11922[14] = inst_11749;
                                                                                statearr_11922[15] = inst_11748;
                                                                                statearr_11922[16] = inst_11751;
                                                                                statearr_11922[17] = inst_11750;
                                                                                return statearr_11922;
                                                                              }();
                                                                              var statearr_11923_11993 = state_11871__$1;
                                                                              statearr_11923_11993[2] = null;
                                                                              statearr_11923_11993[1] = 8;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                            } else {
                                                                              if (state_val_11872 === 20) {
                                                                                var inst_11768 = state_11871[25];
                                                                                var inst_11778 = cljs.core.first.call(null, inst_11768);
                                                                                var inst_11779 = cljs.core.nth.call(null, inst_11778, 0, null);
                                                                                var inst_11780 = cljs.core.nth.call(null, inst_11778, 1, null);
                                                                                var state_11871__$1 = function() {
                                                                                  var statearr_11924 = state_11871;
                                                                                  statearr_11924[28] = inst_11779;
                                                                                  return statearr_11924;
                                                                                }();
                                                                                if (cljs.core.truth_(inst_11780)) {
                                                                                  var statearr_11925_11994 = state_11871__$1;
                                                                                  statearr_11925_11994[1] = 22;
                                                                                } else {
                                                                                  var statearr_11926_11995 = state_11871__$1;
                                                                                  statearr_11926_11995[1] = 23;
                                                                                }
                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                              } else {
                                                                                if (state_val_11872 === 21) {
                                                                                  var inst_11789 = state_11871[2];
                                                                                  var state_11871__$1 = state_11871;
                                                                                  var statearr_11927_11996 = state_11871__$1;
                                                                                  statearr_11927_11996[2] = inst_11789;
                                                                                  statearr_11927_11996[1] = 18;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                } else {
                                                                                  if (state_val_11872 === 22) {
                                                                                    var inst_11779 = state_11871[28];
                                                                                    var inst_11782 = cljs.core.async.close_BANG_.call(null, inst_11779);
                                                                                    var state_11871__$1 = state_11871;
                                                                                    var statearr_11928_11997 = state_11871__$1;
                                                                                    statearr_11928_11997[2] = inst_11782;
                                                                                    statearr_11928_11997[1] = 24;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                  } else {
                                                                                    if (state_val_11872 === 23) {
                                                                                      var state_11871__$1 = state_11871;
                                                                                      var statearr_11929_11998 = state_11871__$1;
                                                                                      statearr_11929_11998[2] = null;
                                                                                      statearr_11929_11998[1] = 24;
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                    } else {
                                                                                      if (state_val_11872 === 24) {
                                                                                        var inst_11768 = state_11871[25];
                                                                                        var inst_11785 = state_11871[2];
                                                                                        var inst_11786 = cljs.core.next.call(null, inst_11768);
                                                                                        var inst_11748 = inst_11786;
                                                                                        var inst_11749 = null;
                                                                                        var inst_11750 = 0;
                                                                                        var inst_11751 = 0;
                                                                                        var state_11871__$1 = function() {
                                                                                          var statearr_11930 = state_11871;
                                                                                          statearr_11930[14] = inst_11749;
                                                                                          statearr_11930[15] = inst_11748;
                                                                                          statearr_11930[29] = inst_11785;
                                                                                          statearr_11930[16] = inst_11751;
                                                                                          statearr_11930[17] = inst_11750;
                                                                                          return statearr_11930;
                                                                                        }();
                                                                                        var statearr_11931_11999 = state_11871__$1;
                                                                                        statearr_11931_11999[2] = null;
                                                                                        statearr_11931_11999[1] = 8;
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                      } else {
                                                                                        if (state_val_11872 === 25) {
                                                                                          var inst_11810 = state_11871[10];
                                                                                          var inst_11809 = state_11871[13];
                                                                                          var inst_11812 = inst_11810 < inst_11809;
                                                                                          var inst_11813 = inst_11812;
                                                                                          var state_11871__$1 = state_11871;
                                                                                          if (cljs.core.truth_(inst_11813)) {
                                                                                            var statearr_11932_12000 = state_11871__$1;
                                                                                            statearr_11932_12000[1] = 27;
                                                                                          } else {
                                                                                            var statearr_11933_12001 = state_11871__$1;
                                                                                            statearr_11933_12001[1] = 28;
                                                                                          }
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                        } else {
                                                                                          if (state_val_11872 === 26) {
                                                                                            var inst_11799 = state_11871[19];
                                                                                            var inst_11857 = state_11871[2];
                                                                                            var inst_11858 = cljs.core.seq.call(null, inst_11799);
                                                                                            var state_11871__$1 = function() {
                                                                                              var statearr_11934 = state_11871;
                                                                                              statearr_11934[30] = inst_11857;
                                                                                              return statearr_11934;
                                                                                            }();
                                                                                            if (inst_11858) {
                                                                                              var statearr_11935_12002 = state_11871__$1;
                                                                                              statearr_11935_12002[1] = 42;
                                                                                            } else {
                                                                                              var statearr_11936_12003 = state_11871__$1;
                                                                                              statearr_11936_12003[1] = 43;
                                                                                            }
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                          } else {
                                                                                            if (state_val_11872 === 27) {
                                                                                              var inst_11810 = state_11871[10];
                                                                                              var inst_11808 = state_11871[12];
                                                                                              var inst_11815 = cljs.core._nth.call(null, inst_11808, inst_11810);
                                                                                              var state_11871__$1 = function() {
                                                                                                var statearr_11937 = state_11871;
                                                                                                statearr_11937[7] = inst_11815;
                                                                                                return statearr_11937;
                                                                                              }();
                                                                                              var statearr_11938_12004 = state_11871__$1;
                                                                                              statearr_11938_12004[2] = null;
                                                                                              statearr_11938_12004[1] = 32;
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                            } else {
                                                                                              if (state_val_11872 === 28) {
                                                                                                var inst_11828 = state_11871[9];
                                                                                                var inst_11807 = state_11871[11];
                                                                                                var inst_11828__$1 = cljs.core.seq.call(null, inst_11807);
                                                                                                var state_11871__$1 = function() {
                                                                                                  var statearr_11942 = state_11871;
                                                                                                  statearr_11942[9] = inst_11828__$1;
                                                                                                  return statearr_11942;
                                                                                                }();
                                                                                                if (inst_11828__$1) {
                                                                                                  var statearr_11943_12005 = state_11871__$1;
                                                                                                  statearr_11943_12005[1] = 33;
                                                                                                } else {
                                                                                                  var statearr_11944_12006 = state_11871__$1;
                                                                                                  statearr_11944_12006[1] = 34;
                                                                                                }
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                              } else {
                                                                                                if (state_val_11872 === 29) {
                                                                                                  var inst_11855 = state_11871[2];
                                                                                                  var state_11871__$1 = state_11871;
                                                                                                  var statearr_11945_12007 = state_11871__$1;
                                                                                                  statearr_11945_12007[2] = inst_11855;
                                                                                                  statearr_11945_12007[1] = 26;
                                                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                                } else {
                                                                                                  if (state_val_11872 === 30) {
                                                                                                    var inst_11810 = state_11871[10];
                                                                                                    var inst_11807 = state_11871[11];
                                                                                                    var inst_11808 = state_11871[12];
                                                                                                    var inst_11809 = state_11871[13];
                                                                                                    var inst_11824 = state_11871[2];
                                                                                                    var inst_11825 = inst_11810 + 1;
                                                                                                    var tmp11939 = inst_11807;
                                                                                                    var tmp11940 = inst_11808;
                                                                                                    var tmp11941 = inst_11809;
                                                                                                    var inst_11807__$1 = tmp11939;
                                                                                                    var inst_11808__$1 = tmp11940;
                                                                                                    var inst_11809__$1 = tmp11941;
                                                                                                    var inst_11810__$1 = inst_11825;
                                                                                                    var state_11871__$1 = function() {
                                                                                                      var statearr_11946 = state_11871;
                                                                                                      statearr_11946[31] = inst_11824;
                                                                                                      statearr_11946[10] = inst_11810__$1;
                                                                                                      statearr_11946[11] = inst_11807__$1;
                                                                                                      statearr_11946[12] = inst_11808__$1;
                                                                                                      statearr_11946[13] = inst_11809__$1;
                                                                                                      return statearr_11946;
                                                                                                    }();
                                                                                                    var statearr_11947_12008 = state_11871__$1;
                                                                                                    statearr_11947_12008[2] = null;
                                                                                                    statearr_11947_12008[1] = 25;
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                                  } else {
                                                                                                    if (state_val_11872 === 31) {
                                                                                                      var inst_11815 = state_11871[7];
                                                                                                      var inst_11816 = state_11871[2];
                                                                                                      var inst_11817 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                                                                                      var inst_11818 = cljs.core.async.untap_STAR_.call(null, m, inst_11815);
                                                                                                      var state_11871__$1 = function() {
                                                                                                        var statearr_11948 = state_11871;
                                                                                                        statearr_11948[32] = inst_11816;
                                                                                                        statearr_11948[33] = inst_11817;
                                                                                                        return statearr_11948;
                                                                                                      }();
                                                                                                      var statearr_11949_12009 = state_11871__$1;
                                                                                                      statearr_11949_12009[2] = inst_11818;
                                                                                                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11871__$1);
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6248__auto___11957, cs, m, dchan, dctr, done);
        return function(switch__6233__auto__, c__6248__auto___11957, cs, m, dchan, dctr, done) {
          return function() {
            var state_machine__6234__auto__ = null;
            var state_machine__6234__auto____0 = function() {
              var statearr_11953 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_11953[0] = state_machine__6234__auto__;
              statearr_11953[1] = 1;
              return statearr_11953;
            };
            var state_machine__6234__auto____1 = function(state_11871) {
              while (true) {
                var ret_value__6235__auto__ = function() {
                  try {
                    while (true) {
                      var result__6236__auto__ = switch__6233__auto__.call(null, state_11871);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6236__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6236__auto__;
                      }
                      break;
                    }
                  } catch (e11954) {
                    if (e11954 instanceof Object) {
                      var ex__6237__auto__ = e11954;
                      var statearr_11955_12010 = state_11871;
                      statearr_11955_12010[5] = ex__6237__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11871);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e11954;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6235__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__12011 = state_11871;
                  state_11871 = G__12011;
                  continue;
                } else {
                  return ret_value__6235__auto__;
                }
                break;
              }
            };
            state_machine__6234__auto__ = function(state_11871) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6234__auto____0.call(this);
                case 1:
                  return state_machine__6234__auto____1.call(this, state_11871);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6234__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6234__auto____0;
            state_machine__6234__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6234__auto____1;
            return state_machine__6234__auto__;
          }();
        }(switch__6233__auto__, c__6248__auto___11957, cs, m, dchan, dctr, done);
      }();
      var state__6250__auto__ = function() {
        var statearr_11956 = f__6249__auto__.call(null);
        statearr_11956[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6248__auto___11957;
        return statearr_11956;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6250__auto__);
    };
  }(c__6248__auto___11957, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true);
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch;
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap;
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
  var obj12013 = {};
  return obj12013;
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if (function() {
    var and__3466__auto__ = m;
    if (and__3466__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4105__auto__ = m == null ? null : m;
    return function() {
      var or__3478__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if (function() {
    var and__3466__auto__ = m;
    if (and__3466__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4105__auto__ = m == null ? null : m;
    return function() {
      var or__3478__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if (function() {
    var and__3466__auto__ = m;
    if (and__3466__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4105__auto__ = m == null ? null : m;
    return function() {
      var or__3478__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if (function() {
    var and__3466__auto__ = m;
    if (and__3466__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4105__auto__ = m == null ? null : m;
    return function() {
      var or__3478__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if (function() {
    var and__3466__auto__ = m;
    if (and__3466__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4105__auto__ = m == null ? null : m;
    return function() {
      var or__3478__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", 1120344424), null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", 1017440337));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1017267595));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", 1017440337), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", 1120344424), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1123523302), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), chs), new cljs.core.Keyword(null, "reads", "reads", 1122290959), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", 1120344424)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t12123 !== "undefined") {
    } else {
      cljs.core.async.t12123 = function(pick, out, attrs, cs, calc_state, solo_modes, mix, changed, change, solo_mode, meta12124) {
        this.pick = pick;
        this.out = out;
        this.attrs = attrs;
        this.cs = cs;
        this.calc_state = calc_state;
        this.solo_modes = solo_modes;
        this.mix = mix;
        this.changed = changed;
        this.change = change;
        this.solo_mode = solo_mode;
        this.meta12124 = meta12124;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t12123.cljs$lang$type = true;
      cljs.core.async.t12123.cljs$lang$ctorStr = "cljs.core.async/t12123";
      cljs.core.async.t12123.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
          return cljs.core._write.call(null, writer__4046__auto__, "cljs.core.async/t12123");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12123.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t12123.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12123.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12123.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12123.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12123.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", -1162732933, null), new cljs.core.Symbol(null, "mode", "mode", -1637174436, null))))].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12123.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t12123.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12123.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_12125) {
          var self__ = this;
          var _12125__$1 = this;
          return self__.meta12124;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12123.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_12125, meta12124__$1) {
          var self__ = this;
          var _12125__$1 = this;
          return new cljs.core.async.t12123(self__.pick, self__.out, self__.attrs, self__.cs, self__.calc_state, self__.solo_modes, self__.mix, self__.changed, self__.change, self__.solo_mode, meta12124__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t12123 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t12123(pick__$1, out__$1, attrs__$1, cs__$1, calc_state__$1, solo_modes__$1, mix__$1, changed__$1, change__$1, solo_mode__$1, meta12124) {
          return new cljs.core.async.t12123(pick__$1, out__$1, attrs__$1, cs__$1, calc_state__$1, solo_modes__$1, mix__$1, changed__$1, change__$1, solo_mode__$1, meta12124);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t12123(pick, out, attrs, cs, calc_state, solo_modes, mix, changed, change, solo_mode, null);
  }();
  var c__6248__auto___12232 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6248__auto___12232, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__6249__auto__ = function() {
        var switch__6233__auto__ = function(c__6248__auto___12232, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_12190) {
            var state_val_12191 = state_12190[1];
            if (state_val_12191 === 1) {
              var inst_12129 = state_12190[7];
              var inst_12129__$1 = calc_state.call(null);
              var inst_12130 = cljs.core.seq_QMARK_.call(null, inst_12129__$1);
              var state_12190__$1 = function() {
                var statearr_12192 = state_12190;
                statearr_12192[7] = inst_12129__$1;
                return statearr_12192;
              }();
              if (inst_12130) {
                var statearr_12193_12233 = state_12190__$1;
                statearr_12193_12233[1] = 2;
              } else {
                var statearr_12194_12234 = state_12190__$1;
                statearr_12194_12234[1] = 3;
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_12191 === 2) {
                var inst_12129 = state_12190[7];
                var inst_12132 = cljs.core.apply.call(null, cljs.core.hash_map, inst_12129);
                var state_12190__$1 = state_12190;
                var statearr_12195_12235 = state_12190__$1;
                statearr_12195_12235[2] = inst_12132;
                statearr_12195_12235[1] = 4;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_12191 === 3) {
                  var inst_12129 = state_12190[7];
                  var state_12190__$1 = state_12190;
                  var statearr_12196_12236 = state_12190__$1;
                  statearr_12196_12236[2] = inst_12129;
                  statearr_12196_12236[1] = 4;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_12191 === 4) {
                    var inst_12129 = state_12190[7];
                    var inst_12135 = state_12190[2];
                    var inst_12136 = cljs.core.get.call(null, inst_12135, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                    var inst_12137 = cljs.core.get.call(null, inst_12135, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                    var inst_12138 = cljs.core.get.call(null, inst_12135, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                    var inst_12139 = inst_12129;
                    var state_12190__$1 = function() {
                      var statearr_12197 = state_12190;
                      statearr_12197[8] = inst_12138;
                      statearr_12197[9] = inst_12139;
                      statearr_12197[10] = inst_12137;
                      statearr_12197[11] = inst_12136;
                      return statearr_12197;
                    }();
                    var statearr_12198_12237 = state_12190__$1;
                    statearr_12198_12237[2] = null;
                    statearr_12198_12237[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_12191 === 5) {
                      var inst_12139 = state_12190[9];
                      var inst_12142 = cljs.core.seq_QMARK_.call(null, inst_12139);
                      var state_12190__$1 = state_12190;
                      if (inst_12142) {
                        var statearr_12199_12238 = state_12190__$1;
                        statearr_12199_12238[1] = 7;
                      } else {
                        var statearr_12200_12239 = state_12190__$1;
                        statearr_12200_12239[1] = 8;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_12191 === 6) {
                        var inst_12188 = state_12190[2];
                        var state_12190__$1 = state_12190;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12190__$1, inst_12188);
                      } else {
                        if (state_val_12191 === 7) {
                          var inst_12139 = state_12190[9];
                          var inst_12144 = cljs.core.apply.call(null, cljs.core.hash_map, inst_12139);
                          var state_12190__$1 = state_12190;
                          var statearr_12201_12240 = state_12190__$1;
                          statearr_12201_12240[2] = inst_12144;
                          statearr_12201_12240[1] = 9;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_12191 === 8) {
                            var inst_12139 = state_12190[9];
                            var state_12190__$1 = state_12190;
                            var statearr_12202_12241 = state_12190__$1;
                            statearr_12202_12241[2] = inst_12139;
                            statearr_12202_12241[1] = 9;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_12191 === 9) {
                              var inst_12147 = state_12190[12];
                              var inst_12147__$1 = state_12190[2];
                              var inst_12148 = cljs.core.get.call(null, inst_12147__$1, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                              var inst_12149 = cljs.core.get.call(null, inst_12147__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                              var inst_12150 = cljs.core.get.call(null, inst_12147__$1, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                              var state_12190__$1 = function() {
                                var statearr_12203 = state_12190;
                                statearr_12203[13] = inst_12149;
                                statearr_12203[12] = inst_12147__$1;
                                statearr_12203[14] = inst_12150;
                                return statearr_12203;
                              }();
                              return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_12190__$1, 10, inst_12148);
                            } else {
                              if (state_val_12191 === 10) {
                                var inst_12154 = state_12190[15];
                                var inst_12155 = state_12190[16];
                                var inst_12153 = state_12190[2];
                                var inst_12154__$1 = cljs.core.nth.call(null, inst_12153, 0, null);
                                var inst_12155__$1 = cljs.core.nth.call(null, inst_12153, 1, null);
                                var inst_12156 = inst_12154__$1 == null;
                                var inst_12157 = cljs.core._EQ_.call(null, inst_12155__$1, change);
                                var inst_12158 = inst_12156 || inst_12157;
                                var state_12190__$1 = function() {
                                  var statearr_12204 = state_12190;
                                  statearr_12204[15] = inst_12154__$1;
                                  statearr_12204[16] = inst_12155__$1;
                                  return statearr_12204;
                                }();
                                if (cljs.core.truth_(inst_12158)) {
                                  var statearr_12205_12242 = state_12190__$1;
                                  statearr_12205_12242[1] = 11;
                                } else {
                                  var statearr_12206_12243 = state_12190__$1;
                                  statearr_12206_12243[1] = 12;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_12191 === 11) {
                                  var inst_12154 = state_12190[15];
                                  var inst_12160 = inst_12154 == null;
                                  var state_12190__$1 = state_12190;
                                  if (cljs.core.truth_(inst_12160)) {
                                    var statearr_12207_12244 = state_12190__$1;
                                    statearr_12207_12244[1] = 14;
                                  } else {
                                    var statearr_12208_12245 = state_12190__$1;
                                    statearr_12208_12245[1] = 15;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_12191 === 12) {
                                    var inst_12155 = state_12190[16];
                                    var inst_12150 = state_12190[14];
                                    var inst_12169 = state_12190[17];
                                    var inst_12169__$1 = inst_12150.call(null, inst_12155);
                                    var state_12190__$1 = function() {
                                      var statearr_12209 = state_12190;
                                      statearr_12209[17] = inst_12169__$1;
                                      return statearr_12209;
                                    }();
                                    if (cljs.core.truth_(inst_12169__$1)) {
                                      var statearr_12210_12246 = state_12190__$1;
                                      statearr_12210_12246[1] = 17;
                                    } else {
                                      var statearr_12211_12247 = state_12190__$1;
                                      statearr_12211_12247[1] = 18;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_12191 === 13) {
                                      var inst_12186 = state_12190[2];
                                      var state_12190__$1 = state_12190;
                                      var statearr_12212_12248 = state_12190__$1;
                                      statearr_12212_12248[2] = inst_12186;
                                      statearr_12212_12248[1] = 6;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_12191 === 14) {
                                        var inst_12155 = state_12190[16];
                                        var inst_12162 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_12155);
                                        var state_12190__$1 = state_12190;
                                        var statearr_12213_12249 = state_12190__$1;
                                        statearr_12213_12249[2] = inst_12162;
                                        statearr_12213_12249[1] = 16;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_12191 === 15) {
                                          var state_12190__$1 = state_12190;
                                          var statearr_12214_12250 = state_12190__$1;
                                          statearr_12214_12250[2] = null;
                                          statearr_12214_12250[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_12191 === 16) {
                                            var inst_12165 = state_12190[2];
                                            var inst_12166 = calc_state.call(null);
                                            var inst_12139 = inst_12166;
                                            var state_12190__$1 = function() {
                                              var statearr_12215 = state_12190;
                                              statearr_12215[9] = inst_12139;
                                              statearr_12215[18] = inst_12165;
                                              return statearr_12215;
                                            }();
                                            var statearr_12216_12251 = state_12190__$1;
                                            statearr_12216_12251[2] = null;
                                            statearr_12216_12251[1] = 5;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_12191 === 17) {
                                              var inst_12169 = state_12190[17];
                                              var state_12190__$1 = state_12190;
                                              var statearr_12217_12252 = state_12190__$1;
                                              statearr_12217_12252[2] = inst_12169;
                                              statearr_12217_12252[1] = 19;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_12191 === 18) {
                                                var inst_12149 = state_12190[13];
                                                var inst_12155 = state_12190[16];
                                                var inst_12150 = state_12190[14];
                                                var inst_12172 = cljs.core.empty_QMARK_.call(null, inst_12150);
                                                var inst_12173 = inst_12149.call(null, inst_12155);
                                                var inst_12174 = cljs.core.not.call(null, inst_12173);
                                                var inst_12175 = inst_12172 && inst_12174;
                                                var state_12190__$1 = state_12190;
                                                var statearr_12218_12253 = state_12190__$1;
                                                statearr_12218_12253[2] = inst_12175;
                                                statearr_12218_12253[1] = 19;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                if (state_val_12191 === 19) {
                                                  var inst_12177 = state_12190[2];
                                                  var state_12190__$1 = state_12190;
                                                  if (cljs.core.truth_(inst_12177)) {
                                                    var statearr_12219_12254 = state_12190__$1;
                                                    statearr_12219_12254[1] = 20;
                                                  } else {
                                                    var statearr_12220_12255 = state_12190__$1;
                                                    statearr_12220_12255[1] = 21;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_12191 === 20) {
                                                    var inst_12154 = state_12190[15];
                                                    var state_12190__$1 = state_12190;
                                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12190__$1, 23, out, inst_12154);
                                                  } else {
                                                    if (state_val_12191 === 21) {
                                                      var state_12190__$1 = state_12190;
                                                      var statearr_12221_12256 = state_12190__$1;
                                                      statearr_12221_12256[2] = null;
                                                      statearr_12221_12256[1] = 22;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      if (state_val_12191 === 22) {
                                                        var inst_12147 = state_12190[12];
                                                        var inst_12183 = state_12190[2];
                                                        var inst_12139 = inst_12147;
                                                        var state_12190__$1 = function() {
                                                          var statearr_12222 = state_12190;
                                                          statearr_12222[19] = inst_12183;
                                                          statearr_12222[9] = inst_12139;
                                                          return statearr_12222;
                                                        }();
                                                        var statearr_12223_12257 = state_12190__$1;
                                                        statearr_12223_12257[2] = null;
                                                        statearr_12223_12257[1] = 5;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                      } else {
                                                        if (state_val_12191 === 23) {
                                                          var inst_12180 = state_12190[2];
                                                          var state_12190__$1 = state_12190;
                                                          var statearr_12224_12258 = state_12190__$1;
                                                          statearr_12224_12258[2] = inst_12180;
                                                          statearr_12224_12258[1] = 22;
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6248__auto___12232, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__6233__auto__, c__6248__auto___12232, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var state_machine__6234__auto__ = null;
            var state_machine__6234__auto____0 = function() {
              var statearr_12228 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_12228[0] = state_machine__6234__auto__;
              statearr_12228[1] = 1;
              return statearr_12228;
            };
            var state_machine__6234__auto____1 = function(state_12190) {
              while (true) {
                var ret_value__6235__auto__ = function() {
                  try {
                    while (true) {
                      var result__6236__auto__ = switch__6233__auto__.call(null, state_12190);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6236__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6236__auto__;
                      }
                      break;
                    }
                  } catch (e12229) {
                    if (e12229 instanceof Object) {
                      var ex__6237__auto__ = e12229;
                      var statearr_12230_12259 = state_12190;
                      statearr_12230_12259[5] = ex__6237__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12190);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e12229;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6235__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__12260 = state_12190;
                  state_12190 = G__12260;
                  continue;
                } else {
                  return ret_value__6235__auto__;
                }
                break;
              }
            };
            state_machine__6234__auto__ = function(state_12190) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6234__auto____0.call(this);
                case 1:
                  return state_machine__6234__auto____1.call(this, state_12190);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6234__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6234__auto____0;
            state_machine__6234__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6234__auto____1;
            return state_machine__6234__auto__;
          }();
        }(switch__6233__auto__, c__6248__auto___12232, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__6250__auto__ = function() {
        var statearr_12231 = f__6249__auto__.call(null);
        statearr_12231[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6248__auto___12232;
        return statearr_12231;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6250__auto__);
    };
  }(c__6248__auto___12232, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
  var obj12262 = {};
  return obj12262;
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__3466__auto__ = p;
    if (and__3466__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4105__auto__ = p == null ? null : p;
    return function() {
      var or__3478__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if (function() {
    var and__3466__auto__ = p;
    if (and__3466__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4105__auto__ = p == null ? null : p;
    return function() {
      var or__3478__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__3466__auto__ = p;
      if (and__3466__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__4105__auto__ = p == null ? null : p;
      return function() {
        var or__3478__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__3466__auto__ = p;
      if (and__3466__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__3466__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__4105__auto__ = p == null ? null : p;
      return function() {
        var or__3478__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4105__auto__)];
        if (or__3478__auto__) {
          return or__3478__auto__;
        } else {
          var or__3478__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3478__auto____$1) {
            return or__3478__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3478__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if (cljs.core.truth_(or__3478__auto__)) {
          return or__3478__auto__;
        } else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3478__auto__, mults) {
            return function(p1__12263_SHARP_) {
              if (cljs.core.truth_(p1__12263_SHARP_.call(null, topic))) {
                return p1__12263_SHARP_;
              } else {
                return cljs.core.assoc.call(null, p1__12263_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
              }
            };
          }(or__3478__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t12388 !== "undefined") {
      } else {
        cljs.core.async.t12388 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta12389) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta12389 = meta12389;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t12388.cljs$lang$type = true;
        cljs.core.async.t12388.cljs$lang$ctorStr = "cljs.core.async/t12388";
        cljs.core.async.t12388.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
            return cljs.core._write.call(null, writer__4046__auto__, "cljs.core.async/t12388");
          };
        }(mults, ensure_mult);
        cljs.core.async.t12388.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t12388.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$2, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t12388.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2) {
            var self__ = this;
            var p__$1 = this;
            var temp__4092__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if (cljs.core.truth_(temp__4092__auto__)) {
              var m = temp__4092__auto__;
              return cljs.core.async.untap.call(null, m, ch__$2);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t12388.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t12388.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t12388.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t12388.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t12388.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_12390) {
            var self__ = this;
            var _12390__$1 = this;
            return self__.meta12389;
          };
        }(mults, ensure_mult);
        cljs.core.async.t12388.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_12390, meta12389__$1) {
            var self__ = this;
            var _12390__$1 = this;
            return new cljs.core.async.t12388(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta12389__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t12388 = function(mults, ensure_mult) {
          return function __GT_t12388(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta12389) {
            return new cljs.core.async.t12388(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta12389);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t12388(ensure_mult, mults, buf_fn, topic_fn, ch, pub, null);
    }();
    var c__6248__auto___12512 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6248__auto___12512, mults, ensure_mult, p) {
      return function() {
        var f__6249__auto__ = function() {
          var switch__6233__auto__ = function(c__6248__auto___12512, mults, ensure_mult, p) {
            return function(state_12464) {
              var state_val_12465 = state_12464[1];
              if (state_val_12465 === 1) {
                var state_12464__$1 = state_12464;
                var statearr_12466_12513 = state_12464__$1;
                statearr_12466_12513[2] = null;
                statearr_12466_12513[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_12465 === 2) {
                  var state_12464__$1 = state_12464;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12464__$1, 4, ch);
                } else {
                  if (state_val_12465 === 3) {
                    var inst_12462 = state_12464[2];
                    var state_12464__$1 = state_12464;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12464__$1, inst_12462);
                  } else {
                    if (state_val_12465 === 4) {
                      var inst_12393 = state_12464[7];
                      var inst_12393__$1 = state_12464[2];
                      var inst_12394 = inst_12393__$1 == null;
                      var state_12464__$1 = function() {
                        var statearr_12467 = state_12464;
                        statearr_12467[7] = inst_12393__$1;
                        return statearr_12467;
                      }();
                      if (cljs.core.truth_(inst_12394)) {
                        var statearr_12468_12514 = state_12464__$1;
                        statearr_12468_12514[1] = 5;
                      } else {
                        var statearr_12469_12515 = state_12464__$1;
                        statearr_12469_12515[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_12465 === 5) {
                        var inst_12400 = cljs.core.deref.call(null, mults);
                        var inst_12401 = cljs.core.vals.call(null, inst_12400);
                        var inst_12402 = cljs.core.seq.call(null, inst_12401);
                        var inst_12403 = inst_12402;
                        var inst_12404 = null;
                        var inst_12405 = 0;
                        var inst_12406 = 0;
                        var state_12464__$1 = function() {
                          var statearr_12470 = state_12464;
                          statearr_12470[8] = inst_12406;
                          statearr_12470[9] = inst_12403;
                          statearr_12470[10] = inst_12404;
                          statearr_12470[11] = inst_12405;
                          return statearr_12470;
                        }();
                        var statearr_12471_12516 = state_12464__$1;
                        statearr_12471_12516[2] = null;
                        statearr_12471_12516[1] = 8;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_12465 === 6) {
                          var inst_12393 = state_12464[7];
                          var inst_12441 = state_12464[12];
                          var inst_12443 = state_12464[13];
                          var inst_12441__$1 = topic_fn.call(null, inst_12393);
                          var inst_12442 = cljs.core.deref.call(null, mults);
                          var inst_12443__$1 = cljs.core.get.call(null, inst_12442, inst_12441__$1);
                          var state_12464__$1 = function() {
                            var statearr_12472 = state_12464;
                            statearr_12472[12] = inst_12441__$1;
                            statearr_12472[13] = inst_12443__$1;
                            return statearr_12472;
                          }();
                          if (cljs.core.truth_(inst_12443__$1)) {
                            var statearr_12473_12517 = state_12464__$1;
                            statearr_12473_12517[1] = 19;
                          } else {
                            var statearr_12474_12518 = state_12464__$1;
                            statearr_12474_12518[1] = 20;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_12465 === 7) {
                            var inst_12460 = state_12464[2];
                            var state_12464__$1 = state_12464;
                            var statearr_12475_12519 = state_12464__$1;
                            statearr_12475_12519[2] = inst_12460;
                            statearr_12475_12519[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_12465 === 8) {
                              var inst_12406 = state_12464[8];
                              var inst_12405 = state_12464[11];
                              var inst_12408 = inst_12406 < inst_12405;
                              var inst_12409 = inst_12408;
                              var state_12464__$1 = state_12464;
                              if (cljs.core.truth_(inst_12409)) {
                                var statearr_12479_12520 = state_12464__$1;
                                statearr_12479_12520[1] = 10;
                              } else {
                                var statearr_12480_12521 = state_12464__$1;
                                statearr_12480_12521[1] = 11;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_12465 === 9) {
                                var inst_12439 = state_12464[2];
                                var state_12464__$1 = state_12464;
                                var statearr_12481_12522 = state_12464__$1;
                                statearr_12481_12522[2] = inst_12439;
                                statearr_12481_12522[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_12465 === 10) {
                                  var inst_12406 = state_12464[8];
                                  var inst_12403 = state_12464[9];
                                  var inst_12404 = state_12464[10];
                                  var inst_12405 = state_12464[11];
                                  var inst_12411 = cljs.core._nth.call(null, inst_12404, inst_12406);
                                  var inst_12412 = cljs.core.async.muxch_STAR_.call(null, inst_12411);
                                  var inst_12413 = cljs.core.async.close_BANG_.call(null, inst_12412);
                                  var inst_12414 = inst_12406 + 1;
                                  var tmp12476 = inst_12403;
                                  var tmp12477 = inst_12404;
                                  var tmp12478 = inst_12405;
                                  var inst_12403__$1 = tmp12476;
                                  var inst_12404__$1 = tmp12477;
                                  var inst_12405__$1 = tmp12478;
                                  var inst_12406__$1 = inst_12414;
                                  var state_12464__$1 = function() {
                                    var statearr_12482 = state_12464;
                                    statearr_12482[8] = inst_12406__$1;
                                    statearr_12482[14] = inst_12413;
                                    statearr_12482[9] = inst_12403__$1;
                                    statearr_12482[10] = inst_12404__$1;
                                    statearr_12482[11] = inst_12405__$1;
                                    return statearr_12482;
                                  }();
                                  var statearr_12483_12523 = state_12464__$1;
                                  statearr_12483_12523[2] = null;
                                  statearr_12483_12523[1] = 8;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_12465 === 11) {
                                    var inst_12417 = state_12464[15];
                                    var inst_12403 = state_12464[9];
                                    var inst_12417__$1 = cljs.core.seq.call(null, inst_12403);
                                    var state_12464__$1 = function() {
                                      var statearr_12484 = state_12464;
                                      statearr_12484[15] = inst_12417__$1;
                                      return statearr_12484;
                                    }();
                                    if (inst_12417__$1) {
                                      var statearr_12485_12524 = state_12464__$1;
                                      statearr_12485_12524[1] = 13;
                                    } else {
                                      var statearr_12486_12525 = state_12464__$1;
                                      statearr_12486_12525[1] = 14;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_12465 === 12) {
                                      var inst_12437 = state_12464[2];
                                      var state_12464__$1 = state_12464;
                                      var statearr_12487_12526 = state_12464__$1;
                                      statearr_12487_12526[2] = inst_12437;
                                      statearr_12487_12526[1] = 9;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_12465 === 13) {
                                        var inst_12417 = state_12464[15];
                                        var inst_12419 = cljs.core.chunked_seq_QMARK_.call(null, inst_12417);
                                        var state_12464__$1 = state_12464;
                                        if (inst_12419) {
                                          var statearr_12488_12527 = state_12464__$1;
                                          statearr_12488_12527[1] = 16;
                                        } else {
                                          var statearr_12489_12528 = state_12464__$1;
                                          statearr_12489_12528[1] = 17;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_12465 === 14) {
                                          var state_12464__$1 = state_12464;
                                          var statearr_12490_12529 = state_12464__$1;
                                          statearr_12490_12529[2] = null;
                                          statearr_12490_12529[1] = 15;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_12465 === 15) {
                                            var inst_12435 = state_12464[2];
                                            var state_12464__$1 = state_12464;
                                            var statearr_12491_12530 = state_12464__$1;
                                            statearr_12491_12530[2] = inst_12435;
                                            statearr_12491_12530[1] = 12;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_12465 === 16) {
                                              var inst_12417 = state_12464[15];
                                              var inst_12421 = cljs.core.chunk_first.call(null, inst_12417);
                                              var inst_12422 = cljs.core.chunk_rest.call(null, inst_12417);
                                              var inst_12423 = cljs.core.count.call(null, inst_12421);
                                              var inst_12403 = inst_12422;
                                              var inst_12404 = inst_12421;
                                              var inst_12405 = inst_12423;
                                              var inst_12406 = 0;
                                              var state_12464__$1 = function() {
                                                var statearr_12492 = state_12464;
                                                statearr_12492[8] = inst_12406;
                                                statearr_12492[9] = inst_12403;
                                                statearr_12492[10] = inst_12404;
                                                statearr_12492[11] = inst_12405;
                                                return statearr_12492;
                                              }();
                                              var statearr_12493_12531 = state_12464__$1;
                                              statearr_12493_12531[2] = null;
                                              statearr_12493_12531[1] = 8;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_12465 === 17) {
                                                var inst_12417 = state_12464[15];
                                                var inst_12426 = cljs.core.first.call(null, inst_12417);
                                                var inst_12427 = cljs.core.async.muxch_STAR_.call(null, inst_12426);
                                                var inst_12428 = cljs.core.async.close_BANG_.call(null, inst_12427);
                                                var inst_12429 = cljs.core.next.call(null, inst_12417);
                                                var inst_12403 = inst_12429;
                                                var inst_12404 = null;
                                                var inst_12405 = 0;
                                                var inst_12406 = 0;
                                                var state_12464__$1 = function() {
                                                  var statearr_12494 = state_12464;
                                                  statearr_12494[8] = inst_12406;
                                                  statearr_12494[9] = inst_12403;
                                                  statearr_12494[10] = inst_12404;
                                                  statearr_12494[11] = inst_12405;
                                                  statearr_12494[16] = inst_12428;
                                                  return statearr_12494;
                                                }();
                                                var statearr_12495_12532 = state_12464__$1;
                                                statearr_12495_12532[2] = null;
                                                statearr_12495_12532[1] = 8;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                if (state_val_12465 === 18) {
                                                  var inst_12432 = state_12464[2];
                                                  var state_12464__$1 = state_12464;
                                                  var statearr_12496_12533 = state_12464__$1;
                                                  statearr_12496_12533[2] = inst_12432;
                                                  statearr_12496_12533[1] = 15;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_12465 === 19) {
                                                    var state_12464__$1 = state_12464;
                                                    var statearr_12497_12534 = state_12464__$1;
                                                    statearr_12497_12534[2] = null;
                                                    statearr_12497_12534[1] = 24;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_12465 === 20) {
                                                      var state_12464__$1 = state_12464;
                                                      var statearr_12498_12535 = state_12464__$1;
                                                      statearr_12498_12535[2] = null;
                                                      statearr_12498_12535[1] = 21;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      if (state_val_12465 === 21) {
                                                        var inst_12457 = state_12464[2];
                                                        var state_12464__$1 = function() {
                                                          var statearr_12499 = state_12464;
                                                          statearr_12499[17] = inst_12457;
                                                          return statearr_12499;
                                                        }();
                                                        var statearr_12500_12536 = state_12464__$1;
                                                        statearr_12500_12536[2] = null;
                                                        statearr_12500_12536[1] = 2;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                      } else {
                                                        if (state_val_12465 === 22) {
                                                          var inst_12454 = state_12464[2];
                                                          var state_12464__$1 = state_12464;
                                                          var statearr_12501_12537 = state_12464__$1;
                                                          statearr_12501_12537[2] = inst_12454;
                                                          statearr_12501_12537[1] = 21;
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                        } else {
                                                          if (state_val_12465 === 23) {
                                                            var inst_12441 = state_12464[12];
                                                            var inst_12445 = state_12464[2];
                                                            var inst_12446 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_12441);
                                                            var state_12464__$1 = function() {
                                                              var statearr_12502 = state_12464;
                                                              statearr_12502[18] = inst_12445;
                                                              return statearr_12502;
                                                            }();
                                                            var statearr_12503_12538 = state_12464__$1;
                                                            statearr_12503_12538[2] = inst_12446;
                                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12464__$1);
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                          } else {
                                                            if (state_val_12465 === 24) {
                                                              var inst_12393 = state_12464[7];
                                                              var inst_12443 = state_12464[13];
                                                              var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_12464, 23, Object, null, 22);
                                                              var inst_12450 = cljs.core.async.muxch_STAR_.call(null, inst_12443);
                                                              var state_12464__$1 = state_12464;
                                                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12464__$1, 25, inst_12450, inst_12393);
                                                            } else {
                                                              if (state_val_12465 === 25) {
                                                                var inst_12452 = state_12464[2];
                                                                var state_12464__$1 = state_12464;
                                                                var statearr_12504_12539 = state_12464__$1;
                                                                statearr_12504_12539[2] = inst_12452;
                                                                cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12464__$1);
                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6248__auto___12512, mults, ensure_mult, p);
          return function(switch__6233__auto__, c__6248__auto___12512, mults, ensure_mult, p) {
            return function() {
              var state_machine__6234__auto__ = null;
              var state_machine__6234__auto____0 = function() {
                var statearr_12508 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_12508[0] = state_machine__6234__auto__;
                statearr_12508[1] = 1;
                return statearr_12508;
              };
              var state_machine__6234__auto____1 = function(state_12464) {
                while (true) {
                  var ret_value__6235__auto__ = function() {
                    try {
                      while (true) {
                        var result__6236__auto__ = switch__6233__auto__.call(null, state_12464);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6236__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6236__auto__;
                        }
                        break;
                      }
                    } catch (e12509) {
                      if (e12509 instanceof Object) {
                        var ex__6237__auto__ = e12509;
                        var statearr_12510_12540 = state_12464;
                        statearr_12510_12540[5] = ex__6237__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12464);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e12509;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6235__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__12541 = state_12464;
                    state_12464 = G__12541;
                    continue;
                  } else {
                    return ret_value__6235__auto__;
                  }
                  break;
                }
              };
              state_machine__6234__auto__ = function(state_12464) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6234__auto____0.call(this);
                  case 1:
                    return state_machine__6234__auto____1.call(this, state_12464);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6234__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6234__auto____0;
              state_machine__6234__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6234__auto____1;
              return state_machine__6234__auto__;
            }();
          }(switch__6233__auto__, c__6248__auto___12512, mults, ensure_mult, p);
        }();
        var state__6250__auto__ = function() {
          var statearr_12511 = f__6249__auto__.call(null);
          statearr_12511[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6248__auto___12512;
          return statearr_12511;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6250__auto__);
      };
    }(c__6248__auto___12512, mults, ensure_mult, p));
    return p;
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub;
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true);
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub;
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p);
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all;
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null);
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__6248__auto___12678 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6248__auto___12678, chs__$1, out, cnt, rets, dchan, dctr, done) {
      return function() {
        var f__6249__auto__ = function() {
          var switch__6233__auto__ = function(c__6248__auto___12678, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function(state_12648) {
              var state_val_12649 = state_12648[1];
              if (state_val_12649 === 1) {
                var state_12648__$1 = state_12648;
                var statearr_12650_12679 = state_12648__$1;
                statearr_12650_12679[2] = null;
                statearr_12650_12679[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_12649 === 2) {
                  var inst_12611 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                  var inst_12612 = 0;
                  var state_12648__$1 = function() {
                    var statearr_12651 = state_12648;
                    statearr_12651[7] = inst_12611;
                    statearr_12651[8] = inst_12612;
                    return statearr_12651;
                  }();
                  var statearr_12652_12680 = state_12648__$1;
                  statearr_12652_12680[2] = null;
                  statearr_12652_12680[1] = 4;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_12649 === 3) {
                    var inst_12646 = state_12648[2];
                    var state_12648__$1 = state_12648;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12648__$1, inst_12646);
                  } else {
                    if (state_val_12649 === 4) {
                      var inst_12612 = state_12648[8];
                      var inst_12614 = inst_12612 < cnt;
                      var state_12648__$1 = state_12648;
                      if (cljs.core.truth_(inst_12614)) {
                        var statearr_12653_12681 = state_12648__$1;
                        statearr_12653_12681[1] = 6;
                      } else {
                        var statearr_12654_12682 = state_12648__$1;
                        statearr_12654_12682[1] = 7;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_12649 === 5) {
                        var inst_12632 = state_12648[2];
                        var state_12648__$1 = function() {
                          var statearr_12655 = state_12648;
                          statearr_12655[9] = inst_12632;
                          return statearr_12655;
                        }();
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12648__$1, 12, dchan);
                      } else {
                        if (state_val_12649 === 6) {
                          var state_12648__$1 = state_12648;
                          var statearr_12656_12683 = state_12648__$1;
                          statearr_12656_12683[2] = null;
                          statearr_12656_12683[1] = 11;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_12649 === 7) {
                            var state_12648__$1 = state_12648;
                            var statearr_12657_12684 = state_12648__$1;
                            statearr_12657_12684[2] = null;
                            statearr_12657_12684[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_12649 === 8) {
                              var inst_12630 = state_12648[2];
                              var state_12648__$1 = state_12648;
                              var statearr_12658_12685 = state_12648__$1;
                              statearr_12658_12685[2] = inst_12630;
                              statearr_12658_12685[1] = 5;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_12649 === 9) {
                                var inst_12612 = state_12648[8];
                                var inst_12625 = state_12648[2];
                                var inst_12626 = inst_12612 + 1;
                                var inst_12612__$1 = inst_12626;
                                var state_12648__$1 = function() {
                                  var statearr_12659 = state_12648;
                                  statearr_12659[10] = inst_12625;
                                  statearr_12659[8] = inst_12612__$1;
                                  return statearr_12659;
                                }();
                                var statearr_12660_12686 = state_12648__$1;
                                statearr_12660_12686[2] = null;
                                statearr_12660_12686[1] = 4;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_12649 === 10) {
                                  var inst_12616 = state_12648[2];
                                  var inst_12617 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                  var state_12648__$1 = function() {
                                    var statearr_12661 = state_12648;
                                    statearr_12661[11] = inst_12616;
                                    return statearr_12661;
                                  }();
                                  var statearr_12662_12687 = state_12648__$1;
                                  statearr_12662_12687[2] = inst_12617;
                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12648__$1);
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_12649 === 11) {
                                    var inst_12612 = state_12648[8];
                                    var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_12648, 10, Object, null, 9);
                                    var inst_12621 = chs__$1.call(null, inst_12612);
                                    var inst_12622 = done.call(null, inst_12612);
                                    var inst_12623 = cljs.core.async.take_BANG_.call(null, inst_12621, inst_12622);
                                    var state_12648__$1 = state_12648;
                                    var statearr_12663_12688 = state_12648__$1;
                                    statearr_12663_12688[2] = inst_12623;
                                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12648__$1);
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_12649 === 12) {
                                      var inst_12634 = state_12648[12];
                                      var inst_12634__$1 = state_12648[2];
                                      var inst_12635 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_12634__$1);
                                      var state_12648__$1 = function() {
                                        var statearr_12664 = state_12648;
                                        statearr_12664[12] = inst_12634__$1;
                                        return statearr_12664;
                                      }();
                                      if (cljs.core.truth_(inst_12635)) {
                                        var statearr_12665_12689 = state_12648__$1;
                                        statearr_12665_12689[1] = 13;
                                      } else {
                                        var statearr_12666_12690 = state_12648__$1;
                                        statearr_12666_12690[1] = 14;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_12649 === 13) {
                                        var inst_12637 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_12648__$1 = state_12648;
                                        var statearr_12667_12691 = state_12648__$1;
                                        statearr_12667_12691[2] = inst_12637;
                                        statearr_12667_12691[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_12649 === 14) {
                                          var inst_12634 = state_12648[12];
                                          var inst_12639 = cljs.core.apply.call(null, f, inst_12634);
                                          var state_12648__$1 = state_12648;
                                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12648__$1, 16, out, inst_12639);
                                        } else {
                                          if (state_val_12649 === 15) {
                                            var inst_12644 = state_12648[2];
                                            var state_12648__$1 = state_12648;
                                            var statearr_12668_12692 = state_12648__$1;
                                            statearr_12668_12692[2] = inst_12644;
                                            statearr_12668_12692[1] = 3;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_12649 === 16) {
                                              var inst_12641 = state_12648[2];
                                              var state_12648__$1 = function() {
                                                var statearr_12669 = state_12648;
                                                statearr_12669[13] = inst_12641;
                                                return statearr_12669;
                                              }();
                                              var statearr_12670_12693 = state_12648__$1;
                                              statearr_12670_12693[2] = null;
                                              statearr_12670_12693[1] = 2;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6248__auto___12678, chs__$1, out, cnt, rets, dchan, dctr, done);
          return function(switch__6233__auto__, c__6248__auto___12678, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function() {
              var state_machine__6234__auto__ = null;
              var state_machine__6234__auto____0 = function() {
                var statearr_12674 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_12674[0] = state_machine__6234__auto__;
                statearr_12674[1] = 1;
                return statearr_12674;
              };
              var state_machine__6234__auto____1 = function(state_12648) {
                while (true) {
                  var ret_value__6235__auto__ = function() {
                    try {
                      while (true) {
                        var result__6236__auto__ = switch__6233__auto__.call(null, state_12648);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6236__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6236__auto__;
                        }
                        break;
                      }
                    } catch (e12675) {
                      if (e12675 instanceof Object) {
                        var ex__6237__auto__ = e12675;
                        var statearr_12676_12694 = state_12648;
                        statearr_12676_12694[5] = ex__6237__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12648);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e12675;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6235__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__12695 = state_12648;
                    state_12648 = G__12695;
                    continue;
                  } else {
                    return ret_value__6235__auto__;
                  }
                  break;
                }
              };
              state_machine__6234__auto__ = function(state_12648) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6234__auto____0.call(this);
                  case 1:
                    return state_machine__6234__auto____1.call(this, state_12648);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6234__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6234__auto____0;
              state_machine__6234__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6234__auto____1;
              return state_machine__6234__auto__;
            }();
          }(switch__6233__auto__, c__6248__auto___12678, chs__$1, out, cnt, rets, dchan, dctr, done);
        }();
        var state__6250__auto__ = function() {
          var statearr_12677 = f__6249__auto__.call(null);
          statearr_12677[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6248__auto___12678;
          return statearr_12677;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6250__auto__);
      };
    }(c__6248__auto___12678, chs__$1, out, cnt, rets, dchan, dctr, done));
    return out;
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map;
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null);
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6248__auto___12803 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6248__auto___12803, out) {
      return function() {
        var f__6249__auto__ = function() {
          var switch__6233__auto__ = function(c__6248__auto___12803, out) {
            return function(state_12779) {
              var state_val_12780 = state_12779[1];
              if (state_val_12780 === 1) {
                var inst_12750 = cljs.core.vec.call(null, chs);
                var inst_12751 = inst_12750;
                var state_12779__$1 = function() {
                  var statearr_12781 = state_12779;
                  statearr_12781[7] = inst_12751;
                  return statearr_12781;
                }();
                var statearr_12782_12804 = state_12779__$1;
                statearr_12782_12804[2] = null;
                statearr_12782_12804[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_12780 === 2) {
                  var inst_12751 = state_12779[7];
                  var inst_12753 = cljs.core.count.call(null, inst_12751);
                  var inst_12754 = inst_12753 > 0;
                  var state_12779__$1 = state_12779;
                  if (cljs.core.truth_(inst_12754)) {
                    var statearr_12783_12805 = state_12779__$1;
                    statearr_12783_12805[1] = 4;
                  } else {
                    var statearr_12784_12806 = state_12779__$1;
                    statearr_12784_12806[1] = 5;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_12780 === 3) {
                    var inst_12777 = state_12779[2];
                    var state_12779__$1 = state_12779;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12779__$1, inst_12777);
                  } else {
                    if (state_val_12780 === 4) {
                      var inst_12751 = state_12779[7];
                      var state_12779__$1 = state_12779;
                      return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_12779__$1, 7, inst_12751);
                    } else {
                      if (state_val_12780 === 5) {
                        var inst_12773 = cljs.core.async.close_BANG_.call(null, out);
                        var state_12779__$1 = state_12779;
                        var statearr_12785_12807 = state_12779__$1;
                        statearr_12785_12807[2] = inst_12773;
                        statearr_12785_12807[1] = 6;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_12780 === 6) {
                          var inst_12775 = state_12779[2];
                          var state_12779__$1 = state_12779;
                          var statearr_12786_12808 = state_12779__$1;
                          statearr_12786_12808[2] = inst_12775;
                          statearr_12786_12808[1] = 3;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_12780 === 7) {
                            var inst_12759 = state_12779[8];
                            var inst_12758 = state_12779[9];
                            var inst_12758__$1 = state_12779[2];
                            var inst_12759__$1 = cljs.core.nth.call(null, inst_12758__$1, 0, null);
                            var inst_12760 = cljs.core.nth.call(null, inst_12758__$1, 1, null);
                            var inst_12761 = inst_12759__$1 == null;
                            var state_12779__$1 = function() {
                              var statearr_12787 = state_12779;
                              statearr_12787[8] = inst_12759__$1;
                              statearr_12787[9] = inst_12758__$1;
                              statearr_12787[10] = inst_12760;
                              return statearr_12787;
                            }();
                            if (cljs.core.truth_(inst_12761)) {
                              var statearr_12788_12809 = state_12779__$1;
                              statearr_12788_12809[1] = 8;
                            } else {
                              var statearr_12789_12810 = state_12779__$1;
                              statearr_12789_12810[1] = 9;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_12780 === 8) {
                              var inst_12759 = state_12779[8];
                              var inst_12758 = state_12779[9];
                              var inst_12751 = state_12779[7];
                              var inst_12760 = state_12779[10];
                              var inst_12763 = function() {
                                var c = inst_12760;
                                var v = inst_12759;
                                var vec__12756 = inst_12758;
                                var cs = inst_12751;
                                return function(c, v, vec__12756, cs, inst_12759, inst_12758, inst_12751, inst_12760, state_val_12780, c__6248__auto___12803, out) {
                                  return function(p1__12696_SHARP_) {
                                    return cljs.core.not_EQ_.call(null, c, p1__12696_SHARP_);
                                  };
                                }(c, v, vec__12756, cs, inst_12759, inst_12758, inst_12751, inst_12760, state_val_12780, c__6248__auto___12803, out);
                              }();
                              var inst_12764 = cljs.core.filterv.call(null, inst_12763, inst_12751);
                              var inst_12751__$1 = inst_12764;
                              var state_12779__$1 = function() {
                                var statearr_12790 = state_12779;
                                statearr_12790[7] = inst_12751__$1;
                                return statearr_12790;
                              }();
                              var statearr_12791_12811 = state_12779__$1;
                              statearr_12791_12811[2] = null;
                              statearr_12791_12811[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_12780 === 9) {
                                var inst_12759 = state_12779[8];
                                var state_12779__$1 = state_12779;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12779__$1, 11, out, inst_12759);
                              } else {
                                if (state_val_12780 === 10) {
                                  var inst_12771 = state_12779[2];
                                  var state_12779__$1 = state_12779;
                                  var statearr_12793_12812 = state_12779__$1;
                                  statearr_12793_12812[2] = inst_12771;
                                  statearr_12793_12812[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_12780 === 11) {
                                    var inst_12751 = state_12779[7];
                                    var inst_12768 = state_12779[2];
                                    var tmp12792 = inst_12751;
                                    var inst_12751__$1 = tmp12792;
                                    var state_12779__$1 = function() {
                                      var statearr_12794 = state_12779;
                                      statearr_12794[7] = inst_12751__$1;
                                      statearr_12794[11] = inst_12768;
                                      return statearr_12794;
                                    }();
                                    var statearr_12795_12813 = state_12779__$1;
                                    statearr_12795_12813[2] = null;
                                    statearr_12795_12813[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6248__auto___12803, out);
          return function(switch__6233__auto__, c__6248__auto___12803, out) {
            return function() {
              var state_machine__6234__auto__ = null;
              var state_machine__6234__auto____0 = function() {
                var statearr_12799 = [null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_12799[0] = state_machine__6234__auto__;
                statearr_12799[1] = 1;
                return statearr_12799;
              };
              var state_machine__6234__auto____1 = function(state_12779) {
                while (true) {
                  var ret_value__6235__auto__ = function() {
                    try {
                      while (true) {
                        var result__6236__auto__ = switch__6233__auto__.call(null, state_12779);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6236__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6236__auto__;
                        }
                        break;
                      }
                    } catch (e12800) {
                      if (e12800 instanceof Object) {
                        var ex__6237__auto__ = e12800;
                        var statearr_12801_12814 = state_12779;
                        statearr_12801_12814[5] = ex__6237__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12779);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e12800;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6235__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__12815 = state_12779;
                    state_12779 = G__12815;
                    continue;
                  } else {
                    return ret_value__6235__auto__;
                  }
                  break;
                }
              };
              state_machine__6234__auto__ = function(state_12779) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6234__auto____0.call(this);
                  case 1:
                    return state_machine__6234__auto____1.call(this, state_12779);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6234__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6234__auto____0;
              state_machine__6234__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6234__auto____1;
              return state_machine__6234__auto__;
            }();
          }(switch__6233__auto__, c__6248__auto___12803, out);
        }();
        var state__6250__auto__ = function() {
          var statearr_12802 = f__6249__auto__.call(null);
          statearr_12802[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6248__auto___12803;
          return statearr_12802;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6250__auto__);
      };
    }(c__6248__auto___12803, out));
    return out;
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge;
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function() {
  var take = null;
  var take__2 = function(n, ch) {
    return take.call(null, n, ch, null);
  };
  var take__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6248__auto___12908 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6248__auto___12908, out) {
      return function() {
        var f__6249__auto__ = function() {
          var switch__6233__auto__ = function(c__6248__auto___12908, out) {
            return function(state_12885) {
              var state_val_12886 = state_12885[1];
              if (state_val_12886 === 1) {
                var inst_12862 = 0;
                var state_12885__$1 = function() {
                  var statearr_12887 = state_12885;
                  statearr_12887[7] = inst_12862;
                  return statearr_12887;
                }();
                var statearr_12888_12909 = state_12885__$1;
                statearr_12888_12909[2] = null;
                statearr_12888_12909[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_12886 === 2) {
                  var inst_12862 = state_12885[7];
                  var inst_12864 = inst_12862 < n;
                  var state_12885__$1 = state_12885;
                  if (cljs.core.truth_(inst_12864)) {
                    var statearr_12889_12910 = state_12885__$1;
                    statearr_12889_12910[1] = 4;
                  } else {
                    var statearr_12890_12911 = state_12885__$1;
                    statearr_12890_12911[1] = 5;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_12886 === 3) {
                    var inst_12882 = state_12885[2];
                    var inst_12883 = cljs.core.async.close_BANG_.call(null, out);
                    var state_12885__$1 = function() {
                      var statearr_12891 = state_12885;
                      statearr_12891[8] = inst_12882;
                      return statearr_12891;
                    }();
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12885__$1, inst_12883);
                  } else {
                    if (state_val_12886 === 4) {
                      var state_12885__$1 = state_12885;
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12885__$1, 7, ch);
                    } else {
                      if (state_val_12886 === 5) {
                        var state_12885__$1 = state_12885;
                        var statearr_12892_12912 = state_12885__$1;
                        statearr_12892_12912[2] = null;
                        statearr_12892_12912[1] = 6;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_12886 === 6) {
                          var inst_12880 = state_12885[2];
                          var state_12885__$1 = state_12885;
                          var statearr_12893_12913 = state_12885__$1;
                          statearr_12893_12913[2] = inst_12880;
                          statearr_12893_12913[1] = 3;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_12886 === 7) {
                            var inst_12867 = state_12885[9];
                            var inst_12867__$1 = state_12885[2];
                            var inst_12868 = inst_12867__$1 == null;
                            var inst_12869 = cljs.core.not.call(null, inst_12868);
                            var state_12885__$1 = function() {
                              var statearr_12894 = state_12885;
                              statearr_12894[9] = inst_12867__$1;
                              return statearr_12894;
                            }();
                            if (inst_12869) {
                              var statearr_12895_12914 = state_12885__$1;
                              statearr_12895_12914[1] = 8;
                            } else {
                              var statearr_12896_12915 = state_12885__$1;
                              statearr_12896_12915[1] = 9;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_12886 === 8) {
                              var inst_12867 = state_12885[9];
                              var state_12885__$1 = state_12885;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12885__$1, 11, out, inst_12867);
                            } else {
                              if (state_val_12886 === 9) {
                                var state_12885__$1 = state_12885;
                                var statearr_12897_12916 = state_12885__$1;
                                statearr_12897_12916[2] = null;
                                statearr_12897_12916[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_12886 === 10) {
                                  var inst_12877 = state_12885[2];
                                  var state_12885__$1 = state_12885;
                                  var statearr_12898_12917 = state_12885__$1;
                                  statearr_12898_12917[2] = inst_12877;
                                  statearr_12898_12917[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_12886 === 11) {
                                    var inst_12862 = state_12885[7];
                                    var inst_12872 = state_12885[2];
                                    var inst_12873 = inst_12862 + 1;
                                    var inst_12862__$1 = inst_12873;
                                    var state_12885__$1 = function() {
                                      var statearr_12899 = state_12885;
                                      statearr_12899[10] = inst_12872;
                                      statearr_12899[7] = inst_12862__$1;
                                      return statearr_12899;
                                    }();
                                    var statearr_12900_12918 = state_12885__$1;
                                    statearr_12900_12918[2] = null;
                                    statearr_12900_12918[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6248__auto___12908, out);
          return function(switch__6233__auto__, c__6248__auto___12908, out) {
            return function() {
              var state_machine__6234__auto__ = null;
              var state_machine__6234__auto____0 = function() {
                var statearr_12904 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_12904[0] = state_machine__6234__auto__;
                statearr_12904[1] = 1;
                return statearr_12904;
              };
              var state_machine__6234__auto____1 = function(state_12885) {
                while (true) {
                  var ret_value__6235__auto__ = function() {
                    try {
                      while (true) {
                        var result__6236__auto__ = switch__6233__auto__.call(null, state_12885);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6236__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6236__auto__;
                        }
                        break;
                      }
                    } catch (e12905) {
                      if (e12905 instanceof Object) {
                        var ex__6237__auto__ = e12905;
                        var statearr_12906_12919 = state_12885;
                        statearr_12906_12919[5] = ex__6237__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12885);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e12905;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6235__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__12920 = state_12885;
                    state_12885 = G__12920;
                    continue;
                  } else {
                    return ret_value__6235__auto__;
                  }
                  break;
                }
              };
              state_machine__6234__auto__ = function(state_12885) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6234__auto____0.call(this);
                  case 1:
                    return state_machine__6234__auto____1.call(this, state_12885);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6234__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6234__auto____0;
              state_machine__6234__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6234__auto____1;
              return state_machine__6234__auto__;
            }();
          }(switch__6233__auto__, c__6248__auto___12908, out);
        }();
        var state__6250__auto__ = function() {
          var statearr_12907 = f__6249__auto__.call(null);
          statearr_12907[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6248__auto___12908;
          return statearr_12907;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6250__auto__);
      };
    }(c__6248__auto___12908, out));
    return out;
  };
  take = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return take__2.call(this, n, ch);
      case 3:
        return take__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  take.cljs$core$IFn$_invoke$arity$3 = take__3;
  return take;
}();
cljs.core.async.unique = function() {
  var unique = null;
  var unique__1 = function(ch) {
    return unique.call(null, ch, null);
  };
  var unique__2 = function(ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6248__auto___13017 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6248__auto___13017, out) {
      return function() {
        var f__6249__auto__ = function() {
          var switch__6233__auto__ = function(c__6248__auto___13017, out) {
            return function(state_12992) {
              var state_val_12993 = state_12992[1];
              if (state_val_12993 === 1) {
                var inst_12969 = null;
                var state_12992__$1 = function() {
                  var statearr_12994 = state_12992;
                  statearr_12994[7] = inst_12969;
                  return statearr_12994;
                }();
                var statearr_12995_13018 = state_12992__$1;
                statearr_12995_13018[2] = null;
                statearr_12995_13018[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_12993 === 2) {
                  var state_12992__$1 = state_12992;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12992__$1, 4, ch);
                } else {
                  if (state_val_12993 === 3) {
                    var inst_12989 = state_12992[2];
                    var inst_12990 = cljs.core.async.close_BANG_.call(null, out);
                    var state_12992__$1 = function() {
                      var statearr_12996 = state_12992;
                      statearr_12996[8] = inst_12989;
                      return statearr_12996;
                    }();
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12992__$1, inst_12990);
                  } else {
                    if (state_val_12993 === 4) {
                      var inst_12972 = state_12992[9];
                      var inst_12972__$1 = state_12992[2];
                      var inst_12973 = inst_12972__$1 == null;
                      var inst_12974 = cljs.core.not.call(null, inst_12973);
                      var state_12992__$1 = function() {
                        var statearr_12997 = state_12992;
                        statearr_12997[9] = inst_12972__$1;
                        return statearr_12997;
                      }();
                      if (inst_12974) {
                        var statearr_12998_13019 = state_12992__$1;
                        statearr_12998_13019[1] = 5;
                      } else {
                        var statearr_12999_13020 = state_12992__$1;
                        statearr_12999_13020[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_12993 === 5) {
                        var inst_12969 = state_12992[7];
                        var inst_12972 = state_12992[9];
                        var inst_12976 = cljs.core._EQ_.call(null, inst_12972, inst_12969);
                        var state_12992__$1 = state_12992;
                        if (inst_12976) {
                          var statearr_13000_13021 = state_12992__$1;
                          statearr_13000_13021[1] = 8;
                        } else {
                          var statearr_13001_13022 = state_12992__$1;
                          statearr_13001_13022[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_12993 === 6) {
                          var state_12992__$1 = state_12992;
                          var statearr_13003_13023 = state_12992__$1;
                          statearr_13003_13023[2] = null;
                          statearr_13003_13023[1] = 7;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_12993 === 7) {
                            var inst_12987 = state_12992[2];
                            var state_12992__$1 = state_12992;
                            var statearr_13004_13024 = state_12992__$1;
                            statearr_13004_13024[2] = inst_12987;
                            statearr_13004_13024[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_12993 === 8) {
                              var inst_12969 = state_12992[7];
                              var tmp13002 = inst_12969;
                              var inst_12969__$1 = tmp13002;
                              var state_12992__$1 = function() {
                                var statearr_13005 = state_12992;
                                statearr_13005[7] = inst_12969__$1;
                                return statearr_13005;
                              }();
                              var statearr_13006_13025 = state_12992__$1;
                              statearr_13006_13025[2] = null;
                              statearr_13006_13025[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_12993 === 9) {
                                var inst_12972 = state_12992[9];
                                var state_12992__$1 = state_12992;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12992__$1, 11, out, inst_12972);
                              } else {
                                if (state_val_12993 === 10) {
                                  var inst_12984 = state_12992[2];
                                  var state_12992__$1 = state_12992;
                                  var statearr_13007_13026 = state_12992__$1;
                                  statearr_13007_13026[2] = inst_12984;
                                  statearr_13007_13026[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_12993 === 11) {
                                    var inst_12972 = state_12992[9];
                                    var inst_12981 = state_12992[2];
                                    var inst_12969 = inst_12972;
                                    var state_12992__$1 = function() {
                                      var statearr_13008 = state_12992;
                                      statearr_13008[7] = inst_12969;
                                      statearr_13008[10] = inst_12981;
                                      return statearr_13008;
                                    }();
                                    var statearr_13009_13027 = state_12992__$1;
                                    statearr_13009_13027[2] = null;
                                    statearr_13009_13027[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6248__auto___13017, out);
          return function(switch__6233__auto__, c__6248__auto___13017, out) {
            return function() {
              var state_machine__6234__auto__ = null;
              var state_machine__6234__auto____0 = function() {
                var statearr_13013 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_13013[0] = state_machine__6234__auto__;
                statearr_13013[1] = 1;
                return statearr_13013;
              };
              var state_machine__6234__auto____1 = function(state_12992) {
                while (true) {
                  var ret_value__6235__auto__ = function() {
                    try {
                      while (true) {
                        var result__6236__auto__ = switch__6233__auto__.call(null, state_12992);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6236__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6236__auto__;
                        }
                        break;
                      }
                    } catch (e13014) {
                      if (e13014 instanceof Object) {
                        var ex__6237__auto__ = e13014;
                        var statearr_13015_13028 = state_12992;
                        statearr_13015_13028[5] = ex__6237__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12992);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e13014;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6235__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__13029 = state_12992;
                    state_12992 = G__13029;
                    continue;
                  } else {
                    return ret_value__6235__auto__;
                  }
                  break;
                }
              };
              state_machine__6234__auto__ = function(state_12992) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6234__auto____0.call(this);
                  case 1:
                    return state_machine__6234__auto____1.call(this, state_12992);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6234__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6234__auto____0;
              state_machine__6234__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6234__auto____1;
              return state_machine__6234__auto__;
            }();
          }(switch__6233__auto__, c__6248__auto___13017, out);
        }();
        var state__6250__auto__ = function() {
          var statearr_13016 = f__6249__auto__.call(null);
          statearr_13016[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6248__auto___13017;
          return statearr_13016;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6250__auto__);
      };
    }(c__6248__auto___13017, out));
    return out;
  };
  unique = function(ch, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return unique__1.call(this, ch);
      case 2:
        return unique__2.call(this, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unique.cljs$core$IFn$_invoke$arity$1 = unique__1;
  unique.cljs$core$IFn$_invoke$arity$2 = unique__2;
  return unique;
}();
cljs.core.async.partition = function() {
  var partition = null;
  var partition__2 = function(n, ch) {
    return partition.call(null, n, ch, null);
  };
  var partition__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6248__auto___13164 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6248__auto___13164, out) {
      return function() {
        var f__6249__auto__ = function() {
          var switch__6233__auto__ = function(c__6248__auto___13164, out) {
            return function(state_13134) {
              var state_val_13135 = state_13134[1];
              if (state_val_13135 === 1) {
                var inst_13097 = new Array(n);
                var inst_13098 = inst_13097;
                var inst_13099 = 0;
                var state_13134__$1 = function() {
                  var statearr_13136 = state_13134;
                  statearr_13136[7] = inst_13098;
                  statearr_13136[8] = inst_13099;
                  return statearr_13136;
                }();
                var statearr_13137_13165 = state_13134__$1;
                statearr_13137_13165[2] = null;
                statearr_13137_13165[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_13135 === 2) {
                  var state_13134__$1 = state_13134;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13134__$1, 4, ch);
                } else {
                  if (state_val_13135 === 3) {
                    var inst_13132 = state_13134[2];
                    var state_13134__$1 = state_13134;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13134__$1, inst_13132);
                  } else {
                    if (state_val_13135 === 4) {
                      var inst_13102 = state_13134[9];
                      var inst_13102__$1 = state_13134[2];
                      var inst_13103 = inst_13102__$1 == null;
                      var inst_13104 = cljs.core.not.call(null, inst_13103);
                      var state_13134__$1 = function() {
                        var statearr_13138 = state_13134;
                        statearr_13138[9] = inst_13102__$1;
                        return statearr_13138;
                      }();
                      if (inst_13104) {
                        var statearr_13139_13166 = state_13134__$1;
                        statearr_13139_13166[1] = 5;
                      } else {
                        var statearr_13140_13167 = state_13134__$1;
                        statearr_13140_13167[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_13135 === 5) {
                        var inst_13107 = state_13134[10];
                        var inst_13098 = state_13134[7];
                        var inst_13099 = state_13134[8];
                        var inst_13102 = state_13134[9];
                        var inst_13106 = inst_13098[inst_13099] = inst_13102;
                        var inst_13107__$1 = inst_13099 + 1;
                        var inst_13108 = inst_13107__$1 < n;
                        var state_13134__$1 = function() {
                          var statearr_13141 = state_13134;
                          statearr_13141[11] = inst_13106;
                          statearr_13141[10] = inst_13107__$1;
                          return statearr_13141;
                        }();
                        if (cljs.core.truth_(inst_13108)) {
                          var statearr_13142_13168 = state_13134__$1;
                          statearr_13142_13168[1] = 8;
                        } else {
                          var statearr_13143_13169 = state_13134__$1;
                          statearr_13143_13169[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_13135 === 6) {
                          var inst_13099 = state_13134[8];
                          var inst_13120 = inst_13099 > 0;
                          var state_13134__$1 = state_13134;
                          if (cljs.core.truth_(inst_13120)) {
                            var statearr_13145_13170 = state_13134__$1;
                            statearr_13145_13170[1] = 12;
                          } else {
                            var statearr_13146_13171 = state_13134__$1;
                            statearr_13146_13171[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_13135 === 7) {
                            var inst_13130 = state_13134[2];
                            var state_13134__$1 = state_13134;
                            var statearr_13147_13172 = state_13134__$1;
                            statearr_13147_13172[2] = inst_13130;
                            statearr_13147_13172[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_13135 === 8) {
                              var inst_13107 = state_13134[10];
                              var inst_13098 = state_13134[7];
                              var tmp13144 = inst_13098;
                              var inst_13098__$1 = tmp13144;
                              var inst_13099 = inst_13107;
                              var state_13134__$1 = function() {
                                var statearr_13148 = state_13134;
                                statearr_13148[7] = inst_13098__$1;
                                statearr_13148[8] = inst_13099;
                                return statearr_13148;
                              }();
                              var statearr_13149_13173 = state_13134__$1;
                              statearr_13149_13173[2] = null;
                              statearr_13149_13173[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_13135 === 9) {
                                var inst_13098 = state_13134[7];
                                var inst_13112 = cljs.core.vec.call(null, inst_13098);
                                var state_13134__$1 = state_13134;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13134__$1, 11, out, inst_13112);
                              } else {
                                if (state_val_13135 === 10) {
                                  var inst_13118 = state_13134[2];
                                  var state_13134__$1 = state_13134;
                                  var statearr_13150_13174 = state_13134__$1;
                                  statearr_13150_13174[2] = inst_13118;
                                  statearr_13150_13174[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_13135 === 11) {
                                    var inst_13114 = state_13134[2];
                                    var inst_13115 = new Array(n);
                                    var inst_13098 = inst_13115;
                                    var inst_13099 = 0;
                                    var state_13134__$1 = function() {
                                      var statearr_13151 = state_13134;
                                      statearr_13151[12] = inst_13114;
                                      statearr_13151[7] = inst_13098;
                                      statearr_13151[8] = inst_13099;
                                      return statearr_13151;
                                    }();
                                    var statearr_13152_13175 = state_13134__$1;
                                    statearr_13152_13175[2] = null;
                                    statearr_13152_13175[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_13135 === 12) {
                                      var inst_13098 = state_13134[7];
                                      var inst_13122 = cljs.core.vec.call(null, inst_13098);
                                      var state_13134__$1 = state_13134;
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13134__$1, 15, out, inst_13122);
                                    } else {
                                      if (state_val_13135 === 13) {
                                        var state_13134__$1 = state_13134;
                                        var statearr_13153_13176 = state_13134__$1;
                                        statearr_13153_13176[2] = null;
                                        statearr_13153_13176[1] = 14;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_13135 === 14) {
                                          var inst_13127 = state_13134[2];
                                          var inst_13128 = cljs.core.async.close_BANG_.call(null, out);
                                          var state_13134__$1 = function() {
                                            var statearr_13154 = state_13134;
                                            statearr_13154[13] = inst_13127;
                                            return statearr_13154;
                                          }();
                                          var statearr_13155_13177 = state_13134__$1;
                                          statearr_13155_13177[2] = inst_13128;
                                          statearr_13155_13177[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_13135 === 15) {
                                            var inst_13124 = state_13134[2];
                                            var state_13134__$1 = state_13134;
                                            var statearr_13156_13178 = state_13134__$1;
                                            statearr_13156_13178[2] = inst_13124;
                                            statearr_13156_13178[1] = 14;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6248__auto___13164, out);
          return function(switch__6233__auto__, c__6248__auto___13164, out) {
            return function() {
              var state_machine__6234__auto__ = null;
              var state_machine__6234__auto____0 = function() {
                var statearr_13160 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_13160[0] = state_machine__6234__auto__;
                statearr_13160[1] = 1;
                return statearr_13160;
              };
              var state_machine__6234__auto____1 = function(state_13134) {
                while (true) {
                  var ret_value__6235__auto__ = function() {
                    try {
                      while (true) {
                        var result__6236__auto__ = switch__6233__auto__.call(null, state_13134);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6236__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6236__auto__;
                        }
                        break;
                      }
                    } catch (e13161) {
                      if (e13161 instanceof Object) {
                        var ex__6237__auto__ = e13161;
                        var statearr_13162_13179 = state_13134;
                        statearr_13162_13179[5] = ex__6237__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13134);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e13161;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6235__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__13180 = state_13134;
                    state_13134 = G__13180;
                    continue;
                  } else {
                    return ret_value__6235__auto__;
                  }
                  break;
                }
              };
              state_machine__6234__auto__ = function(state_13134) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6234__auto____0.call(this);
                  case 1:
                    return state_machine__6234__auto____1.call(this, state_13134);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6234__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6234__auto____0;
              state_machine__6234__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6234__auto____1;
              return state_machine__6234__auto__;
            }();
          }(switch__6233__auto__, c__6248__auto___13164, out);
        }();
        var state__6250__auto__ = function() {
          var statearr_13163 = f__6249__auto__.call(null);
          statearr_13163[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6248__auto___13164;
          return statearr_13163;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6250__auto__);
      };
    }(c__6248__auto___13164, out));
    return out;
  };
  partition = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, ch);
      case 3:
        return partition__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  return partition;
}();
cljs.core.async.partition_by = function() {
  var partition_by = null;
  var partition_by__2 = function(f, ch) {
    return partition_by.call(null, f, ch, null);
  };
  var partition_by__3 = function(f, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6248__auto___13323 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6248__auto___13323, out) {
      return function() {
        var f__6249__auto__ = function() {
          var switch__6233__auto__ = function(c__6248__auto___13323, out) {
            return function(state_13293) {
              var state_val_13294 = state_13293[1];
              if (state_val_13294 === 1) {
                var inst_13252 = [];
                var inst_13253 = inst_13252;
                var inst_13254 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", 4382193538);
                var state_13293__$1 = function() {
                  var statearr_13295 = state_13293;
                  statearr_13295[7] = inst_13254;
                  statearr_13295[8] = inst_13253;
                  return statearr_13295;
                }();
                var statearr_13296_13324 = state_13293__$1;
                statearr_13296_13324[2] = null;
                statearr_13296_13324[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_13294 === 2) {
                  var state_13293__$1 = state_13293;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13293__$1, 4, ch);
                } else {
                  if (state_val_13294 === 3) {
                    var inst_13291 = state_13293[2];
                    var state_13293__$1 = state_13293;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13293__$1, inst_13291);
                  } else {
                    if (state_val_13294 === 4) {
                      var inst_13257 = state_13293[9];
                      var inst_13257__$1 = state_13293[2];
                      var inst_13258 = inst_13257__$1 == null;
                      var inst_13259 = cljs.core.not.call(null, inst_13258);
                      var state_13293__$1 = function() {
                        var statearr_13297 = state_13293;
                        statearr_13297[9] = inst_13257__$1;
                        return statearr_13297;
                      }();
                      if (inst_13259) {
                        var statearr_13298_13325 = state_13293__$1;
                        statearr_13298_13325[1] = 5;
                      } else {
                        var statearr_13299_13326 = state_13293__$1;
                        statearr_13299_13326[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_13294 === 5) {
                        var inst_13254 = state_13293[7];
                        var inst_13257 = state_13293[9];
                        var inst_13261 = state_13293[10];
                        var inst_13261__$1 = f.call(null, inst_13257);
                        var inst_13262 = cljs.core._EQ_.call(null, inst_13261__$1, inst_13254);
                        var inst_13263 = cljs.core.keyword_identical_QMARK_.call(null, inst_13254, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", 4382193538));
                        var inst_13264 = inst_13262 || inst_13263;
                        var state_13293__$1 = function() {
                          var statearr_13300 = state_13293;
                          statearr_13300[10] = inst_13261__$1;
                          return statearr_13300;
                        }();
                        if (cljs.core.truth_(inst_13264)) {
                          var statearr_13301_13327 = state_13293__$1;
                          statearr_13301_13327[1] = 8;
                        } else {
                          var statearr_13302_13328 = state_13293__$1;
                          statearr_13302_13328[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_13294 === 6) {
                          var inst_13253 = state_13293[8];
                          var inst_13278 = inst_13253.length;
                          var inst_13279 = inst_13278 > 0;
                          var state_13293__$1 = state_13293;
                          if (cljs.core.truth_(inst_13279)) {
                            var statearr_13304_13329 = state_13293__$1;
                            statearr_13304_13329[1] = 12;
                          } else {
                            var statearr_13305_13330 = state_13293__$1;
                            statearr_13305_13330[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_13294 === 7) {
                            var inst_13289 = state_13293[2];
                            var state_13293__$1 = state_13293;
                            var statearr_13306_13331 = state_13293__$1;
                            statearr_13306_13331[2] = inst_13289;
                            statearr_13306_13331[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_13294 === 8) {
                              var inst_13253 = state_13293[8];
                              var inst_13257 = state_13293[9];
                              var inst_13261 = state_13293[10];
                              var inst_13266 = inst_13253.push(inst_13257);
                              var tmp13303 = inst_13253;
                              var inst_13253__$1 = tmp13303;
                              var inst_13254 = inst_13261;
                              var state_13293__$1 = function() {
                                var statearr_13307 = state_13293;
                                statearr_13307[7] = inst_13254;
                                statearr_13307[8] = inst_13253__$1;
                                statearr_13307[11] = inst_13266;
                                return statearr_13307;
                              }();
                              var statearr_13308_13332 = state_13293__$1;
                              statearr_13308_13332[2] = null;
                              statearr_13308_13332[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_13294 === 9) {
                                var inst_13253 = state_13293[8];
                                var inst_13269 = cljs.core.vec.call(null, inst_13253);
                                var state_13293__$1 = state_13293;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13293__$1, 11, out, inst_13269);
                              } else {
                                if (state_val_13294 === 10) {
                                  var inst_13276 = state_13293[2];
                                  var state_13293__$1 = state_13293;
                                  var statearr_13309_13333 = state_13293__$1;
                                  statearr_13309_13333[2] = inst_13276;
                                  statearr_13309_13333[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_13294 === 11) {
                                    var inst_13257 = state_13293[9];
                                    var inst_13261 = state_13293[10];
                                    var inst_13271 = state_13293[2];
                                    var inst_13272 = [];
                                    var inst_13273 = inst_13272.push(inst_13257);
                                    var inst_13253 = inst_13272;
                                    var inst_13254 = inst_13261;
                                    var state_13293__$1 = function() {
                                      var statearr_13310 = state_13293;
                                      statearr_13310[12] = inst_13271;
                                      statearr_13310[13] = inst_13273;
                                      statearr_13310[7] = inst_13254;
                                      statearr_13310[8] = inst_13253;
                                      return statearr_13310;
                                    }();
                                    var statearr_13311_13334 = state_13293__$1;
                                    statearr_13311_13334[2] = null;
                                    statearr_13311_13334[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_13294 === 12) {
                                      var inst_13253 = state_13293[8];
                                      var inst_13281 = cljs.core.vec.call(null, inst_13253);
                                      var state_13293__$1 = state_13293;
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13293__$1, 15, out, inst_13281);
                                    } else {
                                      if (state_val_13294 === 13) {
                                        var state_13293__$1 = state_13293;
                                        var statearr_13312_13335 = state_13293__$1;
                                        statearr_13312_13335[2] = null;
                                        statearr_13312_13335[1] = 14;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_13294 === 14) {
                                          var inst_13286 = state_13293[2];
                                          var inst_13287 = cljs.core.async.close_BANG_.call(null, out);
                                          var state_13293__$1 = function() {
                                            var statearr_13313 = state_13293;
                                            statearr_13313[14] = inst_13286;
                                            return statearr_13313;
                                          }();
                                          var statearr_13314_13336 = state_13293__$1;
                                          statearr_13314_13336[2] = inst_13287;
                                          statearr_13314_13336[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_13294 === 15) {
                                            var inst_13283 = state_13293[2];
                                            var state_13293__$1 = state_13293;
                                            var statearr_13315_13337 = state_13293__$1;
                                            statearr_13315_13337[2] = inst_13283;
                                            statearr_13315_13337[1] = 14;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6248__auto___13323, out);
          return function(switch__6233__auto__, c__6248__auto___13323, out) {
            return function() {
              var state_machine__6234__auto__ = null;
              var state_machine__6234__auto____0 = function() {
                var statearr_13319 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_13319[0] = state_machine__6234__auto__;
                statearr_13319[1] = 1;
                return statearr_13319;
              };
              var state_machine__6234__auto____1 = function(state_13293) {
                while (true) {
                  var ret_value__6235__auto__ = function() {
                    try {
                      while (true) {
                        var result__6236__auto__ = switch__6233__auto__.call(null, state_13293);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6236__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6236__auto__;
                        }
                        break;
                      }
                    } catch (e13320) {
                      if (e13320 instanceof Object) {
                        var ex__6237__auto__ = e13320;
                        var statearr_13321_13338 = state_13293;
                        statearr_13321_13338[5] = ex__6237__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13293);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e13320;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6235__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__13339 = state_13293;
                    state_13293 = G__13339;
                    continue;
                  } else {
                    return ret_value__6235__auto__;
                  }
                  break;
                }
              };
              state_machine__6234__auto__ = function(state_13293) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6234__auto____0.call(this);
                  case 1:
                    return state_machine__6234__auto____1.call(this, state_13293);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6234__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6234__auto____0;
              state_machine__6234__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6234__auto____1;
              return state_machine__6234__auto__;
            }();
          }(switch__6233__auto__, c__6248__auto___13323, out);
        }();
        var state__6250__auto__ = function() {
          var statearr_13322 = f__6249__auto__.call(null);
          statearr_13322[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6248__auto___13323;
          return statearr_13322;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6250__auto__);
      };
    }(c__6248__auto___13323, out));
    return out;
  };
  partition_by = function(f, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition_by__2.call(this, f, ch);
      case 3:
        return partition_by__3.call(this, f, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  partition_by.cljs$core$IFn$_invoke$arity$3 = partition_by__3;
  return partition_by;
}();
goog.provide("yantra.graphics");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("om.dom");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("React");
goog.require("yantra.datatypes");
goog.require("yantra.datatypes");
yantra.graphics.BoundingBox = function() {
  var obj9382 = {};
  return obj9382;
}();
yantra.graphics.bounding_points = function bounding_points(x) {
  if (function() {
    var and__3466__auto__ = x;
    if (and__3466__auto__) {
      return x.yantra$graphics$BoundingBox$bounding_points$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return x.yantra$graphics$BoundingBox$bounding_points$arity$1(x);
  } else {
    var x__4105__auto__ = x == null ? null : x;
    return function() {
      var or__3478__auto__ = yantra.graphics.bounding_points[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = yantra.graphics.bounding_points["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "BoundingBox.bounding-points", x);
        }
      }
    }().call(null, x);
  }
};
yantra.datatypes.Rectangle.prototype.yantra$graphics$BoundingBox$ = true;
yantra.datatypes.Rectangle.prototype.yantra$graphics$BoundingBox$bounding_points$arity$1 = function(this$) {
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "p1", "p1", 1013907763)).cljs$core$IFn$_invoke$arity$1(this$__$1), (new cljs.core.Keyword(null, "p2", "p2", 1013907764)).cljs$core$IFn$_invoke$arity$1(this$__$1)], null);
};
yantra.datatypes.Disk.prototype.yantra$graphics$BoundingBox$ = true;
yantra.datatypes.Disk.prototype.yantra$graphics$BoundingBox$bounding_points$arity$1 = function(this$) {
  var this$__$1 = this;
  var point = (new cljs.core.Keyword(null, "point", "point", 1120749826)).cljs$core$IFn$_invoke$arity$1(this$__$1);
  var radius = (new cljs.core.Keyword(null, "radius", "radius", 4370292740)).cljs$core$IFn$_invoke$arity$1(this$__$1);
  var x = cljs.core.first.call(null, point);
  var y = cljs.core.last.call(null, point);
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x + radius, y], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x - radius, y], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y + radius], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y - radius], 
  null)], null);
};
yantra.datatypes.Line.prototype.yantra$graphics$BoundingBox$ = true;
yantra.datatypes.Line.prototype.yantra$graphics$BoundingBox$bounding_points$arity$1 = function(this$) {
  var this$__$1 = this;
  return(new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(this$__$1);
};
yantra.datatypes.Point.prototype.yantra$graphics$BoundingBox$ = true;
yantra.datatypes.Point.prototype.yantra$graphics$BoundingBox$bounding_points$arity$1 = function(this$) {
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "point", "point", 1120749826)).cljs$core$IFn$_invoke$arity$1(this$__$1)], null);
};
yantra.datatypes.Style.prototype.yantra$graphics$BoundingBox$ = true;
yantra.datatypes.Style.prototype.yantra$graphics$BoundingBox$bounding_points$arity$1 = function(this$) {
  var this$__$1 = this;
  return yantra.graphics.bounding_points.call(null, (new cljs.core.Keyword(null, "prims", "prims", 1120839167)).cljs$core$IFn$_invoke$arity$1(this$__$1));
};
yantra.graphics.BoundingBox["_"] = true;
yantra.graphics.bounding_points["_"] = function(this$) {
  if (cljs.core.seq_QMARK_.call(null, this$) || cljs.core.vector_QMARK_.call(null, this$)) {
    return yantra.graphics.bounding_box.call(null, this$);
  } else {
    return cljs.core.PersistentVector.EMPTY;
  }
};
yantra.graphics.transpose = function transpose(m) {
  return cljs.core.apply.call(null, cljs.core.mapv, cljs.core.vector, m);
};
yantra.graphics.bounding_box = function bounding_box(g) {
  if (cljs.core.seq_QMARK_.call(null, g) || cljs.core.vector_QMARK_.call(null, g)) {
    return yantra.graphics.transpose.call(null, cljs.core.map.call(null, function(v) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, cljs.core.min, v), cljs.core.apply.call(null, cljs.core.max, v)], null);
    }, yantra.graphics.transpose.call(null, cljs.core.mapcat.call(null, bounding_box, g))));
  } else {
    return yantra.graphics.transpose.call(null, cljs.core.map.call(null, function(v) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, cljs.core.min, v), cljs.core.apply.call(null, cljs.core.max, v)], null);
    }, yantra.graphics.transpose.call(null, yantra.graphics.bounding_points.call(null, g))));
  }
};
yantra.graphics.expand_plot_range = function expand_plot_range(bounding_box, image_size) {
  var vec__9387 = bounding_box;
  var vec__9388 = cljs.core.nth.call(null, vec__9387, 0, null);
  var xmin = cljs.core.nth.call(null, vec__9388, 0, null);
  var ymin = cljs.core.nth.call(null, vec__9388, 1, null);
  var vec__9389 = cljs.core.nth.call(null, vec__9387, 1, null);
  var xmax = cljs.core.nth.call(null, vec__9389, 0, null);
  var ymax = cljs.core.nth.call(null, vec__9389, 1, null);
  var vec__9390 = image_size;
  var image_width = cljs.core.nth.call(null, vec__9390, 0, null);
  var image_height = cljs.core.nth.call(null, vec__9390, 1, null);
  var width = Math.abs.call(null, xmax - xmin);
  var height = Math.abs.call(null, ymax - ymin);
  var plotaspect = height / width;
  var imageaspect = image_height / image_width;
  if (plotaspect < imageaspect) {
    var newheight = width * imageaspect;
    var heightdiff = (newheight - height) / 2;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xmin, ymin - heightdiff], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xmax, ymax + heightdiff], null)], null);
  } else {
    return bounding_box;
  }
};
yantra.graphics.coordinate_transformer = function coordinate_transformer(bounding_box, image_size) {
  var vec__9397 = yantra.graphics.expand_plot_range.call(null, bounding_box, image_size);
  var vec__9398 = cljs.core.nth.call(null, vec__9397, 0, null);
  var xmin = cljs.core.nth.call(null, vec__9398, 0, null);
  var ymin = cljs.core.nth.call(null, vec__9398, 1, null);
  var vec__9399 = cljs.core.nth.call(null, vec__9397, 1, null);
  var xmax = cljs.core.nth.call(null, vec__9399, 0, null);
  var ymax = cljs.core.nth.call(null, vec__9399, 1, null);
  var vec__9400 = image_size;
  var image_width = cljs.core.nth.call(null, vec__9400, 0, null);
  var image_height = cljs.core.nth.call(null, vec__9400, 1, null);
  var width = Math.abs.call(null, xmax - xmin);
  var height = Math.abs.call(null, ymax - ymin);
  return function(vec__9397, vec__9398, xmin, ymin, vec__9399, xmax, ymax, vec__9400, image_width, image_height, width, height) {
    return function(p__9401) {
      var vec__9402 = p__9401;
      var x = cljs.core.nth.call(null, vec__9402, 0, null);
      var y = cljs.core.nth.call(null, vec__9402, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(x - xmin) * (image_width / width), image_height - (y - ymin) * (image_height / height)], null);
    };
  }(vec__9397, vec__9398, xmin, ymin, vec__9399, xmax, ymax, vec__9400, image_width, image_height, width, height);
};
yantra.graphics.distance_transformer = function distance_transformer(bounding_box, image_size) {
  var vec__9407 = bounding_box;
  var vec__9408 = cljs.core.nth.call(null, vec__9407, 0, null);
  var xmin = cljs.core.nth.call(null, vec__9408, 0, null);
  var ymin = cljs.core.nth.call(null, vec__9408, 1, null);
  var vec__9409 = cljs.core.nth.call(null, vec__9407, 1, null);
  var xmax = cljs.core.nth.call(null, vec__9409, 0, null);
  var ymax = cljs.core.nth.call(null, vec__9409, 1, null);
  var vec__9410 = image_size;
  var image_width = cljs.core.nth.call(null, vec__9410, 0, null);
  var image_height = cljs.core.nth.call(null, vec__9410, 1, null);
  var width = Math.abs.call(null, xmax - xmin);
  var height = Math.abs.call(null, ymax - ymin);
  return function(vec__9407, vec__9408, xmin, ymin, vec__9409, xmax, ymax, vec__9410, image_width, image_height, width, height) {
    return function(d) {
      return d * (image_width / width);
    };
  }(vec__9407, vec__9408, xmin, ymin, vec__9409, xmax, ymax, vec__9410, image_width, image_height, width, height);
};
yantra.graphics.listplot = function listplot(l) {
  return new yantra.datatypes.Graphics(cljs.core.vec.call(null, cljs.core.map_indexed.call(null, function(p1__9411_SHARP_, p2__9412_SHARP_) {
    return new yantra.datatypes.Point(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__9411_SHARP_, p2__9412_SHARP_], null));
  }, l)));
};
yantra.graphics.points_to_svg_string = function points_to_svg_string(points) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.map.call(null, function(p1__9413_SHARP_) {
    return[cljs.core.str(cljs.core.first.call(null, p1__9413_SHARP_)), cljs.core.str(","), cljs.core.str(cljs.core.last.call(null, p1__9413_SHARP_))].join("");
  }, points)));
};
yantra.graphics.graphics_renderers = new cljs.core.PersistentArrayMap.fromArray([yantra.datatypes.Line, function(cursor, owner, opts) {
  if (typeof yantra.graphics.t9416 !== "undefined") {
  } else {
    yantra.graphics.t9416 = function(opts, owner, cursor, meta9417) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9417 = meta9417;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.graphics.t9416.cljs$lang$type = true;
    yantra.graphics.t9416.cljs$lang$ctorStr = "yantra.graphics/t9416";
    yantra.graphics.t9416.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
      return cljs.core._write.call(null, writer__4046__auto__, "yantra.graphics/t9416");
    };
    yantra.graphics.t9416.prototype.om$core$IRender$ = true;
    yantra.graphics.t9416.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var v = om.core.value.call(null, self__.cursor);
      var coordfn = (new cljs.core.Keyword(null, "coord-fn", "coord-fn", 4768239122)).cljs$core$IFn$_invoke$arity$1(self__.opts);
      return React.DOM.polyline({"points":yantra.graphics.points_to_svg_string.call(null, cljs.core.map.call(null, coordfn, (new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(v))), "fill":"none"});
    };
    yantra.graphics.t9416.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9418) {
      var self__ = this;
      var _9418__$1 = this;
      return self__.meta9417;
    };
    yantra.graphics.t9416.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9418, meta9417__$1) {
      var self__ = this;
      var _9418__$1 = this;
      return new yantra.graphics.t9416(self__.opts, self__.owner, self__.cursor, meta9417__$1);
    };
    yantra.graphics.__GT_t9416 = function __GT_t9416(opts__$1, owner__$1, cursor__$1, meta9417) {
      return new yantra.graphics.t9416(opts__$1, owner__$1, cursor__$1, meta9417);
    };
  }
  return new yantra.graphics.t9416(opts, owner, cursor, null);
}, yantra.datatypes.Style, function(cursor, owner, opts) {
  if (typeof yantra.graphics.t9419 !== "undefined") {
  } else {
    yantra.graphics.t9419 = function(opts, owner, cursor, meta9420) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9420 = meta9420;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.graphics.t9419.cljs$lang$type = true;
    yantra.graphics.t9419.cljs$lang$ctorStr = "yantra.graphics/t9419";
    yantra.graphics.t9419.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
      return cljs.core._write.call(null, writer__4046__auto__, "yantra.graphics/t9419");
    };
    yantra.graphics.t9419.prototype.om$core$IRender$ = true;
    yantra.graphics.t9419.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var e = om.core.value.call(null, self__.cursor);
      var coordfn = (new cljs.core.Keyword(null, "coord-fn", "coord-fn", 4768239122)).cljs$core$IFn$_invoke$arity$1(self__.opts);
      var distancefn = (new cljs.core.Keyword(null, "distance-fn", "distance-fn", 4584217874)).cljs$core$IFn$_invoke$arity$1(self__.opts);
      var builder = om.core.get_shared.call(null, self__.owner, new cljs.core.Keyword(null, "builder", "builder", 1244848909));
      return React.DOM.g(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", 1123684643), (new cljs.core.Keyword(null, "style", "style", 1123684643)).cljs$core$IFn$_invoke$arity$1(e)], null)), cljs.core.seq_QMARK_.call(null, (new cljs.core.Keyword(null, "prims", "prims", 1120839167)).cljs$core$IFn$_invoke$arity$1(e)) || cljs.core.vector_QMARK_.call(null, (new cljs.core.Keyword(null, "prims", "prims", 1120839167)).cljs$core$IFn$_invoke$arity$1(e)) ? 
      cljs.core.into_array.call(null, cljs.core.map.call(null, function(e, coordfn, distancefn, builder, ___$1) {
        return function(p1__9414_SHARP_) {
          return builder.call(null, p1__9414_SHARP_, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "coord-fn", "coord-fn", 4768239122), coordfn, new cljs.core.Keyword(null, "distance-fn", "distance-fn", 4584217874), distancefn], null)], null));
        };
      }(e, coordfn, distancefn, builder, ___$1), (new cljs.core.Keyword(null, "prims", "prims", 1120839167)).cljs$core$IFn$_invoke$arity$1(self__.cursor))) : builder.call(null, (new cljs.core.Keyword(null, "prims", "prims", 1120839167)).cljs$core$IFn$_invoke$arity$1(self__.cursor), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "coord-fn", "coord-fn", 4768239122), coordfn, new cljs.core.Keyword(null, 
      "distance-fn", "distance-fn", 4584217874), distancefn], null)], null)));
    };
    yantra.graphics.t9419.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9421) {
      var self__ = this;
      var _9421__$1 = this;
      return self__.meta9420;
    };
    yantra.graphics.t9419.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9421, meta9420__$1) {
      var self__ = this;
      var _9421__$1 = this;
      return new yantra.graphics.t9419(self__.opts, self__.owner, self__.cursor, meta9420__$1);
    };
    yantra.graphics.__GT_t9419 = function __GT_t9419(opts__$1, owner__$1, cursor__$1, meta9420) {
      return new yantra.graphics.t9419(opts__$1, owner__$1, cursor__$1, meta9420);
    };
  }
  return new yantra.graphics.t9419(opts, owner, cursor, null);
}, yantra.datatypes.Point, function(cursor, owner, opts) {
  if (typeof yantra.graphics.t9422 !== "undefined") {
  } else {
    yantra.graphics.t9422 = function(opts, owner, cursor, meta9423) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9423 = meta9423;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.graphics.t9422.cljs$lang$type = true;
    yantra.graphics.t9422.cljs$lang$ctorStr = "yantra.graphics/t9422";
    yantra.graphics.t9422.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
      return cljs.core._write.call(null, writer__4046__auto__, "yantra.graphics/t9422");
    };
    yantra.graphics.t9422.prototype.om$core$IRender$ = true;
    yantra.graphics.t9422.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var p2 = (new cljs.core.Keyword(null, "point", "point", 1120749826)).cljs$core$IFn$_invoke$arity$1(om.core.value.call(null, self__.cursor));
      return React.DOM.circle(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "cx", "cx", 1013907431), cljs.core.first.call(null, p2), new cljs.core.Keyword(null, "cy", "cy", 1013907432), cljs.core.last.call(null, p2), new cljs.core.Keyword(null, "r", "r", 1013904356), "3"], null));
    };
    yantra.graphics.t9422.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9424) {
      var self__ = this;
      var _9424__$1 = this;
      return self__.meta9423;
    };
    yantra.graphics.t9422.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9424, meta9423__$1) {
      var self__ = this;
      var _9424__$1 = this;
      return new yantra.graphics.t9422(self__.opts, self__.owner, self__.cursor, meta9423__$1);
    };
    yantra.graphics.__GT_t9422 = function __GT_t9422(opts__$1, owner__$1, cursor__$1, meta9423) {
      return new yantra.graphics.t9422(opts__$1, owner__$1, cursor__$1, meta9423);
    };
  }
  return new yantra.graphics.t9422(opts, owner, cursor, null);
}, yantra.datatypes.Disk, function(cursor, owner, opts) {
  if (typeof yantra.graphics.t9425 !== "undefined") {
  } else {
    yantra.graphics.t9425 = function(opts, owner, cursor, meta9426) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9426 = meta9426;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.graphics.t9425.cljs$lang$type = true;
    yantra.graphics.t9425.cljs$lang$ctorStr = "yantra.graphics/t9425";
    yantra.graphics.t9425.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
      return cljs.core._write.call(null, writer__4046__auto__, "yantra.graphics/t9425");
    };
    yantra.graphics.t9425.prototype.om$core$IRender$ = true;
    yantra.graphics.t9425.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var coordfn = (new cljs.core.Keyword(null, "coord-fn", "coord-fn", 4768239122)).cljs$core$IFn$_invoke$arity$1(self__.opts);
      var distancefn = (new cljs.core.Keyword(null, "distance-fn", "distance-fn", 4584217874)).cljs$core$IFn$_invoke$arity$1(self__.opts);
      var v = om.core.value.call(null, self__.cursor);
      var p2 = coordfn.call(null, (new cljs.core.Keyword(null, "point", "point", 1120749826)).cljs$core$IFn$_invoke$arity$1(v));
      return React.DOM.circle({"r":distancefn.call(null, (new cljs.core.Keyword(null, "radius", "radius", 4370292740)).cljs$core$IFn$_invoke$arity$1(v)), "cy":cljs.core.last.call(null, p2), "cx":cljs.core.first.call(null, p2)});
    };
    yantra.graphics.t9425.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9427) {
      var self__ = this;
      var _9427__$1 = this;
      return self__.meta9426;
    };
    yantra.graphics.t9425.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9427, meta9426__$1) {
      var self__ = this;
      var _9427__$1 = this;
      return new yantra.graphics.t9425(self__.opts, self__.owner, self__.cursor, meta9426__$1);
    };
    yantra.graphics.__GT_t9425 = function __GT_t9425(opts__$1, owner__$1, cursor__$1, meta9426) {
      return new yantra.graphics.t9425(opts__$1, owner__$1, cursor__$1, meta9426);
    };
  }
  return new yantra.graphics.t9425(opts, owner, cursor, null);
}, yantra.datatypes.Graphics, function(cursor, owner, opts) {
  if (typeof yantra.graphics.t9428 !== "undefined") {
  } else {
    yantra.graphics.t9428 = function(opts, owner, cursor, meta9429) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9429 = meta9429;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.graphics.t9428.cljs$lang$type = true;
    yantra.graphics.t9428.cljs$lang$ctorStr = "yantra.graphics/t9428";
    yantra.graphics.t9428.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
      return cljs.core._write.call(null, writer__4046__auto__, "yantra.graphics/t9428");
    };
    yantra.graphics.t9428.prototype.om$core$IRender$ = true;
    yantra.graphics.t9428.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var builder = om.core.get_shared.call(null, self__.owner, new cljs.core.Keyword(null, "builder", "builder", 1244848909));
      var bb = yantra.graphics.bounding_box.call(null, (new cljs.core.Keyword(null, "contents", "contents", 4741549708)).cljs$core$IFn$_invoke$arity$1(om.core.value.call(null, self__.cursor)));
      var coordfn = yantra.graphics.coordinate_transformer.call(null, bb, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [200, 200], null));
      var distancefn = yantra.graphics.distance_transformer.call(null, bb, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [200, 200], null));
      return React.DOM.svg({"height":200, "width":200}, cljs.core.into_array.call(null, cljs.core.mapv.call(null, function(builder, bb, coordfn, distancefn, ___$1) {
        return function(p1__9415_SHARP_) {
          return builder.call(null, p1__9415_SHARP_, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "coord-fn", "coord-fn", 4768239122), coordfn, new cljs.core.Keyword(null, "distance-fn", "distance-fn", 4584217874), distancefn], null)], null));
        };
      }(builder, bb, coordfn, distancefn, ___$1), (new cljs.core.Keyword(null, "contents", "contents", 4741549708)).cljs$core$IFn$_invoke$arity$1(self__.cursor))));
    };
    yantra.graphics.t9428.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9430) {
      var self__ = this;
      var _9430__$1 = this;
      return self__.meta9429;
    };
    yantra.graphics.t9428.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9430, meta9429__$1) {
      var self__ = this;
      var _9430__$1 = this;
      return new yantra.graphics.t9428(self__.opts, self__.owner, self__.cursor, meta9429__$1);
    };
    yantra.graphics.__GT_t9428 = function __GT_t9428(opts__$1, owner__$1, cursor__$1, meta9429) {
      return new yantra.graphics.t9428(opts__$1, owner__$1, cursor__$1, meta9429);
    };
  }
  return new yantra.graphics.t9428(opts, owner, cursor, null);
}], true, false);
goog.provide("yantra.edn");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("om.dom");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("React");
cljs.core.ICloneable["number"] = true;
cljs.core._clone["number"] = function(n) {
  return new Number(n);
};
cljs.core.ICloneable["string"] = true;
cljs.core._clone["string"] = function(n) {
  return new String(n);
};
cljs.core.ICloneable["boolean"] = true;
cljs.core._clone["boolean"] = function(n) {
  return new Boolean(n);
};
yantra.edn.render_sequential = function render_sequential(begin, render_one, sep, end, sequence) {
  return React.DOM.span(null, cljs.core.into_array.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [begin], null), cljs.core.interpose.call(null, sep, cljs.core.mapv.call(null, render_one, sequence)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [end], null))));
};
yantra.edn.SequentialCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2175180810;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
yantra.edn.SequentialCursor.cljs$lang$type = true;
yantra.edn.SequentialCursor.cljs$lang$ctorStr = "yantra.edn/SequentialCursor";
yantra.edn.SequentialCursor.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "yantra.edn/SequentialCursor");
};
yantra.edn.SequentialCursor.prototype.om$core$ICursor$ = true;
yantra.edn.SequentialCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return self__.path;
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return self__.state;
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.om$core$IValue$ = true;
yantra.edn.SequentialCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return self__.value;
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot deref cursor during render phase: "), cljs.core.str(this$__$1)].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new yantra.edn.SequentialCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(this$__$1) {
        return function(v, i) {
          return om.core.to_cursor.call(null, v, self__.state, cljs.core.conj.call(null, self__.path, i));
        };
      }(this$__$1), self__.value, cljs.core.range.call(null));
    } else {
      return null;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.cljs$core$IStack$_peek$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core.to_cursor.call(null, cljs.core._peek.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.cljs$core$IStack$_pop$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core.to_cursor.call(null, cljs.core._pop.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.om$core$ITransact$ = true;
yantra.edn.SequentialCursor.prototype.om$core$ITransact$_transact_BANG_$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.swap_BANG_.call(null, self__.state, f, self__.path);
};
yantra.edn.SequentialCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new yantra.edn.SequentialCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new yantra.edn.SequentialCursor(self__.value, self__.state, self__.path);
};
yantra.edn.SequentialCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.__GT_SequentialCursor = function __GT_SequentialCursor(value, state, path) {
  return new yantra.edn.SequentialCursor(value, state, path);
};
yantra.edn.extend_sequential_cursor = function extend_sequential_cursor(type) {
  type.prototype.om$core$IToCursor$ = true;
  type.prototype.om$core$IToCursor$_to_cursor$arity$2 = function(value, state) {
    var value__$1 = this;
    return new yantra.edn.SequentialCursor(value__$1, state, cljs.core.PersistentVector.EMPTY);
  };
  return type.prototype.om$core$IToCursor$_to_cursor$arity$3 = function(value, state, path) {
    var value__$1 = this;
    return new yantra.edn.SequentialCursor(value__$1, state, path);
  };
};
cljs.core.map.call(null, yantra.edn.extend_sequential_cursor, cljs.core.PersistentHashSet.fromArray([cljs.core.KeySeq, cljs.core.IndexedSeq, cljs.core.ChunkedCons, cljs.core.LazySeq, cljs.core.RSeq, cljs.core.NodeSeq, cljs.core.List, cljs.core.PersistentArrayMapSeq, cljs.core.EmptyList, cljs.core.Cons, cljs.core.Range, cljs.core.ArrayNodeSeq, cljs.core.ValSeq, cljs.core.PersistentTreeMapSeq], true));
yantra.edn.thread_sets = function thread_sets(x) {
  return cljs.core.reduce.call(null, function(m, p__9348) {
    var vec__9349 = p__9348;
    var k = cljs.core.nth.call(null, vec__9349, 0, null);
    var v = cljs.core.nth.call(null, vec__9349, 1, null);
    if (cljs.core.set_QMARK_.call(null, k)) {
      return cljs.core.reduce.call(null, function(vec__9349, k, v) {
        return function(p1__9344_SHARP_, p2__9345_SHARP_) {
          return cljs.core.assoc.call(null, p1__9344_SHARP_, p2__9345_SHARP_, v);
        };
      }(vec__9349, k, v), m, k);
    } else {
      return cljs.core.assoc.call(null, m, k, v);
    }
  }, cljs.core.PersistentArrayMap.EMPTY, x);
};
yantra.edn.edn_renderers = yantra.edn.thread_sets.call(null, cljs.core.PersistentHashMap.fromArrays([null, cljs.core.Keyword, Boolean, cljs.core.PersistentHashSet.fromArray([cljs.core.KeySeq, cljs.core.IndexedSeq, cljs.core.ChunkedCons, cljs.core.LazySeq, cljs.core.RSeq, cljs.core.NodeSeq, cljs.core.ChunkedSeq, cljs.core.List, cljs.core.PersistentArrayMapSeq, cljs.core.EmptyList, cljs.core.Cons, cljs.core.Range, cljs.core.ArrayNodeSeq, cljs.core.ValSeq, cljs.core.PersistentTreeMapSeq], true), Number, 
cljs.core.PersistentHashSet.fromArray([cljs.core.PersistentTreeMap, cljs.core.PersistentArrayMap, cljs.core.PersistentHashMap], true), cljs.core.UUID, cljs.core.PersistentHashSet.fromArray([cljs.core.Subvec, cljs.core.RedNode, cljs.core.PersistentVector, cljs.core.BlackNode], true), cljs.core.PersistentHashSet.fromArray([cljs.core.PersistentTreeSet, cljs.core.PersistentHashSet], true), cljs.core.Symbol, String], [function(cursor, owner, opts) {
  return React.DOM.span(null, "nil");
}, function(cursor, owner, opts) {
  if (typeof yantra.edn.t9354 !== "undefined") {
  } else {
    yantra.edn.t9354 = function(opts, owner, cursor, meta9355) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9355 = meta9355;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.edn.t9354.cljs$lang$type = true;
    yantra.edn.t9354.cljs$lang$ctorStr = "yantra.edn/t9354";
    yantra.edn.t9354.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
      return cljs.core._write.call(null, writer__4046__auto__, "yantra.edn/t9354");
    };
    yantra.edn.t9354.prototype.om$core$IRender$ = true;
    yantra.edn.t9354.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return React.DOM.span(null, [cljs.core.str(om.core.value.call(null, self__.cursor))].join(""));
    };
    yantra.edn.t9354.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9356) {
      var self__ = this;
      var _9356__$1 = this;
      return self__.meta9355;
    };
    yantra.edn.t9354.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9356, meta9355__$1) {
      var self__ = this;
      var _9356__$1 = this;
      return new yantra.edn.t9354(self__.opts, self__.owner, self__.cursor, meta9355__$1);
    };
    yantra.edn.__GT_t9354 = function __GT_t9354(opts__$1, owner__$1, cursor__$1, meta9355) {
      return new yantra.edn.t9354(opts__$1, owner__$1, cursor__$1, meta9355);
    };
  }
  return new yantra.edn.t9354(opts, owner, cursor, null);
}, function(cursor, owner, opts) {
  if (typeof yantra.edn.t9357 !== "undefined") {
  } else {
    yantra.edn.t9357 = function(opts, owner, cursor, meta9358) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9358 = meta9358;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.edn.t9357.cljs$lang$type = true;
    yantra.edn.t9357.cljs$lang$ctorStr = "yantra.edn/t9357";
    yantra.edn.t9357.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
      return cljs.core._write.call(null, writer__4046__auto__, "yantra.edn/t9357");
    };
    yantra.edn.t9357.prototype.om$core$IRender$ = true;
    yantra.edn.t9357.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return React.DOM.span(null, [cljs.core.str(om.core.value.call(null, self__.cursor))].join(""));
    };
    yantra.edn.t9357.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9359) {
      var self__ = this;
      var _9359__$1 = this;
      return self__.meta9358;
    };
    yantra.edn.t9357.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9359, meta9358__$1) {
      var self__ = this;
      var _9359__$1 = this;
      return new yantra.edn.t9357(self__.opts, self__.owner, self__.cursor, meta9358__$1);
    };
    yantra.edn.__GT_t9357 = function __GT_t9357(opts__$1, owner__$1, cursor__$1, meta9358) {
      return new yantra.edn.t9357(opts__$1, owner__$1, cursor__$1, meta9358);
    };
  }
  return new yantra.edn.t9357(opts, owner, cursor, null);
}, function(cursor, owner, opts) {
  var builder = om.core.get_shared.call(null, owner, new cljs.core.Keyword(null, "builder", "builder", 1244848909));
  if (typeof yantra.edn.t9360 !== "undefined") {
  } else {
    yantra.edn.t9360 = function(builder, opts, owner, cursor, meta9361) {
      this.builder = builder;
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9361 = meta9361;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.edn.t9360.cljs$lang$type = true;
    yantra.edn.t9360.cljs$lang$ctorStr = "yantra.edn/t9360";
    yantra.edn.t9360.cljs$lang$ctorPrWriter = function(builder) {
      return function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
        return cljs.core._write.call(null, writer__4046__auto__, "yantra.edn/t9360");
      };
    }(builder);
    yantra.edn.t9360.prototype.om$core$IRender$ = true;
    yantra.edn.t9360.prototype.om$core$IRender$render$arity$1 = function(builder) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return yantra.edn.render_sequential.call(null, "(", function(___$1, builder) {
          return function(p1__9350_SHARP_) {
            return self__.builder.call(null, p1__9350_SHARP_);
          };
        }(___$1, builder), " ", ")", self__.cursor);
      };
    }(builder);
    yantra.edn.t9360.prototype.cljs$core$IMeta$_meta$arity$1 = function(builder) {
      return function(_9362) {
        var self__ = this;
        var _9362__$1 = this;
        return self__.meta9361;
      };
    }(builder);
    yantra.edn.t9360.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(builder) {
      return function(_9362, meta9361__$1) {
        var self__ = this;
        var _9362__$1 = this;
        return new yantra.edn.t9360(self__.builder, self__.opts, self__.owner, self__.cursor, meta9361__$1);
      };
    }(builder);
    yantra.edn.__GT_t9360 = function(builder) {
      return function __GT_t9360(builder__$1, opts__$1, owner__$1, cursor__$1, meta9361) {
        return new yantra.edn.t9360(builder__$1, opts__$1, owner__$1, cursor__$1, meta9361);
      };
    }(builder);
  }
  return new yantra.edn.t9360(builder, opts, owner, cursor, null);
}, function(cursor, owner, opts) {
  if (typeof yantra.edn.t9363 !== "undefined") {
  } else {
    yantra.edn.t9363 = function(opts, owner, cursor, meta9364) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9364 = meta9364;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.edn.t9363.cljs$lang$type = true;
    yantra.edn.t9363.cljs$lang$ctorStr = "yantra.edn/t9363";
    yantra.edn.t9363.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
      return cljs.core._write.call(null, writer__4046__auto__, "yantra.edn/t9363");
    };
    yantra.edn.t9363.prototype.om$core$IRender$ = true;
    yantra.edn.t9363.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return React.DOM.span(null, [cljs.core.str(om.core.value.call(null, self__.cursor))].join(""));
    };
    yantra.edn.t9363.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9365) {
      var self__ = this;
      var _9365__$1 = this;
      return self__.meta9364;
    };
    yantra.edn.t9363.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9365, meta9364__$1) {
      var self__ = this;
      var _9365__$1 = this;
      return new yantra.edn.t9363(self__.opts, self__.owner, self__.cursor, meta9364__$1);
    };
    yantra.edn.__GT_t9363 = function __GT_t9363(opts__$1, owner__$1, cursor__$1, meta9364) {
      return new yantra.edn.t9363(opts__$1, owner__$1, cursor__$1, meta9364);
    };
  }
  return new yantra.edn.t9363(opts, owner, cursor, null);
}, function(cursor, owner, opts) {
  var builder = om.core.get_shared.call(null, owner, new cljs.core.Keyword(null, "builder", "builder", 1244848909));
  if (typeof yantra.edn.t9366 !== "undefined") {
  } else {
    yantra.edn.t9366 = function(builder, opts, owner, cursor, meta9367) {
      this.builder = builder;
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9367 = meta9367;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.edn.t9366.cljs$lang$type = true;
    yantra.edn.t9366.cljs$lang$ctorStr = "yantra.edn/t9366";
    yantra.edn.t9366.cljs$lang$ctorPrWriter = function(builder) {
      return function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
        return cljs.core._write.call(null, writer__4046__auto__, "yantra.edn/t9366");
      };
    }(builder);
    yantra.edn.t9366.prototype.om$core$IRender$ = true;
    yantra.edn.t9366.prototype.om$core$IRender$render$arity$1 = function(builder) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return yantra.edn.render_sequential.call(null, "{", function(___$1, builder) {
          return function(p1__9353_SHARP_) {
            return React.DOM.span(null, [self__.builder.call(null, cljs.core.key.call(null, p1__9353_SHARP_)), " ", self__.builder.call(null, cljs.core.val.call(null, p1__9353_SHARP_), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), self__.opts], null))]);
          };
        }(___$1, builder), ", ", "}", self__.cursor);
      };
    }(builder);
    yantra.edn.t9366.prototype.cljs$core$IMeta$_meta$arity$1 = function(builder) {
      return function(_9368) {
        var self__ = this;
        var _9368__$1 = this;
        return self__.meta9367;
      };
    }(builder);
    yantra.edn.t9366.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(builder) {
      return function(_9368, meta9367__$1) {
        var self__ = this;
        var _9368__$1 = this;
        return new yantra.edn.t9366(self__.builder, self__.opts, self__.owner, self__.cursor, meta9367__$1);
      };
    }(builder);
    yantra.edn.__GT_t9366 = function(builder) {
      return function __GT_t9366(builder__$1, opts__$1, owner__$1, cursor__$1, meta9367) {
        return new yantra.edn.t9366(builder__$1, opts__$1, owner__$1, cursor__$1, meta9367);
      };
    }(builder);
  }
  return new yantra.edn.t9366(builder, opts, owner, cursor, null);
}, function(cursor, owner, opts) {
  return React.DOM.span(null, cljs.core.pr_str.call(null, om.core.value.call(null, cursor)));
}, function(cursor, owner, opts) {
  var builder = om.core.get_shared.call(null, owner, new cljs.core.Keyword(null, "builder", "builder", 1244848909));
  if (typeof yantra.edn.t9369 !== "undefined") {
  } else {
    yantra.edn.t9369 = function(builder, opts, owner, cursor, meta9370) {
      this.builder = builder;
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9370 = meta9370;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.edn.t9369.cljs$lang$type = true;
    yantra.edn.t9369.cljs$lang$ctorStr = "yantra.edn/t9369";
    yantra.edn.t9369.cljs$lang$ctorPrWriter = function(builder) {
      return function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
        return cljs.core._write.call(null, writer__4046__auto__, "yantra.edn/t9369");
      };
    }(builder);
    yantra.edn.t9369.prototype.om$core$IRender$ = true;
    yantra.edn.t9369.prototype.om$core$IRender$render$arity$1 = function(builder) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return yantra.edn.render_sequential.call(null, "[", function(___$1, builder) {
          return function(p1__9351_SHARP_) {
            return self__.builder.call(null, p1__9351_SHARP_);
          };
        }(___$1, builder), " ", "]", self__.cursor);
      };
    }(builder);
    yantra.edn.t9369.prototype.cljs$core$IMeta$_meta$arity$1 = function(builder) {
      return function(_9371) {
        var self__ = this;
        var _9371__$1 = this;
        return self__.meta9370;
      };
    }(builder);
    yantra.edn.t9369.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(builder) {
      return function(_9371, meta9370__$1) {
        var self__ = this;
        var _9371__$1 = this;
        return new yantra.edn.t9369(self__.builder, self__.opts, self__.owner, self__.cursor, meta9370__$1);
      };
    }(builder);
    yantra.edn.__GT_t9369 = function(builder) {
      return function __GT_t9369(builder__$1, opts__$1, owner__$1, cursor__$1, meta9370) {
        return new yantra.edn.t9369(builder__$1, opts__$1, owner__$1, cursor__$1, meta9370);
      };
    }(builder);
  }
  return new yantra.edn.t9369(builder, opts, owner, cursor, null);
}, function(cursor, owner, opts) {
  var builder = om.core.get_shared.call(null, owner, new cljs.core.Keyword(null, "builder", "builder", 1244848909));
  if (typeof yantra.edn.t9372 !== "undefined") {
  } else {
    yantra.edn.t9372 = function(builder, opts, owner, cursor, meta9373) {
      this.builder = builder;
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9373 = meta9373;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.edn.t9372.cljs$lang$type = true;
    yantra.edn.t9372.cljs$lang$ctorStr = "yantra.edn/t9372";
    yantra.edn.t9372.cljs$lang$ctorPrWriter = function(builder) {
      return function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
        return cljs.core._write.call(null, writer__4046__auto__, "yantra.edn/t9372");
      };
    }(builder);
    yantra.edn.t9372.prototype.om$core$IRender$ = true;
    yantra.edn.t9372.prototype.om$core$IRender$render$arity$1 = function(builder) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return yantra.edn.render_sequential.call(null, "#{", function(___$1, builder) {
          return function(p1__9352_SHARP_) {
            return self__.builder.call(null, p1__9352_SHARP_);
          };
        }(___$1, builder), " ", "}", self__.cursor);
      };
    }(builder);
    yantra.edn.t9372.prototype.cljs$core$IMeta$_meta$arity$1 = function(builder) {
      return function(_9374) {
        var self__ = this;
        var _9374__$1 = this;
        return self__.meta9373;
      };
    }(builder);
    yantra.edn.t9372.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(builder) {
      return function(_9374, meta9373__$1) {
        var self__ = this;
        var _9374__$1 = this;
        return new yantra.edn.t9372(self__.builder, self__.opts, self__.owner, self__.cursor, meta9373__$1);
      };
    }(builder);
    yantra.edn.__GT_t9372 = function(builder) {
      return function __GT_t9372(builder__$1, opts__$1, owner__$1, cursor__$1, meta9373) {
        return new yantra.edn.t9372(builder__$1, opts__$1, owner__$1, cursor__$1, meta9373);
      };
    }(builder);
  }
  return new yantra.edn.t9372(builder, opts, owner, cursor, null);
}, function(cursor, owner, opts) {
  if (typeof yantra.edn.t9375 !== "undefined") {
  } else {
    yantra.edn.t9375 = function(opts, owner, cursor, meta9376) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9376 = meta9376;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.edn.t9375.cljs$lang$type = true;
    yantra.edn.t9375.cljs$lang$ctorStr = "yantra.edn/t9375";
    yantra.edn.t9375.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
      return cljs.core._write.call(null, writer__4046__auto__, "yantra.edn/t9375");
    };
    yantra.edn.t9375.prototype.om$core$IRender$ = true;
    yantra.edn.t9375.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return React.DOM.span(null, [cljs.core.str(om.core.value.call(null, self__.cursor))].join(""));
    };
    yantra.edn.t9375.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9377) {
      var self__ = this;
      var _9377__$1 = this;
      return self__.meta9376;
    };
    yantra.edn.t9375.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9377, meta9376__$1) {
      var self__ = this;
      var _9377__$1 = this;
      return new yantra.edn.t9375(self__.opts, self__.owner, self__.cursor, meta9376__$1);
    };
    yantra.edn.__GT_t9375 = function __GT_t9375(opts__$1, owner__$1, cursor__$1, meta9376) {
      return new yantra.edn.t9375(opts__$1, owner__$1, cursor__$1, meta9376);
    };
  }
  return new yantra.edn.t9375(opts, owner, cursor, null);
}, function(cursor, owner, opts) {
  if (typeof yantra.edn.t9378 !== "undefined") {
  } else {
    yantra.edn.t9378 = function(opts, owner, cursor, meta9379) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9379 = meta9379;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.edn.t9378.cljs$lang$type = true;
    yantra.edn.t9378.cljs$lang$ctorStr = "yantra.edn/t9378";
    yantra.edn.t9378.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
      return cljs.core._write.call(null, writer__4046__auto__, "yantra.edn/t9378");
    };
    yantra.edn.t9378.prototype.om$core$IRender$ = true;
    yantra.edn.t9378.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return React.DOM.span(null, cljs.core.pr_str.call(null, [cljs.core.str(om.core.value.call(null, self__.cursor))].join("")));
    };
    yantra.edn.t9378.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9380) {
      var self__ = this;
      var _9380__$1 = this;
      return self__.meta9379;
    };
    yantra.edn.t9378.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9380, meta9379__$1) {
      var self__ = this;
      var _9380__$1 = this;
      return new yantra.edn.t9378(self__.opts, self__.owner, self__.cursor, meta9379__$1);
    };
    yantra.edn.__GT_t9378 = function __GT_t9378(opts__$1, owner__$1, cursor__$1, meta9379) {
      return new yantra.edn.t9378(opts__$1, owner__$1, cursor__$1, meta9379);
    };
  }
  return new yantra.edn.t9378(opts, owner, cursor, null);
}]));
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string");
cljs.reader.PushbackReader = function() {
  var obj13444 = {};
  return obj13444;
}();
cljs.reader.read_char = function read_char(reader) {
  if (function() {
    var and__3466__auto__ = reader;
    if (and__3466__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader);
  } else {
    var x__4105__auto__ = reader == null ? null : reader;
    return function() {
      var or__3478__auto__ = cljs.reader.read_char[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.reader.read_char["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader);
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if (function() {
    var and__3466__auto__ = reader;
    if (and__3466__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2;
    } else {
      return and__3466__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__4105__auto__ = reader == null ? null : reader;
    return function() {
      var or__3478__auto__ = cljs.reader.unread[goog.typeOf(x__4105__auto__)];
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.reader.unread["_"];
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch);
  }
};
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx;
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
  return cljs.core._write.call(null, writer__4046__auto__, "cljs.reader/StringPushbackReader");
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx];
  } else {
    return self__.buffer.pop();
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  return self__.buffer.push(ch);
};
cljs.reader.__GT_StringPushbackReader = function __GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx);
};
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1);
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3478__auto__ = goog.string.isBreakingWhitespace(ch);
  if (cljs.core.truth_(or__3478__auto__)) {
    return or__3478__auto__;
  } else {
    return "," === ch;
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch);
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return ";" === ch;
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  return cljs.reader.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.reader.numeric_QMARK_.call(null, function() {
    var next_ch = cljs.reader.read_char.call(null, reader);
    cljs.reader.unread.call(null, reader, next_ch);
    return next_ch;
  }());
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if (arguments.length > 1) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return reader_error__delegate.call(this, rdr, msg);
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__13445) {
    var rdr = cljs.core.first(arglist__13445);
    var msg = cljs.core.rest(arglist__13445);
    return reader_error__delegate(rdr, msg);
  };
  reader_error.cljs$core$IFn$_invoke$arity$variadic = reader_error__delegate;
  return reader_error;
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3466__auto__ = !(ch === "#");
  if (and__3466__auto__) {
    var and__3466__auto____$1 = !(ch === "'");
    if (and__3466__auto____$1) {
      var and__3466__auto____$2 = !(ch === ":");
      if (and__3466__auto____$2) {
        return cljs.reader.macros.call(null, ch);
      } else {
        return and__3466__auto____$2;
      }
    } else {
      return and__3466__auto____$1;
    }
  } else {
    return and__3466__auto__;
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (ch == null || (cljs.reader.whitespace_QMARK_.call(null, ch) || cljs.reader.macro_terminating_QMARK_.call(null, ch))) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString();
    } else {
      var G__13446 = function() {
        sb.append(ch);
        return sb;
      }();
      var G__13447 = cljs.reader.read_char.call(null, rdr);
      sb = G__13446;
      ch = G__13447;
      continue;
    }
    break;
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch === "\n" || (ch === "\r" || ch == null)) {
      return reader;
    } else {
      continue;
    }
    break;
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches = re.exec(s);
  if (matches == null) {
    return null;
  } else {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3 = groups[2];
  if (!(group3 == null || group3.length < 1)) {
    return 0;
  } else {
    var negate = "-" === groups[1] ? -1 : 1;
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[7]) ? [groups[7], parseInt(groups[7])] : new cljs.core.Keyword(null, "default", "default", 2558708147) ? [null, null] : null;
    var n = a[0];
    var radix = a[1];
    if (n == null) {
      return null;
    } else {
      return negate * parseInt(n, radix);
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator, 10) / parseInt(denominator, 10);
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s);
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if (!(matches == null) && matches[0] === s) {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  } else {
    return null;
  }
};
cljs.reader.match_number = function match_number(s) {
  if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s);
  } else {
    if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s);
    } else {
      if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s);
      } else {
        return null;
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if (c === "t") {
    return "\t";
  } else {
    if (c === "r") {
      return "\r";
    } else {
      if (c === "n") {
        return "\n";
      } else {
        if (c === "\\") {
          return "\\";
        } else {
          if (c === '"') {
            return'"';
          } else {
            if (c === "b") {
              return "\b";
            } else {
              if (c === "f") {
                return "\f";
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  return null;
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if (cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str;
  } else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str);
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code);
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if (cljs.core.truth_(mapresult)) {
    return mapresult;
  } else {
    if (ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)));
    } else {
      if (ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)));
      } else {
        if (cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (cljs.core.truth_(pred.call(null, ch))) {
      var G__13448 = cljs.reader.read_char.call(null, rdr);
      ch = G__13448;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading");
    }
    if (delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      var temp__4090__auto__ = cljs.reader.macros.call(null, ch);
      if (cljs.core.truth_(temp__4090__auto__)) {
        var macrofn = temp__4090__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__13449 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__13449;
        continue;
      } else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__13450 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__13450;
        continue;
      }
    }
    break;
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet");
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if (cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _);
  } else {
    var temp__4090__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if (cljs.core.truth_(temp__4090__auto__)) {
      var obj = temp__4090__auto__;
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch);
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch);
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true));
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true);
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms");
  } else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l);
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__3478__auto__ = ch == null;
      if (or__3478__auto__) {
        return or__3478__auto__;
      } else {
        var or__3478__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if (or__3478__auto____$1) {
          return or__3478__auto____$1;
        } else {
          return cljs.reader.macros.call(null, ch);
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__3478__auto__ = cljs.reader.match_number.call(null, s);
      if (cljs.core.truth_(or__3478__auto__)) {
        return or__3478__auto__;
      } else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]");
      }
    } else {
      var G__13451 = function() {
        buffer.append(ch);
        return buffer;
      }();
      var G__13452 = cljs.reader.read_char.call(null, reader);
      buffer = G__13451;
      ch = G__13452;
      continue;
    }
    break;
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        var G__13453 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer;
        }();
        var G__13454 = cljs.reader.read_char.call(null, reader);
        buffer = G__13453;
        ch = G__13454;
        continue;
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
            var G__13455 = function() {
              buffer.append(ch);
              return buffer;
            }();
            var G__13456 = cljs.reader.read_char.call(null, reader);
            buffer = G__13455;
            ch = G__13456;
            continue;
          } else {
            return null;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if (t === "nil") {
    return null;
  } else {
    if (t === "true") {
      return true;
    } else {
      if (t === "false") {
        return false;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if (cljs.core.truth_(goog.string.contains(token, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length));
  } else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token));
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if (!(void 0 === ns) && ns.substring(ns.length - 2, ns.length) === ":/" || (name[name.length - 1] === ":" || !(token__$1.indexOf("::", 1) === -1))) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1);
  } else {
    if (!(ns == null) && ns.length > 0) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name);
    } else {
      return cljs.core.keyword.call(null, token__$1);
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if (f instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), f], null);
  } else {
    if (typeof f === "string") {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), f], null);
    } else {
      if (f instanceof cljs.core.Keyword) {
        return new cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return f;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.reader.read.call(null, rdr, true, null, true)), sym);
  };
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg);
  };
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map");
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if (function() {
    var G__13458 = o;
    if (G__13458) {
      var bit__4128__auto__ = G__13458.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4128__auto__ || G__13458.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__13458.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__13458);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__13458);
    }
  }()) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m));
  } else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas");
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true));
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch));
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr;
};
cljs.reader.macros = function macros(c) {
  if (c === '"') {
    return cljs.reader.read_string_STAR_;
  } else {
    if (c === ":") {
      return cljs.reader.read_keyword;
    } else {
      if (c === ";") {
        return cljs.reader.read_comment;
      } else {
        if (c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null));
        } else {
          if (c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", -1545057749, null));
          } else {
            if (c === "^") {
              return cljs.reader.read_meta;
            } else {
              if (c === "`") {
                return cljs.reader.not_implemented;
              } else {
                if (c === "~") {
                  return cljs.reader.not_implemented;
                } else {
                  if (c === "(") {
                    return cljs.reader.read_list;
                  } else {
                    if (c === ")") {
                      return cljs.reader.read_unmatched_delimiter;
                    } else {
                      if (c === "[") {
                        return cljs.reader.read_vector;
                      } else {
                        if (c === "]") {
                          return cljs.reader.read_unmatched_delimiter;
                        } else {
                          if (c === "{") {
                            return cljs.reader.read_map;
                          } else {
                            if (c === "}") {
                              return cljs.reader.read_unmatched_delimiter;
                            } else {
                              if (c === "\\") {
                                return cljs.reader.read_char;
                              } else {
                                if (c === "#") {
                                  return cljs.reader.read_dispatch;
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    return null;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if (s === "{") {
    return cljs.reader.read_set;
  } else {
    if (s === "\x3c") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form");
    } else {
      if (s === '"') {
        return cljs.reader.read_regex;
      } else {
        if (s === "!") {
          return cljs.reader.read_comment;
        } else {
          if (s === "_") {
            return cljs.reader.read_discard;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return null;
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch == null) {
      if (cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading");
      } else {
        return sentinel;
      }
    } else {
      if (cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__13459 = reader;
        var G__13460 = eof_is_error;
        var G__13461 = sentinel;
        var G__13462 = is_recursive;
        reader = G__13459;
        eof_is_error = G__13460;
        sentinel = G__13461;
        is_recursive = G__13462;
        continue;
      } else {
        if (cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__13463 = cljs.reader.read_comment.call(null, reader, ch);
          var G__13464 = eof_is_error;
          var G__13465 = sentinel;
          var G__13466 = is_recursive;
          reader = G__13463;
          eof_is_error = G__13464;
          sentinel = G__13465;
          is_recursive = G__13466;
          continue;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var f = cljs.reader.macros.call(null, ch);
            var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? cljs.reader.read_symbol.call(null, reader, ch) : null;
            if (res === reader) {
              var G__13467 = reader;
              var G__13468 = eof_is_error;
              var G__13469 = sentinel;
              var G__13470 = is_recursive;
              reader = G__13467;
              eof_is_error = G__13468;
              sentinel = G__13469;
              is_recursive = G__13470;
              continue;
            } else {
              return res;
            }
          } else {
            return null;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.read_string = function read_string(s) {
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, true, null, false);
};
cljs.reader.zero_fill_right_and_truncate = function zero_fill_right_and_truncate(s, width) {
  if (cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s;
  } else {
    if (width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var b = new goog.string.StringBuffer(s);
        while (true) {
          if (b.getLength() < width) {
            var G__13471 = b.append("0");
            b = G__13471;
            continue;
          } else {
            return b.toString();
          }
          break;
        }
      } else {
        return null;
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0;
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return!cljs.reader.divisible_QMARK_.call(null, num, div);
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  return cljs.reader.divisible_QMARK_.call(null, year, 4) && (cljs.reader.indivisible_QMARK_.call(null, year, 100) || cljs.reader.divisible_QMARK_.call(null, year, 400));
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(dim_norm, dim_leap) {
    return function(month, leap_year_QMARK_) {
      return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month);
    };
  }(dim_norm, dim_leap);
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function parse_int(s) {
  var n = parseInt(s, 10);
  if (cljs.core.not.call(null, isNaN(n))) {
    return n;
  } else {
    return null;
  }
};
cljs.reader.check = function check(low, n, high, msg) {
  if (low <= n && n <= high) {
  } else {
    cljs.reader.reader_error.call(null, null, [cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("\x3c\x3d"), cljs.core.str(n), cljs.core.str("\x3c\x3d"), cljs.core.str(high)].join(""));
  }
  return n;
};
cljs.reader.parse_and_validate_timestamp = function parse_and_validate_timestamp(s) {
  var vec__13473 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__13473, 0, null);
  var years = cljs.core.nth.call(null, vec__13473, 1, null);
  var months = cljs.core.nth.call(null, vec__13473, 2, null);
  var days = cljs.core.nth.call(null, vec__13473, 3, null);
  var hours = cljs.core.nth.call(null, vec__13473, 4, null);
  var minutes = cljs.core.nth.call(null, vec__13473, 5, null);
  var seconds = cljs.core.nth.call(null, vec__13473, 6, null);
  var fraction = cljs.core.nth.call(null, vec__13473, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__13473, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__13473, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__13473, 10, null);
  var v = vec__13473;
  if (cljs.core.not.call(null, v)) {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(s)].join(""));
  } else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__3478__auto__ = cljs.reader.parse_int.call(null, months);
      if (cljs.core.truth_(or__3478__auto__)) {
        return or__3478__auto__;
      } else {
        return 1;
      }
    }();
    var days__$1 = function() {
      var or__3478__auto__ = cljs.reader.parse_int.call(null, days);
      if (cljs.core.truth_(or__3478__auto__)) {
        return or__3478__auto__;
      } else {
        return 1;
      }
    }();
    var hours__$1 = function() {
      var or__3478__auto__ = cljs.reader.parse_int.call(null, hours);
      if (cljs.core.truth_(or__3478__auto__)) {
        return or__3478__auto__;
      } else {
        return 0;
      }
    }();
    var minutes__$1 = function() {
      var or__3478__auto__ = cljs.reader.parse_int.call(null, minutes);
      if (cljs.core.truth_(or__3478__auto__)) {
        return or__3478__auto__;
      } else {
        return 0;
      }
    }();
    var seconds__$1 = function() {
      var or__3478__auto__ = cljs.reader.parse_int.call(null, seconds);
      if (cljs.core.truth_(or__3478__auto__)) {
        return or__3478__auto__;
      } else {
        return 0;
      }
    }();
    var fraction__$1 = function() {
      var or__3478__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if (cljs.core.truth_(or__3478__auto__)) {
        return or__3478__auto__;
      } else {
        return 0;
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__3478__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if (cljs.core.truth_(or__3478__auto__)) {
        return or__3478__auto__;
      } else {
        return 0;
      }
    }();
    var offset_minutes__$1 = function() {
      var or__3478__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if (cljs.core.truth_(or__3478__auto__)) {
        return or__3478__auto__;
      } else {
        return 0;
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), 
    cljs.reader.check.call(null, 0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], null);
  }
};
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__4090__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if (cljs.core.truth_(temp__4090__auto__)) {
    var vec__13475 = temp__4090__auto__;
    var years = cljs.core.nth.call(null, vec__13475, 0, null);
    var months = cljs.core.nth.call(null, vec__13475, 1, null);
    var days = cljs.core.nth.call(null, vec__13475, 2, null);
    var hours = cljs.core.nth.call(null, vec__13475, 3, null);
    var minutes = cljs.core.nth.call(null, vec__13475, 4, null);
    var seconds = cljs.core.nth.call(null, vec__13475, 5, null);
    var ms = cljs.core.nth.call(null, vec__13475, 6, null);
    var offset = cljs.core.nth.call(null, vec__13475, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3);
  } else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""));
  }
};
cljs.reader.read_date = function read_date(s) {
  if (typeof s === "string") {
    return cljs.reader.parse_timestamp.call(null, s);
  } else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.");
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if (cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems);
  } else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.");
  }
};
cljs.reader.read_js = function read_js(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    var arr = [];
    var seq__13488_13500 = cljs.core.seq.call(null, form);
    var chunk__13489_13501 = null;
    var count__13490_13502 = 0;
    var i__13491_13503 = 0;
    while (true) {
      if (i__13491_13503 < count__13490_13502) {
        var x_13504 = cljs.core._nth.call(null, chunk__13489_13501, i__13491_13503);
        arr.push(x_13504);
        var G__13505 = seq__13488_13500;
        var G__13506 = chunk__13489_13501;
        var G__13507 = count__13490_13502;
        var G__13508 = i__13491_13503 + 1;
        seq__13488_13500 = G__13505;
        chunk__13489_13501 = G__13506;
        count__13490_13502 = G__13507;
        i__13491_13503 = G__13508;
        continue;
      } else {
        var temp__4092__auto___13509 = cljs.core.seq.call(null, seq__13488_13500);
        if (temp__4092__auto___13509) {
          var seq__13488_13510__$1 = temp__4092__auto___13509;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__13488_13510__$1)) {
            var c__4226__auto___13511 = cljs.core.chunk_first.call(null, seq__13488_13510__$1);
            var G__13512 = cljs.core.chunk_rest.call(null, seq__13488_13510__$1);
            var G__13513 = c__4226__auto___13511;
            var G__13514 = cljs.core.count.call(null, c__4226__auto___13511);
            var G__13515 = 0;
            seq__13488_13500 = G__13512;
            chunk__13489_13501 = G__13513;
            count__13490_13502 = G__13514;
            i__13491_13503 = G__13515;
            continue;
          } else {
            var x_13516 = cljs.core.first.call(null, seq__13488_13510__$1);
            arr.push(x_13516);
            var G__13517 = cljs.core.next.call(null, seq__13488_13510__$1);
            var G__13518 = null;
            var G__13519 = 0;
            var G__13520 = 0;
            seq__13488_13500 = G__13517;
            chunk__13489_13501 = G__13518;
            count__13490_13502 = G__13519;
            i__13491_13503 = G__13520;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return arr;
  } else {
    if (cljs.core.map_QMARK_.call(null, form)) {
      var obj = function() {
        var obj13493 = {};
        return obj13493;
      }();
      var seq__13494_13521 = cljs.core.seq.call(null, form);
      var chunk__13495_13522 = null;
      var count__13496_13523 = 0;
      var i__13497_13524 = 0;
      while (true) {
        if (i__13497_13524 < count__13496_13523) {
          var vec__13498_13525 = cljs.core._nth.call(null, chunk__13495_13522, i__13497_13524);
          var k_13526 = cljs.core.nth.call(null, vec__13498_13525, 0, null);
          var v_13527 = cljs.core.nth.call(null, vec__13498_13525, 1, null);
          obj[cljs.core.name.call(null, k_13526)] = v_13527;
          var G__13528 = seq__13494_13521;
          var G__13529 = chunk__13495_13522;
          var G__13530 = count__13496_13523;
          var G__13531 = i__13497_13524 + 1;
          seq__13494_13521 = G__13528;
          chunk__13495_13522 = G__13529;
          count__13496_13523 = G__13530;
          i__13497_13524 = G__13531;
          continue;
        } else {
          var temp__4092__auto___13532 = cljs.core.seq.call(null, seq__13494_13521);
          if (temp__4092__auto___13532) {
            var seq__13494_13533__$1 = temp__4092__auto___13532;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__13494_13533__$1)) {
              var c__4226__auto___13534 = cljs.core.chunk_first.call(null, seq__13494_13533__$1);
              var G__13535 = cljs.core.chunk_rest.call(null, seq__13494_13533__$1);
              var G__13536 = c__4226__auto___13534;
              var G__13537 = cljs.core.count.call(null, c__4226__auto___13534);
              var G__13538 = 0;
              seq__13494_13521 = G__13535;
              chunk__13495_13522 = G__13536;
              count__13496_13523 = G__13537;
              i__13497_13524 = G__13538;
              continue;
            } else {
              var vec__13499_13539 = cljs.core.first.call(null, seq__13494_13533__$1);
              var k_13540 = cljs.core.nth.call(null, vec__13499_13539, 0, null);
              var v_13541 = cljs.core.nth.call(null, vec__13499_13539, 1, null);
              obj[cljs.core.name.call(null, k_13540)] = v_13541;
              var G__13542 = cljs.core.next.call(null, seq__13494_13533__$1);
              var G__13543 = null;
              var G__13544 = 0;
              var G__13545 = 0;
              seq__13494_13521 = G__13542;
              chunk__13495_13522 = G__13543;
              count__13496_13523 = G__13544;
              i__13497_13524 = G__13545;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return obj;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.reader.reader_error.call(null, null, [cljs.core.str("JS literal expects a vector or map containing "), cljs.core.str("only string or unqualified keyword keys")].join(""));
      } else {
        return null;
      }
    }
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if (typeof uuid === "string") {
    return new cljs.core.UUID(uuid);
  } else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.");
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue, "js", cljs.reader.read_js], null));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), [cljs.core.str(tag)].join(""));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if (cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false));
  } else {
    if (cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", [cljs.core.str(tag)].join(""), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))));
      } else {
        return null;
      }
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser;
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser;
};
cljs.reader.register_default_tag_parser_BANG_ = function register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return f;
    };
  }(old_parser));
  return old_parser;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return null;
    };
  }(old_parser));
  return old_parser;
};
goog.provide("yantra.plot");
goog.require("cljs.core");
goog.require("om.dom");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("React");
goog.require("yantra.datatypes");
goog.require("yantra.datatypes");
yantra.plot.bar_chart_vega_values = function bar_chart_vega_values(x) {
  return cljs.core.mapv.call(null, function(d, l) {
    return new cljs.core.PersistentArrayMap(null, 2, ["x", l, "y", d], null);
  }, (new cljs.core.Keyword(null, "data", "data", 1016980252)).cljs$core$IFn$_invoke$arity$1(x), (new cljs.core.Keyword(null, "labels", "labels", 4198454129)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "opts", "opts", 1017322386)).cljs$core$IFn$_invoke$arity$1(x)));
};
yantra.plot.bar_chart_spec = function bar_chart_spec(x) {
  return new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "width", "width", 1127031096), 200, new cljs.core.Keyword(null, "height", "height", 4087841945), 200, new cljs.core.Keyword(null, "padding", "padding", 4502531971), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "top", "top", 1014019271), 10, new cljs.core.Keyword(null, "left", "left", 1017222009), 30, new cljs.core.Keyword(null, "bottom", "bottom", 3925642653), 20, new cljs.core.Keyword(null, 
  "right", "right", 1122416014), 10], null), new cljs.core.Keyword(null, "data", "data", 1016980252), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1017277949), "table", new cljs.core.Keyword(null, "values", "values", 4485058708), yantra.plot.bar_chart_vega_values.call(null, x)], null)], null), new cljs.core.Keyword(null, "axes", "axes", 1016912535), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1017479852), "x", new cljs.core.Keyword(null, "scale", "scale", 1123155132), "x"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1017479852), "y", new cljs.core.Keyword(null, "scale", "scale", 1123155132), "y"], null)], null), new cljs.core.Keyword(null, "scales", "scales", 4400681947), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "name", "name", 1017277949), "x", new cljs.core.Keyword(null, "type", "type", 1017479852), "ordinal", new cljs.core.Keyword(null, "range", "range", 1122184367), "width", new cljs.core.Keyword(null, "domain", "domain", 3982673974), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "data", "data", 1016980252), "table", new cljs.core.Keyword(null, "field", "field", 
  1111331948), "data.x"], null)], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "name", "name", 1017277949), "y", new cljs.core.Keyword(null, "range", "range", 1122184367), "height", new cljs.core.Keyword(null, "nice", "nice", 1017285327), true, new cljs.core.Keyword(null, "domain", "domain", 3982673974), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "data", "data", 1016980252), "table", new cljs.core.Keyword(null, "field", "field", 1111331948), 
  "data.y"], null)], null)], null), new cljs.core.Keyword(null, "marks", "marks", 1117570744), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1017479852), "rect", new cljs.core.Keyword(null, "from", "from", 1017056028), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "data", "data", 1016980252), "table"], null), new cljs.core.Keyword(null, "properties", 
  "properties", 4382818469), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "enter", "enter", 1110571594), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "x", "x", 1013904362), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "scale", "scale", 1123155132), "x", new cljs.core.Keyword(null, "field", "field", 1111331948), "data.x"], null), new cljs.core.Keyword(null, "width", "width", 1127031096), new cljs.core.PersistentArrayMap(null, 
  3, [new cljs.core.Keyword(null, "scale", "scale", 1123155132), "x", new cljs.core.Keyword(null, "band", "band", 1016920487), true, new cljs.core.Keyword(null, "offset", "offset", 4289091589), -1], null), new cljs.core.Keyword(null, "y", "y", 1013904363), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "scale", "scale", 1123155132), "y", new cljs.core.Keyword(null, "field", "field", 1111331948), "data.y"], null), new cljs.core.Keyword(null, "y2", "y2", 1013908043), new cljs.core.PersistentArrayMap(null, 
  2, [new cljs.core.Keyword(null, "scale", "scale", 1123155132), "y", new cljs.core.Keyword(null, "value", "value", 1125876963), 0], null)], null), new cljs.core.Keyword(null, "update", "update", 4470025275), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "fill", "fill", 1017047285), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 1125876963), "steelBlue"], null)], null)], null)], null)], null)], null);
};
yantra.plot.list_line_plot_vega_values = function list_line_plot_vega_values(x) {
  var d = (new cljs.core.Keyword(null, "data", "data", 1016980252)).cljs$core$IFn$_invoke$arity$1(x);
  var temp__4090__auto__ = cljs.core.first.call(null, d);
  if (cljs.core.truth_(temp__4090__auto__)) {
    var f = temp__4090__auto__;
    if (cljs.core.vector_QMARK_.call(null, f)) {
      return cljs.core.mapv.call(null, function(f, temp__4090__auto__, d) {
        return function(p__9437) {
          var vec__9438 = p__9437;
          var x__$1 = cljs.core.nth.call(null, vec__9438, 0, null);
          var y = cljs.core.nth.call(null, vec__9438, 1, null);
          return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 1013904362), x__$1, new cljs.core.Keyword(null, "y", "y", 1013904363), y], null);
        };
      }(f, temp__4090__auto__, d), d);
    } else {
      return cljs.core.vec.call(null, cljs.core.map_indexed.call(null, function(f, temp__4090__auto__, d) {
        return function(i, y) {
          return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 1013904362), i, new cljs.core.Keyword(null, "y", "y", 1013904363), y], null);
        };
      }(f, temp__4090__auto__, d), d));
    }
  } else {
    return null;
  }
};
yantra.plot.list_line_plot_spec = function list_line_plot_spec(x) {
  return new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "width", "width", 1127031096), 400, new cljs.core.Keyword(null, "height", "height", 4087841945), 200, new cljs.core.Keyword(null, "padding", "padding", 4502531971), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "top", "top", 1014019271), 10, new cljs.core.Keyword(null, "left", "left", 1017222009), 30, new cljs.core.Keyword(null, "bottom", "bottom", 3925642653), 20, new cljs.core.Keyword(null, 
  "right", "right", 1122416014), 10], null), new cljs.core.Keyword(null, "data", "data", 1016980252), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1017277949), "table", new cljs.core.Keyword(null, "values", "values", 4485058708), yantra.plot.list_line_plot_vega_values.call(null, x)], null)], null), new cljs.core.Keyword(null, "axes", "axes", 1016912535), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1017479852), "x", new cljs.core.Keyword(null, "scale", "scale", 1123155132), "x", new cljs.core.Keyword(null, "tickSizeEnd", "tickSizeEnd", 2289845295), 0], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1017479852), "y", new cljs.core.Keyword(null, "scale", "scale", 1123155132), "y"], null)], null), new cljs.core.Keyword(null, 
  "scales", "scales", 4400681947), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "name", "name", 1017277949), "x", new cljs.core.Keyword(null, "type", "type", 1017479852), "linear", new cljs.core.Keyword(null, "range", "range", 1122184367), "width", new cljs.core.Keyword(null, "domain", "domain", 3982673974), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "data", "data", 
  1016980252), "table", new cljs.core.Keyword(null, "field", "field", 1111331948), "data.x"], null)], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "name", "name", 1017277949), "y", new cljs.core.Keyword(null, "range", "range", 1122184367), "height", new cljs.core.Keyword(null, "nice", "nice", 1017285327), "true", new cljs.core.Keyword(null, "domain", "domain", 3982673974), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "data", "data", 1016980252), 
  "table", new cljs.core.Keyword(null, "field", "field", 1111331948), "data.y"], null)], null)], null), new cljs.core.Keyword(null, "marks", "marks", 1117570744), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1017479852), "line", new cljs.core.Keyword(null, "from", "from", 1017056028), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "data", "data", 1016980252), 
  "table"], null), new cljs.core.Keyword(null, "properties", "properties", 4382818469), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "enter", "enter", 1110571594), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "x", "x", 1013904362), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "scale", "scale", 1123155132), "x", new cljs.core.Keyword(null, "field", "field", 1111331948), "data.x"], null), new cljs.core.Keyword(null, "y", 
  "y", 1013904363), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "scale", "scale", 1123155132), "y", new cljs.core.Keyword(null, "field", "field", 1111331948), "data.y"], null), new cljs.core.Keyword(null, "stroke", "stroke", 4416891306), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 1125876963), "steelBlue"], null), new cljs.core.Keyword(null, "strokeWidth", "strokeWidth", 2937970144), new cljs.core.PersistentArrayMap(null, 1, 
  [new cljs.core.Keyword(null, "value", "value", 1125876963), 2], null)], null)], null)], null)], null)], null);
};
yantra.plot.plot_renderers = new cljs.core.PersistentArrayMap.fromArray([yantra.datatypes.ListLinePlot, function(cursor, owner, opts) {
  if (typeof yantra.plot.t9439 !== "undefined") {
  } else {
    yantra.plot.t9439 = function(opts, owner, cursor, meta9440) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9440 = meta9440;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.plot.t9439.cljs$lang$type = true;
    yantra.plot.t9439.cljs$lang$ctorStr = "yantra.plot/t9439";
    yantra.plot.t9439.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
      return cljs.core._write.call(null, writer__4046__auto__, "yantra.plot/t9439");
    };
    yantra.plot.t9439.prototype.om$core$IDidMount$ = true;
    yantra.plot.t9439.prototype.om$core$IDidMount$did_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return vg.parse.spec(cljs.core.clj__GT_js.call(null, yantra.plot.list_line_plot_spec.call(null, om.core.value.call(null, self__.cursor))), function(___$1) {
        return function(chart) {
          return chart.call(null, {"el":om.core.get_node.call(null, self__.owner, "theElt")}).update();
        };
      }(___$1));
    };
    yantra.plot.t9439.prototype.om$core$IDidUpdate$ = true;
    yantra.plot.t9439.prototype.om$core$IDidUpdate$did_update$arity$3 = function(this$, prev_props, prev_state) {
      var self__ = this;
      var this$__$1 = this;
      return vg.parse.spec(cljs.core.clj__GT_js.call(null, yantra.plot.list_line_plot_spec.call(null, om.core.value.call(null, self__.cursor))), function(this$__$1) {
        return function(chart) {
          return chart.call(null, {"el":om.core.get_node.call(null, self__.owner, "theElt")}).update();
        };
      }(this$__$1));
    };
    yantra.plot.t9439.prototype.om$core$IRender$ = true;
    yantra.plot.t9439.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return React.DOM.span({"ref":"theElt"}, "");
    };
    yantra.plot.t9439.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9441) {
      var self__ = this;
      var _9441__$1 = this;
      return self__.meta9440;
    };
    yantra.plot.t9439.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9441, meta9440__$1) {
      var self__ = this;
      var _9441__$1 = this;
      return new yantra.plot.t9439(self__.opts, self__.owner, self__.cursor, meta9440__$1);
    };
    yantra.plot.__GT_t9439 = function __GT_t9439(opts__$1, owner__$1, cursor__$1, meta9440) {
      return new yantra.plot.t9439(opts__$1, owner__$1, cursor__$1, meta9440);
    };
  }
  return new yantra.plot.t9439(opts, owner, cursor, null);
}, yantra.datatypes.BarChart, function(cursor, owner, opts) {
  if (typeof yantra.plot.t9442 !== "undefined") {
  } else {
    yantra.plot.t9442 = function(opts, owner, cursor, meta9443) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9443 = meta9443;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.plot.t9442.cljs$lang$type = true;
    yantra.plot.t9442.cljs$lang$ctorStr = "yantra.plot/t9442";
    yantra.plot.t9442.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
      return cljs.core._write.call(null, writer__4046__auto__, "yantra.plot/t9442");
    };
    yantra.plot.t9442.prototype.om$core$IDidMount$ = true;
    yantra.plot.t9442.prototype.om$core$IDidMount$did_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return vg.parse.spec(cljs.core.clj__GT_js.call(null, yantra.plot.bar_chart_spec.call(null, om.core.value.call(null, self__.cursor))), function(___$1) {
        return function(chart) {
          return chart.call(null, {"el":om.core.get_node.call(null, self__.owner, "theElt")}).update();
        };
      }(___$1));
    };
    yantra.plot.t9442.prototype.om$core$IDidUpdate$ = true;
    yantra.plot.t9442.prototype.om$core$IDidUpdate$did_update$arity$3 = function(this$, prev_props, prev_state) {
      var self__ = this;
      var this$__$1 = this;
      return vg.parse.spec(cljs.core.clj__GT_js.call(null, yantra.plot.bar_chart_spec.call(null, om.core.value.call(null, self__.cursor))), function(this$__$1) {
        return function(chart) {
          return chart.call(null, {"el":om.core.get_node.call(null, self__.owner, "theElt")}).update();
        };
      }(this$__$1));
    };
    yantra.plot.t9442.prototype.om$core$IRender$ = true;
    yantra.plot.t9442.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return React.DOM.span({"ref":"theElt"}, "");
    };
    yantra.plot.t9442.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9444) {
      var self__ = this;
      var _9444__$1 = this;
      return self__.meta9443;
    };
    yantra.plot.t9442.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9444, meta9443__$1) {
      var self__ = this;
      var _9444__$1 = this;
      return new yantra.plot.t9442(self__.opts, self__.owner, self__.cursor, meta9443__$1);
    };
    yantra.plot.__GT_t9442 = function __GT_t9442(opts__$1, owner__$1, cursor__$1, meta9443) {
      return new yantra.plot.t9442(opts__$1, owner__$1, cursor__$1, meta9443);
    };
  }
  return new yantra.plot.t9442(opts, owner, cursor, null);
}], true, false);
goog.provide("yantra.layout");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("om.dom");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("React");
goog.require("yantra.datatypes");
goog.require("yantra.datatypes");
yantra.layout.layout_renderers = new cljs.core.PersistentArrayMap.fromArray([yantra.datatypes.Column, function(cursor, owner, opts) {
  var builder = om.core.get_shared.call(null, owner, new cljs.core.Keyword(null, "builder", "builder", 1244848909));
  if (typeof yantra.layout.t9432 !== "undefined") {
  } else {
    yantra.layout.t9432 = function(builder, opts, owner, cursor, meta9433) {
      this.builder = builder;
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9433 = meta9433;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.layout.t9432.cljs$lang$type = true;
    yantra.layout.t9432.cljs$lang$ctorStr = "yantra.layout/t9432";
    yantra.layout.t9432.cljs$lang$ctorPrWriter = function(builder) {
      return function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
        return cljs.core._write.call(null, writer__4046__auto__, "yantra.layout/t9432");
      };
    }(builder);
    yantra.layout.t9432.prototype.om$core$IRender$ = true;
    yantra.layout.t9432.prototype.om$core$IRender$render$arity$1 = function(builder) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return React.DOM.div(null, cljs.core.into_array.call(null, cljs.core.map.call(null, function(___$1, builder) {
          return function(p1__9431_SHARP_) {
            return React.DOM.div(null, self__.builder.call(null, p1__9431_SHARP_));
          };
        }(___$1, builder), (new cljs.core.Keyword(null, "contents", "contents", 4741549708)).cljs$core$IFn$_invoke$arity$1(self__.cursor))));
      };
    }(builder);
    yantra.layout.t9432.prototype.cljs$core$IMeta$_meta$arity$1 = function(builder) {
      return function(_9434) {
        var self__ = this;
        var _9434__$1 = this;
        return self__.meta9433;
      };
    }(builder);
    yantra.layout.t9432.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(builder) {
      return function(_9434, meta9433__$1) {
        var self__ = this;
        var _9434__$1 = this;
        return new yantra.layout.t9432(self__.builder, self__.opts, self__.owner, self__.cursor, meta9433__$1);
      };
    }(builder);
    yantra.layout.__GT_t9432 = function(builder) {
      return function __GT_t9432(builder__$1, opts__$1, owner__$1, cursor__$1, meta9433) {
        return new yantra.layout.t9432(builder__$1, opts__$1, owner__$1, cursor__$1, meta9433);
      };
    }(builder);
  }
  return new yantra.layout.t9432(builder, opts, owner, cursor, null);
}], true, false);
goog.provide("yantra.controls");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("om.dom");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("cljs.reader");
goog.require("React");
goog.require("yantra.datatypes");
goog.require("yantra.datatypes");
yantra.controls.control_renderers = new cljs.core.PersistentArrayMap.fromArray([yantra.datatypes.Slider, function(cursor, owner, opts) {
  if (typeof yantra.controls.t9501 !== "undefined") {
  } else {
    yantra.controls.t9501 = function(opts, owner, cursor, meta9502) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9502 = meta9502;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.controls.t9501.cljs$lang$type = true;
    yantra.controls.t9501.cljs$lang$ctorStr = "yantra.controls/t9501";
    yantra.controls.t9501.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
      return cljs.core._write.call(null, writer__4046__auto__, "yantra.controls/t9501");
    };
    yantra.controls.t9501.prototype.om$core$IRender$ = true;
    yantra.controls.t9501.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var v = om.core.value.call(null, self__.cursor);
      var val = (new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(v);
      var r = (new cljs.core.Keyword(null, "range", "range", 1122184367)).cljs$core$IFn$_invoke$arity$1(v);
      var c = (new cljs.core.Keyword(null, "channel", "channel", 1752854645)).cljs$core$IFn$_invoke$arity$1(v);
      var min = cljs.core.first.call(null, r);
      var max = cljs.core.second.call(null, r);
      var step = cljs.core._EQ_.call(null, 3, cljs.core.count.call(null, r)) ? cljs.core.last.call(null, r) : 1;
      return om.dom.input.call(null, {"onChange":function(v, val, r, c, min, max, step, ___$1) {
        return function(e) {
          console.log(e);
          if (cljs.core.truth_(c)) {
            return cljs.core.async.put_BANG_.call(null, c, cljs.reader.read_string.call(null, e.target.value));
          } else {
            return null;
          }
        };
      }(v, val, r, c, min, max, step, ___$1), "step":step, "max":max, "min":min, "defaultValue":val, "type":"range"});
    };
    yantra.controls.t9501.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9503) {
      var self__ = this;
      var _9503__$1 = this;
      return self__.meta9502;
    };
    yantra.controls.t9501.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9503, meta9502__$1) {
      var self__ = this;
      var _9503__$1 = this;
      return new yantra.controls.t9501(self__.opts, self__.owner, self__.cursor, meta9502__$1);
    };
    yantra.controls.__GT_t9501 = function __GT_t9501(opts__$1, owner__$1, cursor__$1, meta9502) {
      return new yantra.controls.t9501(opts__$1, owner__$1, cursor__$1, meta9502);
    };
  }
  return new yantra.controls.t9501(opts, owner, cursor, null);
}, yantra.datatypes.ChannelDisplay, function(cursor, owner, opts) {
  if (typeof yantra.controls.t9504 !== "undefined") {
  } else {
    yantra.controls.t9504 = function(opts, owner, cursor, meta9505) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9505 = meta9505;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.controls.t9504.cljs$lang$type = true;
    yantra.controls.t9504.cljs$lang$ctorStr = "yantra.controls/t9504";
    yantra.controls.t9504.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
      return cljs.core._write.call(null, writer__4046__auto__, "yantra.controls/t9504");
    };
    yantra.controls.t9504.prototype.om$core$IRender$ = true;
    yantra.controls.t9504.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return om.core.get_shared.call(null, self__.owner, new cljs.core.Keyword(null, "builder", "builder", 1244848909)).call(null, (new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(om.core.value.call(null, self__.cursor)));
    };
    yantra.controls.t9504.prototype.om$core$IWillMount$ = true;
    yantra.controls.t9504.prototype.om$core$IWillMount$will_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var c = (new cljs.core.Keyword(null, "channel", "channel", 1752854645)).cljs$core$IFn$_invoke$arity$1(om.core.value.call(null, self__.cursor));
      var c__6248__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6248__auto__, c, ___$1) {
        return function() {
          var f__6249__auto__ = function() {
            var switch__6233__auto__ = function(c__6248__auto__, c, ___$1) {
              return function(state_9515) {
                var state_val_9516 = state_9515[1];
                if (state_val_9516 === 4) {
                  var inst_9509 = state_9515[2];
                  var inst_9510 = om.core.update_BANG_.call(null, self__.cursor, new cljs.core.Keyword(null, "value", "value", 1125876963), inst_9509);
                  var state_9515__$1 = function() {
                    var statearr_9517 = state_9515;
                    statearr_9517[7] = inst_9510;
                    return statearr_9517;
                  }();
                  var statearr_9518_9527 = state_9515__$1;
                  statearr_9518_9527[2] = null;
                  statearr_9518_9527[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_9516 === 3) {
                    var inst_9513 = state_9515[2];
                    var state_9515__$1 = state_9515;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_9515__$1, inst_9513);
                  } else {
                    if (state_val_9516 === 2) {
                      var state_9515__$1 = state_9515;
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_9515__$1, 4, c);
                    } else {
                      if (state_val_9516 === 1) {
                        var state_9515__$1 = state_9515;
                        var statearr_9519_9528 = state_9515__$1;
                        statearr_9519_9528[2] = null;
                        statearr_9519_9528[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        return null;
                      }
                    }
                  }
                }
              };
            }(c__6248__auto__, c, ___$1);
            return function(switch__6233__auto__, c__6248__auto__, c, ___$1) {
              return function() {
                var state_machine__6234__auto__ = null;
                var state_machine__6234__auto____0 = function() {
                  var statearr_9523 = [null, null, null, null, null, null, null, null];
                  statearr_9523[0] = state_machine__6234__auto__;
                  statearr_9523[1] = 1;
                  return statearr_9523;
                };
                var state_machine__6234__auto____1 = function(state_9515) {
                  while (true) {
                    var ret_value__6235__auto__ = function() {
                      try {
                        while (true) {
                          var result__6236__auto__ = switch__6233__auto__.call(null, state_9515);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6236__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                            continue;
                          } else {
                            return result__6236__auto__;
                          }
                          break;
                        }
                      } catch (e9524) {
                        if (e9524 instanceof Object) {
                          var ex__6237__auto__ = e9524;
                          var statearr_9525_9529 = state_9515;
                          statearr_9525_9529[5] = ex__6237__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_9515);
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                            throw e9524;
                          } else {
                            return null;
                          }
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6235__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      var G__9530 = state_9515;
                      state_9515 = G__9530;
                      continue;
                    } else {
                      return ret_value__6235__auto__;
                    }
                    break;
                  }
                };
                state_machine__6234__auto__ = function(state_9515) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6234__auto____0.call(this);
                    case 1:
                      return state_machine__6234__auto____1.call(this, state_9515);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6234__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6234__auto____0;
                state_machine__6234__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6234__auto____1;
                return state_machine__6234__auto__;
              }();
            }(switch__6233__auto__, c__6248__auto__, c, ___$1);
          }();
          var state__6250__auto__ = function() {
            var statearr_9526 = f__6249__auto__.call(null);
            statearr_9526[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6248__auto__;
            return statearr_9526;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6250__auto__);
        };
      }(c__6248__auto__, c, ___$1));
      return c__6248__auto__;
    };
    yantra.controls.t9504.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9506) {
      var self__ = this;
      var _9506__$1 = this;
      return self__.meta9505;
    };
    yantra.controls.t9504.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9506, meta9505__$1) {
      var self__ = this;
      var _9506__$1 = this;
      return new yantra.controls.t9504(self__.opts, self__.owner, self__.cursor, meta9505__$1);
    };
    yantra.controls.__GT_t9504 = function __GT_t9504(opts__$1, owner__$1, cursor__$1, meta9505) {
      return new yantra.controls.t9504(opts__$1, owner__$1, cursor__$1, meta9505);
    };
  }
  return new yantra.controls.t9504(opts, owner, cursor, null);
}], true, false);
goog.provide("yantra.test");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("yantra.plot");
goog.require("om.dom");
goog.require("om.core");
goog.require("yantra.graphics");
goog.require("yantra.datatypes");
goog.require("yantra.layout");
goog.require("om.core");
goog.require("yantra.datatypes");
goog.require("React");
goog.require("yantra.edn");
goog.require("yantra.controls");
goog.require("yantra.graphics");
goog.require("yantra.edn");
goog.require("om.dom");
goog.require("cljs.reader");
goog.require("yantra.plot");
goog.require("cljs.core.async");
goog.require("yantra.layout");
goog.require("yantra.controls");
yantra.test.tests = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "column-2", "column-2", 4685450989), new cljs.core.Keyword(null, "plot-2", "plot-2", 4323529144), new cljs.core.Keyword(null, "string", "string", 4416885635), new cljs.core.Keyword(null, "column-1", "column-1", 4685450988), new cljs.core.Keyword(null, "plot-3", "plot-3", 4323529145), new cljs.core.Keyword(null, "edn-1", "edn-1", 1110266117), new cljs.core.Keyword(null, "edn-0", "edn-0", 1110266116), new cljs.core.Keyword(null, 
"plot-1", "plot-1", 4323529143), new cljs.core.Keyword(null, "nested-list", "nested-list", 3499779878), new cljs.core.Keyword(null, "nested-list-3", "nested-list-3", 1938575308), new cljs.core.Keyword(null, "channel-1", "channel-1", 2475639129), new cljs.core.Keyword(null, "nested-list-2", "nested-list-2", 1938575307), new cljs.core.Keyword(null, "graphics-1", "graphics-1", 3304008929), new cljs.core.Keyword(null, "channel-2", "channel-2", 2475639130), new cljs.core.Keyword(null, "line", "line", 
1017226086), new cljs.core.Keyword(null, "plot-4", "plot-4", 4323529146)], [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new yantra.datatypes.Column(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 3], null))], null), new yantra.datatypes.ListLinePlot(new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 3, 6, 5, 4, 3, 1], null), null), 'a"b"c', new yantra.datatypes.Column(new cljs.core.PersistentVector(null, 
3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 3], null)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new yantra.datatypes.ListLinePlot(new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 3, 6, 5, 4, 3, 1], null), null), new yantra.datatypes.ListLinePlot(new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 3, 6, 5, 4, 3, 1], null), null)], null), new cljs.core.PersistentVector(null, 
9, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, "a", new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.Symbol(null, "a", "a", -1640531430, null), new cljs.core.PersistentArrayMap(null, 2, [1, 2, 3, 4], null), new yantra.datatypes.Slider(4, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 10], null), null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [1, null, 2, null, 3, null, 4, null], null), null), cljs.core._conj.call(null, 
cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 4), 3), 2), 1), new yantra.datatypes.Graphics(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new yantra.datatypes.Disk(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), 1), new yantra.datatypes.Disk(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 2], null), 1), new yantra.datatypes.Disk(new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null), 1)], null))], null), 1, new yantra.datatypes.BarChart(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 6, 5, 4], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "labels", "labels", 4198454129), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a", "b", "c", "d", "e"], null)], null)), cljs.core._conj.call(null, cljs.core._conj.call(null, 
cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 3), 2), 1)), 2), 1)), 3), 2), 1), cljs.reader.read_string.call(null, "(1 2 3 (1 2 3))"), function() {
  var c = cljs.core.async.chan.call(null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new yantra.datatypes.Slider(1, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 10, 1], null), c), new yantra.datatypes.ChannelDisplay(c, new cljs.core.Keyword(null, "default", "default", 2558708147))], null);
}(), cljs.core.partition.call(null, 2, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 3, 4], null)), new yantra.datatypes.Column(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new yantra.datatypes.Slider(4, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 10], null), null), new yantra.datatypes.Slider(5, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, 10], null), null), new yantra.datatypes.Graphics(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new yantra.datatypes.Disk(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), 1), new yantra.datatypes.Disk(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [10, 2], null), 1), new yantra.datatypes.Disk(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 
0], null), 1), new yantra.datatypes.Disk(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [20, 0], null), 1)], null))], null)), function() {
  var c1 = cljs.core.async.chan.call(null);
  var c2 = cljs.core.async.chan.call(null);
  var c__6248__auto___9617 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6248__auto___9617, c1, c2) {
    return function() {
      var f__6249__auto__ = function() {
        var switch__6233__auto__ = function(c__6248__auto___9617, c1, c2) {
          return function(state_9605) {
            var state_val_9606 = state_9605[1];
            if (state_val_9606 === 5) {
              var inst_9597 = state_9605[2];
              var inst_9598 = 10 + inst_9597;
              var state_9605__$1 = state_9605;
              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_9605__$1, 4, c2, inst_9598);
            } else {
              if (state_val_9606 === 4) {
                var inst_9600 = state_9605[2];
                var state_9605__$1 = function() {
                  var statearr_9607 = state_9605;
                  statearr_9607[7] = inst_9600;
                  return statearr_9607;
                }();
                var statearr_9608_9618 = state_9605__$1;
                statearr_9608_9618[2] = null;
                statearr_9608_9618[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_9606 === 3) {
                  var inst_9603 = state_9605[2];
                  var state_9605__$1 = state_9605;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_9605__$1, inst_9603);
                } else {
                  if (state_val_9606 === 2) {
                    var state_9605__$1 = state_9605;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_9605__$1, 5, c1);
                  } else {
                    if (state_val_9606 === 1) {
                      var state_9605__$1 = state_9605;
                      var statearr_9609_9619 = state_9605__$1;
                      statearr_9609_9619[2] = null;
                      statearr_9609_9619[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      return null;
                    }
                  }
                }
              }
            }
          };
        }(c__6248__auto___9617, c1, c2);
        return function(switch__6233__auto__, c__6248__auto___9617, c1, c2) {
          return function() {
            var state_machine__6234__auto__ = null;
            var state_machine__6234__auto____0 = function() {
              var statearr_9613 = [null, null, null, null, null, null, null, null];
              statearr_9613[0] = state_machine__6234__auto__;
              statearr_9613[1] = 1;
              return statearr_9613;
            };
            var state_machine__6234__auto____1 = function(state_9605) {
              while (true) {
                var ret_value__6235__auto__ = function() {
                  try {
                    while (true) {
                      var result__6236__auto__ = switch__6233__auto__.call(null, state_9605);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6236__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6236__auto__;
                      }
                      break;
                    }
                  } catch (e9614) {
                    if (e9614 instanceof Object) {
                      var ex__6237__auto__ = e9614;
                      var statearr_9615_9620 = state_9605;
                      statearr_9615_9620[5] = ex__6237__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_9605);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e9614;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6235__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__9621 = state_9605;
                  state_9605 = G__9621;
                  continue;
                } else {
                  return ret_value__6235__auto__;
                }
                break;
              }
            };
            state_machine__6234__auto__ = function(state_9605) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6234__auto____0.call(this);
                case 1:
                  return state_machine__6234__auto____1.call(this, state_9605);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6234__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6234__auto____0;
            state_machine__6234__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6234__auto____1;
            return state_machine__6234__auto__;
          }();
        }(switch__6233__auto__, c__6248__auto___9617, c1, c2);
      }();
      var state__6250__auto__ = function() {
        var statearr_9616 = f__6249__auto__.call(null);
        statearr_9616[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6248__auto___9617;
        return statearr_9616;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6250__auto__);
    };
  }(c__6248__auto___9617, c1, c2));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new yantra.datatypes.Slider(1, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 10, 1], null), c1), new yantra.datatypes.ChannelDisplay(c2, new cljs.core.Keyword(null, "default", "default", 2558708147))], null);
}(), new yantra.datatypes.Graphics(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new yantra.datatypes.Line(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, 0], null)], null))], null)), new yantra.datatypes.ListLinePlot(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [10, 4], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [11, 6], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[20, 40], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [30, 5], null)], null), null)]);
yantra.test.renderers = cljs.core.merge.call(null, yantra.graphics.graphics_renderers, yantra.controls.control_renderers, yantra.layout.layout_renderers, yantra.edn.edn_renderers, yantra.plot.plot_renderers);
yantra.test.builder = function builder(x, y) {
  console.log(om.core.value.call(null, x));
  console.log(cljs.core.type.call(null, om.core.value.call(null, x)));
  console.log(yantra.test.renderers.call(null, cljs.core.type.call(null, om.core.value.call(null, x))));
  return om.core.build.call(null, yantra.test.renderers.call(null, cljs.core.type.call(null, om.core.value.call(null, x))), x, y);
};
yantra.test.t = document.getElementById("root");
yantra.test.start = function start() {
  return om.core.root.call(null, function(app, owner) {
    if (typeof yantra.test.t9625 !== "undefined") {
    } else {
      yantra.test.t9625 = function(owner, app, start, meta9626) {
        this.owner = owner;
        this.app = app;
        this.start = start;
        this.meta9626 = meta9626;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      yantra.test.t9625.cljs$lang$type = true;
      yantra.test.t9625.cljs$lang$ctorStr = "yantra.test/t9625";
      yantra.test.t9625.cljs$lang$ctorPrWriter = function(this__4045__auto__, writer__4046__auto__, opt__4047__auto__) {
        return cljs.core._write.call(null, writer__4046__auto__, "yantra.test/t9625");
      };
      yantra.test.t9625.prototype.om$core$IRender$ = true;
      yantra.test.t9625.prototype.om$core$IRender$render$arity$1 = function(_) {
        var self__ = this;
        var ___$1 = this;
        return yantra.test.builder.call(null, self__.app, null);
      };
      yantra.test.t9625.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9627) {
        var self__ = this;
        var _9627__$1 = this;
        return self__.meta9626;
      };
      yantra.test.t9625.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9627, meta9626__$1) {
        var self__ = this;
        var _9627__$1 = this;
        return new yantra.test.t9625(self__.owner, self__.app, self__.start, meta9626__$1);
      };
      yantra.test.__GT_t9625 = function __GT_t9625(owner__$1, app__$1, start__$1, meta9626) {
        return new yantra.test.t9625(owner__$1, app__$1, start__$1, meta9626);
      };
    }
    return new yantra.test.t9625(owner, app, start, null);
  }, cljs.core.atom.call(null, (new cljs.core.Keyword(null, "channel-2", "channel-2", 2475639130)).cljs$core$IFn$_invoke$arity$1(yantra.test.tests)), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "shared", "shared", 4405305303), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "builder", "builder", 1244848909), yantra.test.builder], null), new cljs.core.Keyword(null, "target", "target", 4427965699), document.getElementById("root")], null));
};
goog.exportSymbol("yantra.test.start", yantra.test.start);
goog.provide("yantra.datamappings");
goog.require("cljs.core");
goog.require("yantra.datatypes");
goog.require("yantra.datatypes");
yantra.datamappings.data_mappings = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "record", "record", 4373962691), yantra.datatypes.Slider, new cljs.core.Keyword(null, "tag", "tag", 1014018828), "yantra.controls/Slider"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "record", "record", 4373962691), yantra.datatypes.Column, new cljs.core.Keyword(null, "tag", 
"tag", 1014018828), "yantra.layout/Column"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "record", "record", 4373962691), yantra.datatypes.Graphics, new cljs.core.Keyword(null, "tag", "tag", 1014018828), "yantra.graphics/Graphics"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "record", "record", 4373962691), yantra.datatypes.Point, new cljs.core.Keyword(null, "tag", "tag", 1014018828), "yantra.graphics/Point"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "record", "record", 4373962691), yantra.datatypes.Line, new cljs.core.Keyword(null, "tag", "tag", 1014018828), "yantra.graphics/Line"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "record", "record", 4373962691), yantra.datatypes.Disk, new cljs.core.Keyword(null, "tag", "tag", 1014018828), "yantra.graphics/Disk"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "record", "record", 4373962691), yantra.datatypes.Rectangle, 
new cljs.core.Keyword(null, "tag", "tag", 1014018828), "yantra.graphics/Rectangle"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "record", "record", 4373962691), yantra.datatypes.Style, new cljs.core.Keyword(null, "tag", "tag", 1014018828), "yantra.graphics/Style"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "record", "record", 4373962691), yantra.datatypes.ListLinePlot, new cljs.core.Keyword(null, "tag", "tag", 1014018828), "yantra.plot/ListLinePlot"], 
null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "record", "record", 4373962691), yantra.datatypes.BarChart, new cljs.core.Keyword(null, "tag", "tag", 1014018828), "yantra.plot/BarChart"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "record", "record", 4373962691), yantra.datatypes.HTMLElement, new cljs.core.Keyword(null, "tag", "tag", 1014018828), "yantra.dom/HTMLElement"], null)], null);
goog.provide("yantra.dom");
goog.require("cljs.core");
goog.require("om.dom");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("yantra.datatypes");
goog.require("yantra.datatypes");
yantra.dom.get_element = function get_element(e) {
  return React.DOM[cljs.core.name.call(null, e)];
};
yantra.dom.dom_renderers = new cljs.core.PersistentArrayMap.fromArray([yantra.datatypes.HTMLElement, function(cursor, owner, opts) {
  var v = om.core.value.call(null, cursor);
  var tag = (new cljs.core.Keyword(null, "tag", "tag", 1014018828)).cljs$core$IFn$_invoke$arity$1(v);
  var attributes = (new cljs.core.Keyword(null, "attributes", "attributes", 1419549897)).cljs$core$IFn$_invoke$arity$1(v);
  var builder = om.core.get_shared.call(null, owner, new cljs.core.Keyword(null, "builder", "builder", 1244848909));
  return cljs.core.apply.call(null, yantra.dom.get_element.call(null, tag), cljs.core.clj__GT_js.call(null, attributes), cljs.core.into_array.call(null, cljs.core.map.call(null, builder, (new cljs.core.Keyword(null, "children", "children", 2673430897)).cljs$core$IFn$_invoke$arity$1(cursor))));
}], true, false);
