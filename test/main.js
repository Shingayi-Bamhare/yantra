var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.TRUSTED_SITE = true;
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name);
  };
  goog.implicitNamespaces_ = {};
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
if (!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && (typeof value.splice != "undefined" && (typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")))) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && (typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call"))) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isDef = function(val) {
  return val !== undefined;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for (var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value);
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.subs = function(str, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement);
  }
  return str;
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && (ch >= " " && ch <= "~") || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "\x26amp;").replace(goog.string.ltRe_, "\x26lt;").replace(goog.string.gtRe_, "\x26gt;").replace(goog.string.quotRe_, "\x26quot;");
  } else {
    if (!goog.string.allRe_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.amperRe_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.ltRe_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.gtRe_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "\x26quot;");
    }
    return str;
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1;
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && (index < s.length && stringLength > 0)) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || (goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]));
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    this.stack = (new Error).stack || "";
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return(value);
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if (arr.reduce) {
    if (opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val);
    } else {
      return arr.reduce(f, val);
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if (arr.reduceRight) {
    if (opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val);
    } else {
      return arr.reduceRight(f, val);
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || (!goog.isArrayLike(arr2) || arr1.length != arr2.length)) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn);
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2138";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 4441712502), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1017252215), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 1014004081), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  3960797560), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__9216__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args));
    };
    var G__9216 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__9216__delegate.call(this, args);
    };
    G__9216.cljs$lang$maxFixedArity = 0;
    G__9216.cljs$lang$applyTo = function(arglist__9217) {
      var args = cljs.core.seq(arglist__9217);
      return G__9216__delegate(args);
    };
    G__9216.cljs$core$IFn$_invoke$arity$variadic = G__9216__delegate;
    return G__9216;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return false;
      } else {
        return null;
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3396__auto__ = ty;
    if (cljs.core.truth_(and__3396__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3396__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4090__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4090__auto__)) {
    var s = temp__4090__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4250__auto___9218 = len;
  var i_9219 = 0;
  while (true) {
    if (i_9219 < n__4250__auto___9218) {
      new_arr[i_9219] = arr[i_9219];
      var G__9220 = i_9219 + 1;
      i_9219 = G__9220;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments);
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__9221__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs);
    };
    var G__9221 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9221__delegate.call(this, array, i, idxs);
    };
    G__9221.cljs$lang$maxFixedArity = 2;
    G__9221.cljs$lang$applyTo = function(arglist__9222) {
      var array = cljs.core.first(arglist__9222);
      arglist__9222 = cljs.core.next(arglist__9222);
      var i = cljs.core.first(arglist__9222);
      var idxs = cljs.core.rest(arglist__9222);
      return G__9221__delegate(array, i, idxs);
    };
    G__9221.cljs$core$IFn$_invoke$arity$variadic = G__9221__delegate;
    return G__9221;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__9223__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv);
    };
    var G__9223 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__9223__delegate.call(this, array, idx, idx2, idxv);
    };
    G__9223.cljs$lang$maxFixedArity = 3;
    G__9223.cljs$lang$applyTo = function(arglist__9224) {
      var array = cljs.core.first(arglist__9224);
      arglist__9224 = cljs.core.next(arglist__9224);
      var idx = cljs.core.first(arglist__9224);
      arglist__9224 = cljs.core.next(arglist__9224);
      var idx2 = cljs.core.first(arglist__9224);
      var idxv = cljs.core.rest(arglist__9224);
      return G__9223__delegate(array, idx, idx2, idxv);
    };
    G__9223.cljs$core$IFn$_invoke$arity$variadic = G__9223__delegate;
    return G__9223;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a;
    }, [], aseq);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.Fn = function() {
  var obj9226 = {};
  return obj9226;
}();
cljs.core.IFn = function() {
  var obj9228 = {};
  return obj9228;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if (function() {
      var and__3396__auto__ = this$;
      if (and__3396__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    } else {
      var x__4029__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3408__auto__ = cljs.core._invoke[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._invoke["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj9230 = {};
  return obj9230;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3396__auto__ = value;
    if (and__3396__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4029__auto__ = value == null ? null : value;
    return function() {
      var or__3408__auto__ = cljs.core._clone[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._clone["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj9232 = {};
  return obj9232;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._count[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._count["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj9234 = {};
  return obj9234;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._empty[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._empty["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj9236 = {};
  return obj9236;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._conj[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._conj["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj9238 = {};
  return obj9238;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3396__auto__ = coll;
      if (and__3396__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4029__auto__ = coll == null ? null : coll;
      return function() {
        var or__3408__auto__ = cljs.core._nth[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._nth["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3396__auto__ = coll;
      if (and__3396__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4029__auto__ = coll == null ? null : coll;
      return function() {
        var or__3408__auto__ = cljs.core._nth[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._nth["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj9240 = {};
  return obj9240;
}();
cljs.core.ISeq = function() {
  var obj9242 = {};
  return obj9242;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._first[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._first["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._rest[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._rest["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj9244 = {};
  return obj9244;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._next[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._next["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj9246 = {};
  return obj9246;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3396__auto__ = o;
      if (and__3396__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4029__auto__ = o == null ? null : o;
      return function() {
        var or__3408__auto__ = cljs.core._lookup[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._lookup["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3396__auto__ = o;
      if (and__3396__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4029__auto__ = o == null ? null : o;
      return function() {
        var or__3408__auto__ = cljs.core._lookup[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._lookup["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj9248 = {};
  return obj9248;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._assoc[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._assoc["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj9250 = {};
  return obj9250;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._dissoc[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._dissoc["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj9252 = {};
  return obj9252;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._key[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._key["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._val[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._val["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj9254 = {};
  return obj9254;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._disjoin[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._disjoin["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj9256 = {};
  return obj9256;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._peek[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._peek["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._pop[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._pop["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj9258 = {};
  return obj9258;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._assoc_n[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj9260 = {};
  return obj9260;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3396__auto__ = o;
    if (and__3396__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4029__auto__ = o == null ? null : o;
    return function() {
      var or__3408__auto__ = cljs.core._deref[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._deref["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj9262 = {};
  return obj9262;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3396__auto__ = o;
    if (and__3396__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4029__auto__ = o == null ? null : o;
    return function() {
      var or__3408__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj9264 = {};
  return obj9264;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3396__auto__ = o;
    if (and__3396__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4029__auto__ = o == null ? null : o;
    return function() {
      var or__3408__auto__ = cljs.core._meta[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._meta["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj9266 = {};
  return obj9266;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3396__auto__ = o;
    if (and__3396__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4029__auto__ = o == null ? null : o;
    return function() {
      var or__3408__auto__ = cljs.core._with_meta[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._with_meta["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj9268 = {};
  return obj9268;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3396__auto__ = coll;
      if (and__3396__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4029__auto__ = coll == null ? null : coll;
      return function() {
        var or__3408__auto__ = cljs.core._reduce[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._reduce["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3396__auto__ = coll;
      if (and__3396__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4029__auto__ = coll == null ? null : coll;
      return function() {
        var or__3408__auto__ = cljs.core._reduce[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core._reduce["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj9270 = {};
  return obj9270;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj9272 = {};
  return obj9272;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3396__auto__ = o;
    if (and__3396__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4029__auto__ = o == null ? null : o;
    return function() {
      var or__3408__auto__ = cljs.core._equiv[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._equiv["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj9274 = {};
  return obj9274;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3396__auto__ = o;
    if (and__3396__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4029__auto__ = o == null ? null : o;
    return function() {
      var or__3408__auto__ = cljs.core._hash[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._hash["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj9276 = {};
  return obj9276;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3396__auto__ = o;
    if (and__3396__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4029__auto__ = o == null ? null : o;
    return function() {
      var or__3408__auto__ = cljs.core._seq[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._seq["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj9278 = {};
  return obj9278;
}();
cljs.core.IList = function() {
  var obj9280 = {};
  return obj9280;
}();
cljs.core.IRecord = function() {
  var obj9282 = {};
  return obj9282;
}();
cljs.core.IReversible = function() {
  var obj9284 = {};
  return obj9284;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._rseq[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._rseq["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj9286 = {};
  return obj9286;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._entry_key[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._entry_key["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._comparator[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._comparator["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj9288 = {};
  return obj9288;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3396__auto__ = writer;
    if (and__3396__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4029__auto__ = writer == null ? null : writer;
    return function() {
      var or__3408__auto__ = cljs.core._write[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._write["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3396__auto__ = writer;
    if (and__3396__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4029__auto__ = writer == null ? null : writer;
    return function() {
      var or__3408__auto__ = cljs.core._flush[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._flush["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj9290 = {};
  return obj9290;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3396__auto__ = o;
    if (and__3396__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4029__auto__ = o == null ? null : o;
    return function() {
      var or__3408__auto__ = cljs.core._pr_writer[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj9292 = {};
  return obj9292;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3396__auto__ = d;
    if (and__3396__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4029__auto__ = d == null ? null : d;
    return function() {
      var or__3408__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj9294 = {};
  return obj9294;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = cljs.core._notify_watches[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = cljs.core._add_watch[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._add_watch["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = cljs.core._remove_watch[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj9296 = {};
  return obj9296;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._as_transient[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._as_transient["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj9298 = {};
  return obj9298;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3396__auto__ = tcoll;
    if (and__3396__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4029__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3408__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3396__auto__ = tcoll;
    if (and__3396__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4029__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3408__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj9300 = {};
  return obj9300;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3396__auto__ = tcoll;
    if (and__3396__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4029__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3408__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj9302 = {};
  return obj9302;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3396__auto__ = tcoll;
    if (and__3396__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4029__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3408__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj9304 = {};
  return obj9304;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3396__auto__ = tcoll;
    if (and__3396__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4029__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3408__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3396__auto__ = tcoll;
    if (and__3396__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4029__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3408__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj9306 = {};
  return obj9306;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3396__auto__ = tcoll;
    if (and__3396__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4029__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3408__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj9308 = {};
  return obj9308;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3396__auto__ = x;
    if (and__3396__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4029__auto__ = x == null ? null : x;
    return function() {
      var or__3408__auto__ = cljs.core._compare[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._compare["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj9310 = {};
  return obj9310;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._drop_first[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._drop_first["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj9312 = {};
  return obj9312;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._chunked_first[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj9314 = {};
  return obj9314;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3396__auto__ = coll;
    if (and__3396__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4029__auto__ = coll == null ? null : coll;
    return function() {
      var or__3408__auto__ = cljs.core._chunked_next[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj9316 = {};
  return obj9316;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3396__auto__ = x;
    if (and__3396__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4029__auto__ = x == null ? null : x;
    return function() {
      var or__3408__auto__ = cljs.core._name[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._name["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3396__auto__ = x;
    if (and__3396__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4029__auto__ = x == null ? null : x;
    return function() {
      var or__3408__auto__ = cljs.core._namespace[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._namespace["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return[cljs.core.str(sb)].join("");
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.hash.call(null, sym.ns), cljs.core.hash.call(null, sym.name));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (cljs.core.truth_(cljs.core._EQ_.call(null, a, b))) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3396__auto__ = cljs.core.not.call(null, a.ns);
      if (and__3396__auto__) {
        return b.ns;
      } else {
        return and__3396__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = cljs.core.compare.call(null, a.ns, b.ns);
          if (nsc === 0) {
            return cljs.core.compare.call(null, a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
          return cljs.core.compare.call(null, a.name, b.name);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/Symbol");
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__3819__auto__ = self__._hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__9318 = null;
  var G__9318__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null);
  };
  var G__9318__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found);
  };
  G__9318 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9318__2.call(this, self__, coll);
      case 3:
        return G__9318__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9318;
}();
cljs.core.Symbol.prototype.apply = function(self__, args9317) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args9317)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.cljs$core$ICloneable$ = true;
cljs.core.Symbol.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, self__._meta);
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.call(null, null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.clone = function clone(value) {
  return cljs.core._clone.call(null, value);
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__9320 = coll;
      if (G__9320) {
        var bit__4045__auto__ = G__9320.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4045__auto__ || G__9320.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._seq.call(null, coll);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw new Error([cljs.core.str(coll), cljs.core.str("is not ISeqable")].join(""));
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__9322 = coll;
      if (G__9322) {
        var bit__4045__auto__ = G__9322.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4045__auto__ || G__9322.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._first.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first.call(null, s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__9324 = coll;
      if (G__9324) {
        var bit__4045__auto__ = G__9324.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4045__auto__ || G__9324.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._rest.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s) {
        return cljs.core._rest.call(null, s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__9326 = coll;
      if (G__9326) {
        var bit__4045__auto__ = G__9326.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4045__auto__ || G__9326.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._next.call(null, coll);
    } else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv.call(null, x, y);
    }
  };
  var _EQ___3 = function() {
    var G__9327__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__9328 = y;
            var G__9329 = cljs.core.first.call(null, more);
            var G__9330 = cljs.core.next.call(null, more);
            x = G__9328;
            y = G__9329;
            more = G__9330;
            continue;
          } else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__9327 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9327__delegate.call(this, x, y, more);
    };
    G__9327.cljs$lang$maxFixedArity = 2;
    G__9327.cljs$lang$applyTo = function(arglist__9331) {
      var x = cljs.core.first(arglist__9331);
      arglist__9331 = cljs.core.next(arglist__9331);
      var y = cljs.core.first(arglist__9331);
      var more = cljs.core.rest(arglist__9331);
      return G__9327__delegate(x, y, more);
    };
    G__9327.cljs$core$IFn$_invoke$arity$variadic = G__9327__delegate;
    return G__9327;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/Reduced");
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if (cnt === 0) {
      return f.call(null);
    } else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__9332 = nval;
            var G__9333 = n + 1;
            val = G__9332;
            n = G__9333;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__9334 = nval;
          var G__9335 = n + 1;
          val__$1 = G__9334;
          n = G__9335;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__9336 = nval;
          var G__9337 = n + 1;
          val__$1 = G__9336;
          n = G__9337;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__9338 = nval;
            var G__9339 = n + 1;
            val = G__9338;
            n = G__9339;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__9340 = nval;
          var G__9341 = n + 1;
          val__$1 = G__9340;
          n = G__9341;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__9342 = nval;
          var G__9343 = n + 1;
          val__$1 = G__9342;
          n = G__9343;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__9345 = x;
  if (G__9345) {
    var bit__4052__auto__ = G__9345.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4052__auto__ || G__9345.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__9345.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__9345);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__9345);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__9347 = x;
  if (G__9347) {
    var bit__4052__auto__ = G__9347.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4052__auto__ || G__9347.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__9347.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__9347);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__9347);
  }
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/IndexedSeq");
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/RSeq");
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$ = true;
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next.call(null, s);
    if (!(sn == null)) {
      var G__9348 = sn;
      s = G__9348;
      continue;
    } else {
      return cljs.core.first.call(null, s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj.call(null, coll, x);
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__9349__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__9350 = conj.call(null, coll, x);
          var G__9351 = cljs.core.first.call(null, xs);
          var G__9352 = cljs.core.next.call(null, xs);
          coll = G__9350;
          x = G__9351;
          xs = G__9352;
          continue;
        } else {
          return conj.call(null, coll, x);
        }
        break;
      }
    };
    var G__9349 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9349__delegate.call(this, coll, x, xs);
    };
    G__9349.cljs$lang$maxFixedArity = 2;
    G__9349.cljs$lang$applyTo = function(arglist__9353) {
      var coll = cljs.core.first(arglist__9353);
      arglist__9353 = cljs.core.next(arglist__9353);
      var x = cljs.core.first(arglist__9353);
      var xs = cljs.core.rest(arglist__9353);
      return G__9349__delegate(coll, x, xs);
    };
    G__9349.cljs$core$IFn$_invoke$arity$variadic = G__9349__delegate;
    return G__9349;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty.call(null, coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s);
    } else {
      var G__9354 = cljs.core.next.call(null, s);
      var G__9355 = acc + 1;
      s = G__9354;
      acc = G__9355;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__9357 = coll;
      if (G__9357) {
        var bit__4045__auto__ = G__9357.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4045__auto__ || G__9357.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._count.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.accumulating_seq_count.call(null, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__9358 = cljs.core.next.call(null, coll);
              var G__9359 = n - 1;
              coll = G__9358;
              n = G__9359;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw new Error("Index out of bounds");
              } else {
                return null;
              }
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__9360 = cljs.core.next.call(null, coll);
              var G__9361 = n - 1;
              var G__9362 = not_found;
              coll = G__9360;
              n = G__9361;
              not_found = G__9362;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found;
              } else {
                return null;
              }
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (coll == null) {
      return null;
    } else {
      if (function() {
        var G__9367 = coll;
        if (G__9367) {
          var bit__4045__auto__ = G__9367.cljs$lang$protocol_mask$partition0$ & 16;
          if (bit__4045__auto__ || G__9367.cljs$core$IIndexed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._nth.call(null, coll, n);
      } else {
        if (coll instanceof Array) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if (function() {
                  var G__9368 = coll;
                  if (G__9368) {
                    var bit__4052__auto__ = G__9368.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4052__auto__ || G__9368.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__9368.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__9368);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__9368);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(coll == null)) {
      if (function() {
        var G__9369 = coll;
        if (G__9369) {
          var bit__4045__auto__ = G__9369.cljs$lang$protocol_mask$partition0$ & 16;
          if (bit__4045__auto__ || G__9369.cljs$core$IIndexed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._nth.call(null, coll, n, not_found);
      } else {
        if (coll instanceof Array) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if (function() {
                  var G__9370 = coll;
                  if (G__9370) {
                    var bit__4052__auto__ = G__9370.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4052__auto__ || G__9370.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__9370.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__9370);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__9370);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              } else {
                return null;
              }
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__9373 = o;
        if (G__9373) {
          var bit__4045__auto__ = G__9373.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4045__auto__ || G__9373.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return null;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__9374 = o;
        if (G__9374) {
          var bit__4045__auto__ = G__9374.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4045__auto__ || G__9374.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found;
              } else {
                return null;
              }
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays.call(null, [k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__9375__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.call(null, coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__9376 = ret;
          var G__9377 = cljs.core.first.call(null, kvs);
          var G__9378 = cljs.core.second.call(null, kvs);
          var G__9379 = cljs.core.nnext.call(null, kvs);
          coll = G__9376;
          k = G__9377;
          v = G__9378;
          kvs = G__9379;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__9375 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__9375__delegate.call(this, coll, k, v, kvs);
    };
    G__9375.cljs$lang$maxFixedArity = 3;
    G__9375.cljs$lang$applyTo = function(arglist__9380) {
      var coll = cljs.core.first(arglist__9380);
      arglist__9380 = cljs.core.next(arglist__9380);
      var k = cljs.core.first(arglist__9380);
      arglist__9380 = cljs.core.next(arglist__9380);
      var v = cljs.core.first(arglist__9380);
      var kvs = cljs.core.rest(arglist__9380);
      return G__9375__delegate(coll, k, v, kvs);
    };
    G__9375.cljs$core$IFn$_invoke$arity$variadic = G__9375__delegate;
    return G__9375;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc.call(null, coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__9381__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__9382 = ret;
            var G__9383 = cljs.core.first.call(null, ks);
            var G__9384 = cljs.core.next.call(null, ks);
            coll = G__9382;
            k = G__9383;
            ks = G__9384;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__9381 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9381__delegate.call(this, coll, k, ks);
    };
    G__9381.cljs$lang$maxFixedArity = 2;
    G__9381.cljs$lang$applyTo = function(arglist__9385) {
      var coll = cljs.core.first(arglist__9385);
      arglist__9385 = cljs.core.next(arglist__9385);
      var k = cljs.core.first(arglist__9385);
      var ks = cljs.core.rest(arglist__9385);
      return G__9381__delegate(coll, k, ks);
    };
    G__9381.cljs$core$IFn$_invoke$arity$variadic = G__9381__delegate;
    return G__9381;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3408__auto__ = goog.isFunction(f);
  if (or__3408__auto__) {
    return or__3408__auto__;
  } else {
    var G__9389 = f;
    if (G__9389) {
      var bit__4052__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3408__auto____$1 = bit__4052__auto__;
        if (cljs.core.truth_(or__3408__auto____$1)) {
          return or__3408__auto____$1;
        } else {
          return G__9389.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__9389.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__9389);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__9389);
    }
  }
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__9397 = o;
    if (G__9397) {
      var bit__4052__auto__ = G__9397.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4052__auto__ || G__9397.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__9397.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__9397);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__9397);
    }
  }()) {
    return with_meta.call(null, function() {
      if (typeof cljs.core.t9398 !== "undefined") {
      } else {
        cljs.core.t9398 = function(meta, o, with_meta, meta9399) {
          this.meta = meta;
          this.o = o;
          this.with_meta = with_meta;
          this.meta9399 = meta9399;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217;
        };
        cljs.core.t9398.cljs$lang$type = true;
        cljs.core.t9398.cljs$lang$ctorStr = "cljs.core/t9398";
        cljs.core.t9398.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
          return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/t9398");
        };
        cljs.core.t9398.prototype.call = function() {
          var G__9402__delegate = function(self__, args) {
            var self____$1 = this;
            var _ = self____$1;
            return cljs.core.apply.call(null, self__.o, args);
          };
          var G__9402 = function(self__, var_args) {
            var self__ = this;
            var args = null;
            if (arguments.length > 1) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
            }
            return G__9402__delegate.call(this, self__, args);
          };
          G__9402.cljs$lang$maxFixedArity = 1;
          G__9402.cljs$lang$applyTo = function(arglist__9403) {
            var self__ = cljs.core.first(arglist__9403);
            var args = cljs.core.rest(arglist__9403);
            return G__9402__delegate(self__, args);
          };
          G__9402.cljs$core$IFn$_invoke$arity$variadic = G__9402__delegate;
          return G__9402;
        }();
        cljs.core.t9398.prototype.apply = function(self__, args9401) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args9401)));
        };
        cljs.core.t9398.prototype.cljs$core$IFn$_invoke$arity$2 = function() {
          var G__9404__delegate = function(args) {
            var _ = this;
            return cljs.core.apply.call(null, self__.o, args);
          };
          var G__9404 = function(var_args) {
            var self__ = this;
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__9404__delegate.call(this, args);
          };
          G__9404.cljs$lang$maxFixedArity = 0;
          G__9404.cljs$lang$applyTo = function(arglist__9405) {
            var args = cljs.core.seq(arglist__9405);
            return G__9404__delegate(args);
          };
          G__9404.cljs$core$IFn$_invoke$arity$variadic = G__9404__delegate;
          return G__9404;
        }();
        cljs.core.t9398.prototype.cljs$core$Fn$ = true;
        cljs.core.t9398.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9400) {
          var self__ = this;
          var _9400__$1 = this;
          return self__.meta9399;
        };
        cljs.core.t9398.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9400, meta9399__$1) {
          var self__ = this;
          var _9400__$1 = this;
          return new cljs.core.t9398(self__.meta, self__.o, self__.with_meta, meta9399__$1);
        };
        cljs.core.__GT_t9398 = function __GT_t9398(meta__$1, o__$1, with_meta__$1, meta9399) {
          return new cljs.core.t9398(meta__$1, o__$1, with_meta__$1, meta9399);
        };
      }
      return new cljs.core.t9398(meta, o, with_meta, null);
    }(), meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta.call(null, o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3396__auto__ = !(o == null);
    if (and__3396__auto__) {
      var G__9409 = o;
      if (G__9409) {
        var bit__4052__auto__ = G__9409.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4052__auto__ || G__9409.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__9409.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__9409);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__9409);
      }
    } else {
      return and__3396__auto__;
    }
  }()) {
    return cljs.core._meta.call(null, o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek.call(null, coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop.call(null, coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin.call(null, coll, k);
    }
  };
  var disj__3 = function() {
    var G__9410__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__9411 = ret;
            var G__9412 = cljs.core.first.call(null, ks);
            var G__9413 = cljs.core.next.call(null, ks);
            coll = G__9411;
            k = G__9412;
            ks = G__9413;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__9410 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9410__delegate.call(this, coll, k, ks);
    };
    G__9410.cljs$lang$maxFixedArity = 2;
    G__9410.cljs$lang$applyTo = function(arglist__9414) {
      var coll = cljs.core.first(arglist__9414);
      arglist__9414 = cljs.core.next(arglist__9414);
      var k = cljs.core.first(arglist__9414);
      var ks = cljs.core.rest(arglist__9414);
      return G__9410__delegate(coll, k, ks);
    };
    G__9410.cljs$core$IFn$_invoke$arity$variadic = G__9410__delegate;
    return G__9410;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.string_hash_cache = function() {
  var obj9416 = {};
  return obj9416;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj9420 = {};
      return obj9420;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache.call(null, k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__9422 = o;
    if (G__9422) {
      var bit__4045__auto__ = G__9422.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4045__auto__ || G__9422.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._hash.call(null, o);
  } else {
    if (typeof o === "number") {
      return Math.floor(o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.check_string_hash_cache.call(null, o);
          } else {
            if (o == null) {
              return 0;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return cljs.core._hash.call(null, o);
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__9424 = x;
    if (G__9424) {
      var bit__4052__auto__ = G__9424.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4052__auto__ || G__9424.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__9424.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__9424);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__9424);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__9426 = x;
    if (G__9426) {
      var bit__4052__auto__ = G__9426.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4052__auto__ || G__9426.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__9426.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__9426);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__9426);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__9428 = x;
  if (G__9428) {
    var bit__4052__auto__ = G__9428.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4052__auto__ || G__9428.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__9428.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__9428);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__9428);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__9430 = x;
  if (G__9430) {
    var bit__4052__auto__ = G__9430.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4052__auto__ || G__9430.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__9430.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__9430);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__9430);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__9432 = x;
  if (G__9432) {
    var bit__4052__auto__ = G__9432.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4052__auto__ || G__9432.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__9432.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__9432);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__9432);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__9434 = x;
  if (G__9434) {
    var bit__4052__auto__ = G__9434.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4052__auto__ || G__9434.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__9434.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__9434);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__9434);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__9436 = x;
    if (G__9436) {
      var bit__4052__auto__ = G__9436.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4052__auto__ || G__9436.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__9436.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__9436);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__9436);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__9438 = x;
  if (G__9438) {
    var bit__4052__auto__ = G__9438.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4052__auto__ || G__9438.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__9438.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__9438);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__9438);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__9440 = x;
  if (G__9440) {
    var bit__4045__auto__ = G__9440.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4045__auto__ || G__9440.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj9444 = {};
    return obj9444;
  };
  var js_obj__1 = function() {
    var G__9445__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals);
    };
    var G__9445 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__9445__delegate.call(this, keyvals);
    };
    G__9445.cljs$lang$maxFixedArity = 0;
    G__9445.cljs$lang$applyTo = function(arglist__9446) {
      var keyvals = cljs.core.seq(arglist__9446);
      return G__9445__delegate(keyvals);
    };
    G__9445.cljs$core$IFn$_invoke$arity$variadic = G__9445__delegate;
    return G__9445;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(val, key, obj__$1) {
    return keys.push(key);
  });
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__9447 = i__$1 + 1;
      var G__9448 = j__$1 + 1;
      var G__9449 = len__$1 - 1;
      i__$1 = G__9447;
      j__$1 = G__9448;
      len__$1 = G__9449;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__9450 = i__$1 - 1;
      var G__9451 = j__$1 - 1;
      var G__9452 = len__$1 - 1;
      i__$1 = G__9450;
      j__$1 = G__9451;
      len__$1 = G__9452;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj9454 = {};
  return obj9454;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__9456 = s;
    if (G__9456) {
      var bit__4052__auto__ = G__9456.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4052__auto__ || G__9456.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__9456.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__9456);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__9456);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__9458 = s;
  if (G__9458) {
    var bit__4052__auto__ = G__9458.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4052__auto__ || G__9458.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__9458.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__9458);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__9458);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3408__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if (or__3408__auto__) {
    return or__3408__auto__;
  } else {
    var G__9462 = f;
    if (G__9462) {
      var bit__4052__auto__ = G__9462.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4052__auto__ || G__9462.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__9462.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__9462);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__9462);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && (!isNaN(n) && (!(n === Infinity) && parseFloat(n) === parseInt(n, 10)));
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && (cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.call(null, coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__9463__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([y, x], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false;
            } else {
              var G__9464 = cljs.core.conj.call(null, s, x__$1);
              var G__9465 = etc;
              s = G__9464;
              xs = G__9465;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__9463 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9463__delegate.call(this, x, y, more);
    };
    G__9463.cljs$lang$maxFixedArity = 2;
    G__9463.cljs$lang$applyTo = function(arglist__9466) {
      var x = cljs.core.first(arglist__9466);
      arglist__9466 = cljs.core.next(arglist__9466);
      var y = cljs.core.first(arglist__9466);
      var more = cljs.core.rest(arglist__9466);
      return G__9463__delegate(x, y, more);
    };
    G__9463.cljs$core$IFn$_invoke$arity$variadic = G__9463__delegate;
    return G__9463;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.sequence = function sequence(coll) {
  if (cljs.core.seq_QMARK_.call(null, coll)) {
    return coll;
  } else {
    var or__3408__auto__ = cljs.core.seq.call(null, coll);
    if (or__3408__auto__) {
      return or__3408__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if (function() {
            var G__9468 = x;
            if (G__9468) {
              var bit__4045__auto__ = G__9468.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4045__auto__ || G__9468.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._compare.call(null, x, y);
          } else {
            return goog.array.defaultCompare(x, y);
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error("compare on non-nil objects of different types");
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return compare_indexed.call(null, xs, ys, xl, 0);
        } else {
          return null;
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if (d === 0 && n + 1 < len) {
        var G__9469 = xs;
        var G__9470 = ys;
        var G__9471 = len;
        var G__9472 = n + 1;
        xs = G__9469;
        ys = G__9470;
        len = G__9471;
        n = G__9472;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y));
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4090__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4090__auto__) {
      var s = temp__4090__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s));
    } else {
      return f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__9473 = nval;
          var G__9474 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__9473;
          coll__$1 = G__9474;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__9477 = coll;
      if (G__9477) {
        var bit__4045__auto__ = G__9477.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4045__auto__ || G__9477.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__9478 = coll;
      if (G__9478) {
        var bit__4045__auto__ = G__9478.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4045__auto__ || G__9478.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, val, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce.call(null, coll, f, init);
  } else {
    return init;
  }
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__9479__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more);
    };
    var G__9479 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9479__delegate.call(this, x, y, more);
    };
    G__9479.cljs$lang$maxFixedArity = 2;
    G__9479.cljs$lang$applyTo = function(arglist__9480) {
      var x = cljs.core.first(arglist__9480);
      arglist__9480 = cljs.core.next(arglist__9480);
      var y = cljs.core.first(arglist__9480);
      var more = cljs.core.rest(arglist__9480);
      return G__9479__delegate(x, y, more);
    };
    G__9479.cljs$core$IFn$_invoke$arity$variadic = G__9479__delegate;
    return G__9479;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__9481__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more);
    };
    var G__9481 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9481__delegate.call(this, x, y, more);
    };
    G__9481.cljs$lang$maxFixedArity = 2;
    G__9481.cljs$lang$applyTo = function(arglist__9482) {
      var x = cljs.core.first(arglist__9482);
      arglist__9482 = cljs.core.next(arglist__9482);
      var y = cljs.core.first(arglist__9482);
      var more = cljs.core.rest(arglist__9482);
      return G__9481__delegate(x, y, more);
    };
    G__9481.cljs$core$IFn$_invoke$arity$variadic = G__9481__delegate;
    return G__9481;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__9483__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more);
    };
    var G__9483 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9483__delegate.call(this, x, y, more);
    };
    G__9483.cljs$lang$maxFixedArity = 2;
    G__9483.cljs$lang$applyTo = function(arglist__9484) {
      var x = cljs.core.first(arglist__9484);
      arglist__9484 = cljs.core.next(arglist__9484);
      var y = cljs.core.first(arglist__9484);
      var more = cljs.core.rest(arglist__9484);
      return G__9483__delegate(x, y, more);
    };
    G__9483.cljs$core$IFn$_invoke$arity$variadic = G__9483__delegate;
    return G__9483;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__9485__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more);
    };
    var G__9485 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9485__delegate.call(this, x, y, more);
    };
    G__9485.cljs$lang$maxFixedArity = 2;
    G__9485.cljs$lang$applyTo = function(arglist__9486) {
      var x = cljs.core.first(arglist__9486);
      arglist__9486 = cljs.core.next(arglist__9486);
      var y = cljs.core.first(arglist__9486);
      var more = cljs.core.rest(arglist__9486);
      return G__9485__delegate(x, y, more);
    };
    G__9485.cljs$core$IFn$_invoke$arity$variadic = G__9485__delegate;
    return G__9485;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__9487__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next.call(null, more)) {
            var G__9488 = y;
            var G__9489 = cljs.core.first.call(null, more);
            var G__9490 = cljs.core.next.call(null, more);
            x = G__9488;
            y = G__9489;
            more = G__9490;
            continue;
          } else {
            return y < cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__9487 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9487__delegate.call(this, x, y, more);
    };
    G__9487.cljs$lang$maxFixedArity = 2;
    G__9487.cljs$lang$applyTo = function(arglist__9491) {
      var x = cljs.core.first(arglist__9491);
      arglist__9491 = cljs.core.next(arglist__9491);
      var y = cljs.core.first(arglist__9491);
      var more = cljs.core.rest(arglist__9491);
      return G__9487__delegate(x, y, more);
    };
    G__9487.cljs$core$IFn$_invoke$arity$variadic = G__9487__delegate;
    return G__9487;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__9492__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next.call(null, more)) {
            var G__9493 = y;
            var G__9494 = cljs.core.first.call(null, more);
            var G__9495 = cljs.core.next.call(null, more);
            x = G__9493;
            y = G__9494;
            more = G__9495;
            continue;
          } else {
            return y <= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__9492 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9492__delegate.call(this, x, y, more);
    };
    G__9492.cljs$lang$maxFixedArity = 2;
    G__9492.cljs$lang$applyTo = function(arglist__9496) {
      var x = cljs.core.first(arglist__9496);
      arglist__9496 = cljs.core.next(arglist__9496);
      var y = cljs.core.first(arglist__9496);
      var more = cljs.core.rest(arglist__9496);
      return G__9492__delegate(x, y, more);
    };
    G__9492.cljs$core$IFn$_invoke$arity$variadic = G__9492__delegate;
    return G__9492;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__9497__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next.call(null, more)) {
            var G__9498 = y;
            var G__9499 = cljs.core.first.call(null, more);
            var G__9500 = cljs.core.next.call(null, more);
            x = G__9498;
            y = G__9499;
            more = G__9500;
            continue;
          } else {
            return y > cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__9497 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9497__delegate.call(this, x, y, more);
    };
    G__9497.cljs$lang$maxFixedArity = 2;
    G__9497.cljs$lang$applyTo = function(arglist__9501) {
      var x = cljs.core.first(arglist__9501);
      arglist__9501 = cljs.core.next(arglist__9501);
      var y = cljs.core.first(arglist__9501);
      var more = cljs.core.rest(arglist__9501);
      return G__9497__delegate(x, y, more);
    };
    G__9497.cljs$core$IFn$_invoke$arity$variadic = G__9497__delegate;
    return G__9497;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__9502__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next.call(null, more)) {
            var G__9503 = y;
            var G__9504 = cljs.core.first.call(null, more);
            var G__9505 = cljs.core.next.call(null, more);
            x = G__9503;
            y = G__9504;
            more = G__9505;
            continue;
          } else {
            return y >= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__9502 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9502__delegate.call(this, x, y, more);
    };
    G__9502.cljs$lang$maxFixedArity = 2;
    G__9502.cljs$lang$applyTo = function(arglist__9506) {
      var x = cljs.core.first(arglist__9506);
      arglist__9506 = cljs.core.next(arglist__9506);
      var y = cljs.core.first(arglist__9506);
      var more = cljs.core.rest(arglist__9506);
      return G__9502__delegate(x, y, more);
    };
    G__9502.cljs$core$IFn$_invoke$arity$variadic = G__9502__delegate;
    return G__9502;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__3715__auto__ = x;
    var y__3716__auto__ = y;
    return x__3715__auto__ > y__3716__auto__ ? x__3715__auto__ : y__3716__auto__;
  };
  var max__3 = function() {
    var G__9507__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3715__auto__ = x;
        var y__3716__auto__ = y;
        return x__3715__auto__ > y__3716__auto__ ? x__3715__auto__ : y__3716__auto__;
      }(), more);
    };
    var G__9507 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9507__delegate.call(this, x, y, more);
    };
    G__9507.cljs$lang$maxFixedArity = 2;
    G__9507.cljs$lang$applyTo = function(arglist__9508) {
      var x = cljs.core.first(arglist__9508);
      arglist__9508 = cljs.core.next(arglist__9508);
      var y = cljs.core.first(arglist__9508);
      var more = cljs.core.rest(arglist__9508);
      return G__9507__delegate(x, y, more);
    };
    G__9507.cljs$core$IFn$_invoke$arity$variadic = G__9507__delegate;
    return G__9507;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__3722__auto__ = x;
    var y__3723__auto__ = y;
    return x__3722__auto__ < y__3723__auto__ ? x__3722__auto__ : y__3723__auto__;
  };
  var min__3 = function() {
    var G__9509__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3722__auto__ = x;
        var y__3723__auto__ = y;
        return x__3722__auto__ < y__3723__auto__ ? x__3722__auto__ : y__3723__auto__;
      }(), more);
    };
    var G__9509 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9509__delegate.call(this, x, y, more);
    };
    G__9509.cljs$lang$maxFixedArity = 2;
    G__9509.cljs$lang$applyTo = function(arglist__9510) {
      var x = cljs.core.first(arglist__9510);
      arglist__9510 = cljs.core.next(arglist__9510);
      var y = cljs.core.first(arglist__9510);
      var more = cljs.core.rest(arglist__9510);
      return G__9509__delegate(x, y, more);
    };
    G__9509.cljs$core$IFn$_invoke$arity$variadic = G__9509__delegate;
    return G__9509;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error("Argument to char must be a character or number");
      } else {
        return null;
      }
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__9511__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more);
    };
    var G__9511 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9511__delegate.call(this, x, y, more);
    };
    G__9511.cljs$lang$maxFixedArity = 2;
    G__9511.cljs$lang$applyTo = function(arglist__9512) {
      var x = cljs.core.first(arglist__9512);
      arglist__9512 = cljs.core.next(arglist__9512);
      var y = cljs.core.first(arglist__9512);
      var more = cljs.core.rest(arglist__9512);
      return G__9511__delegate(x, y, more);
    };
    G__9511.cljs$core$IFn$_invoke$arity$variadic = G__9511__delegate;
    return G__9511;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__9513__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more);
    };
    var G__9513 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9513__delegate.call(this, x, y, more);
    };
    G__9513.cljs$lang$maxFixedArity = 2;
    G__9513.cljs$lang$applyTo = function(arglist__9514) {
      var x = cljs.core.first(arglist__9514);
      arglist__9514 = cljs.core.next(arglist__9514);
      var y = cljs.core.first(arglist__9514);
      var more = cljs.core.rest(arglist__9514);
      return G__9513__delegate(x, y, more);
    };
    G__9513.cljs$core$IFn$_invoke$arity$variadic = G__9513__delegate;
    return G__9513;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__9515__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more);
    };
    var G__9515 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9515__delegate.call(this, x, y, more);
    };
    G__9515.cljs$lang$maxFixedArity = 2;
    G__9515.cljs$lang$applyTo = function(arglist__9516) {
      var x = cljs.core.first(arglist__9516);
      arglist__9516 = cljs.core.next(arglist__9516);
      var y = cljs.core.first(arglist__9516);
      var more = cljs.core.rest(arglist__9516);
      return G__9515__delegate(x, y, more);
    };
    G__9515.cljs$core$IFn$_invoke$arity$variadic = G__9515__delegate;
    return G__9515;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__9517__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more);
    };
    var G__9517 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9517__delegate.call(this, x, y, more);
    };
    G__9517.cljs$lang$maxFixedArity = 2;
    G__9517.cljs$lang$applyTo = function(arglist__9518) {
      var x = cljs.core.first(arglist__9518);
      arglist__9518 = cljs.core.next(arglist__9518);
      var y = cljs.core.first(arglist__9518);
      var more = cljs.core.rest(arglist__9518);
      return G__9517__delegate(x, y, more);
    };
    G__9517.cljs$core$IFn$_invoke$arity$variadic = G__9517__delegate;
    return G__9517;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__9519__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more);
    };
    var G__9519 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9519__delegate.call(this, x, y, more);
    };
    G__9519.cljs$lang$maxFixedArity = 2;
    G__9519.cljs$lang$applyTo = function(arglist__9520) {
      var x = cljs.core.first(arglist__9520);
      arglist__9520 = cljs.core.next(arglist__9520);
      var y = cljs.core.first(arglist__9520);
      var more = cljs.core.rest(arglist__9520);
      return G__9519__delegate(x, y, more);
    };
    G__9519.cljs$core$IFn$_invoke$arity$variadic = G__9519__delegate;
    return G__9519;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_substract = function() {
  var unchecked_substract = null;
  var unchecked_substract__1 = function(x) {
    return-x;
  };
  var unchecked_substract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_substract__3 = function() {
    var G__9521__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract, x - y, more);
    };
    var G__9521 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9521__delegate.call(this, x, y, more);
    };
    G__9521.cljs$lang$maxFixedArity = 2;
    G__9521.cljs$lang$applyTo = function(arglist__9522) {
      var x = cljs.core.first(arglist__9522);
      arglist__9522 = cljs.core.next(arglist__9522);
      var y = cljs.core.first(arglist__9522);
      var more = cljs.core.rest(arglist__9522);
      return G__9521__delegate(x, y, more);
    };
    G__9521.cljs$core$IFn$_invoke$arity$variadic = G__9521__delegate;
    return G__9521;
  }();
  unchecked_substract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract__1.call(this, x);
      case 2:
        return unchecked_substract__2.call(this, x, y);
      default:
        return unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract.cljs$lang$maxFixedArity = 2;
  unchecked_substract.cljs$lang$applyTo = unchecked_substract__3.cljs$lang$applyTo;
  unchecked_substract.cljs$core$IFn$_invoke$arity$1 = unchecked_substract__1;
  unchecked_substract.cljs$core$IFn$_invoke$arity$2 = unchecked_substract__2;
  unchecked_substract.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract;
}();
cljs.core.unchecked_substract_int = function() {
  var unchecked_substract_int = null;
  var unchecked_substract_int__1 = function(x) {
    return-x;
  };
  var unchecked_substract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_substract_int__3 = function() {
    var G__9523__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract_int, x - y, more);
    };
    var G__9523 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9523__delegate.call(this, x, y, more);
    };
    G__9523.cljs$lang$maxFixedArity = 2;
    G__9523.cljs$lang$applyTo = function(arglist__9524) {
      var x = cljs.core.first(arglist__9524);
      arglist__9524 = cljs.core.next(arglist__9524);
      var y = cljs.core.first(arglist__9524);
      var more = cljs.core.rest(arglist__9524);
      return G__9523__delegate(x, y, more);
    };
    G__9523.cljs$core$IFn$_invoke$arity$variadic = G__9523__delegate;
    return G__9523;
  }();
  unchecked_substract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract_int__1.call(this, x);
      case 2:
        return unchecked_substract_int__2.call(this, x, y);
      default:
        return unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract_int.cljs$lang$maxFixedArity = 2;
  unchecked_substract_int.cljs$lang$applyTo = unchecked_substract_int__3.cljs$lang$applyTo;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_substract_int__1;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_substract_int__2;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    return Math.floor.call(null, q);
  } else {
    return Math.ceil.call(null, q);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q;
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null);
  };
  var rand__1 = function(n) {
    return n * rand.call(null);
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n));
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__9525__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__9526 = y;
            var G__9527 = cljs.core.first.call(null, more);
            var G__9528 = cljs.core.next.call(null, more);
            x = G__9526;
            y = G__9527;
            more = G__9528;
            continue;
          } else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__9525 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9525__delegate.call(this, x, y, more);
    };
    G__9525.cljs$lang$maxFixedArity = 2;
    G__9525.cljs$lang$applyTo = function(arglist__9529) {
      var x = cljs.core.first(arglist__9529);
      arglist__9529 = cljs.core.next(arglist__9529);
      var y = cljs.core.first(arglist__9529);
      var more = cljs.core.rest(arglist__9529);
      return G__9525__delegate(x, y, more);
    };
    G__9525.cljs$core$IFn$_invoke$arity$variadic = G__9525__delegate;
    return G__9525;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__9530 = n__$1 - 1;
      var G__9531 = cljs.core.next.call(null, xs);
      n__$1 = G__9530;
      xs = G__9531;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      return x.toString();
    }
  };
  var str__2 = function() {
    var G__9532__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__9533 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__9534 = cljs.core.next.call(null, more);
          sb = G__9533;
          more = G__9534;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__9532 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__9532__delegate.call(this, x, ys);
    };
    G__9532.cljs$lang$maxFixedArity = 1;
    G__9532.cljs$lang$applyTo = function(arglist__9535) {
      var x = cljs.core.first(arglist__9535);
      var ys = cljs.core.rest(arglist__9535);
      return G__9532__delegate(x, ys);
    };
    G__9532.cljs$core$IFn$_invoke$arity$variadic = G__9532__delegate;
    return G__9532;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__9536 = cljs.core.next.call(null, xs);
            var G__9537 = cljs.core.next.call(null, ys);
            xs = G__9536;
            ys = G__9537;
            continue;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false;
            } else {
              return null;
            }
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__9538 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__9539 = cljs.core.next.call(null, s);
        res = G__9538;
        s = G__9539;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__9540 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__9541 = cljs.core.next.call(null, s);
      h = G__9540;
      s = G__9541;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__9542 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__9543 = cljs.core.next.call(null, s__$1);
      h = G__9542;
      s__$1 = G__9543;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__9550_9556 = cljs.core.seq.call(null, fn_map);
  var chunk__9551_9557 = null;
  var count__9552_9558 = 0;
  var i__9553_9559 = 0;
  while (true) {
    if (i__9553_9559 < count__9552_9558) {
      var vec__9554_9560 = cljs.core._nth.call(null, chunk__9551_9557, i__9553_9559);
      var key_name_9561 = cljs.core.nth.call(null, vec__9554_9560, 0, null);
      var f_9562 = cljs.core.nth.call(null, vec__9554_9560, 1, null);
      var str_name_9563 = cljs.core.name.call(null, key_name_9561);
      obj[str_name_9563] = f_9562;
      var G__9564 = seq__9550_9556;
      var G__9565 = chunk__9551_9557;
      var G__9566 = count__9552_9558;
      var G__9567 = i__9553_9559 + 1;
      seq__9550_9556 = G__9564;
      chunk__9551_9557 = G__9565;
      count__9552_9558 = G__9566;
      i__9553_9559 = G__9567;
      continue;
    } else {
      var temp__4092__auto___9568 = cljs.core.seq.call(null, seq__9550_9556);
      if (temp__4092__auto___9568) {
        var seq__9550_9569__$1 = temp__4092__auto___9568;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__9550_9569__$1)) {
          var c__4150__auto___9570 = cljs.core.chunk_first.call(null, seq__9550_9569__$1);
          var G__9571 = cljs.core.chunk_rest.call(null, seq__9550_9569__$1);
          var G__9572 = c__4150__auto___9570;
          var G__9573 = cljs.core.count.call(null, c__4150__auto___9570);
          var G__9574 = 0;
          seq__9550_9556 = G__9571;
          chunk__9551_9557 = G__9572;
          count__9552_9558 = G__9573;
          i__9553_9559 = G__9574;
          continue;
        } else {
          var vec__9555_9575 = cljs.core.first.call(null, seq__9550_9569__$1);
          var key_name_9576 = cljs.core.nth.call(null, vec__9555_9575, 0, null);
          var f_9577 = cljs.core.nth.call(null, vec__9555_9575, 1, null);
          var str_name_9578 = cljs.core.name.call(null, key_name_9576);
          obj[str_name_9578] = f_9577;
          var G__9579 = cljs.core.next.call(null, seq__9550_9569__$1);
          var G__9580 = null;
          var G__9581 = 0;
          var G__9582 = 0;
          seq__9550_9556 = G__9579;
          chunk__9551_9557 = G__9580;
          count__9552_9558 = G__9581;
          i__9553_9559 = G__9582;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/List");
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICloneable$ = true;
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/EmptyList");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$ = true;
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__9584 = coll;
  if (G__9584) {
    var bit__4052__auto__ = G__9584.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4052__auto__ || G__9584.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__9584.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__9584);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__9584);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__9585 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__9585;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__9586 = i - 1;
        var G__9587 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__9586;
        r = G__9587;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__9588) {
    var xs = cljs.core.seq(arglist__9588);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/Cons");
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq.call(null, self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICloneable$ = true;
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3408__auto__ = coll == null;
    if (or__3408__auto__) {
      return or__3408__auto__;
    } else {
      var G__9592 = coll;
      if (G__9592) {
        var bit__4045__auto__ = G__9592.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4045__auto__ || G__9592.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__9594 = x;
  if (G__9594) {
    var bit__4052__auto__ = G__9594.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4052__auto__ || G__9594.cljs$core$IList$) {
      return true;
    } else {
      if (!G__9594.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__9594);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__9594);
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/Keyword");
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._hash == null) {
    self__._hash = cljs.core.hash_combine.call(null, cljs.core.hash.call(null, self__.ns), cljs.core.hash.call(null, self__.name)) + 2654435769;
    return self__._hash;
  } else {
    return self__._hash;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__9596 = null;
  var G__9596__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw);
  };
  var G__9596__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found);
  };
  G__9596 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9596__2.call(this, self__, coll);
      case 3:
        return G__9596__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9596;
}();
cljs.core.Keyword.prototype.apply = function(self__, args9595) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args9595)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.cljs$core$ICloneable$ = true;
cljs.core.Keyword.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Keyword(self__.ns, self__.name, self__.fqn, self__._hash);
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__9598 = x;
    if (G__9598) {
      var bit__4045__auto__ = G__9598.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4045__auto__ || G__9598.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._namespace.call(null, x);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace.call(null, name), cljs.core.name.call(null, name), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/LazySeq");
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__9599 = ls.sval();
        ls = G__9599;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/ArrayChunk");
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/ChunkedCons");
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1);
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count.call(null, chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__9601 = s;
    if (G__9601) {
      var bit__4045__auto__ = G__9601.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4045__auto__ || G__9601.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next.call(null, s);
  } else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__9602 = cljs.core.next.call(null, s__$1);
      s__$1 = G__9602;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_9603 = 0;
  var xs_9604 = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs_9604) {
      ret[i_9603] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_9604));
      var G__9605 = i_9603 + 1;
      var G__9606 = cljs.core.next.call(null, xs_9604);
      i_9603 = G__9605;
      xs_9604 = G__9606;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__9607 = i + 1;
          var G__9608 = cljs.core.next.call(null, s__$1);
          i = G__9607;
          s__$1 = G__9608;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4250__auto___9609 = size;
      var i_9610 = 0;
      while (true) {
        if (i_9610 < n__4250__auto___9609) {
          a[i_9610] = init_val_or_seq;
          var G__9611 = i_9610 + 1;
          i_9610 = G__9611;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__9612 = i + 1;
          var G__9613 = cljs.core.next.call(null, s__$1);
          i = G__9612;
          s__$1 = G__9613;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4250__auto___9614 = size;
      var i_9615 = 0;
      while (true) {
        if (i_9615 < n__4250__auto___9614) {
          a[i_9615] = init_val_or_seq;
          var G__9616 = i_9615 + 1;
          i_9615 = G__9616;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__9617 = i + 1;
          var G__9618 = cljs.core.next.call(null, s__$1);
          i = G__9617;
          s__$1 = G__9618;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4250__auto___9619 = size;
      var i_9620 = 0;
      while (true) {
        if (i_9620 < n__4250__auto___9619) {
          a[i_9620] = init_val_or_seq;
          var G__9621 = i_9620 + 1;
          i_9620 = G__9621;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__9622 = i + 1;
          var G__9623 = cljs.core.next.call(null, s__$1);
          i = G__9622;
          s__$1 = G__9623;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4250__auto___9624 = size;
      var i_9625 = 0;
      while (true) {
        if (i_9625 < n__4250__auto___9624) {
          a[i_9625] = init_val_or_seq;
          var G__9626 = i_9625 + 1;
          i_9625 = G__9626;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__9627 = cljs.core.next.call(null, s__$1);
        var G__9628 = i - 1;
        var G__9629 = sum + 1;
        s__$1 = G__9627;
        i = G__9628;
        sum = G__9629;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)));
      } else {
        return null;
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y));
        } else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__9630__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1));
            } else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat.call(null, concat.call(null, x, y), zs);
    };
    var G__9630 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9630__delegate.call(this, x, y, zs);
    };
    G__9630.cljs$lang$maxFixedArity = 2;
    G__9630.cljs$lang$applyTo = function(arglist__9631) {
      var x = cljs.core.first(arglist__9631);
      arglist__9631 = cljs.core.next(arglist__9631);
      var y = cljs.core.first(arglist__9631);
      var zs = cljs.core.rest(arglist__9631);
      return G__9630__delegate(x, y, zs);
    };
    G__9630.cljs$core$IFn$_invoke$arity$variadic = G__9630__delegate;
    return G__9630;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)));
  };
  var list_STAR___5 = function() {
    var G__9632__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))));
    };
    var G__9632 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__9632__delegate.call(this, a, b, c, d, more);
    };
    G__9632.cljs$lang$maxFixedArity = 4;
    G__9632.cljs$lang$applyTo = function(arglist__9633) {
      var a = cljs.core.first(arglist__9633);
      arglist__9633 = cljs.core.next(arglist__9633);
      var b = cljs.core.first(arglist__9633);
      arglist__9633 = cljs.core.next(arglist__9633);
      var c = cljs.core.first(arglist__9633);
      arglist__9633 = cljs.core.next(arglist__9633);
      var d = cljs.core.first(arglist__9633);
      var more = cljs.core.rest(arglist__9633);
      return G__9632__delegate(a, b, c, d, more);
    };
    G__9632.cljs$core$IFn$_invoke$arity$variadic = G__9632__delegate;
    return G__9632;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll);
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val);
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val);
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key);
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll);
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val);
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if (argc === 0) {
    return f.call(null);
  } else {
    var a = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a);
      } else {
        return f.call(null, a);
      }
    } else {
      var b = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a, b);
        } else {
          return f.call(null, a, b);
        }
      } else {
        var c = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a, b, c);
          } else {
            return f.call(null, a, b, c);
          }
        } else {
          var d = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a, b, c, d);
            } else {
              return f.call(null, a, b, c, d);
            }
          } else {
            var e = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e);
              } else {
                return f.call(null, a, b, c, d, e);
              }
            } else {
              var f__$1 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if (argc === 6) {
                if (f__$1.cljs$core$IFn$_invoke$arity$6) {
                  return f__$1.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f__$1);
                } else {
                  return f__$1.call(null, a, b, c, d, e, f__$1);
                }
              } else {
                var g = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if (argc === 7) {
                  if (f__$1.cljs$core$IFn$_invoke$arity$7) {
                    return f__$1.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f__$1, g);
                  } else {
                    return f__$1.call(null, a, b, c, d, e, f__$1, g);
                  }
                } else {
                  var h = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if (argc === 8) {
                    if (f__$1.cljs$core$IFn$_invoke$arity$8) {
                      return f__$1.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f__$1, g, h);
                    } else {
                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h);
                    }
                  } else {
                    var i = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if (argc === 9) {
                      if (f__$1.cljs$core$IFn$_invoke$arity$9) {
                        return f__$1.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f__$1, g, h, i);
                      } else {
                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i);
                      }
                    } else {
                      var j = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if (argc === 10) {
                        if (f__$1.cljs$core$IFn$_invoke$arity$10) {
                          return f__$1.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f__$1, g, h, i, j);
                        } else {
                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j);
                        }
                      } else {
                        var k = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if (argc === 11) {
                          if (f__$1.cljs$core$IFn$_invoke$arity$11) {
                            return f__$1.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f__$1, g, h, i, j, k);
                          } else {
                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k);
                          }
                        } else {
                          var l = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if (argc === 12) {
                            if (f__$1.cljs$core$IFn$_invoke$arity$12) {
                              return f__$1.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f__$1, g, h, i, j, k, l);
                            } else {
                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l);
                            }
                          } else {
                            var m = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if (argc === 13) {
                              if (f__$1.cljs$core$IFn$_invoke$arity$13) {
                                return f__$1.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f__$1, g, h, i, j, k, l, m);
                              } else {
                                return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m);
                              }
                            } else {
                              var n = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if (argc === 14) {
                                if (f__$1.cljs$core$IFn$_invoke$arity$14) {
                                  return f__$1.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n);
                                } else {
                                  return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n);
                                }
                              } else {
                                var o = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if (argc === 15) {
                                  if (f__$1.cljs$core$IFn$_invoke$arity$15) {
                                    return f__$1.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o);
                                  } else {
                                    return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o);
                                  }
                                } else {
                                  var p = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if (argc === 16) {
                                    if (f__$1.cljs$core$IFn$_invoke$arity$16) {
                                      return f__$1.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p);
                                    } else {
                                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p);
                                    }
                                  } else {
                                    var q = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if (argc === 17) {
                                      if (f__$1.cljs$core$IFn$_invoke$arity$17) {
                                        return f__$1.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q);
                                      } else {
                                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q);
                                      }
                                    } else {
                                      var r = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if (argc === 18) {
                                        if (f__$1.cljs$core$IFn$_invoke$arity$18) {
                                          return f__$1.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r);
                                        } else {
                                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r);
                                        }
                                      } else {
                                        var s = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if (argc === 19) {
                                          if (f__$1.cljs$core$IFn$_invoke$arity$19) {
                                            return f__$1.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s);
                                          } else {
                                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s);
                                          }
                                        } else {
                                          var t = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if (argc === 20) {
                                            if (f__$1.cljs$core$IFn$_invoke$arity$20) {
                                              return f__$1.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
                                            } else {
                                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__6 = function() {
    var G__9634__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array.call(null, arglist));
      }
    };
    var G__9634 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__9634__delegate.call(this, f, a, b, c, d, args);
    };
    G__9634.cljs$lang$maxFixedArity = 5;
    G__9634.cljs$lang$applyTo = function(arglist__9635) {
      var f = cljs.core.first(arglist__9635);
      arglist__9635 = cljs.core.next(arglist__9635);
      var a = cljs.core.first(arglist__9635);
      arglist__9635 = cljs.core.next(arglist__9635);
      var b = cljs.core.first(arglist__9635);
      arglist__9635 = cljs.core.next(arglist__9635);
      var c = cljs.core.first(arglist__9635);
      arglist__9635 = cljs.core.next(arglist__9635);
      var d = cljs.core.first(arglist__9635);
      var args = cljs.core.rest(arglist__9635);
      return G__9634__delegate(f, a, b, c, d, args);
    };
    G__9634.cljs$core$IFn$_invoke$arity$variadic = G__9634__delegate;
    return G__9634;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj)));
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a));
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b));
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c));
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c, d));
  };
  var vary_meta__7 = function() {
    var G__9636__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), a, b, c, d, args));
    };
    var G__9636 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__9636__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__9636.cljs$lang$maxFixedArity = 6;
    G__9636.cljs$lang$applyTo = function(arglist__9637) {
      var obj = cljs.core.first(arglist__9637);
      arglist__9637 = cljs.core.next(arglist__9637);
      var f = cljs.core.first(arglist__9637);
      arglist__9637 = cljs.core.next(arglist__9637);
      var a = cljs.core.first(arglist__9637);
      arglist__9637 = cljs.core.next(arglist__9637);
      var b = cljs.core.first(arglist__9637);
      arglist__9637 = cljs.core.next(arglist__9637);
      var c = cljs.core.first(arglist__9637);
      arglist__9637 = cljs.core.next(arglist__9637);
      var d = cljs.core.first(arglist__9637);
      var args = cljs.core.rest(arglist__9637);
      return G__9636__delegate(obj, f, a, b, c, d, args);
    };
    G__9636.cljs$core$IFn$_invoke$arity$variadic = G__9636__delegate;
    return G__9636;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var not_EQ___3 = function() {
    var G__9638__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more));
    };
    var G__9638 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9638__delegate.call(this, x, y, more);
    };
    G__9638.cljs$lang$maxFixedArity = 2;
    G__9638.cljs$lang$applyTo = function(arglist__9639) {
      var x = cljs.core.first(arglist__9639);
      arglist__9639 = cljs.core.next(arglist__9639);
      var y = cljs.core.first(arglist__9639);
      var more = cljs.core.rest(arglist__9639);
      return G__9638__delegate(x, y, more);
    };
    G__9638.cljs$core$IFn$_invoke$arity$variadic = G__9638__delegate;
    return G__9638;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq.call(null, coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__9640 = pred;
        var G__9641 = cljs.core.next.call(null, coll);
        pred = G__9640;
        coll = G__9641;
        continue;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return false;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll)) {
      var or__3408__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if (cljs.core.truth_(or__3408__auto__)) {
        return or__3408__auto__;
      } else {
        var G__9642 = pred;
        var G__9643 = cljs.core.next.call(null, coll);
        pred = G__9642;
        coll = G__9643;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n);
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__9644 = null;
    var G__9644__0 = function() {
      return cljs.core.not.call(null, f.call(null));
    };
    var G__9644__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x));
    };
    var G__9644__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y));
    };
    var G__9644__3 = function() {
      var G__9645__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs));
      };
      var G__9645 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
        }
        return G__9645__delegate.call(this, x, y, zs);
      };
      G__9645.cljs$lang$maxFixedArity = 2;
      G__9645.cljs$lang$applyTo = function(arglist__9646) {
        var x = cljs.core.first(arglist__9646);
        arglist__9646 = cljs.core.next(arglist__9646);
        var y = cljs.core.first(arglist__9646);
        var zs = cljs.core.rest(arglist__9646);
        return G__9645__delegate(x, y, zs);
      };
      G__9645.cljs$core$IFn$_invoke$arity$variadic = G__9645__delegate;
      return G__9645;
    }();
    G__9644 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__9644__0.call(this);
        case 1:
          return G__9644__1.call(this, x);
        case 2:
          return G__9644__2.call(this, x, y);
        default:
          return G__9644__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__9644.cljs$lang$maxFixedArity = 2;
    G__9644.cljs$lang$applyTo = G__9644__3.cljs$lang$applyTo;
    return G__9644;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__9647__delegate = function(args) {
      return x;
    };
    var G__9647 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__9647__delegate.call(this, args);
    };
    G__9647.cljs$lang$maxFixedArity = 0;
    G__9647.cljs$lang$applyTo = function(arglist__9648) {
      var args = cljs.core.seq(arglist__9648);
      return G__9647__delegate(args);
    };
    G__9647.cljs$core$IFn$_invoke$arity$variadic = G__9647__delegate;
    return G__9647;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__9649 = null;
      var G__9649__0 = function() {
        return f.call(null, g.call(null));
      };
      var G__9649__1 = function(x) {
        return f.call(null, g.call(null, x));
      };
      var G__9649__2 = function(x, y) {
        return f.call(null, g.call(null, x, y));
      };
      var G__9649__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z));
      };
      var G__9649__4 = function() {
        var G__9650__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args));
        };
        var G__9650 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__9650__delegate.call(this, x, y, z, args);
        };
        G__9650.cljs$lang$maxFixedArity = 3;
        G__9650.cljs$lang$applyTo = function(arglist__9651) {
          var x = cljs.core.first(arglist__9651);
          arglist__9651 = cljs.core.next(arglist__9651);
          var y = cljs.core.first(arglist__9651);
          arglist__9651 = cljs.core.next(arglist__9651);
          var z = cljs.core.first(arglist__9651);
          var args = cljs.core.rest(arglist__9651);
          return G__9650__delegate(x, y, z, args);
        };
        G__9650.cljs$core$IFn$_invoke$arity$variadic = G__9650__delegate;
        return G__9650;
      }();
      G__9649 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__9649__0.call(this);
          case 1:
            return G__9649__1.call(this, x);
          case 2:
            return G__9649__2.call(this, x, y);
          case 3:
            return G__9649__3.call(this, x, y, z);
          default:
            return G__9649__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9649.cljs$lang$maxFixedArity = 3;
      G__9649.cljs$lang$applyTo = G__9649__4.cljs$lang$applyTo;
      return G__9649;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__9652 = null;
      var G__9652__0 = function() {
        return f.call(null, g.call(null, h.call(null)));
      };
      var G__9652__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)));
      };
      var G__9652__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)));
      };
      var G__9652__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)));
      };
      var G__9652__4 = function() {
        var G__9653__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)));
        };
        var G__9653 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__9653__delegate.call(this, x, y, z, args);
        };
        G__9653.cljs$lang$maxFixedArity = 3;
        G__9653.cljs$lang$applyTo = function(arglist__9654) {
          var x = cljs.core.first(arglist__9654);
          arglist__9654 = cljs.core.next(arglist__9654);
          var y = cljs.core.first(arglist__9654);
          arglist__9654 = cljs.core.next(arglist__9654);
          var z = cljs.core.first(arglist__9654);
          var args = cljs.core.rest(arglist__9654);
          return G__9653__delegate(x, y, z, args);
        };
        G__9653.cljs$core$IFn$_invoke$arity$variadic = G__9653__delegate;
        return G__9653;
      }();
      G__9652 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__9652__0.call(this);
          case 1:
            return G__9652__1.call(this, x);
          case 2:
            return G__9652__2.call(this, x, y);
          case 3:
            return G__9652__3.call(this, x, y, z);
          default:
            return G__9652__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9652.cljs$lang$maxFixedArity = 3;
      G__9652.cljs$lang$applyTo = G__9652__4.cljs$lang$applyTo;
      return G__9652;
    }();
  };
  var comp__4 = function() {
    var G__9655__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__9656__delegate = function(args) {
          var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
          var fs__$2 = cljs.core.next.call(null, fs__$1);
          while (true) {
            if (fs__$2) {
              var G__9657 = cljs.core.first.call(null, fs__$2).call(null, ret);
              var G__9658 = cljs.core.next.call(null, fs__$2);
              ret = G__9657;
              fs__$2 = G__9658;
              continue;
            } else {
              return ret;
            }
            break;
          }
        };
        var G__9656 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__9656__delegate.call(this, args);
        };
        G__9656.cljs$lang$maxFixedArity = 0;
        G__9656.cljs$lang$applyTo = function(arglist__9659) {
          var args = cljs.core.seq(arglist__9659);
          return G__9656__delegate(args);
        };
        G__9656.cljs$core$IFn$_invoke$arity$variadic = G__9656__delegate;
        return G__9656;
      }();
    };
    var G__9655 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__9655__delegate.call(this, f1, f2, f3, fs);
    };
    G__9655.cljs$lang$maxFixedArity = 3;
    G__9655.cljs$lang$applyTo = function(arglist__9660) {
      var f1 = cljs.core.first(arglist__9660);
      arglist__9660 = cljs.core.next(arglist__9660);
      var f2 = cljs.core.first(arglist__9660);
      arglist__9660 = cljs.core.next(arglist__9660);
      var f3 = cljs.core.first(arglist__9660);
      var fs = cljs.core.rest(arglist__9660);
      return G__9655__delegate(f1, f2, f3, fs);
    };
    G__9655.cljs$core$IFn$_invoke$arity$variadic = G__9655__delegate;
    return G__9655;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__9661__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args);
      };
      var G__9661 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__9661__delegate.call(this, args);
      };
      G__9661.cljs$lang$maxFixedArity = 0;
      G__9661.cljs$lang$applyTo = function(arglist__9662) {
        var args = cljs.core.seq(arglist__9662);
        return G__9661__delegate(args);
      };
      G__9661.cljs$core$IFn$_invoke$arity$variadic = G__9661__delegate;
      return G__9661;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__9663__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args);
      };
      var G__9663 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__9663__delegate.call(this, args);
      };
      G__9663.cljs$lang$maxFixedArity = 0;
      G__9663.cljs$lang$applyTo = function(arglist__9664) {
        var args = cljs.core.seq(arglist__9664);
        return G__9663__delegate(args);
      };
      G__9663.cljs$core$IFn$_invoke$arity$variadic = G__9663__delegate;
      return G__9663;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__9665__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args);
      };
      var G__9665 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__9665__delegate.call(this, args);
      };
      G__9665.cljs$lang$maxFixedArity = 0;
      G__9665.cljs$lang$applyTo = function(arglist__9666) {
        var args = cljs.core.seq(arglist__9666);
        return G__9665__delegate(args);
      };
      G__9665.cljs$core$IFn$_invoke$arity$variadic = G__9665__delegate;
      return G__9665;
    }();
  };
  var partial__5 = function() {
    var G__9667__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__9668__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args));
        };
        var G__9668 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__9668__delegate.call(this, args);
        };
        G__9668.cljs$lang$maxFixedArity = 0;
        G__9668.cljs$lang$applyTo = function(arglist__9669) {
          var args = cljs.core.seq(arglist__9669);
          return G__9668__delegate(args);
        };
        G__9668.cljs$core$IFn$_invoke$arity$variadic = G__9668__delegate;
        return G__9668;
      }();
    };
    var G__9667 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__9667__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__9667.cljs$lang$maxFixedArity = 4;
    G__9667.cljs$lang$applyTo = function(arglist__9670) {
      var f = cljs.core.first(arglist__9670);
      arglist__9670 = cljs.core.next(arglist__9670);
      var arg1 = cljs.core.first(arglist__9670);
      arglist__9670 = cljs.core.next(arglist__9670);
      var arg2 = cljs.core.first(arglist__9670);
      arglist__9670 = cljs.core.next(arglist__9670);
      var arg3 = cljs.core.first(arglist__9670);
      var more = cljs.core.rest(arglist__9670);
      return G__9667__delegate(f, arg1, arg2, arg3, more);
    };
    G__9667.cljs$core$IFn$_invoke$arity$variadic = G__9667__delegate;
    return G__9667;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__9671 = null;
      var G__9671__1 = function(a) {
        return f.call(null, a == null ? x : a);
      };
      var G__9671__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b);
      };
      var G__9671__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c);
      };
      var G__9671__4 = function() {
        var G__9672__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds);
        };
        var G__9672 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__9672__delegate.call(this, a, b, c, ds);
        };
        G__9672.cljs$lang$maxFixedArity = 3;
        G__9672.cljs$lang$applyTo = function(arglist__9673) {
          var a = cljs.core.first(arglist__9673);
          arglist__9673 = cljs.core.next(arglist__9673);
          var b = cljs.core.first(arglist__9673);
          arglist__9673 = cljs.core.next(arglist__9673);
          var c = cljs.core.first(arglist__9673);
          var ds = cljs.core.rest(arglist__9673);
          return G__9672__delegate(a, b, c, ds);
        };
        G__9672.cljs$core$IFn$_invoke$arity$variadic = G__9672__delegate;
        return G__9672;
      }();
      G__9671 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__9671__1.call(this, a);
          case 2:
            return G__9671__2.call(this, a, b);
          case 3:
            return G__9671__3.call(this, a, b, c);
          default:
            return G__9671__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9671.cljs$lang$maxFixedArity = 3;
      G__9671.cljs$lang$applyTo = G__9671__4.cljs$lang$applyTo;
      return G__9671;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__9674 = null;
      var G__9674__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__9674__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c);
      };
      var G__9674__4 = function() {
        var G__9675__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__9675 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__9675__delegate.call(this, a, b, c, ds);
        };
        G__9675.cljs$lang$maxFixedArity = 3;
        G__9675.cljs$lang$applyTo = function(arglist__9676) {
          var a = cljs.core.first(arglist__9676);
          arglist__9676 = cljs.core.next(arglist__9676);
          var b = cljs.core.first(arglist__9676);
          arglist__9676 = cljs.core.next(arglist__9676);
          var c = cljs.core.first(arglist__9676);
          var ds = cljs.core.rest(arglist__9676);
          return G__9675__delegate(a, b, c, ds);
        };
        G__9675.cljs$core$IFn$_invoke$arity$variadic = G__9675__delegate;
        return G__9675;
      }();
      G__9674 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__9674__2.call(this, a, b);
          case 3:
            return G__9674__3.call(this, a, b, c);
          default:
            return G__9674__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9674.cljs$lang$maxFixedArity = 3;
      G__9674.cljs$lang$applyTo = G__9674__4.cljs$lang$applyTo;
      return G__9674;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__9677 = null;
      var G__9677__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__9677__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c);
      };
      var G__9677__4 = function() {
        var G__9678__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__9678 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__9678__delegate.call(this, a, b, c, ds);
        };
        G__9678.cljs$lang$maxFixedArity = 3;
        G__9678.cljs$lang$applyTo = function(arglist__9679) {
          var a = cljs.core.first(arglist__9679);
          arglist__9679 = cljs.core.next(arglist__9679);
          var b = cljs.core.first(arglist__9679);
          arglist__9679 = cljs.core.next(arglist__9679);
          var c = cljs.core.first(arglist__9679);
          var ds = cljs.core.rest(arglist__9679);
          return G__9678__delegate(a, b, c, ds);
        };
        G__9678.cljs$core$IFn$_invoke$arity$variadic = G__9678__delegate;
        return G__9678;
      }();
      G__9677 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__9677__2.call(this, a, b);
          case 3:
            return G__9677__3.call(this, a, b, c);
          default:
            return G__9677__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9677.cljs$lang$maxFixedArity = 3;
      G__9677.cljs$lang$applyTo = G__9677__4.cljs$lang$applyTo;
      return G__9677;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4250__auto___9680 = size;
          var i_9681 = 0;
          while (true) {
            if (i_9681 < n__4250__auto___9680) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_9681, cljs.core._nth.call(null, c, i_9681)));
              var G__9682 = i_9681 + 1;
              i_9681 = G__9682;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi.call(null, 0, coll);
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__4250__auto___9683 = size;
        var i_9684 = 0;
        while (true) {
          if (i_9684 < n__4250__auto___9683) {
            var x_9685 = f.call(null, cljs.core._nth.call(null, c, i_9684));
            if (x_9685 == null) {
            } else {
              cljs.core.chunk_append.call(null, b, x_9685);
            }
            var G__9686 = i_9684 + 1;
            i_9684 = G__9686;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)));
      } else {
        var x = f.call(null, cljs.core.first.call(null, s));
        if (x == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s));
        } else {
          return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi = function keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4250__auto___9687 = size;
          var i_9688 = 0;
          while (true) {
            if (i_9688 < n__4250__auto___9687) {
              var x_9689 = f.call(null, idx + i_9688, cljs.core._nth.call(null, c, i_9688));
              if (x_9689 == null) {
              } else {
                cljs.core.chunk_append.call(null, b, x_9689);
              }
              var G__9690 = i_9688 + 1;
              i_9688 = G__9690;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          var x = f.call(null, idx, cljs.core.first.call(null, s));
          if (x == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s));
          } else {
            return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi.call(null, 0, coll);
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x));
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3396__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3396__auto__)) {
            return p.call(null, y);
          } else {
            return and__3396__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3396__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3396__auto__)) {
            var and__3396__auto____$1 = p.call(null, y);
            if (cljs.core.truth_(and__3396__auto____$1)) {
              return p.call(null, z);
            } else {
              return and__3396__auto____$1;
            }
          } else {
            return and__3396__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__9697__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep1.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, p, args));
        };
        var G__9697 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__9697__delegate.call(this, x, y, z, args);
        };
        G__9697.cljs$lang$maxFixedArity = 3;
        G__9697.cljs$lang$applyTo = function(arglist__9698) {
          var x = cljs.core.first(arglist__9698);
          arglist__9698 = cljs.core.next(arglist__9698);
          var y = cljs.core.first(arglist__9698);
          arglist__9698 = cljs.core.next(arglist__9698);
          var z = cljs.core.first(arglist__9698);
          var args = cljs.core.rest(arglist__9698);
          return G__9697__delegate(x, y, z, args);
        };
        G__9697.cljs$core$IFn$_invoke$arity$variadic = G__9697__delegate;
        return G__9697;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3396__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3396__auto__)) {
            return p2.call(null, x);
          } else {
            return and__3396__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3396__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3396__auto__)) {
            var and__3396__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3396__auto____$1)) {
              var and__3396__auto____$2 = p2.call(null, x);
              if (cljs.core.truth_(and__3396__auto____$2)) {
                return p2.call(null, y);
              } else {
                return and__3396__auto____$2;
              }
            } else {
              return and__3396__auto____$1;
            }
          } else {
            return and__3396__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3396__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3396__auto__)) {
            var and__3396__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3396__auto____$1)) {
              var and__3396__auto____$2 = p1.call(null, z);
              if (cljs.core.truth_(and__3396__auto____$2)) {
                var and__3396__auto____$3 = p2.call(null, x);
                if (cljs.core.truth_(and__3396__auto____$3)) {
                  var and__3396__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3396__auto____$4)) {
                    return p2.call(null, z);
                  } else {
                    return and__3396__auto____$4;
                  }
                } else {
                  return and__3396__auto____$3;
                }
              } else {
                return and__3396__auto____$2;
              }
            } else {
              return and__3396__auto____$1;
            }
          } else {
            return and__3396__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__9699__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep2.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__9691_SHARP_) {
            var and__3396__auto__ = p1.call(null, p1__9691_SHARP_);
            if (cljs.core.truth_(and__3396__auto__)) {
              return p2.call(null, p1__9691_SHARP_);
            } else {
              return and__3396__auto__;
            }
          }, args));
        };
        var G__9699 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__9699__delegate.call(this, x, y, z, args);
        };
        G__9699.cljs$lang$maxFixedArity = 3;
        G__9699.cljs$lang$applyTo = function(arglist__9700) {
          var x = cljs.core.first(arglist__9700);
          arglist__9700 = cljs.core.next(arglist__9700);
          var y = cljs.core.first(arglist__9700);
          arglist__9700 = cljs.core.next(arglist__9700);
          var z = cljs.core.first(arglist__9700);
          var args = cljs.core.rest(arglist__9700);
          return G__9699__delegate(x, y, z, args);
        };
        G__9699.cljs$core$IFn$_invoke$arity$variadic = G__9699__delegate;
        return G__9699;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3396__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3396__auto__)) {
            var and__3396__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3396__auto____$1)) {
              return p3.call(null, x);
            } else {
              return and__3396__auto____$1;
            }
          } else {
            return and__3396__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3396__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3396__auto__)) {
            var and__3396__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3396__auto____$1)) {
              var and__3396__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3396__auto____$2)) {
                var and__3396__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3396__auto____$3)) {
                  var and__3396__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3396__auto____$4)) {
                    return p3.call(null, y);
                  } else {
                    return and__3396__auto____$4;
                  }
                } else {
                  return and__3396__auto____$3;
                }
              } else {
                return and__3396__auto____$2;
              }
            } else {
              return and__3396__auto____$1;
            }
          } else {
            return and__3396__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3396__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3396__auto__)) {
            var and__3396__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3396__auto____$1)) {
              var and__3396__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3396__auto____$2)) {
                var and__3396__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3396__auto____$3)) {
                  var and__3396__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3396__auto____$4)) {
                    var and__3396__auto____$5 = p3.call(null, y);
                    if (cljs.core.truth_(and__3396__auto____$5)) {
                      var and__3396__auto____$6 = p1.call(null, z);
                      if (cljs.core.truth_(and__3396__auto____$6)) {
                        var and__3396__auto____$7 = p2.call(null, z);
                        if (cljs.core.truth_(and__3396__auto____$7)) {
                          return p3.call(null, z);
                        } else {
                          return and__3396__auto____$7;
                        }
                      } else {
                        return and__3396__auto____$6;
                      }
                    } else {
                      return and__3396__auto____$5;
                    }
                  } else {
                    return and__3396__auto____$4;
                  }
                } else {
                  return and__3396__auto____$3;
                }
              } else {
                return and__3396__auto____$2;
              }
            } else {
              return and__3396__auto____$1;
            }
          } else {
            return and__3396__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__9701__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep3.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__9692_SHARP_) {
            var and__3396__auto__ = p1.call(null, p1__9692_SHARP_);
            if (cljs.core.truth_(and__3396__auto__)) {
              var and__3396__auto____$1 = p2.call(null, p1__9692_SHARP_);
              if (cljs.core.truth_(and__3396__auto____$1)) {
                return p3.call(null, p1__9692_SHARP_);
              } else {
                return and__3396__auto____$1;
              }
            } else {
              return and__3396__auto__;
            }
          }, args));
        };
        var G__9701 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__9701__delegate.call(this, x, y, z, args);
        };
        G__9701.cljs$lang$maxFixedArity = 3;
        G__9701.cljs$lang$applyTo = function(arglist__9702) {
          var x = cljs.core.first(arglist__9702);
          arglist__9702 = cljs.core.next(arglist__9702);
          var y = cljs.core.first(arglist__9702);
          arglist__9702 = cljs.core.next(arglist__9702);
          var z = cljs.core.first(arglist__9702);
          var args = cljs.core.rest(arglist__9702);
          return G__9701__delegate(x, y, z, args);
        };
        G__9701.cljs$core$IFn$_invoke$arity$variadic = G__9701__delegate;
        return G__9701;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__9703__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true;
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__9693_SHARP_) {
            return p1__9693_SHARP_.call(null, x);
          }, ps__$1);
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__9694_SHARP_) {
            var and__3396__auto__ = p1__9694_SHARP_.call(null, x);
            if (cljs.core.truth_(and__3396__auto__)) {
              return p1__9694_SHARP_.call(null, y);
            } else {
              return and__3396__auto__;
            }
          }, ps__$1);
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__9695_SHARP_) {
            var and__3396__auto__ = p1__9695_SHARP_.call(null, x);
            if (cljs.core.truth_(and__3396__auto__)) {
              var and__3396__auto____$1 = p1__9695_SHARP_.call(null, y);
              if (cljs.core.truth_(and__3396__auto____$1)) {
                return p1__9695_SHARP_.call(null, z);
              } else {
                return and__3396__auto____$1;
              }
            } else {
              return and__3396__auto__;
            }
          }, ps__$1);
        };
        var epn__4 = function() {
          var G__9704__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, epn.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__9696_SHARP_) {
              return cljs.core.every_QMARK_.call(null, p1__9696_SHARP_, args);
            }, ps__$1));
          };
          var G__9704 = function(x, y, z, var_args) {
            var args = null;
            if (arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
            }
            return G__9704__delegate.call(this, x, y, z, args);
          };
          G__9704.cljs$lang$maxFixedArity = 3;
          G__9704.cljs$lang$applyTo = function(arglist__9705) {
            var x = cljs.core.first(arglist__9705);
            arglist__9705 = cljs.core.next(arglist__9705);
            var y = cljs.core.first(arglist__9705);
            arglist__9705 = cljs.core.next(arglist__9705);
            var z = cljs.core.first(arglist__9705);
            var args = cljs.core.rest(arglist__9705);
            return G__9704__delegate(x, y, z, args);
          };
          G__9704.cljs$core$IFn$_invoke$arity$variadic = G__9704__delegate;
          return G__9704;
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
        epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
        epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
        epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
        epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
        return epn;
      }();
    };
    var G__9703 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__9703__delegate.call(this, p1, p2, p3, ps);
    };
    G__9703.cljs$lang$maxFixedArity = 3;
    G__9703.cljs$lang$applyTo = function(arglist__9706) {
      var p1 = cljs.core.first(arglist__9706);
      arglist__9706 = cljs.core.next(arglist__9706);
      var p2 = cljs.core.first(arglist__9706);
      arglist__9706 = cljs.core.next(arglist__9706);
      var p3 = cljs.core.first(arglist__9706);
      var ps = cljs.core.rest(arglist__9706);
      return G__9703__delegate(p1, p2, p3, ps);
    };
    G__9703.cljs$core$IFn$_invoke$arity$variadic = G__9703__delegate;
    return G__9703;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        return p.call(null, x);
      };
      var sp1__2 = function(x, y) {
        var or__3408__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          return p.call(null, y);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3408__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = p.call(null, y);
          if (cljs.core.truth_(or__3408__auto____$1)) {
            return or__3408__auto____$1;
          } else {
            return p.call(null, z);
          }
        }
      };
      var sp1__4 = function() {
        var G__9713__delegate = function(x, y, z, args) {
          var or__3408__auto__ = sp1.call(null, x, y, z);
          if (cljs.core.truth_(or__3408__auto__)) {
            return or__3408__auto__;
          } else {
            return cljs.core.some.call(null, p, args);
          }
        };
        var G__9713 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__9713__delegate.call(this, x, y, z, args);
        };
        G__9713.cljs$lang$maxFixedArity = 3;
        G__9713.cljs$lang$applyTo = function(arglist__9714) {
          var x = cljs.core.first(arglist__9714);
          arglist__9714 = cljs.core.next(arglist__9714);
          var y = cljs.core.first(arglist__9714);
          arglist__9714 = cljs.core.next(arglist__9714);
          var z = cljs.core.first(arglist__9714);
          var args = cljs.core.rest(arglist__9714);
          return G__9713__delegate(x, y, z, args);
        };
        G__9713.cljs$core$IFn$_invoke$arity$variadic = G__9713__delegate;
        return G__9713;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3408__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          return p2.call(null, x);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3408__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3408__auto____$1)) {
            return or__3408__auto____$1;
          } else {
            var or__3408__auto____$2 = p2.call(null, x);
            if (cljs.core.truth_(or__3408__auto____$2)) {
              return or__3408__auto____$2;
            } else {
              return p2.call(null, y);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3408__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3408__auto____$1)) {
            return or__3408__auto____$1;
          } else {
            var or__3408__auto____$2 = p1.call(null, z);
            if (cljs.core.truth_(or__3408__auto____$2)) {
              return or__3408__auto____$2;
            } else {
              var or__3408__auto____$3 = p2.call(null, x);
              if (cljs.core.truth_(or__3408__auto____$3)) {
                return or__3408__auto____$3;
              } else {
                var or__3408__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3408__auto____$4)) {
                  return or__3408__auto____$4;
                } else {
                  return p2.call(null, z);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__9715__delegate = function(x, y, z, args) {
          var or__3408__auto__ = sp2.call(null, x, y, z);
          if (cljs.core.truth_(or__3408__auto__)) {
            return or__3408__auto__;
          } else {
            return cljs.core.some.call(null, function(p1__9707_SHARP_) {
              var or__3408__auto____$1 = p1.call(null, p1__9707_SHARP_);
              if (cljs.core.truth_(or__3408__auto____$1)) {
                return or__3408__auto____$1;
              } else {
                return p2.call(null, p1__9707_SHARP_);
              }
            }, args);
          }
        };
        var G__9715 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__9715__delegate.call(this, x, y, z, args);
        };
        G__9715.cljs$lang$maxFixedArity = 3;
        G__9715.cljs$lang$applyTo = function(arglist__9716) {
          var x = cljs.core.first(arglist__9716);
          arglist__9716 = cljs.core.next(arglist__9716);
          var y = cljs.core.first(arglist__9716);
          arglist__9716 = cljs.core.next(arglist__9716);
          var z = cljs.core.first(arglist__9716);
          var args = cljs.core.rest(arglist__9716);
          return G__9715__delegate(x, y, z, args);
        };
        G__9715.cljs$core$IFn$_invoke$arity$variadic = G__9715__delegate;
        return G__9715;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3408__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3408__auto____$1)) {
            return or__3408__auto____$1;
          } else {
            return p3.call(null, x);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3408__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3408__auto____$1)) {
            return or__3408__auto____$1;
          } else {
            var or__3408__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3408__auto____$2)) {
              return or__3408__auto____$2;
            } else {
              var or__3408__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3408__auto____$3)) {
                return or__3408__auto____$3;
              } else {
                var or__3408__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3408__auto____$4)) {
                  return or__3408__auto____$4;
                } else {
                  return p3.call(null, y);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3408__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3408__auto____$1)) {
            return or__3408__auto____$1;
          } else {
            var or__3408__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3408__auto____$2)) {
              return or__3408__auto____$2;
            } else {
              var or__3408__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3408__auto____$3)) {
                return or__3408__auto____$3;
              } else {
                var or__3408__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3408__auto____$4)) {
                  return or__3408__auto____$4;
                } else {
                  var or__3408__auto____$5 = p3.call(null, y);
                  if (cljs.core.truth_(or__3408__auto____$5)) {
                    return or__3408__auto____$5;
                  } else {
                    var or__3408__auto____$6 = p1.call(null, z);
                    if (cljs.core.truth_(or__3408__auto____$6)) {
                      return or__3408__auto____$6;
                    } else {
                      var or__3408__auto____$7 = p2.call(null, z);
                      if (cljs.core.truth_(or__3408__auto____$7)) {
                        return or__3408__auto____$7;
                      } else {
                        return p3.call(null, z);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__9717__delegate = function(x, y, z, args) {
          var or__3408__auto__ = sp3.call(null, x, y, z);
          if (cljs.core.truth_(or__3408__auto__)) {
            return or__3408__auto__;
          } else {
            return cljs.core.some.call(null, function(p1__9708_SHARP_) {
              var or__3408__auto____$1 = p1.call(null, p1__9708_SHARP_);
              if (cljs.core.truth_(or__3408__auto____$1)) {
                return or__3408__auto____$1;
              } else {
                var or__3408__auto____$2 = p2.call(null, p1__9708_SHARP_);
                if (cljs.core.truth_(or__3408__auto____$2)) {
                  return or__3408__auto____$2;
                } else {
                  return p3.call(null, p1__9708_SHARP_);
                }
              }
            }, args);
          }
        };
        var G__9717 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__9717__delegate.call(this, x, y, z, args);
        };
        G__9717.cljs$lang$maxFixedArity = 3;
        G__9717.cljs$lang$applyTo = function(arglist__9718) {
          var x = cljs.core.first(arglist__9718);
          arglist__9718 = cljs.core.next(arglist__9718);
          var y = cljs.core.first(arglist__9718);
          arglist__9718 = cljs.core.next(arglist__9718);
          var z = cljs.core.first(arglist__9718);
          var args = cljs.core.rest(arglist__9718);
          return G__9717__delegate(x, y, z, args);
        };
        G__9717.cljs$core$IFn$_invoke$arity$variadic = G__9717__delegate;
        return G__9717;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__9719__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null;
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__9709_SHARP_) {
            return p1__9709_SHARP_.call(null, x);
          }, ps__$1);
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__9710_SHARP_) {
            var or__3408__auto__ = p1__9710_SHARP_.call(null, x);
            if (cljs.core.truth_(or__3408__auto__)) {
              return or__3408__auto__;
            } else {
              return p1__9710_SHARP_.call(null, y);
            }
          }, ps__$1);
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__9711_SHARP_) {
            var or__3408__auto__ = p1__9711_SHARP_.call(null, x);
            if (cljs.core.truth_(or__3408__auto__)) {
              return or__3408__auto__;
            } else {
              var or__3408__auto____$1 = p1__9711_SHARP_.call(null, y);
              if (cljs.core.truth_(or__3408__auto____$1)) {
                return or__3408__auto____$1;
              } else {
                return p1__9711_SHARP_.call(null, z);
              }
            }
          }, ps__$1);
        };
        var spn__4 = function() {
          var G__9720__delegate = function(x, y, z, args) {
            var or__3408__auto__ = spn.call(null, x, y, z);
            if (cljs.core.truth_(or__3408__auto__)) {
              return or__3408__auto__;
            } else {
              return cljs.core.some.call(null, function(p1__9712_SHARP_) {
                return cljs.core.some.call(null, p1__9712_SHARP_, args);
              }, ps__$1);
            }
          };
          var G__9720 = function(x, y, z, var_args) {
            var args = null;
            if (arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
            }
            return G__9720__delegate.call(this, x, y, z, args);
          };
          G__9720.cljs$lang$maxFixedArity = 3;
          G__9720.cljs$lang$applyTo = function(arglist__9721) {
            var x = cljs.core.first(arglist__9721);
            arglist__9721 = cljs.core.next(arglist__9721);
            var y = cljs.core.first(arglist__9721);
            arglist__9721 = cljs.core.next(arglist__9721);
            var z = cljs.core.first(arglist__9721);
            var args = cljs.core.rest(arglist__9721);
            return G__9720__delegate(x, y, z, args);
          };
          G__9720.cljs$core$IFn$_invoke$arity$variadic = G__9720__delegate;
          return G__9720;
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
        spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
        spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
        spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
        spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
        return spn;
      }();
    };
    var G__9719 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__9719__delegate.call(this, p1, p2, p3, ps);
    };
    G__9719.cljs$lang$maxFixedArity = 3;
    G__9719.cljs$lang$applyTo = function(arglist__9722) {
      var p1 = cljs.core.first(arglist__9722);
      arglist__9722 = cljs.core.next(arglist__9722);
      var p2 = cljs.core.first(arglist__9722);
      arglist__9722 = cljs.core.next(arglist__9722);
      var p3 = cljs.core.first(arglist__9722);
      var ps = cljs.core.rest(arglist__9722);
      return G__9719__delegate(p1, p2, p3, ps);
    };
    G__9719.cljs$core$IFn$_invoke$arity$variadic = G__9719__delegate;
    return G__9719;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4250__auto___9724 = size;
          var i_9725 = 0;
          while (true) {
            if (i_9725 < n__4250__auto___9724) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_9725)));
              var G__9726 = i_9725 + 1;
              i_9725 = G__9726;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if (s1 && (s2 && s3)) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__9727__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.call(null, function(p1__9723_SHARP_) {
        return cljs.core.apply.call(null, f, p1__9723_SHARP_);
      }, step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)));
    };
    var G__9727 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__9727__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__9727.cljs$lang$maxFixedArity = 4;
    G__9727.cljs$lang$applyTo = function(arglist__9728) {
      var f = cljs.core.first(arglist__9728);
      arglist__9728 = cljs.core.next(arglist__9728);
      var c1 = cljs.core.first(arglist__9728);
      arglist__9728 = cljs.core.next(arglist__9728);
      var c2 = cljs.core.first(arglist__9728);
      arglist__9728 = cljs.core.next(arglist__9728);
      var c3 = cljs.core.first(arglist__9728);
      var colls = cljs.core.rest(arglist__9728);
      return G__9727__delegate(f, c1, c2, c3, colls);
    };
    G__9727.cljs$core$IFn$_invoke$arity$variadic = G__9727__delegate;
    return G__9727;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.drop = function drop(n, coll) {
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if (n__$1 > 0 && s) {
        var G__9729 = n__$1 - 1;
        var G__9730 = cljs.core.rest.call(null, s);
        n__$1 = G__9729;
        coll__$1 = G__9730;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step.call(null, n, coll);
  }, null, null);
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x;
    }, s, cljs.core.drop.call(null, n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while (true) {
    if (lead) {
      var G__9731 = cljs.core.next.call(null, s);
      var G__9732 = cljs.core.next.call(null, lead);
      s = G__9731;
      lead = G__9732;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if (cljs.core.truth_(function() {
        var and__3396__auto__ = s;
        if (and__3396__auto__) {
          return pred__$1.call(null, cljs.core.first.call(null, s));
        } else {
          return and__3396__auto__;
        }
      }())) {
        var G__9733 = pred__$1;
        var G__9734 = cljs.core.rest.call(null, s);
        pred__$1 = G__9733;
        coll__$1 = G__9734;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step.call(null, pred, coll);
  }, null, null);
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__9735__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__9735 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9735__delegate.call(this, c1, c2, colls);
    };
    G__9735.cljs$lang$maxFixedArity = 2;
    G__9735.cljs$lang$applyTo = function(arglist__9736) {
      var c1 = cljs.core.first(arglist__9736);
      arglist__9736 = cljs.core.next(arglist__9736);
      var c2 = cljs.core.first(arglist__9736);
      var colls = cljs.core.rest(arglist__9736);
      return G__9735__delegate(c1, c2, colls);
    };
    G__9735.cljs$core$IFn$_invoke$arity$variadic = G__9735__delegate;
    return G__9735;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4090__auto__) {
        var coll__$1 = temp__4090__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1));
      } else {
        if (cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat.call(null, null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll));
  };
  var mapcat__3 = function() {
    var G__9737__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls));
    };
    var G__9737 = function(f, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9737__delegate.call(this, f, coll, colls);
    };
    G__9737.cljs$lang$maxFixedArity = 2;
    G__9737.cljs$lang$applyTo = function(arglist__9738) {
      var f = cljs.core.first(arglist__9738);
      arglist__9738 = cljs.core.next(arglist__9738);
      var coll = cljs.core.first(arglist__9738);
      var colls = cljs.core.rest(arglist__9738);
      return G__9737__delegate(f, coll, colls);
    };
    G__9737.cljs$core$IFn$_invoke$arity$variadic = G__9737__delegate;
    return G__9737;
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__4250__auto___9739 = size;
        var i_9740 = 0;
        while (true) {
          if (i_9740 < n__4250__auto___9739) {
            if (cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_9740)))) {
              cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_9740));
            } else {
            }
            var G__9741 = i_9740 + 1;
            i_9740 = G__9741;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)));
      } else {
        var f = cljs.core.first.call(null, s);
        var r = cljs.core.rest.call(null, s);
        if (cljs.core.truth_(pred.call(null, f))) {
          return cljs.core.cons.call(null, f, filter.call(null, pred, r));
        } else {
          return filter.call(null, pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll);
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null);
    }, null, null);
  };
  return walk.call(null, root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__9742_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__9742_SHARP_);
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function into(to, from) {
  if (!(to == null)) {
    if (function() {
      var G__9744 = to;
      if (G__9744) {
        var bit__4045__auto__ = G__9744.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4045__auto__ || G__9744.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from));
    } else {
      return cljs.core.reduce.call(null, cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o));
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__9745__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls));
    };
    var G__9745 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__9745__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__9745.cljs$lang$maxFixedArity = 4;
    G__9745.cljs$lang$applyTo = function(arglist__9746) {
      var f = cljs.core.first(arglist__9746);
      arglist__9746 = cljs.core.next(arglist__9746);
      var c1 = cljs.core.first(arglist__9746);
      arglist__9746 = cljs.core.next(arglist__9746);
      var c2 = cljs.core.first(arglist__9746);
      arglist__9746 = cljs.core.next(arglist__9746);
      var c3 = cljs.core.first(arglist__9746);
      var colls = cljs.core.rest(arglist__9746);
      return G__9745__delegate(f, c1, c2, c3, colls);
    };
    G__9745.cljs$core$IFn$_invoke$arity$variadic = G__9745__delegate;
    return G__9745;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if (cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)));
        } else {
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__9748 = m__$1;
          if (G__9748) {
            var bit__4052__auto__ = G__9748.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4052__auto__ || G__9748.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__9748.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__9748);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__9748);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__9749 = sentinel;
            var G__9750 = m__$2;
            var G__9751 = cljs.core.next.call(null, ks__$1);
            sentinel = G__9749;
            m__$1 = G__9750;
            ks__$1 = G__9751;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__9752, v) {
  var vec__9754 = p__9752;
  var k = cljs.core.nth.call(null, vec__9754, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__9754, 1);
  if (ks) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v));
  } else {
    return cljs.core.assoc.call(null, m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__9755, f) {
    var vec__9765 = p__9755;
    var k = cljs.core.nth.call(null, vec__9765, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__9765, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
    }
  };
  var update_in__4 = function(m, p__9756, f, a) {
    var vec__9766 = p__9756;
    var k = cljs.core.nth.call(null, vec__9766, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__9766, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a));
    }
  };
  var update_in__5 = function(m, p__9757, f, a, b) {
    var vec__9767 = p__9757;
    var k = cljs.core.nth.call(null, vec__9767, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__9767, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b));
    }
  };
  var update_in__6 = function(m, p__9758, f, a, b, c) {
    var vec__9768 = p__9758;
    var k = cljs.core.nth.call(null, vec__9768, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__9768, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c));
    }
  };
  var update_in__7 = function() {
    var G__9770__delegate = function(m, p__9759, f, a, b, c, args) {
      var vec__9769 = p__9759;
      var k = cljs.core.nth.call(null, vec__9769, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__9769, 1);
      if (ks) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args));
      } else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args));
      }
    };
    var G__9770 = function(m, p__9759, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__9770__delegate.call(this, m, p__9759, f, a, b, c, args);
    };
    G__9770.cljs$lang$maxFixedArity = 6;
    G__9770.cljs$lang$applyTo = function(arglist__9771) {
      var m = cljs.core.first(arglist__9771);
      arglist__9771 = cljs.core.next(arglist__9771);
      var p__9759 = cljs.core.first(arglist__9771);
      arglist__9771 = cljs.core.next(arglist__9771);
      var f = cljs.core.first(arglist__9771);
      arglist__9771 = cljs.core.next(arglist__9771);
      var a = cljs.core.first(arglist__9771);
      arglist__9771 = cljs.core.next(arglist__9771);
      var b = cljs.core.first(arglist__9771);
      arglist__9771 = cljs.core.next(arglist__9771);
      var c = cljs.core.first(arglist__9771);
      var args = cljs.core.rest(arglist__9771);
      return G__9770__delegate(m, p__9759, f, a, b, c, args);
    };
    G__9770.cljs$core$IFn$_invoke$arity$variadic = G__9770__delegate;
    return G__9770;
  }();
  update_in = function(m, p__9759, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__9759, f);
      case 4:
        return update_in__4.call(this, m, p__9759, f, a);
      case 5:
        return update_in__5.call(this, m, p__9759, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__9759, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__9759, f, a, b, c, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__3973__auto__, writer__3974__auto__, opts__3975__auto__) {
  return cljs.core._write.call(null, writer__3974__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__9772 = ll - 5;
      var G__9773 = r;
      ll = G__9772;
      ret = G__9773;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    if (i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail;
    } else {
      var node = pv.root;
      var level = pv.shift;
      while (true) {
        if (level > 0) {
          var G__9774 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
          var G__9775 = level - 5;
          node = G__9774;
          level = G__9775;
          continue;
        } else {
          return node.arr;
        }
        break;
      }
    }
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if (level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var ret = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret, subidx, null);
        return ret;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentVector");
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found);
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= k && k < self__.cnt) {
    if (cljs.core.tail_off.call(null, coll__$1) <= k) {
      var new_tail = cljs.core.aclone.call(null, self__.tail);
      new_tail[k & 31] = v;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, k, v), self__.tail, null);
    }
  } else {
    if (k === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, v);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__9777 = null;
  var G__9777__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__9777__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__9777 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9777__2.call(this, self__, k);
      case 3:
        return G__9777__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9777;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args9776) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args9776)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var step_init = [0, init];
  var i = 0;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while (true) {
          if (j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2;
            } else {
              var G__9778 = j + 1;
              var G__9779 = init__$2;
              j = G__9778;
              init__$1 = G__9779;
              continue;
            }
          } else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1);
      } else {
        var G__9780 = i + step_init[0];
        i = G__9780;
        continue;
      }
    } else {
      return step_init[1];
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4250__auto___9781 = len;
    var i_9782 = 0;
    while (true) {
      if (i_9782 < n__4250__auto___9781) {
        new_tail[i_9782] = self__.tail[i_9782];
        var G__9783 = i_9782 + 1;
        i_9782 = G__9783;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1);
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f, start);
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt < 32) {
      return cljs.core.array_seq.call(null, self__.tail);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.chunked_seq.call(null, coll__$1, 0, 0);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_tail = cljs.core.array_for.call(null, coll__$1, self__.cnt - 2);
          var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
          var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
          var cnt_1 = self__.cnt - 1;
          if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null);
          } else {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._assoc.call(null, coll__$1, n, val);
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone.call(null, xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while (true) {
      if (i < l) {
        var G__9784 = i + 1;
        var G__9785 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__9784;
        out = G__9785;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray.call(null, args.arr, true);
    } else {
      return cljs.core.vec.call(null, args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__9786) {
    var args = cljs.core.seq(arglist__9786);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if (s == null) {
    return null;
  } else {
    return s;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if (s == null) {
    return cljs.core.List.EMPTY;
  } else {
    return s;
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159;
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/Subvec");
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + key;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3715__auto__ = self__.end;
    var y__3716__auto__ = v_pos + 1;
    return x__3715__auto__ > y__3716__auto__ ? x__3715__auto__ : y__3716__auto__;
  }(), null);
};
cljs.core.Subvec.prototype.call = function() {
  var G__9788 = null;
  var G__9788__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__9788__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__9788 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9788__2.call(this, self__, k);
      case 3:
        return G__9788__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9788;
}();
cljs.core.Subvec.prototype.apply = function(self__, args9787) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args9787)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function subvec_seq(i) {
    if (i === self__.end) {
      return null;
    } else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function() {
        return subvec_seq.call(null, i + 1);
      }, null, null));
    }
  };
  return subvec_seq.call(null, self__.start);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._assoc.call(null, coll__$1, n, val);
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$ = true;
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start);
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__9789 = meta;
      var G__9790 = v.v;
      var G__9791 = v.start + start;
      var G__9792 = v.start + end;
      var G__9793 = __hash;
      meta = G__9789;
      v = G__9790;
      start = G__9791;
      end = G__9792;
      __hash = G__9793;
      continue;
    } else {
      var c = cljs.core.count.call(null, v);
      if (start < 0 || (end < 0 || (start > c || end > c))) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj9797 = {};
    return obj9797;
  }(), cljs.core.aclone.call(null, node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if (!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        cljs.core.pv_aset.call(null, node__$1, subidx, null);
        return node__$1;
      } else {
        return null;
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if (0 <= i && i < tv.cnt) {
    if (i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail;
    } else {
      var root = tv.root;
      var node = root;
      var level = tv.shift;
      while (true) {
        if (level > 0) {
          var G__9798 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
          var G__9799 = level - 5;
          node = G__9798;
          level = G__9799;
          continue;
        } else {
          return node.arr;
        }
        break;
      }
    }
  } else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/TransientVector");
};
cljs.core.TransientVector.prototype.call = function() {
  var G__9801 = null;
  var G__9801__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9801__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9801 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9801__2.call(this, self__, k);
      case 3:
        return G__9801__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9801;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args9800) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args9800)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function go(level, node) {
          var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
          if (level === 0) {
            cljs.core.pv_aset.call(null, node__$1, n & 31, val);
            return node__$1;
          } else {
            var subidx = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
            return node__$1;
          }
        }.call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
        } else {
          return null;
        }
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var new_tail = cljs.core.editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
            var new_root = function() {
              var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
              if (!(nr == null)) {
                return nr;
              } else {
                return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
              }
            }();
            if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
              var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
              self__.root = new_root__$1;
              self__.shift = self__.shift - 5;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1;
            } else {
              self__.root = new_root;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1;
            }
          } else {
            return null;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val);
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
  if (temp__4090__auto__) {
    var f1 = temp__4090__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentQueue");
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3408__auto__ = self__.rear;
      if (cljs.core.truth_(or__3408__auto__)) {
        return or__3408__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if (cljs.core.truth_(function() {
    var or__3408__auto__ = self__.front;
    if (cljs.core.truth_(or__3408__auto__)) {
      return or__3408__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
    if (temp__4090__auto__) {
      var f1 = temp__4090__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY;
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/NeverEquiv");
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__9802 = i + incr;
        i = G__9802;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__9803 = i + 1;
      var G__9804 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__9803;
      out = G__9804;
      continue;
    } else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj9808 = {};
    return obj9808;
  }();
  var l = ks.length;
  var i_9809 = 0;
  while (true) {
    if (i_9809 < l) {
      var k_9810 = ks[i_9809];
      new_obj[k_9810] = obj[k_9810];
      var G__9811 = i_9809 + 1;
      i_9809 = G__9811;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/ObjMap");
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone.call(null, self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__9814 = null;
  var G__9814__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9814__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9814 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9814__2.call(this, self__, k);
      case 3:
        return G__9814__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9814;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args9813) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args9813)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__9815 = cljs.core.rest.call(null, keys__$1);
        var G__9816 = init__$2;
        keys__$1 = G__9815;
        init__$1 = G__9816;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__9812_SHARP_) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__9812_SHARP_, self__.strobj[p1__9812_SHARP_]], null);
    }, self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone.call(null, self__.keys);
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj9818 = {};
  return obj9818;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__9819 = i + 2;
          i = G__9819;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__9820 = i + 2;
          i = G__9820;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__9821 = i + 2;
          i = G__9821;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__9822 = i + 2;
          i = G__9822;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.call(null, k, arr[i])) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__9823 = i + 2;
          i = G__9823;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_9824 = 0;
  while (true) {
    if (i_9824 < l) {
      narr[i_9824] = arr[i_9824];
      var G__9825 = i_9824 + 1;
      i_9824 = G__9825;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj9828 = {};
    return obj9828;
  }(), self__.arr.length, cljs.core.aclone.call(null, self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var arr__$1 = function() {
          var G__9829 = cljs.core.aclone.call(null, self__.arr);
          G__9829[idx + 1] = v;
          return G__9829;
        }();
        return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__9830 = null;
  var G__9830__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9830__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9830 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9830__2.call(this, self__, k);
      case 3:
        return G__9830__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9830;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args9826) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args9826)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__9831 = i + 2;
        var G__9832 = init__$2;
        i = G__9831;
        init__$1 = G__9832;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__9833 = s + 2;
            var G__9834 = d;
            s = G__9833;
            d = G__9834;
            continue;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              new_arr[d] = self__.arr[s];
              new_arr[d + 1] = self__.arr[s + 1];
              var G__9835 = s + 2;
              var G__9836 = d + 2;
              s = G__9835;
              d = G__9836;
              continue;
            } else {
              return null;
            }
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone.call(null, arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__9837 = i + 2;
        var G__9838 = cljs.core._assoc_BANG_.call(null, ret, arr__$1[i], arr__$1[i + 1]);
        i = G__9837;
        ret = G__9838;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, ret);
      }
      break;
    }
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__9839_9841 = self__.arr;
      G__9839_9841.pop();
      G__9839_9841.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__9840 = o;
      if (G__9840) {
        var bit__4052__auto__ = G__9840.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4052__auto__ || G__9840.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__9840.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__9840);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__9840);
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__9842 = cljs.core.next.call(null, es);
          var G__9843 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__9842;
          tcoll__$2 = G__9843;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__9844 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__9845 = i + 2;
      out = G__9844;
      i = G__9845;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__3973__auto__, writer__3974__auto__, opts__3975__auto__) {
  return cljs.core._write.call(null, writer__3974__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core._EQ_.call(null, key, other);
      } else {
        return null;
      }
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__9848 = cljs.core.aclone.call(null, arr);
    G__9848[i] = a;
    return G__9848;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__9849 = cljs.core.aclone.call(null, arr);
    G__9849[i] = a;
    G__9849[j] = b;
    return G__9849;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1]);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__9850 = i + 2;
        var G__9851 = init__$2;
        i = G__9850;
        init__$1 = G__9851;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_9852 = 0;
        var j_9853 = 0;
        while (true) {
          if (i_9852 < 32) {
            if ((self__.bitmap >>> i_9852 & 1) === 0) {
              var G__9854 = i_9852 + 1;
              var G__9855 = j_9853;
              i_9852 = G__9854;
              j_9853 = G__9855;
              continue;
            } else {
              nodes[i_9852] = !(self__.arr[j_9853] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_9853]), self__.arr[j_9853], self__.arr[j_9853 + 1], added_leaf_QMARK_) : self__.arr[j_9853 + 1];
              var G__9856 = i_9852 + 1;
              var G__9857 = j_9853 + 2;
              i_9852 = G__9856;
              j_9853 = G__9857;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_arr = new Array(2 * (n + 4));
          cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
          new_arr[2 * idx] = key;
          new_arr[2 * idx + 1] = val;
          cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
          added_leaf_QMARK_.val = true;
          var editable = inode.ensure_editable(edit__$1);
          editable.arr = new_arr;
          editable.bitmap = editable.bitmap | bit;
          return editable;
        } else {
          return null;
        }
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return inode.edit_and_remove_pair(edit__$1, bit, idx);
            } else {
              return null;
            }
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
            } else {
              return null;
            }
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_9858 = 0;
      var j_9859 = 0;
      while (true) {
        if (i_9858 < 32) {
          if ((self__.bitmap >>> i_9858 & 1) === 0) {
            var G__9860 = i_9858 + 1;
            var G__9861 = j_9859;
            i_9858 = G__9860;
            j_9859 = G__9861;
            continue;
          } else {
            nodes[i_9858] = !(self__.arr[j_9859] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_9859]), self__.arr[j_9859], self__.arr[j_9859 + 1], added_leaf_QMARK_) : self__.arr[j_9859 + 1];
            var G__9862 = i_9858 + 1;
            var G__9863 = j_9859 + 2;
            i_9858 = G__9862;
            j_9859 = G__9863;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val));
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)));
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__9864 = i + 1;
        var G__9865 = j + 2;
        var G__9866 = bitmap | 1 << i;
        i = G__9864;
        j = G__9865;
        bitmap = G__9866;
        continue;
      } else {
        var G__9867 = i + 1;
        var G__9868 = j;
        var G__9869 = bitmap;
        i = G__9867;
        j = G__9868;
        bitmap = G__9869;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/ArrayNode");
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone.call(null, self__.arr));
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2);
        } else {
          var G__9870 = i + 1;
          var G__9871 = init__$2;
          i = G__9870;
          init__$1 = G__9871;
          continue;
        }
      } else {
        var G__9872 = i + 1;
        var G__9873 = init__$1;
        i = G__9872;
        init__$1 = G__9873;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        } else {
          return null;
        }
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test.call(null, key, arr[i])) {
        return i;
      } else {
        var G__9874 = i + 2;
        i = G__9874;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)));
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/NodeSeq");
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4090__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4090__auto__)) {
              var node = temp__4090__auto__;
              var temp__4090__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4090__auto____$1)) {
                var node_seq = temp__4090__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__9875 = j + 2;
                j = G__9875;
                continue;
              }
            } else {
              var G__9876 = j + 2;
              j = G__9876;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4090__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4090__auto__)) {
            var nj = temp__4090__auto__;
            var temp__4090__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4090__auto____$1)) {
              var ns = temp__4090__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__9877 = j + 1;
              j = G__9877;
              continue;
            }
          } else {
            var G__9878 = j + 1;
            j = G__9878;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj9881 = {};
    return obj9881;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__9882 = null;
  var G__9882__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9882__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9882 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9882__2.call(this, self__, k);
      case 3:
        return G__9882__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9882;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args9879) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args9879)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return init__$1;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if (new_root === self__.root) {
          return coll__$1;
        } else {
          return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__9883 = i + 1;
      var G__9884 = cljs.core._assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__9883;
      out = G__9884;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, out);
    }
    break;
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/TransientHashMap");
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__9885 = o;
      if (G__9885) {
        var bit__4052__auto__ = G__9885.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4052__auto__ || G__9885.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__9885.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__9885);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__9885);
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__9886 = cljs.core.next.call(null, es);
          var G__9887 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__9886;
          tcoll__$1 = G__9887;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__9888 = ascending_QMARK_ ? t.left : t.right;
      var G__9889 = cljs.core.conj.call(null, stack__$1, t);
      t = G__9888;
      stack__$1 = G__9889;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, ins, right, null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, left, ins, null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/BlackNode");
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__9891 = null;
  var G__9891__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9891__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9891 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9891__2.call(this, self__, k);
      case 3:
        return G__9891__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9891;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args9890) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args9890)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/RedNode");
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.call = function() {
  var G__9893 = null;
  var G__9893__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9893__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9893 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9893__2.call(this, self__, k);
      case 3:
        return G__9893__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9893;
}();
cljs.core.RedNode.prototype.apply = function(self__, args9892) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args9892)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
          if (!(ins == null)) {
            return tree.add_right(ins);
          } else {
            return null;
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var app = tree_map_append.call(null, left.right, right.left);
            if (app instanceof cljs.core.RedNode) {
              return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
            } else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
            }
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var del = tree_map_remove.call(null, comp, tree.right, k, found);
          if (!(del == null) || !(found[0] == null)) {
            if (tree.right instanceof cljs.core.BlackNode) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del);
            } else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
            }
          } else {
            return null;
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v));
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if (cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__9895 = null;
  var G__9895__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9895__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9895 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9895__2.call(this, self__, k);
      case 3:
        return G__9895__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9895;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args9894) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args9894)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__9896 = t.left;
          t = G__9896;
          continue;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var G__9897 = t.right;
            t = G__9897;
            continue;
          } else {
            return null;
          }
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__9898 = cljs.core.conj.call(null, stack, t);
              var G__9899 = t.left;
              stack = G__9898;
              t = G__9899;
              continue;
            } else {
              var G__9900 = stack;
              var G__9901 = t.right;
              stack = G__9900;
              t = G__9901;
              continue;
            }
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              if (c > 0) {
                var G__9902 = cljs.core.conj.call(null, stack, t);
                var G__9903 = t.right;
                stack = G__9902;
                t = G__9903;
                continue;
              } else {
                var G__9904 = stack;
                var G__9905 = t.left;
                stack = G__9904;
                t = G__9905;
                continue;
              }
            } else {
              return null;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__9906 = cljs.core.nnext.call(null, in$);
        var G__9907 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__9906;
        out = G__9907;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__9908) {
    var keyvals = cljs.core.seq(arglist__9908);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__9909) {
    var keyvals = cljs.core.seq(arglist__9909);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj9913 = {};
      return obj9913;
    }();
    var kvs = cljs.core.seq.call(null, keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__9914 = cljs.core.nnext.call(null, kvs);
        kvs = G__9914;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject.call(null, ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__9915) {
    var keyvals = cljs.core.seq(arglist__9915);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__9916 = cljs.core.nnext.call(null, in$);
        var G__9917 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__9916;
        out = G__9917;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__9918) {
    var keyvals = cljs.core.seq(arglist__9918);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__9919 = cljs.core.nnext.call(null, in$);
        var G__9920 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__9919;
        out = G__9920;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__9921) {
    var comparator = cljs.core.first(arglist__9921);
    var keyvals = cljs.core.rest(arglist__9921);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/KeySeq");
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__9922 = self__.mseq;
    if (G__9922) {
      var bit__4052__auto__ = G__9922.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4052__auto__ || G__9922.cljs$core$INext$) {
        return true;
      } else {
        if (!G__9922.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__9922);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__9922);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__9923 = self__.mseq;
    if (G__9923) {
      var bit__4052__auto__ = G__9923.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4052__auto__ || G__9923.cljs$core$INext$) {
        return true;
      } else {
        if (!G__9923.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__9923);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__9923);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/ValSeq");
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__9924 = self__.mseq;
    if (G__9924) {
      var bit__4052__auto__ = G__9924.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4052__auto__ || G__9924.cljs$core$INext$) {
        return true;
      } else {
        if (!G__9924.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__9924);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__9924);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__9925 = self__.mseq;
    if (G__9925) {
      var bit__4052__auto__ = G__9925.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4052__auto__ || G__9925.cljs$core$INext$) {
        return true;
      } else {
        if (!G__9925.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__9925);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__9925);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__9926_SHARP_, p2__9927_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3408__auto__ = p1__9926_SHARP_;
          if (cljs.core.truth_(or__3408__auto__)) {
            return or__3408__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__9927_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__9928) {
    var maps = cljs.core.seq(arglist__9928);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if (cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v));
        } else {
          return cljs.core.assoc.call(null, m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3408__auto__ = m1;
            if (cljs.core.truth_(or__3408__auto__)) {
              return or__3408__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq.call(null, m2));
        };
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__9929) {
    var f = cljs.core.first(arglist__9929);
    var maps = cljs.core.rest(arglist__9929);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789));
      var G__9930 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__9931 = cljs.core.next.call(null, keys);
      ret = G__9930;
      keys = G__9931;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__9934 = null;
  var G__9934__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9934__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9934 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9934__2.call(this, self__, k);
      case 3:
        return G__9934__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9934;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args9933) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args9933)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && (cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(p1__9932_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, coll__$1, p1__9932_SHARP_);
  }, other));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone.call(null, items);
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__9935 = i + 1;
        var G__9936 = cljs.core._assoc_BANG_.call(null, out, items[i], null);
        i = G__9935;
        out = G__9936;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_.call(null, out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__9937 = i + 1;
        var G__9938 = cljs.core._conj_BANG_.call(null, out, items[i]);
        i = G__9937;
        out = G__9938;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/TransientHashSet");
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__9940 = null;
  var G__9940__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__9940__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__9940 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9940__2.call(this, self__, k);
      case 3:
        return G__9940__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9940;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args9939) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args9939)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null);
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__9943 = null;
  var G__9943__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9943__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9943 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9943__2.call(this, self__, k);
      case 3:
        return G__9943__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9943;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args9942) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args9942)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && (cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(p1__9941_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, coll__$1, p1__9941_SHARP_);
  }, other));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4244__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4244__auto__.length) {
        var G__9944 = i + 1;
        var G__9945 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__9944;
        res = G__9945;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq.call(null, in$);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var in$__$1 = in$;
        var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
        while (true) {
          if (!(in$__$1 == null)) {
            var G__9946 = cljs.core._next.call(null, in$__$1);
            var G__9947 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
            in$__$1 = G__9946;
            out = G__9947;
            continue;
          } else {
            return cljs.core._persistent_BANG_.call(null, out);
          }
          break;
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__9948__delegate = function(keys) {
      return cljs.core.set.call(null, keys);
    };
    var G__9948 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__9948__delegate.call(this, keys);
    };
    G__9948.cljs$lang$maxFixedArity = 0;
    G__9948.cljs$lang$applyTo = function(arglist__9949) {
      var keys = cljs.core.seq(arglist__9949);
      return G__9948__delegate(keys);
    };
    G__9948.cljs$core$IFn$_invoke$arity$variadic = G__9948__delegate;
    return G__9948;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__9950) {
    var keys = cljs.core.seq(arglist__9950);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__9951) {
    var comparator = cljs.core.first(arglist__9951);
    var keys = cljs.core.rest(arglist__9951);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function replace(smap, coll) {
  if (cljs.core.vector_QMARK_.call(null, coll)) {
    var n = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if (cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e));
      } else {
        return v;
      }
    }, coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)));
  } else {
    return cljs.core.map.call(null, function(p1__9952_SHARP_) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, p1__9952_SHARP_);
      if (cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.second.call(null, e);
      } else {
        return p1__9952_SHARP_;
      }
    }, coll);
  }
};
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__9959, seen__$1) {
        while (true) {
          var vec__9960 = p__9959;
          var f = cljs.core.nth.call(null, vec__9960, 0, null);
          var xs__$1 = vec__9960;
          var temp__4092__auto__ = cljs.core.seq.call(null, xs__$1);
          if (temp__4092__auto__) {
            var s = temp__4092__auto__;
            if (cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__9961 = cljs.core.rest.call(null, s);
              var G__9962 = seen__$1;
              p__9959 = G__9961;
              seen__$1 = G__9962;
              continue;
            } else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next.call(null, s__$1)) {
      var G__9963 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__9964 = cljs.core.next.call(null, s__$1);
      ret = G__9963;
      s__$1 = G__9964;
      continue;
    } else {
      return cljs.core.seq.call(null, ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__9966 = x;
    if (G__9966) {
      var bit__4045__auto__ = G__9966.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4045__auto__ || G__9966.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._name.call(null, x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while (true) {
    if (ks && vs) {
      var G__9967 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__9968 = cljs.core.next.call(null, ks);
      var G__9969 = cljs.core.next.call(null, vs);
      map = G__9967;
      ks = G__9968;
      vs = G__9969;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (k.call(null, x) > k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__9972__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__9970_SHARP_, p2__9971_SHARP_) {
        return max_key.call(null, k, p1__9970_SHARP_, p2__9971_SHARP_);
      }, max_key.call(null, k, x, y), more);
    };
    var G__9972 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__9972__delegate.call(this, k, x, y, more);
    };
    G__9972.cljs$lang$maxFixedArity = 3;
    G__9972.cljs$lang$applyTo = function(arglist__9973) {
      var k = cljs.core.first(arglist__9973);
      arglist__9973 = cljs.core.next(arglist__9973);
      var x = cljs.core.first(arglist__9973);
      arglist__9973 = cljs.core.next(arglist__9973);
      var y = cljs.core.first(arglist__9973);
      var more = cljs.core.rest(arglist__9973);
      return G__9972__delegate(k, x, y, more);
    };
    G__9972.cljs$core$IFn$_invoke$arity$variadic = G__9972__delegate;
    return G__9972;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (k.call(null, x) < k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__9976__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__9974_SHARP_, p2__9975_SHARP_) {
        return min_key.call(null, k, p1__9974_SHARP_, p2__9975_SHARP_);
      }, min_key.call(null, k, x, y), more);
    };
    var G__9976 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__9976__delegate.call(this, k, x, y, more);
    };
    G__9976.cljs$lang$maxFixedArity = 3;
    G__9976.cljs$lang$applyTo = function(arglist__9977) {
      var k = cljs.core.first(arglist__9977);
      arglist__9977 = cljs.core.next(arglist__9977);
      var x = cljs.core.first(arglist__9977);
      arglist__9977 = cljs.core.next(arglist__9977);
      var y = cljs.core.first(arglist__9977);
      var more = cljs.core.rest(arglist__9977);
      return G__9976__delegate(k, x, y, more);
    };
    G__9976.cljs$core$IFn$_invoke$arity$variadic = G__9976__delegate;
    return G__9976;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if (cljs.core.truth_(temp__4092__auto__)) {
        var vec__9980 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__9980, 0, null);
        var s = vec__9980;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var vec__9981 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__9981, 0, null);
      var s = vec__9981;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if (cljs.core.truth_(temp__4092__auto__)) {
        var vec__9984 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__9984, 0, null);
        var s = vec__9984;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var vec__9985 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__9985, 0, null);
      var s = vec__9985;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/Range");
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_coll.call(null, rng__$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1);
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f, s);
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0;
  } else {
    return Math.ceil((self__.end - self__.start) / self__.step);
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq.call(null, rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICloneable$ = true;
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], null);
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      var fst = cljs.core.first.call(null, s);
      var fv = f.call(null, fst);
      var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv) {
        return function(p1__9986_SHARP_) {
          return cljs.core._EQ_.call(null, fv, f.call(null, p1__9986_SHARP_));
        };
      }(fst, fv), cljs.core.next.call(null, s)));
      return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1);
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4090__auto__) {
        var s = temp__4090__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s));
      } else {
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, f.call(null));
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__9997 = null;
      var G__9997__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null)], null);
      };
      var G__9997__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x)], null);
      };
      var G__9997__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y)], null);
      };
      var G__9997__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z)], null);
      };
      var G__9997__4 = function() {
        var G__9998__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args)], null);
        };
        var G__9998 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__9998__delegate.call(this, x, y, z, args);
        };
        G__9998.cljs$lang$maxFixedArity = 3;
        G__9998.cljs$lang$applyTo = function(arglist__9999) {
          var x = cljs.core.first(arglist__9999);
          arglist__9999 = cljs.core.next(arglist__9999);
          var y = cljs.core.first(arglist__9999);
          arglist__9999 = cljs.core.next(arglist__9999);
          var z = cljs.core.first(arglist__9999);
          var args = cljs.core.rest(arglist__9999);
          return G__9998__delegate(x, y, z, args);
        };
        G__9998.cljs$core$IFn$_invoke$arity$variadic = G__9998__delegate;
        return G__9998;
      }();
      G__9997 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__9997__0.call(this);
          case 1:
            return G__9997__1.call(this, x);
          case 2:
            return G__9997__2.call(this, x, y);
          case 3:
            return G__9997__3.call(this, x, y, z);
          default:
            return G__9997__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9997.cljs$lang$maxFixedArity = 3;
      G__9997.cljs$lang$applyTo = G__9997__4.cljs$lang$applyTo;
      return G__9997;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__10000 = null;
      var G__10000__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null)], null);
      };
      var G__10000__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x)], null);
      };
      var G__10000__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y)], null);
      };
      var G__10000__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z)], null);
      };
      var G__10000__4 = function() {
        var G__10001__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args)], null);
        };
        var G__10001 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10001__delegate.call(this, x, y, z, args);
        };
        G__10001.cljs$lang$maxFixedArity = 3;
        G__10001.cljs$lang$applyTo = function(arglist__10002) {
          var x = cljs.core.first(arglist__10002);
          arglist__10002 = cljs.core.next(arglist__10002);
          var y = cljs.core.first(arglist__10002);
          arglist__10002 = cljs.core.next(arglist__10002);
          var z = cljs.core.first(arglist__10002);
          var args = cljs.core.rest(arglist__10002);
          return G__10001__delegate(x, y, z, args);
        };
        G__10001.cljs$core$IFn$_invoke$arity$variadic = G__10001__delegate;
        return G__10001;
      }();
      G__10000 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10000__0.call(this);
          case 1:
            return G__10000__1.call(this, x);
          case 2:
            return G__10000__2.call(this, x, y);
          case 3:
            return G__10000__3.call(this, x, y, z);
          default:
            return G__10000__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10000.cljs$lang$maxFixedArity = 3;
      G__10000.cljs$lang$applyTo = G__10000__4.cljs$lang$applyTo;
      return G__10000;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__10003 = null;
      var G__10003__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null), h.call(null)], null);
      };
      var G__10003__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x), h.call(null, x)], null);
      };
      var G__10003__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y), h.call(null, x, y)], null);
      };
      var G__10003__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z)], null);
      };
      var G__10003__4 = function() {
        var G__10004__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args)], null);
        };
        var G__10004 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10004__delegate.call(this, x, y, z, args);
        };
        G__10004.cljs$lang$maxFixedArity = 3;
        G__10004.cljs$lang$applyTo = function(arglist__10005) {
          var x = cljs.core.first(arglist__10005);
          arglist__10005 = cljs.core.next(arglist__10005);
          var y = cljs.core.first(arglist__10005);
          arglist__10005 = cljs.core.next(arglist__10005);
          var z = cljs.core.first(arglist__10005);
          var args = cljs.core.rest(arglist__10005);
          return G__10004__delegate(x, y, z, args);
        };
        G__10004.cljs$core$IFn$_invoke$arity$variadic = G__10004__delegate;
        return G__10004;
      }();
      G__10003 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10003__0.call(this);
          case 1:
            return G__10003__1.call(this, x);
          case 2:
            return G__10003__2.call(this, x, y);
          case 3:
            return G__10003__3.call(this, x, y, z);
          default:
            return G__10003__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10003.cljs$lang$maxFixedArity = 3;
      G__10003.cljs$lang$applyTo = G__10003__4.cljs$lang$applyTo;
      return G__10003;
    }();
  };
  var juxt__4 = function() {
    var G__10006__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__10007 = null;
        var G__10007__0 = function() {
          return cljs.core.reduce.call(null, function(p1__9987_SHARP_, p2__9988_SHARP_) {
            return cljs.core.conj.call(null, p1__9987_SHARP_, p2__9988_SHARP_.call(null));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__10007__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__9989_SHARP_, p2__9990_SHARP_) {
            return cljs.core.conj.call(null, p1__9989_SHARP_, p2__9990_SHARP_.call(null, x));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__10007__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__9991_SHARP_, p2__9992_SHARP_) {
            return cljs.core.conj.call(null, p1__9991_SHARP_, p2__9992_SHARP_.call(null, x, y));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__10007__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__9993_SHARP_, p2__9994_SHARP_) {
            return cljs.core.conj.call(null, p1__9993_SHARP_, p2__9994_SHARP_.call(null, x, y, z));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__10007__4 = function() {
          var G__10008__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__9995_SHARP_, p2__9996_SHARP_) {
              return cljs.core.conj.call(null, p1__9995_SHARP_, cljs.core.apply.call(null, p2__9996_SHARP_, x, y, z, args));
            }, cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__10008 = function(x, y, z, var_args) {
            var args = null;
            if (arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
            }
            return G__10008__delegate.call(this, x, y, z, args);
          };
          G__10008.cljs$lang$maxFixedArity = 3;
          G__10008.cljs$lang$applyTo = function(arglist__10009) {
            var x = cljs.core.first(arglist__10009);
            arglist__10009 = cljs.core.next(arglist__10009);
            var y = cljs.core.first(arglist__10009);
            arglist__10009 = cljs.core.next(arglist__10009);
            var z = cljs.core.first(arglist__10009);
            var args = cljs.core.rest(arglist__10009);
            return G__10008__delegate(x, y, z, args);
          };
          G__10008.cljs$core$IFn$_invoke$arity$variadic = G__10008__delegate;
          return G__10008;
        }();
        G__10007 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__10007__0.call(this);
            case 1:
              return G__10007__1.call(this, x);
            case 2:
              return G__10007__2.call(this, x, y);
            case 3:
              return G__10007__3.call(this, x, y, z);
            default:
              return G__10007__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__10007.cljs$lang$maxFixedArity = 3;
        G__10007.cljs$lang$applyTo = G__10007__4.cljs$lang$applyTo;
        return G__10007;
      }();
    };
    var G__10006 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__10006__delegate.call(this, f, g, h, fs);
    };
    G__10006.cljs$lang$maxFixedArity = 3;
    G__10006.cljs$lang$applyTo = function(arglist__10010) {
      var f = cljs.core.first(arglist__10010);
      arglist__10010 = cljs.core.next(arglist__10010);
      var g = cljs.core.first(arglist__10010);
      arglist__10010 = cljs.core.next(arglist__10010);
      var h = cljs.core.first(arglist__10010);
      var fs = cljs.core.rest(arglist__10010);
      return G__10006__delegate(f, g, h, fs);
    };
    G__10006.cljs$core$IFn$_invoke$arity$variadic = G__10006__delegate;
    return G__10006;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll)) {
        var G__10011 = cljs.core.next.call(null, coll);
        coll = G__10011;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll) && n > 0) {
        var G__10012 = n - 1;
        var G__10013 = cljs.core.next.call(null, coll);
        n = G__10012;
        coll = G__10013;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches = re.exec(s);
  if (cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
    if (cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches);
    } else {
      return cljs.core.vec.call(null, matches);
    }
  } else {
    return null;
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches = re.exec(s);
  if (matches == null) {
    return null;
  } else {
    if (cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches);
    } else {
      return cljs.core.vec.call(null, matches);
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null);
    }, null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__10015 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__10015, 0, null);
  var flags = cljs.core.nth.call(null, vec__10015, 1, null);
  var pattern = cljs.core.nth.call(null, vec__10015, 2, null);
  return new RegExp(pattern, flags);
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_10017 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write.call(null, writer, "#");
    } else {
      cljs.core._write.call(null, writer, begin);
      if (cljs.core.seq.call(null, coll)) {
        print_one.call(null, cljs.core.first.call(null, coll), writer, opts);
      } else {
      }
      var coll_10018__$1 = cljs.core.next.call(null, coll);
      var n_10019 = (new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts);
      while (true) {
        if (coll_10018__$1 && (n_10019 == null || !(n_10019 === 0))) {
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, cljs.core.first.call(null, coll_10018__$1), writer, opts);
          var G__10020 = cljs.core.next.call(null, coll_10018__$1);
          var G__10021 = n_10019 - 1;
          coll_10018__$1 = G__10020;
          n_10019 = G__10021;
          continue;
        } else {
        }
        break;
      }
      if (cljs.core.truth_((new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts))) {
        cljs.core._write.call(null, writer, sep);
        print_one.call(null, "...", writer, opts);
      } else {
      }
      return cljs.core._write.call(null, writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_10017;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__10026 = cljs.core.seq.call(null, ss);
    var chunk__10027 = null;
    var count__10028 = 0;
    var i__10029 = 0;
    while (true) {
      if (i__10029 < count__10028) {
        var s = cljs.core._nth.call(null, chunk__10027, i__10029);
        cljs.core._write.call(null, writer, s);
        var G__10030 = seq__10026;
        var G__10031 = chunk__10027;
        var G__10032 = count__10028;
        var G__10033 = i__10029 + 1;
        seq__10026 = G__10030;
        chunk__10027 = G__10031;
        count__10028 = G__10032;
        i__10029 = G__10033;
        continue;
      } else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__10026);
        if (temp__4092__auto__) {
          var seq__10026__$1 = temp__4092__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__10026__$1)) {
            var c__4150__auto__ = cljs.core.chunk_first.call(null, seq__10026__$1);
            var G__10034 = cljs.core.chunk_rest.call(null, seq__10026__$1);
            var G__10035 = c__4150__auto__;
            var G__10036 = cljs.core.count.call(null, c__4150__auto__);
            var G__10037 = 0;
            seq__10026 = G__10034;
            chunk__10027 = G__10035;
            count__10028 = G__10036;
            i__10029 = G__10037;
            continue;
          } else {
            var s = cljs.core.first.call(null, seq__10026__$1);
            cljs.core._write.call(null, writer, s);
            var G__10038 = cljs.core.next.call(null, seq__10026__$1);
            var G__10039 = null;
            var G__10040 = 0;
            var G__10041 = 0;
            seq__10026 = G__10038;
            chunk__10027 = G__10039;
            count__10028 = G__10040;
            i__10029 = G__10041;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__10042) {
    var writer = cljs.core.first(arglist__10042);
    var ss = cljs.core.rest(arglist__10042);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj10044 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj10044;
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write.call(null, writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e");
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        if (cljs.core.truth_(function() {
          var and__3396__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
          if (cljs.core.truth_(and__3396__auto__)) {
            var and__3396__auto____$1 = function() {
              var G__10050 = obj;
              if (G__10050) {
                var bit__4052__auto__ = G__10050.cljs$lang$protocol_mask$partition0$ & 131072;
                if (bit__4052__auto__ || G__10050.cljs$core$IMeta$) {
                  return true;
                } else {
                  if (!G__10050.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__10050);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__10050);
              }
            }();
            if (and__3396__auto____$1) {
              return cljs.core.meta.call(null, obj);
            } else {
              return and__3396__auto____$1;
            }
          } else {
            return and__3396__auto__;
          }
        }())) {
          cljs.core._write.call(null, writer, "^");
          pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
          cljs.core._write.call(null, writer, " ");
        } else {
        }
        if (obj == null) {
          return cljs.core._write.call(null, writer, "nil");
        } else {
          if (obj.cljs$lang$type) {
            return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
          } else {
            if (function() {
              var G__10051 = obj;
              if (G__10051) {
                var bit__4045__auto__ = G__10051.cljs$lang$protocol_mask$partition0$ & 2147483648;
                if (bit__4045__auto__ || G__10051.cljs$core$IPrintWithWriter$) {
                  return true;
                } else {
                  return false;
                }
              } else {
                return false;
              }
            }()) {
              return cljs.core._pr_writer.call(null, obj, writer, opts);
            } else {
              if (cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
                return cljs.core._write.call(null, writer, [cljs.core.str(obj)].join(""));
              } else {
                if (cljs.core.object_QMARK_.call(null, obj)) {
                  cljs.core._write.call(null, writer, "#js ");
                  return cljs.core.print_map.call(null, cljs.core.map.call(null, function(k) {
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), obj[k]], null);
                  }, cljs.core.js_keys.call(null, obj)), pr_writer, writer, opts);
                } else {
                  if (obj instanceof Array) {
                    return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#js [", " ", "]", opts, obj);
                  } else {
                    if (goog.isString(obj)) {
                      if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 4441712502)).cljs$core$IFn$_invoke$arity$1(opts))) {
                        return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj));
                      } else {
                        return cljs.core._write.call(null, writer, obj);
                      }
                    } else {
                      if (cljs.core.fn_QMARK_.call(null, obj)) {
                        return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e");
                      } else {
                        if (obj instanceof Date) {
                          var normalize = function(n, len) {
                            var ns = [cljs.core.str(n)].join("");
                            while (true) {
                              if (cljs.core.count.call(null, ns) < len) {
                                var G__10053 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                                ns = G__10053;
                                continue;
                              } else {
                                return ns;
                              }
                              break;
                            }
                          };
                          return cljs.core.write_all.call(null, writer, '#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"');
                        } else {
                          if (cljs.core.regexp_QMARK_.call(null, obj)) {
                            return cljs.core.write_all.call(null, writer, '#"', obj.source, '"');
                          } else {
                            if (function() {
                              var G__10052 = obj;
                              if (G__10052) {
                                var bit__4052__auto__ = G__10052.cljs$lang$protocol_mask$partition0$ & 2147483648;
                                if (bit__4052__auto__ || G__10052.cljs$core$IPrintWithWriter$) {
                                  return true;
                                } else {
                                  if (!G__10052.cljs$lang$protocol_mask$partition0$) {
                                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__10052);
                                  } else {
                                    return false;
                                  }
                                }
                              } else {
                                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__10052);
                              }
                            }()) {
                              return cljs.core._pr_writer.call(null, obj, writer, opts);
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e");
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__10058 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__10059 = null;
  var count__10060 = 0;
  var i__10061 = 0;
  while (true) {
    if (i__10061 < count__10060) {
      var obj = cljs.core._nth.call(null, chunk__10059, i__10061);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__10062 = seq__10058;
      var G__10063 = chunk__10059;
      var G__10064 = count__10060;
      var G__10065 = i__10061 + 1;
      seq__10058 = G__10062;
      chunk__10059 = G__10063;
      count__10060 = G__10064;
      i__10061 = G__10065;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__10058);
      if (temp__4092__auto__) {
        var seq__10058__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__10058__$1)) {
          var c__4150__auto__ = cljs.core.chunk_first.call(null, seq__10058__$1);
          var G__10066 = cljs.core.chunk_rest.call(null, seq__10058__$1);
          var G__10067 = c__4150__auto__;
          var G__10068 = cljs.core.count.call(null, c__4150__auto__);
          var G__10069 = 0;
          seq__10058 = G__10066;
          chunk__10059 = G__10067;
          count__10060 = G__10068;
          i__10061 = G__10069;
          continue;
        } else {
          var obj = cljs.core.first.call(null, seq__10058__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__10070 = cljs.core.next.call(null, seq__10058__$1);
          var G__10071 = null;
          var G__10072 = 0;
          var G__10073 = 0;
          seq__10058 = G__10070;
          chunk__10059 = G__10071;
          count__10060 = G__10072;
          i__10061 = G__10073;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts.call(null, objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if (cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857)))) {
    return cljs.core.flush.call(null);
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__10074) {
    var objs = cljs.core.seq(arglist__10074);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__10075) {
    var objs = cljs.core.seq(arglist__10075);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__10076) {
    var objs = cljs.core.seq(arglist__10076);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__10077) {
    var objs = cljs.core.seq(arglist__10077);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__10078) {
    var objs = cljs.core.seq(arglist__10078);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__10079) {
    var objs = cljs.core.seq(arglist__10079);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__10080) {
    var objs = cljs.core.seq(arglist__10080);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__10081) {
    var objs = cljs.core.seq(arglist__10081);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, function(e, w, opts__$1) {
    print_one.call(null, cljs.core.key.call(null, e), w, opts__$1);
    cljs.core._write.call(null, w, " ");
    return print_one.call(null, cljs.core.val.call(null, e), w, opts__$1);
  }, "{", ", ", "}", opts, cljs.core.seq.call(null, m));
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1));
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()");
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 2;
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/Atom");
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__10082 = cljs.core.seq.call(null, self__.watches);
  var chunk__10083 = null;
  var count__10084 = 0;
  var i__10085 = 0;
  while (true) {
    if (i__10085 < count__10084) {
      var vec__10086 = cljs.core._nth.call(null, chunk__10083, i__10085);
      var key = cljs.core.nth.call(null, vec__10086, 0, null);
      var f = cljs.core.nth.call(null, vec__10086, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__10088 = seq__10082;
      var G__10089 = chunk__10083;
      var G__10090 = count__10084;
      var G__10091 = i__10085 + 1;
      seq__10082 = G__10088;
      chunk__10083 = G__10089;
      count__10084 = G__10090;
      i__10085 = G__10091;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__10082);
      if (temp__4092__auto__) {
        var seq__10082__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__10082__$1)) {
          var c__4150__auto__ = cljs.core.chunk_first.call(null, seq__10082__$1);
          var G__10092 = cljs.core.chunk_rest.call(null, seq__10082__$1);
          var G__10093 = c__4150__auto__;
          var G__10094 = cljs.core.count.call(null, c__4150__auto__);
          var G__10095 = 0;
          seq__10082 = G__10092;
          chunk__10083 = G__10093;
          count__10084 = G__10094;
          i__10085 = G__10095;
          continue;
        } else {
          var vec__10087 = cljs.core.first.call(null, seq__10082__$1);
          var key = cljs.core.nth.call(null, vec__10087, 0, null);
          var f = cljs.core.nth.call(null, vec__10087, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__10096 = cljs.core.next.call(null, seq__10082__$1);
          var G__10097 = null;
          var G__10098 = 0;
          var G__10099 = 0;
          seq__10082 = G__10096;
          chunk__10083 = G__10097;
          count__10084 = G__10098;
          i__10085 = G__10099;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__10103__delegate = function(x, p__10100) {
      var map__10102 = p__10100;
      var map__10102__$1 = cljs.core.seq_QMARK_.call(null, map__10102) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10102) : map__10102;
      var validator = cljs.core.get.call(null, map__10102__$1, new cljs.core.Keyword(null, "validator", "validator", 4199087812));
      var meta = cljs.core.get.call(null, map__10102__$1, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__10103 = function(x, var_args) {
      var p__10100 = null;
      if (arguments.length > 1) {
        p__10100 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__10103__delegate.call(this, x, p__10100);
    };
    G__10103.cljs$lang$maxFixedArity = 1;
    G__10103.cljs$lang$applyTo = function(arglist__10104) {
      var x = cljs.core.first(arglist__10104);
      var p__10100 = cljs.core.rest(arglist__10104);
      return G__10103__delegate(x, p__10100);
    };
    G__10103.cljs$core$IFn$_invoke$arity$variadic = G__10103__delegate;
    return G__10103;
  }();
  atom = function(x, var_args) {
    var p__10100 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var validate_10105 = a.validator;
  if (validate_10105 == null) {
  } else {
    if (cljs.core.truth_(validate_10105.call(null, new_value))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1233162959, null), new cljs.core.Symbol(null, "new-value", "new-value", 972165309, null))))].join(""));
    }
  }
  var old_value_10106 = a.state;
  a.state = new_value;
  if (a.watches == null) {
  } else {
    cljs.core._notify_watches.call(null, a, old_value_10106, new_value);
  }
  return new_value;
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state));
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x));
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y));
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z));
  };
  var swap_BANG___6 = function() {
    var G__10107__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more));
    };
    var G__10107 = function(a, f, x, y, z, var_args) {
      var more = null;
      if (arguments.length > 5) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__10107__delegate.call(this, a, f, x, y, z, more);
    };
    G__10107.cljs$lang$maxFixedArity = 5;
    G__10107.cljs$lang$applyTo = function(arglist__10108) {
      var a = cljs.core.first(arglist__10108);
      arglist__10108 = cljs.core.next(arglist__10108);
      var f = cljs.core.first(arglist__10108);
      arglist__10108 = cljs.core.next(arglist__10108);
      var x = cljs.core.first(arglist__10108);
      arglist__10108 = cljs.core.next(arglist__10108);
      var y = cljs.core.first(arglist__10108);
      arglist__10108 = cljs.core.next(arglist__10108);
      var z = cljs.core.first(arglist__10108);
      var more = cljs.core.rest(arglist__10108);
      return G__10107__delegate(a, f, x, y, z, more);
    };
    G__10107.cljs$core$IFn$_invoke$arity$variadic = G__10107__delegate;
    return G__10107;
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o);
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__10109) {
    var iref = cljs.core.first(arglist__10109);
    arglist__10109 = cljs.core.next(arglist__10109);
    var f = cljs.core.first(arglist__10109);
    var args = cljs.core.rest(arglist__10109);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f);
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key);
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0);
    } else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/Delay");
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return(new cljs.core.Keyword(null, "done", "done", 1016993524)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.state));
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return(new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null, self__.state, function(p__10110) {
    var map__10111 = p__10110;
    var map__10111__$1 = cljs.core.seq_QMARK_.call(null, map__10111) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10111) : map__10111;
    var curr_state = map__10111__$1;
    var done = cljs.core.get.call(null, map__10111__$1, new cljs.core.Keyword(null, "done", "done", 1016993524));
    if (cljs.core.truth_(done)) {
      return curr_state;
    } else {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "done", "done", 1016993524), true, new cljs.core.Keyword(null, "value", "value", 1125876963), self__.f.call(null)], null);
    }
  }));
};
cljs.core.__GT_Delay = function __GT_Delay(state, f) {
  return new cljs.core.Delay(state, f);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d);
};
cljs.core.IEncodeJS = function() {
  var obj10113 = {};
  return obj10113;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3396__auto__ = x;
    if (and__3396__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4029__auto__ = x == null ? null : x;
    return function() {
      var or__3408__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3396__auto__ = x;
    if (and__3396__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4029__auto__ = x == null ? null : x;
    return function() {
      var or__3408__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__10115 = k;
    if (G__10115) {
      var bit__4052__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3408__auto__ = bit__4052__auto__;
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          return G__10115.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__10115.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__10115);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__10115);
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k);
  } else {
    if (typeof k === "string" || (typeof k === "number" || (k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol))) {
      return cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.call(null, k);
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__10129 = x;
      if (G__10129) {
        var bit__4052__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3408__auto__ = bit__4052__auto__;
          if (cljs.core.truth_(or__3408__auto__)) {
            return or__3408__auto__;
          } else {
            return G__10129.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__10129.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__10129);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__10129);
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_.call(null, x)) {
            var m = function() {
              var obj10131 = {};
              return obj10131;
            }();
            var seq__10132_10142 = cljs.core.seq.call(null, x);
            var chunk__10133_10143 = null;
            var count__10134_10144 = 0;
            var i__10135_10145 = 0;
            while (true) {
              if (i__10135_10145 < count__10134_10144) {
                var vec__10136_10146 = cljs.core._nth.call(null, chunk__10133_10143, i__10135_10145);
                var k_10147 = cljs.core.nth.call(null, vec__10136_10146, 0, null);
                var v_10148 = cljs.core.nth.call(null, vec__10136_10146, 1, null);
                m[cljs.core.key__GT_js.call(null, k_10147)] = clj__GT_js.call(null, v_10148);
                var G__10149 = seq__10132_10142;
                var G__10150 = chunk__10133_10143;
                var G__10151 = count__10134_10144;
                var G__10152 = i__10135_10145 + 1;
                seq__10132_10142 = G__10149;
                chunk__10133_10143 = G__10150;
                count__10134_10144 = G__10151;
                i__10135_10145 = G__10152;
                continue;
              } else {
                var temp__4092__auto___10153 = cljs.core.seq.call(null, seq__10132_10142);
                if (temp__4092__auto___10153) {
                  var seq__10132_10154__$1 = temp__4092__auto___10153;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__10132_10154__$1)) {
                    var c__4150__auto___10155 = cljs.core.chunk_first.call(null, seq__10132_10154__$1);
                    var G__10156 = cljs.core.chunk_rest.call(null, seq__10132_10154__$1);
                    var G__10157 = c__4150__auto___10155;
                    var G__10158 = cljs.core.count.call(null, c__4150__auto___10155);
                    var G__10159 = 0;
                    seq__10132_10142 = G__10156;
                    chunk__10133_10143 = G__10157;
                    count__10134_10144 = G__10158;
                    i__10135_10145 = G__10159;
                    continue;
                  } else {
                    var vec__10137_10160 = cljs.core.first.call(null, seq__10132_10154__$1);
                    var k_10161 = cljs.core.nth.call(null, vec__10137_10160, 0, null);
                    var v_10162 = cljs.core.nth.call(null, vec__10137_10160, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_10161)] = clj__GT_js.call(null, v_10162);
                    var G__10163 = cljs.core.next.call(null, seq__10132_10154__$1);
                    var G__10164 = null;
                    var G__10165 = 0;
                    var G__10166 = 0;
                    seq__10132_10142 = G__10163;
                    chunk__10133_10143 = G__10164;
                    count__10134_10144 = G__10165;
                    i__10135_10145 = G__10166;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_.call(null, x)) {
              var arr = [];
              var seq__10138_10167 = cljs.core.seq.call(null, cljs.core.map.call(null, clj__GT_js, x));
              var chunk__10139_10168 = null;
              var count__10140_10169 = 0;
              var i__10141_10170 = 0;
              while (true) {
                if (i__10141_10170 < count__10140_10169) {
                  var x_10171__$1 = cljs.core._nth.call(null, chunk__10139_10168, i__10141_10170);
                  arr.push(x_10171__$1);
                  var G__10172 = seq__10138_10167;
                  var G__10173 = chunk__10139_10168;
                  var G__10174 = count__10140_10169;
                  var G__10175 = i__10141_10170 + 1;
                  seq__10138_10167 = G__10172;
                  chunk__10139_10168 = G__10173;
                  count__10140_10169 = G__10174;
                  i__10141_10170 = G__10175;
                  continue;
                } else {
                  var temp__4092__auto___10176 = cljs.core.seq.call(null, seq__10138_10167);
                  if (temp__4092__auto___10176) {
                    var seq__10138_10177__$1 = temp__4092__auto___10176;
                    if (cljs.core.chunked_seq_QMARK_.call(null, seq__10138_10177__$1)) {
                      var c__4150__auto___10178 = cljs.core.chunk_first.call(null, seq__10138_10177__$1);
                      var G__10179 = cljs.core.chunk_rest.call(null, seq__10138_10177__$1);
                      var G__10180 = c__4150__auto___10178;
                      var G__10181 = cljs.core.count.call(null, c__4150__auto___10178);
                      var G__10182 = 0;
                      seq__10138_10167 = G__10179;
                      chunk__10139_10168 = G__10180;
                      count__10140_10169 = G__10181;
                      i__10141_10170 = G__10182;
                      continue;
                    } else {
                      var x_10183__$1 = cljs.core.first.call(null, seq__10138_10177__$1);
                      arr.push(x_10183__$1);
                      var G__10184 = cljs.core.next.call(null, seq__10138_10177__$1);
                      var G__10185 = null;
                      var G__10186 = 0;
                      var G__10187 = 0;
                      seq__10138_10167 = G__10184;
                      chunk__10139_10168 = G__10185;
                      count__10140_10169 = G__10186;
                      i__10141_10170 = G__10187;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return x;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj10189 = {};
  return obj10189;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3396__auto__ = x;
    if (and__3396__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4029__auto__ = x == null ? null : x;
    return function() {
      var or__3408__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), false], null));
  };
  var js__GT_clj__2 = function() {
    var G__10210__delegate = function(x, opts) {
      if (function() {
        var G__10200 = x;
        if (G__10200) {
          var bit__4052__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3408__auto__ = bit__4052__auto__;
            if (cljs.core.truth_(or__3408__auto__)) {
              return or__3408__auto__;
            } else {
              return G__10200.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__10200.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__10200);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__10200);
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq.call(null, opts)) {
          var map__10201 = opts;
          var map__10201__$1 = cljs.core.seq_QMARK_.call(null, map__10201) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10201) : map__10201;
          var keywordize_keys = cljs.core.get.call(null, map__10201__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__10201, map__10201__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if (cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1));
              } else {
                if (cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1));
                } else {
                  if (x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1));
                  } else {
                    if (cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__4119__auto__ = function(map__10201, map__10201__$1, keywordize_keys, keyfn) {
                          return function iter__10206(s__10207) {
                            return new cljs.core.LazySeq(null, function(map__10201, map__10201__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__10207__$1 = s__10207;
                                while (true) {
                                  var temp__4092__auto__ = cljs.core.seq.call(null, s__10207__$1);
                                  if (temp__4092__auto__) {
                                    var s__10207__$2 = temp__4092__auto__;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__10207__$2)) {
                                      var c__4117__auto__ = cljs.core.chunk_first.call(null, s__10207__$2);
                                      var size__4118__auto__ = cljs.core.count.call(null, c__4117__auto__);
                                      var b__10209 = cljs.core.chunk_buffer.call(null, size__4118__auto__);
                                      if (function() {
                                        var i__10208 = 0;
                                        while (true) {
                                          if (i__10208 < size__4118__auto__) {
                                            var k = cljs.core._nth.call(null, c__4117__auto__, i__10208);
                                            cljs.core.chunk_append.call(null, b__10209, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null));
                                            var G__10211 = i__10208 + 1;
                                            i__10208 = G__10211;
                                            continue;
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10209), iter__10206.call(null, cljs.core.chunk_rest.call(null, s__10207__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10209), null);
                                      }
                                    } else {
                                      var k = cljs.core.first.call(null, s__10207__$2);
                                      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null), iter__10206.call(null, cljs.core.rest.call(null, s__10207__$2)));
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(map__10201, map__10201__$1, keywordize_keys, keyfn), null, null);
                          };
                        }(map__10201, map__10201__$1, keywordize_keys, keyfn);
                        return iter__4119__auto__.call(null, cljs.core.js_keys.call(null, x__$1));
                      }());
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        return x__$1;
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }
            };
          }(map__10201, map__10201__$1, keywordize_keys, keyfn);
          return f.call(null, x);
        } else {
          return null;
        }
      }
    };
    var G__10210 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__10210__delegate.call(this, x, opts);
    };
    G__10210.cljs$lang$maxFixedArity = 1;
    G__10210.cljs$lang$applyTo = function(arglist__10212) {
      var x = cljs.core.first(arglist__10212);
      var opts = cljs.core.rest(arglist__10212);
      return G__10210__delegate(x, opts);
    };
    G__10210.cljs$core$IFn$_invoke$arity$variadic = G__10210__delegate;
    return G__10210;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function() {
    var G__10213__delegate = function(args) {
      var temp__4090__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args);
      if (cljs.core.truth_(temp__4090__auto__)) {
        var v = temp__4090__auto__;
        return v;
      } else {
        var ret = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
        return ret;
      }
    };
    var G__10213 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__10213__delegate.call(this, args);
    };
    G__10213.cljs$lang$maxFixedArity = 0;
    G__10213.cljs$lang$applyTo = function(arglist__10214) {
      var args = cljs.core.seq(arglist__10214);
      return G__10213__delegate(args);
    };
    G__10213.cljs$core$IFn$_invoke$arity$variadic = G__10213__delegate;
    return G__10213;
  }();
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = f.call(null);
      if (cljs.core.fn_QMARK_.call(null, ret)) {
        var G__10215 = ret;
        f = G__10215;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__10216__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args);
      });
    };
    var G__10216 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__10216__delegate.call(this, f, args);
    };
    G__10216.cljs$lang$maxFixedArity = 1;
    G__10216.cljs$lang$applyTo = function(arglist__10217) {
      var f = cljs.core.first(arglist__10217);
      var args = cljs.core.rest(arglist__10217);
      return G__10216__delegate(f, args);
    };
    G__10216.cljs$core$IFn$_invoke$arity$variadic = G__10216__delegate;
    return G__10216;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1);
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, coll);
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 768214664), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__10218) {
    var f = cljs.core.first(arglist__10218);
    var args = cljs.core.rest(arglist__10218);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3408__auto__ = cljs.core._EQ_.call(null, child, parent);
    if (or__3408__auto__) {
      return or__3408__auto__;
    } else {
      var or__3408__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3408__auto____$1) {
        return or__3408__auto____$1;
      } else {
        var and__3396__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if (and__3396__auto__) {
          var and__3396__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if (and__3396__auto____$1) {
            var and__3396__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if (and__3396__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count.call(null, parent)) {
                  return ret;
                } else {
                  var G__10219 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__10220 = i + 1;
                  ret = G__10219;
                  i = G__10220;
                  continue;
                }
                break;
              }
            } else {
              return and__3396__auto____$2;
            }
          } else {
            return and__3396__auto____$1;
          }
        } else {
          return and__3396__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", -388313324, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.call(null, tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", -1637144189, null), new cljs.core.Symbol(null, "tag", "tag", -1640416941, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))));
          };
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)));
      };
    }(tp, td, ta);
    var or__3408__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 768214664), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3408__auto__)) {
      return or__3408__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__10221_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__10221_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__10221_SHARP_), cljs.core.second.call(null, p1__10221_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if (cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__10222_SHARP_, p2__10223_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__10222_SHARP_, p2__10223_SHARP_);
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3408__auto__ = cljs.core.truth_(function() {
    var and__3396__auto__ = xprefs;
    if (cljs.core.truth_(and__3396__auto__)) {
      return xprefs.call(null, y);
    } else {
      return and__3396__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3408__auto__)) {
    return or__3408__auto__;
  } else {
    var or__3408__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while (true) {
        if (cljs.core.count.call(null, ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          } else {
          }
          var G__10224 = cljs.core.rest.call(null, ps);
          ps = G__10224;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3408__auto____$1)) {
      return or__3408__auto____$1;
    } else {
      var or__3408__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while (true) {
          if (cljs.core.count.call(null, ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            } else {
            }
            var G__10225 = cljs.core.rest.call(null, ps);
            ps = G__10225;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3408__auto____$2)) {
        return or__3408__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3408__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if (cljs.core.truth_(or__3408__auto__)) {
    return or__3408__auto__;
  } else {
    return cljs.core.isa_QMARK_.call(null, x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__10228) {
    var vec__10229 = p__10228;
    var k = cljs.core.nth.call(null, vec__10229, 0, null);
    var _ = cljs.core.nth.call(null, vec__10229, 1, null);
    var e = vec__10229;
    if (cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3408__auto__ = be == null;
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry);
    } else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj10231 = {};
  return obj10231;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3396__auto__ = mf;
    if (and__3396__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4029__auto__ = mf == null ? null : mf;
    return function() {
      var or__3408__auto__ = cljs.core._reset[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._reset["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3396__auto__ = mf;
    if (and__3396__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4029__auto__ = mf == null ? null : mf;
    return function() {
      var or__3408__auto__ = cljs.core._add_method[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._add_method["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3396__auto__ = mf;
    if (and__3396__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4029__auto__ = mf == null ? null : mf;
    return function() {
      var or__3408__auto__ = cljs.core._remove_method[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._remove_method["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3396__auto__ = mf;
    if (and__3396__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4029__auto__ = mf == null ? null : mf;
    return function() {
      var or__3408__auto__ = cljs.core._prefer_method[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3396__auto__ = mf;
    if (and__3396__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4029__auto__ = mf == null ? null : mf;
    return function() {
      var or__3408__auto__ = cljs.core._get_method[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._get_method["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3396__auto__ = mf;
    if (and__3396__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4029__auto__ = mf == null ? null : mf;
    return function() {
      var or__3408__auto__ = cljs.core._methods[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._methods["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3396__auto__ = mf;
    if (and__3396__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4029__auto__ = mf == null ? null : mf;
    return function() {
      var or__3408__auto__ = cljs.core._prefers[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._prefers["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if (function() {
    var and__3396__auto__ = mf;
    if (and__3396__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args);
  } else {
    var x__4029__auto__ = mf == null ? null : mf;
    return function() {
      var or__3408__auto__ = cljs.core._dispatch[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core._dispatch["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args);
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, name, dispatch_fn, args) {
  var dispatch_val = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
  }
  return cljs.core.apply.call(null, target_fn, args);
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 256;
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/MultiFn");
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$2) {
    return null;
  });
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4090__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4090__auto__)) {
    var target_fn = temp__4090__auto__;
    return target_fn;
  } else {
    var temp__4090__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4090__auto____$1)) {
      var target_fn = temp__4090__auto____$1;
      return target_fn;
    } else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
  });
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.do_dispatch.call(null, mf__$1, self__.name, self__.dispatch_fn, args);
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__10232__delegate = function(_, args) {
    var self = this;
    return cljs.core._dispatch.call(null, self, args);
  };
  var G__10232 = function(_, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return G__10232__delegate.call(this, _, args);
  };
  G__10232.cljs$lang$maxFixedArity = 1;
  G__10232.cljs$lang$applyTo = function(arglist__10233) {
    var _ = cljs.core.first(arglist__10233);
    var args = cljs.core.rest(arglist__10233);
    return G__10232__delegate(_, args);
  };
  G__10232.cljs$core$IFn$_invoke$arity$variadic = G__10232__delegate;
  return G__10232;
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self = this;
  return cljs.core._dispatch.call(null, self, args);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core/UUID");
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1));
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$ICloneable$ = true;
cljs.core.UUID.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.UUID(self__.uuid);
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__3973__auto__, writer__3974__auto__, opts__3975__auto__) {
  return cljs.core._write.call(null, writer__3974__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.call(null, x, y))) {
      return-1;
    } else {
      if (cljs.core.truth_(pred.call(null, y, x))) {
        return 1;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return 0;
        } else {
          return null;
        }
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "deftype*", "deftype*", -978581244, null), null, new cljs.core.Symbol(null, "new", "new", -1640422567, null), null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), null, new cljs.core.Symbol(null, "\x26", "\x26", -1640531489, null), null, new cljs.core.Symbol(null, "set!", "set!", -1637004872, null), null, new cljs.core.Symbol(null, 
  "recur", "recur", -1532142362, null), null, new cljs.core.Symbol(null, ".", ".", -1640531481, null), null, new cljs.core.Symbol(null, "ns", "ns", -1640528002, null), null, new cljs.core.Symbol(null, "do", "do", -1640528316, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -1640430053, null), null, new cljs.core.Symbol(null, "throw", "throw", -1530191713, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", 1548249632, null), null, new cljs.core.Symbol(null, "js*", "js*", -1640426054, 
  null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", 774272013, null), null, new cljs.core.Symbol(null, "let*", "let*", -1637213400, null), null, new cljs.core.Symbol(null, "loop*", "loop*", -1537374273, null), null, new cljs.core.Symbol(null, "try", "try", -1640416396, null), null, new cljs.core.Symbol(null, "if", "if", -1640528170, null), null, new cljs.core.Symbol(null, "def", "def", -1640432194, null), null], null), null), x);
};
goog.provide("om.dom");
goog.require("cljs.core");
om.dom.a = function() {
  var a__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.a.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var a = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return a__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  a.cljs$lang$maxFixedArity = 1;
  a.cljs$lang$applyTo = function(arglist__10343) {
    var opts__4903__auto__ = cljs.core.first(arglist__10343);
    var children__4904__auto__ = cljs.core.rest(arglist__10343);
    return a__delegate(opts__4903__auto__, children__4904__auto__);
  };
  a.cljs$core$IFn$_invoke$arity$variadic = a__delegate;
  return a;
}();
om.dom.abbr = function() {
  var abbr__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.abbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var abbr = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return abbr__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  abbr.cljs$lang$maxFixedArity = 1;
  abbr.cljs$lang$applyTo = function(arglist__10344) {
    var opts__4903__auto__ = cljs.core.first(arglist__10344);
    var children__4904__auto__ = cljs.core.rest(arglist__10344);
    return abbr__delegate(opts__4903__auto__, children__4904__auto__);
  };
  abbr.cljs$core$IFn$_invoke$arity$variadic = abbr__delegate;
  return abbr;
}();
om.dom.address = function() {
  var address__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.address.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var address = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return address__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  address.cljs$lang$maxFixedArity = 1;
  address.cljs$lang$applyTo = function(arglist__10345) {
    var opts__4903__auto__ = cljs.core.first(arglist__10345);
    var children__4904__auto__ = cljs.core.rest(arglist__10345);
    return address__delegate(opts__4903__auto__, children__4904__auto__);
  };
  address.cljs$core$IFn$_invoke$arity$variadic = address__delegate;
  return address;
}();
om.dom.area = function() {
  var area__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.area.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var area = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return area__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  area.cljs$lang$maxFixedArity = 1;
  area.cljs$lang$applyTo = function(arglist__10346) {
    var opts__4903__auto__ = cljs.core.first(arglist__10346);
    var children__4904__auto__ = cljs.core.rest(arglist__10346);
    return area__delegate(opts__4903__auto__, children__4904__auto__);
  };
  area.cljs$core$IFn$_invoke$arity$variadic = area__delegate;
  return area;
}();
om.dom.article = function() {
  var article__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.article.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var article = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return article__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  article.cljs$lang$maxFixedArity = 1;
  article.cljs$lang$applyTo = function(arglist__10347) {
    var opts__4903__auto__ = cljs.core.first(arglist__10347);
    var children__4904__auto__ = cljs.core.rest(arglist__10347);
    return article__delegate(opts__4903__auto__, children__4904__auto__);
  };
  article.cljs$core$IFn$_invoke$arity$variadic = article__delegate;
  return article;
}();
om.dom.aside = function() {
  var aside__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.aside.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var aside = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return aside__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  aside.cljs$lang$maxFixedArity = 1;
  aside.cljs$lang$applyTo = function(arglist__10348) {
    var opts__4903__auto__ = cljs.core.first(arglist__10348);
    var children__4904__auto__ = cljs.core.rest(arglist__10348);
    return aside__delegate(opts__4903__auto__, children__4904__auto__);
  };
  aside.cljs$core$IFn$_invoke$arity$variadic = aside__delegate;
  return aside;
}();
om.dom.audio = function() {
  var audio__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.audio.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var audio = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return audio__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  audio.cljs$lang$maxFixedArity = 1;
  audio.cljs$lang$applyTo = function(arglist__10349) {
    var opts__4903__auto__ = cljs.core.first(arglist__10349);
    var children__4904__auto__ = cljs.core.rest(arglist__10349);
    return audio__delegate(opts__4903__auto__, children__4904__auto__);
  };
  audio.cljs$core$IFn$_invoke$arity$variadic = audio__delegate;
  return audio;
}();
om.dom.b = function() {
  var b__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.b.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var b = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return b__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  b.cljs$lang$maxFixedArity = 1;
  b.cljs$lang$applyTo = function(arglist__10350) {
    var opts__4903__auto__ = cljs.core.first(arglist__10350);
    var children__4904__auto__ = cljs.core.rest(arglist__10350);
    return b__delegate(opts__4903__auto__, children__4904__auto__);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = b__delegate;
  return b;
}();
om.dom.base = function() {
  var base__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.base.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var base = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return base__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  base.cljs$lang$maxFixedArity = 1;
  base.cljs$lang$applyTo = function(arglist__10351) {
    var opts__4903__auto__ = cljs.core.first(arglist__10351);
    var children__4904__auto__ = cljs.core.rest(arglist__10351);
    return base__delegate(opts__4903__auto__, children__4904__auto__);
  };
  base.cljs$core$IFn$_invoke$arity$variadic = base__delegate;
  return base;
}();
om.dom.bdi = function() {
  var bdi__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.bdi.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var bdi = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdi__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  bdi.cljs$lang$maxFixedArity = 1;
  bdi.cljs$lang$applyTo = function(arglist__10352) {
    var opts__4903__auto__ = cljs.core.first(arglist__10352);
    var children__4904__auto__ = cljs.core.rest(arglist__10352);
    return bdi__delegate(opts__4903__auto__, children__4904__auto__);
  };
  bdi.cljs$core$IFn$_invoke$arity$variadic = bdi__delegate;
  return bdi;
}();
om.dom.bdo = function() {
  var bdo__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.bdo.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var bdo = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdo__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  bdo.cljs$lang$maxFixedArity = 1;
  bdo.cljs$lang$applyTo = function(arglist__10353) {
    var opts__4903__auto__ = cljs.core.first(arglist__10353);
    var children__4904__auto__ = cljs.core.rest(arglist__10353);
    return bdo__delegate(opts__4903__auto__, children__4904__auto__);
  };
  bdo.cljs$core$IFn$_invoke$arity$variadic = bdo__delegate;
  return bdo;
}();
om.dom.big = function() {
  var big__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.big.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var big = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return big__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  big.cljs$lang$maxFixedArity = 1;
  big.cljs$lang$applyTo = function(arglist__10354) {
    var opts__4903__auto__ = cljs.core.first(arglist__10354);
    var children__4904__auto__ = cljs.core.rest(arglist__10354);
    return big__delegate(opts__4903__auto__, children__4904__auto__);
  };
  big.cljs$core$IFn$_invoke$arity$variadic = big__delegate;
  return big;
}();
om.dom.blockquote = function() {
  var blockquote__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.blockquote.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var blockquote = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return blockquote__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  blockquote.cljs$lang$maxFixedArity = 1;
  blockquote.cljs$lang$applyTo = function(arglist__10355) {
    var opts__4903__auto__ = cljs.core.first(arglist__10355);
    var children__4904__auto__ = cljs.core.rest(arglist__10355);
    return blockquote__delegate(opts__4903__auto__, children__4904__auto__);
  };
  blockquote.cljs$core$IFn$_invoke$arity$variadic = blockquote__delegate;
  return blockquote;
}();
om.dom.body = function() {
  var body__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.body.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var body = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return body__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  body.cljs$lang$maxFixedArity = 1;
  body.cljs$lang$applyTo = function(arglist__10356) {
    var opts__4903__auto__ = cljs.core.first(arglist__10356);
    var children__4904__auto__ = cljs.core.rest(arglist__10356);
    return body__delegate(opts__4903__auto__, children__4904__auto__);
  };
  body.cljs$core$IFn$_invoke$arity$variadic = body__delegate;
  return body;
}();
om.dom.br = function() {
  var br__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.br.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var br = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return br__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  br.cljs$lang$maxFixedArity = 1;
  br.cljs$lang$applyTo = function(arglist__10357) {
    var opts__4903__auto__ = cljs.core.first(arglist__10357);
    var children__4904__auto__ = cljs.core.rest(arglist__10357);
    return br__delegate(opts__4903__auto__, children__4904__auto__);
  };
  br.cljs$core$IFn$_invoke$arity$variadic = br__delegate;
  return br;
}();
om.dom.button = function() {
  var button__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.button.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var button = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return button__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  button.cljs$lang$maxFixedArity = 1;
  button.cljs$lang$applyTo = function(arglist__10358) {
    var opts__4903__auto__ = cljs.core.first(arglist__10358);
    var children__4904__auto__ = cljs.core.rest(arglist__10358);
    return button__delegate(opts__4903__auto__, children__4904__auto__);
  };
  button.cljs$core$IFn$_invoke$arity$variadic = button__delegate;
  return button;
}();
om.dom.canvas = function() {
  var canvas__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.canvas.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var canvas = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return canvas__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  canvas.cljs$lang$maxFixedArity = 1;
  canvas.cljs$lang$applyTo = function(arglist__10359) {
    var opts__4903__auto__ = cljs.core.first(arglist__10359);
    var children__4904__auto__ = cljs.core.rest(arglist__10359);
    return canvas__delegate(opts__4903__auto__, children__4904__auto__);
  };
  canvas.cljs$core$IFn$_invoke$arity$variadic = canvas__delegate;
  return canvas;
}();
om.dom.caption = function() {
  var caption__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.caption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var caption = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return caption__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  caption.cljs$lang$maxFixedArity = 1;
  caption.cljs$lang$applyTo = function(arglist__10360) {
    var opts__4903__auto__ = cljs.core.first(arglist__10360);
    var children__4904__auto__ = cljs.core.rest(arglist__10360);
    return caption__delegate(opts__4903__auto__, children__4904__auto__);
  };
  caption.cljs$core$IFn$_invoke$arity$variadic = caption__delegate;
  return caption;
}();
om.dom.cite = function() {
  var cite__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.cite.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var cite = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return cite__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  cite.cljs$lang$maxFixedArity = 1;
  cite.cljs$lang$applyTo = function(arglist__10361) {
    var opts__4903__auto__ = cljs.core.first(arglist__10361);
    var children__4904__auto__ = cljs.core.rest(arglist__10361);
    return cite__delegate(opts__4903__auto__, children__4904__auto__);
  };
  cite.cljs$core$IFn$_invoke$arity$variadic = cite__delegate;
  return cite;
}();
om.dom.code = function() {
  var code__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.code.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var code = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return code__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  code.cljs$lang$maxFixedArity = 1;
  code.cljs$lang$applyTo = function(arglist__10362) {
    var opts__4903__auto__ = cljs.core.first(arglist__10362);
    var children__4904__auto__ = cljs.core.rest(arglist__10362);
    return code__delegate(opts__4903__auto__, children__4904__auto__);
  };
  code.cljs$core$IFn$_invoke$arity$variadic = code__delegate;
  return code;
}();
om.dom.col = function() {
  var col__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.col.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var col = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return col__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  col.cljs$lang$maxFixedArity = 1;
  col.cljs$lang$applyTo = function(arglist__10363) {
    var opts__4903__auto__ = cljs.core.first(arglist__10363);
    var children__4904__auto__ = cljs.core.rest(arglist__10363);
    return col__delegate(opts__4903__auto__, children__4904__auto__);
  };
  col.cljs$core$IFn$_invoke$arity$variadic = col__delegate;
  return col;
}();
om.dom.colgroup = function() {
  var colgroup__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.colgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var colgroup = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return colgroup__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  colgroup.cljs$lang$maxFixedArity = 1;
  colgroup.cljs$lang$applyTo = function(arglist__10364) {
    var opts__4903__auto__ = cljs.core.first(arglist__10364);
    var children__4904__auto__ = cljs.core.rest(arglist__10364);
    return colgroup__delegate(opts__4903__auto__, children__4904__auto__);
  };
  colgroup.cljs$core$IFn$_invoke$arity$variadic = colgroup__delegate;
  return colgroup;
}();
om.dom.data = function() {
  var data__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.data.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var data = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return data__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  data.cljs$lang$maxFixedArity = 1;
  data.cljs$lang$applyTo = function(arglist__10365) {
    var opts__4903__auto__ = cljs.core.first(arglist__10365);
    var children__4904__auto__ = cljs.core.rest(arglist__10365);
    return data__delegate(opts__4903__auto__, children__4904__auto__);
  };
  data.cljs$core$IFn$_invoke$arity$variadic = data__delegate;
  return data;
}();
om.dom.datalist = function() {
  var datalist__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.datalist.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var datalist = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return datalist__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  datalist.cljs$lang$maxFixedArity = 1;
  datalist.cljs$lang$applyTo = function(arglist__10366) {
    var opts__4903__auto__ = cljs.core.first(arglist__10366);
    var children__4904__auto__ = cljs.core.rest(arglist__10366);
    return datalist__delegate(opts__4903__auto__, children__4904__auto__);
  };
  datalist.cljs$core$IFn$_invoke$arity$variadic = datalist__delegate;
  return datalist;
}();
om.dom.dd = function() {
  var dd__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.dd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var dd = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dd__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  dd.cljs$lang$maxFixedArity = 1;
  dd.cljs$lang$applyTo = function(arglist__10367) {
    var opts__4903__auto__ = cljs.core.first(arglist__10367);
    var children__4904__auto__ = cljs.core.rest(arglist__10367);
    return dd__delegate(opts__4903__auto__, children__4904__auto__);
  };
  dd.cljs$core$IFn$_invoke$arity$variadic = dd__delegate;
  return dd;
}();
om.dom.del = function() {
  var del__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.del.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var del = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return del__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  del.cljs$lang$maxFixedArity = 1;
  del.cljs$lang$applyTo = function(arglist__10368) {
    var opts__4903__auto__ = cljs.core.first(arglist__10368);
    var children__4904__auto__ = cljs.core.rest(arglist__10368);
    return del__delegate(opts__4903__auto__, children__4904__auto__);
  };
  del.cljs$core$IFn$_invoke$arity$variadic = del__delegate;
  return del;
}();
om.dom.dfn = function() {
  var dfn__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.dfn.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var dfn = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dfn__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  dfn.cljs$lang$maxFixedArity = 1;
  dfn.cljs$lang$applyTo = function(arglist__10369) {
    var opts__4903__auto__ = cljs.core.first(arglist__10369);
    var children__4904__auto__ = cljs.core.rest(arglist__10369);
    return dfn__delegate(opts__4903__auto__, children__4904__auto__);
  };
  dfn.cljs$core$IFn$_invoke$arity$variadic = dfn__delegate;
  return dfn;
}();
om.dom.div = function() {
  var div__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.div.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var div = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return div__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  div.cljs$lang$maxFixedArity = 1;
  div.cljs$lang$applyTo = function(arglist__10370) {
    var opts__4903__auto__ = cljs.core.first(arglist__10370);
    var children__4904__auto__ = cljs.core.rest(arglist__10370);
    return div__delegate(opts__4903__auto__, children__4904__auto__);
  };
  div.cljs$core$IFn$_invoke$arity$variadic = div__delegate;
  return div;
}();
om.dom.dl = function() {
  var dl__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.dl.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var dl = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dl__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  dl.cljs$lang$maxFixedArity = 1;
  dl.cljs$lang$applyTo = function(arglist__10371) {
    var opts__4903__auto__ = cljs.core.first(arglist__10371);
    var children__4904__auto__ = cljs.core.rest(arglist__10371);
    return dl__delegate(opts__4903__auto__, children__4904__auto__);
  };
  dl.cljs$core$IFn$_invoke$arity$variadic = dl__delegate;
  return dl;
}();
om.dom.dt = function() {
  var dt__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.dt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var dt = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dt__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  dt.cljs$lang$maxFixedArity = 1;
  dt.cljs$lang$applyTo = function(arglist__10372) {
    var opts__4903__auto__ = cljs.core.first(arglist__10372);
    var children__4904__auto__ = cljs.core.rest(arglist__10372);
    return dt__delegate(opts__4903__auto__, children__4904__auto__);
  };
  dt.cljs$core$IFn$_invoke$arity$variadic = dt__delegate;
  return dt;
}();
om.dom.em = function() {
  var em__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.em.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var em = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return em__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  em.cljs$lang$maxFixedArity = 1;
  em.cljs$lang$applyTo = function(arglist__10373) {
    var opts__4903__auto__ = cljs.core.first(arglist__10373);
    var children__4904__auto__ = cljs.core.rest(arglist__10373);
    return em__delegate(opts__4903__auto__, children__4904__auto__);
  };
  em.cljs$core$IFn$_invoke$arity$variadic = em__delegate;
  return em;
}();
om.dom.embed = function() {
  var embed__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.embed.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var embed = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return embed__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  embed.cljs$lang$maxFixedArity = 1;
  embed.cljs$lang$applyTo = function(arglist__10374) {
    var opts__4903__auto__ = cljs.core.first(arglist__10374);
    var children__4904__auto__ = cljs.core.rest(arglist__10374);
    return embed__delegate(opts__4903__auto__, children__4904__auto__);
  };
  embed.cljs$core$IFn$_invoke$arity$variadic = embed__delegate;
  return embed;
}();
om.dom.fieldset = function() {
  var fieldset__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.fieldset.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var fieldset = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fieldset__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  fieldset.cljs$lang$maxFixedArity = 1;
  fieldset.cljs$lang$applyTo = function(arglist__10375) {
    var opts__4903__auto__ = cljs.core.first(arglist__10375);
    var children__4904__auto__ = cljs.core.rest(arglist__10375);
    return fieldset__delegate(opts__4903__auto__, children__4904__auto__);
  };
  fieldset.cljs$core$IFn$_invoke$arity$variadic = fieldset__delegate;
  return fieldset;
}();
om.dom.figcaption = function() {
  var figcaption__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.figcaption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var figcaption = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figcaption__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  figcaption.cljs$lang$maxFixedArity = 1;
  figcaption.cljs$lang$applyTo = function(arglist__10376) {
    var opts__4903__auto__ = cljs.core.first(arglist__10376);
    var children__4904__auto__ = cljs.core.rest(arglist__10376);
    return figcaption__delegate(opts__4903__auto__, children__4904__auto__);
  };
  figcaption.cljs$core$IFn$_invoke$arity$variadic = figcaption__delegate;
  return figcaption;
}();
om.dom.figure = function() {
  var figure__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.figure.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var figure = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figure__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  figure.cljs$lang$maxFixedArity = 1;
  figure.cljs$lang$applyTo = function(arglist__10377) {
    var opts__4903__auto__ = cljs.core.first(arglist__10377);
    var children__4904__auto__ = cljs.core.rest(arglist__10377);
    return figure__delegate(opts__4903__auto__, children__4904__auto__);
  };
  figure.cljs$core$IFn$_invoke$arity$variadic = figure__delegate;
  return figure;
}();
om.dom.footer = function() {
  var footer__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.footer.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var footer = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return footer__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  footer.cljs$lang$maxFixedArity = 1;
  footer.cljs$lang$applyTo = function(arglist__10378) {
    var opts__4903__auto__ = cljs.core.first(arglist__10378);
    var children__4904__auto__ = cljs.core.rest(arglist__10378);
    return footer__delegate(opts__4903__auto__, children__4904__auto__);
  };
  footer.cljs$core$IFn$_invoke$arity$variadic = footer__delegate;
  return footer;
}();
om.dom.form = function() {
  var form__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.form.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var form = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return form__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  form.cljs$lang$maxFixedArity = 1;
  form.cljs$lang$applyTo = function(arglist__10379) {
    var opts__4903__auto__ = cljs.core.first(arglist__10379);
    var children__4904__auto__ = cljs.core.rest(arglist__10379);
    return form__delegate(opts__4903__auto__, children__4904__auto__);
  };
  form.cljs$core$IFn$_invoke$arity$variadic = form__delegate;
  return form;
}();
om.dom.h1 = function() {
  var h1__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.h1.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var h1 = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h1__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  h1.cljs$lang$maxFixedArity = 1;
  h1.cljs$lang$applyTo = function(arglist__10380) {
    var opts__4903__auto__ = cljs.core.first(arglist__10380);
    var children__4904__auto__ = cljs.core.rest(arglist__10380);
    return h1__delegate(opts__4903__auto__, children__4904__auto__);
  };
  h1.cljs$core$IFn$_invoke$arity$variadic = h1__delegate;
  return h1;
}();
om.dom.h2 = function() {
  var h2__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.h2.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var h2 = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h2__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  h2.cljs$lang$maxFixedArity = 1;
  h2.cljs$lang$applyTo = function(arglist__10381) {
    var opts__4903__auto__ = cljs.core.first(arglist__10381);
    var children__4904__auto__ = cljs.core.rest(arglist__10381);
    return h2__delegate(opts__4903__auto__, children__4904__auto__);
  };
  h2.cljs$core$IFn$_invoke$arity$variadic = h2__delegate;
  return h2;
}();
om.dom.h3 = function() {
  var h3__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.h3.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var h3 = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h3__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  h3.cljs$lang$maxFixedArity = 1;
  h3.cljs$lang$applyTo = function(arglist__10382) {
    var opts__4903__auto__ = cljs.core.first(arglist__10382);
    var children__4904__auto__ = cljs.core.rest(arglist__10382);
    return h3__delegate(opts__4903__auto__, children__4904__auto__);
  };
  h3.cljs$core$IFn$_invoke$arity$variadic = h3__delegate;
  return h3;
}();
om.dom.h4 = function() {
  var h4__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.h4.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var h4 = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h4__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  h4.cljs$lang$maxFixedArity = 1;
  h4.cljs$lang$applyTo = function(arglist__10383) {
    var opts__4903__auto__ = cljs.core.first(arglist__10383);
    var children__4904__auto__ = cljs.core.rest(arglist__10383);
    return h4__delegate(opts__4903__auto__, children__4904__auto__);
  };
  h4.cljs$core$IFn$_invoke$arity$variadic = h4__delegate;
  return h4;
}();
om.dom.h5 = function() {
  var h5__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.h5.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var h5 = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h5__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  h5.cljs$lang$maxFixedArity = 1;
  h5.cljs$lang$applyTo = function(arglist__10384) {
    var opts__4903__auto__ = cljs.core.first(arglist__10384);
    var children__4904__auto__ = cljs.core.rest(arglist__10384);
    return h5__delegate(opts__4903__auto__, children__4904__auto__);
  };
  h5.cljs$core$IFn$_invoke$arity$variadic = h5__delegate;
  return h5;
}();
om.dom.h6 = function() {
  var h6__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.h6.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var h6 = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h6__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  h6.cljs$lang$maxFixedArity = 1;
  h6.cljs$lang$applyTo = function(arglist__10385) {
    var opts__4903__auto__ = cljs.core.first(arglist__10385);
    var children__4904__auto__ = cljs.core.rest(arglist__10385);
    return h6__delegate(opts__4903__auto__, children__4904__auto__);
  };
  h6.cljs$core$IFn$_invoke$arity$variadic = h6__delegate;
  return h6;
}();
om.dom.head = function() {
  var head__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.head.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var head = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return head__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  head.cljs$lang$maxFixedArity = 1;
  head.cljs$lang$applyTo = function(arglist__10386) {
    var opts__4903__auto__ = cljs.core.first(arglist__10386);
    var children__4904__auto__ = cljs.core.rest(arglist__10386);
    return head__delegate(opts__4903__auto__, children__4904__auto__);
  };
  head.cljs$core$IFn$_invoke$arity$variadic = head__delegate;
  return head;
}();
om.dom.header = function() {
  var header__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.header.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var header = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return header__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  header.cljs$lang$maxFixedArity = 1;
  header.cljs$lang$applyTo = function(arglist__10387) {
    var opts__4903__auto__ = cljs.core.first(arglist__10387);
    var children__4904__auto__ = cljs.core.rest(arglist__10387);
    return header__delegate(opts__4903__auto__, children__4904__auto__);
  };
  header.cljs$core$IFn$_invoke$arity$variadic = header__delegate;
  return header;
}();
om.dom.hr = function() {
  var hr__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.hr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var hr = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return hr__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  hr.cljs$lang$maxFixedArity = 1;
  hr.cljs$lang$applyTo = function(arglist__10388) {
    var opts__4903__auto__ = cljs.core.first(arglist__10388);
    var children__4904__auto__ = cljs.core.rest(arglist__10388);
    return hr__delegate(opts__4903__auto__, children__4904__auto__);
  };
  hr.cljs$core$IFn$_invoke$arity$variadic = hr__delegate;
  return hr;
}();
om.dom.html = function() {
  var html__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.html.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var html = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return html__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  html.cljs$lang$maxFixedArity = 1;
  html.cljs$lang$applyTo = function(arglist__10389) {
    var opts__4903__auto__ = cljs.core.first(arglist__10389);
    var children__4904__auto__ = cljs.core.rest(arglist__10389);
    return html__delegate(opts__4903__auto__, children__4904__auto__);
  };
  html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
  return html;
}();
om.dom.i = function() {
  var i__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.i.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var i = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return i__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  i.cljs$lang$maxFixedArity = 1;
  i.cljs$lang$applyTo = function(arglist__10390) {
    var opts__4903__auto__ = cljs.core.first(arglist__10390);
    var children__4904__auto__ = cljs.core.rest(arglist__10390);
    return i__delegate(opts__4903__auto__, children__4904__auto__);
  };
  i.cljs$core$IFn$_invoke$arity$variadic = i__delegate;
  return i;
}();
om.dom.iframe = function() {
  var iframe__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.iframe.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var iframe = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return iframe__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  iframe.cljs$lang$maxFixedArity = 1;
  iframe.cljs$lang$applyTo = function(arglist__10391) {
    var opts__4903__auto__ = cljs.core.first(arglist__10391);
    var children__4904__auto__ = cljs.core.rest(arglist__10391);
    return iframe__delegate(opts__4903__auto__, children__4904__auto__);
  };
  iframe.cljs$core$IFn$_invoke$arity$variadic = iframe__delegate;
  return iframe;
}();
om.dom.img = function() {
  var img__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.img.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var img = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return img__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  img.cljs$lang$maxFixedArity = 1;
  img.cljs$lang$applyTo = function(arglist__10392) {
    var opts__4903__auto__ = cljs.core.first(arglist__10392);
    var children__4904__auto__ = cljs.core.rest(arglist__10392);
    return img__delegate(opts__4903__auto__, children__4904__auto__);
  };
  img.cljs$core$IFn$_invoke$arity$variadic = img__delegate;
  return img;
}();
om.dom.ins = function() {
  var ins__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.ins.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var ins = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ins__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  ins.cljs$lang$maxFixedArity = 1;
  ins.cljs$lang$applyTo = function(arglist__10393) {
    var opts__4903__auto__ = cljs.core.first(arglist__10393);
    var children__4904__auto__ = cljs.core.rest(arglist__10393);
    return ins__delegate(opts__4903__auto__, children__4904__auto__);
  };
  ins.cljs$core$IFn$_invoke$arity$variadic = ins__delegate;
  return ins;
}();
om.dom.kbd = function() {
  var kbd__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.kbd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var kbd = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return kbd__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  kbd.cljs$lang$maxFixedArity = 1;
  kbd.cljs$lang$applyTo = function(arglist__10394) {
    var opts__4903__auto__ = cljs.core.first(arglist__10394);
    var children__4904__auto__ = cljs.core.rest(arglist__10394);
    return kbd__delegate(opts__4903__auto__, children__4904__auto__);
  };
  kbd.cljs$core$IFn$_invoke$arity$variadic = kbd__delegate;
  return kbd;
}();
om.dom.keygen = function() {
  var keygen__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.keygen.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var keygen = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return keygen__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  keygen.cljs$lang$maxFixedArity = 1;
  keygen.cljs$lang$applyTo = function(arglist__10395) {
    var opts__4903__auto__ = cljs.core.first(arglist__10395);
    var children__4904__auto__ = cljs.core.rest(arglist__10395);
    return keygen__delegate(opts__4903__auto__, children__4904__auto__);
  };
  keygen.cljs$core$IFn$_invoke$arity$variadic = keygen__delegate;
  return keygen;
}();
om.dom.label = function() {
  var label__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.label.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var label = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return label__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  label.cljs$lang$maxFixedArity = 1;
  label.cljs$lang$applyTo = function(arglist__10396) {
    var opts__4903__auto__ = cljs.core.first(arglist__10396);
    var children__4904__auto__ = cljs.core.rest(arglist__10396);
    return label__delegate(opts__4903__auto__, children__4904__auto__);
  };
  label.cljs$core$IFn$_invoke$arity$variadic = label__delegate;
  return label;
}();
om.dom.legend = function() {
  var legend__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.legend.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var legend = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return legend__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  legend.cljs$lang$maxFixedArity = 1;
  legend.cljs$lang$applyTo = function(arglist__10397) {
    var opts__4903__auto__ = cljs.core.first(arglist__10397);
    var children__4904__auto__ = cljs.core.rest(arglist__10397);
    return legend__delegate(opts__4903__auto__, children__4904__auto__);
  };
  legend.cljs$core$IFn$_invoke$arity$variadic = legend__delegate;
  return legend;
}();
om.dom.li = function() {
  var li__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.li.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var li = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return li__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  li.cljs$lang$maxFixedArity = 1;
  li.cljs$lang$applyTo = function(arglist__10398) {
    var opts__4903__auto__ = cljs.core.first(arglist__10398);
    var children__4904__auto__ = cljs.core.rest(arglist__10398);
    return li__delegate(opts__4903__auto__, children__4904__auto__);
  };
  li.cljs$core$IFn$_invoke$arity$variadic = li__delegate;
  return li;
}();
om.dom.link = function() {
  var link__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.link.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var link = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return link__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  link.cljs$lang$maxFixedArity = 1;
  link.cljs$lang$applyTo = function(arglist__10399) {
    var opts__4903__auto__ = cljs.core.first(arglist__10399);
    var children__4904__auto__ = cljs.core.rest(arglist__10399);
    return link__delegate(opts__4903__auto__, children__4904__auto__);
  };
  link.cljs$core$IFn$_invoke$arity$variadic = link__delegate;
  return link;
}();
om.dom.main = function() {
  var main__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.main.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var main = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return main__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  main.cljs$lang$maxFixedArity = 1;
  main.cljs$lang$applyTo = function(arglist__10400) {
    var opts__4903__auto__ = cljs.core.first(arglist__10400);
    var children__4904__auto__ = cljs.core.rest(arglist__10400);
    return main__delegate(opts__4903__auto__, children__4904__auto__);
  };
  main.cljs$core$IFn$_invoke$arity$variadic = main__delegate;
  return main;
}();
om.dom.map = function() {
  var map__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.map.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var map = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return map__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  map.cljs$lang$maxFixedArity = 1;
  map.cljs$lang$applyTo = function(arglist__10401) {
    var opts__4903__auto__ = cljs.core.first(arglist__10401);
    var children__4904__auto__ = cljs.core.rest(arglist__10401);
    return map__delegate(opts__4903__auto__, children__4904__auto__);
  };
  map.cljs$core$IFn$_invoke$arity$variadic = map__delegate;
  return map;
}();
om.dom.mark = function() {
  var mark__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.mark.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var mark = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mark__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  mark.cljs$lang$maxFixedArity = 1;
  mark.cljs$lang$applyTo = function(arglist__10402) {
    var opts__4903__auto__ = cljs.core.first(arglist__10402);
    var children__4904__auto__ = cljs.core.rest(arglist__10402);
    return mark__delegate(opts__4903__auto__, children__4904__auto__);
  };
  mark.cljs$core$IFn$_invoke$arity$variadic = mark__delegate;
  return mark;
}();
om.dom.menu = function() {
  var menu__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.menu.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var menu = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menu__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  menu.cljs$lang$maxFixedArity = 1;
  menu.cljs$lang$applyTo = function(arglist__10403) {
    var opts__4903__auto__ = cljs.core.first(arglist__10403);
    var children__4904__auto__ = cljs.core.rest(arglist__10403);
    return menu__delegate(opts__4903__auto__, children__4904__auto__);
  };
  menu.cljs$core$IFn$_invoke$arity$variadic = menu__delegate;
  return menu;
}();
om.dom.menuitem = function() {
  var menuitem__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.menuitem.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var menuitem = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menuitem__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  menuitem.cljs$lang$maxFixedArity = 1;
  menuitem.cljs$lang$applyTo = function(arglist__10404) {
    var opts__4903__auto__ = cljs.core.first(arglist__10404);
    var children__4904__auto__ = cljs.core.rest(arglist__10404);
    return menuitem__delegate(opts__4903__auto__, children__4904__auto__);
  };
  menuitem.cljs$core$IFn$_invoke$arity$variadic = menuitem__delegate;
  return menuitem;
}();
om.dom.meta = function() {
  var meta__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.meta.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var meta = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meta__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  meta.cljs$lang$maxFixedArity = 1;
  meta.cljs$lang$applyTo = function(arglist__10405) {
    var opts__4903__auto__ = cljs.core.first(arglist__10405);
    var children__4904__auto__ = cljs.core.rest(arglist__10405);
    return meta__delegate(opts__4903__auto__, children__4904__auto__);
  };
  meta.cljs$core$IFn$_invoke$arity$variadic = meta__delegate;
  return meta;
}();
om.dom.meter = function() {
  var meter__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.meter.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var meter = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meter__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  meter.cljs$lang$maxFixedArity = 1;
  meter.cljs$lang$applyTo = function(arglist__10406) {
    var opts__4903__auto__ = cljs.core.first(arglist__10406);
    var children__4904__auto__ = cljs.core.rest(arglist__10406);
    return meter__delegate(opts__4903__auto__, children__4904__auto__);
  };
  meter.cljs$core$IFn$_invoke$arity$variadic = meter__delegate;
  return meter;
}();
om.dom.nav = function() {
  var nav__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.nav.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var nav = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return nav__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  nav.cljs$lang$maxFixedArity = 1;
  nav.cljs$lang$applyTo = function(arglist__10407) {
    var opts__4903__auto__ = cljs.core.first(arglist__10407);
    var children__4904__auto__ = cljs.core.rest(arglist__10407);
    return nav__delegate(opts__4903__auto__, children__4904__auto__);
  };
  nav.cljs$core$IFn$_invoke$arity$variadic = nav__delegate;
  return nav;
}();
om.dom.noscript = function() {
  var noscript__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.noscript.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var noscript = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return noscript__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  noscript.cljs$lang$maxFixedArity = 1;
  noscript.cljs$lang$applyTo = function(arglist__10408) {
    var opts__4903__auto__ = cljs.core.first(arglist__10408);
    var children__4904__auto__ = cljs.core.rest(arglist__10408);
    return noscript__delegate(opts__4903__auto__, children__4904__auto__);
  };
  noscript.cljs$core$IFn$_invoke$arity$variadic = noscript__delegate;
  return noscript;
}();
om.dom.object = function() {
  var object__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.object.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var object = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return object__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  object.cljs$lang$maxFixedArity = 1;
  object.cljs$lang$applyTo = function(arglist__10409) {
    var opts__4903__auto__ = cljs.core.first(arglist__10409);
    var children__4904__auto__ = cljs.core.rest(arglist__10409);
    return object__delegate(opts__4903__auto__, children__4904__auto__);
  };
  object.cljs$core$IFn$_invoke$arity$variadic = object__delegate;
  return object;
}();
om.dom.ol = function() {
  var ol__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.ol.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var ol = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ol__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  ol.cljs$lang$maxFixedArity = 1;
  ol.cljs$lang$applyTo = function(arglist__10410) {
    var opts__4903__auto__ = cljs.core.first(arglist__10410);
    var children__4904__auto__ = cljs.core.rest(arglist__10410);
    return ol__delegate(opts__4903__auto__, children__4904__auto__);
  };
  ol.cljs$core$IFn$_invoke$arity$variadic = ol__delegate;
  return ol;
}();
om.dom.optgroup = function() {
  var optgroup__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.optgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var optgroup = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return optgroup__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  optgroup.cljs$lang$maxFixedArity = 1;
  optgroup.cljs$lang$applyTo = function(arglist__10411) {
    var opts__4903__auto__ = cljs.core.first(arglist__10411);
    var children__4904__auto__ = cljs.core.rest(arglist__10411);
    return optgroup__delegate(opts__4903__auto__, children__4904__auto__);
  };
  optgroup.cljs$core$IFn$_invoke$arity$variadic = optgroup__delegate;
  return optgroup;
}();
om.dom.output = function() {
  var output__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.output.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var output = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return output__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  output.cljs$lang$maxFixedArity = 1;
  output.cljs$lang$applyTo = function(arglist__10412) {
    var opts__4903__auto__ = cljs.core.first(arglist__10412);
    var children__4904__auto__ = cljs.core.rest(arglist__10412);
    return output__delegate(opts__4903__auto__, children__4904__auto__);
  };
  output.cljs$core$IFn$_invoke$arity$variadic = output__delegate;
  return output;
}();
om.dom.p = function() {
  var p__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.p.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var p = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return p__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  p.cljs$lang$maxFixedArity = 1;
  p.cljs$lang$applyTo = function(arglist__10413) {
    var opts__4903__auto__ = cljs.core.first(arglist__10413);
    var children__4904__auto__ = cljs.core.rest(arglist__10413);
    return p__delegate(opts__4903__auto__, children__4904__auto__);
  };
  p.cljs$core$IFn$_invoke$arity$variadic = p__delegate;
  return p;
}();
om.dom.param = function() {
  var param__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.param.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var param = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return param__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  param.cljs$lang$maxFixedArity = 1;
  param.cljs$lang$applyTo = function(arglist__10414) {
    var opts__4903__auto__ = cljs.core.first(arglist__10414);
    var children__4904__auto__ = cljs.core.rest(arglist__10414);
    return param__delegate(opts__4903__auto__, children__4904__auto__);
  };
  param.cljs$core$IFn$_invoke$arity$variadic = param__delegate;
  return param;
}();
om.dom.pre = function() {
  var pre__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.pre.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var pre = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return pre__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  pre.cljs$lang$maxFixedArity = 1;
  pre.cljs$lang$applyTo = function(arglist__10415) {
    var opts__4903__auto__ = cljs.core.first(arglist__10415);
    var children__4904__auto__ = cljs.core.rest(arglist__10415);
    return pre__delegate(opts__4903__auto__, children__4904__auto__);
  };
  pre.cljs$core$IFn$_invoke$arity$variadic = pre__delegate;
  return pre;
}();
om.dom.progress = function() {
  var progress__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.progress.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var progress = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return progress__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  progress.cljs$lang$maxFixedArity = 1;
  progress.cljs$lang$applyTo = function(arglist__10416) {
    var opts__4903__auto__ = cljs.core.first(arglist__10416);
    var children__4904__auto__ = cljs.core.rest(arglist__10416);
    return progress__delegate(opts__4903__auto__, children__4904__auto__);
  };
  progress.cljs$core$IFn$_invoke$arity$variadic = progress__delegate;
  return progress;
}();
om.dom.q = function() {
  var q__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.q.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var q = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return q__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  q.cljs$lang$maxFixedArity = 1;
  q.cljs$lang$applyTo = function(arglist__10417) {
    var opts__4903__auto__ = cljs.core.first(arglist__10417);
    var children__4904__auto__ = cljs.core.rest(arglist__10417);
    return q__delegate(opts__4903__auto__, children__4904__auto__);
  };
  q.cljs$core$IFn$_invoke$arity$variadic = q__delegate;
  return q;
}();
om.dom.rp = function() {
  var rp__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.rp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var rp = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rp__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  rp.cljs$lang$maxFixedArity = 1;
  rp.cljs$lang$applyTo = function(arglist__10418) {
    var opts__4903__auto__ = cljs.core.first(arglist__10418);
    var children__4904__auto__ = cljs.core.rest(arglist__10418);
    return rp__delegate(opts__4903__auto__, children__4904__auto__);
  };
  rp.cljs$core$IFn$_invoke$arity$variadic = rp__delegate;
  return rp;
}();
om.dom.rt = function() {
  var rt__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.rt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var rt = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rt__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  rt.cljs$lang$maxFixedArity = 1;
  rt.cljs$lang$applyTo = function(arglist__10419) {
    var opts__4903__auto__ = cljs.core.first(arglist__10419);
    var children__4904__auto__ = cljs.core.rest(arglist__10419);
    return rt__delegate(opts__4903__auto__, children__4904__auto__);
  };
  rt.cljs$core$IFn$_invoke$arity$variadic = rt__delegate;
  return rt;
}();
om.dom.ruby = function() {
  var ruby__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.ruby.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var ruby = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ruby__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  ruby.cljs$lang$maxFixedArity = 1;
  ruby.cljs$lang$applyTo = function(arglist__10420) {
    var opts__4903__auto__ = cljs.core.first(arglist__10420);
    var children__4904__auto__ = cljs.core.rest(arglist__10420);
    return ruby__delegate(opts__4903__auto__, children__4904__auto__);
  };
  ruby.cljs$core$IFn$_invoke$arity$variadic = ruby__delegate;
  return ruby;
}();
om.dom.s = function() {
  var s__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.s.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var s = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return s__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  s.cljs$lang$maxFixedArity = 1;
  s.cljs$lang$applyTo = function(arglist__10421) {
    var opts__4903__auto__ = cljs.core.first(arglist__10421);
    var children__4904__auto__ = cljs.core.rest(arglist__10421);
    return s__delegate(opts__4903__auto__, children__4904__auto__);
  };
  s.cljs$core$IFn$_invoke$arity$variadic = s__delegate;
  return s;
}();
om.dom.samp = function() {
  var samp__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.samp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var samp = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return samp__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  samp.cljs$lang$maxFixedArity = 1;
  samp.cljs$lang$applyTo = function(arglist__10422) {
    var opts__4903__auto__ = cljs.core.first(arglist__10422);
    var children__4904__auto__ = cljs.core.rest(arglist__10422);
    return samp__delegate(opts__4903__auto__, children__4904__auto__);
  };
  samp.cljs$core$IFn$_invoke$arity$variadic = samp__delegate;
  return samp;
}();
om.dom.script = function() {
  var script__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.script.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var script = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return script__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  script.cljs$lang$maxFixedArity = 1;
  script.cljs$lang$applyTo = function(arglist__10423) {
    var opts__4903__auto__ = cljs.core.first(arglist__10423);
    var children__4904__auto__ = cljs.core.rest(arglist__10423);
    return script__delegate(opts__4903__auto__, children__4904__auto__);
  };
  script.cljs$core$IFn$_invoke$arity$variadic = script__delegate;
  return script;
}();
om.dom.section = function() {
  var section__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.section.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var section = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return section__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  section.cljs$lang$maxFixedArity = 1;
  section.cljs$lang$applyTo = function(arglist__10424) {
    var opts__4903__auto__ = cljs.core.first(arglist__10424);
    var children__4904__auto__ = cljs.core.rest(arglist__10424);
    return section__delegate(opts__4903__auto__, children__4904__auto__);
  };
  section.cljs$core$IFn$_invoke$arity$variadic = section__delegate;
  return section;
}();
om.dom.select = function() {
  var select__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.select.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var select = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return select__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  select.cljs$lang$maxFixedArity = 1;
  select.cljs$lang$applyTo = function(arglist__10425) {
    var opts__4903__auto__ = cljs.core.first(arglist__10425);
    var children__4904__auto__ = cljs.core.rest(arglist__10425);
    return select__delegate(opts__4903__auto__, children__4904__auto__);
  };
  select.cljs$core$IFn$_invoke$arity$variadic = select__delegate;
  return select;
}();
om.dom.small = function() {
  var small__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.small.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var small = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return small__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  small.cljs$lang$maxFixedArity = 1;
  small.cljs$lang$applyTo = function(arglist__10426) {
    var opts__4903__auto__ = cljs.core.first(arglist__10426);
    var children__4904__auto__ = cljs.core.rest(arglist__10426);
    return small__delegate(opts__4903__auto__, children__4904__auto__);
  };
  small.cljs$core$IFn$_invoke$arity$variadic = small__delegate;
  return small;
}();
om.dom.source = function() {
  var source__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.source.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var source = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return source__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  source.cljs$lang$maxFixedArity = 1;
  source.cljs$lang$applyTo = function(arglist__10427) {
    var opts__4903__auto__ = cljs.core.first(arglist__10427);
    var children__4904__auto__ = cljs.core.rest(arglist__10427);
    return source__delegate(opts__4903__auto__, children__4904__auto__);
  };
  source.cljs$core$IFn$_invoke$arity$variadic = source__delegate;
  return source;
}();
om.dom.span = function() {
  var span__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.span.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var span = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return span__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  span.cljs$lang$maxFixedArity = 1;
  span.cljs$lang$applyTo = function(arglist__10428) {
    var opts__4903__auto__ = cljs.core.first(arglist__10428);
    var children__4904__auto__ = cljs.core.rest(arglist__10428);
    return span__delegate(opts__4903__auto__, children__4904__auto__);
  };
  span.cljs$core$IFn$_invoke$arity$variadic = span__delegate;
  return span;
}();
om.dom.strong = function() {
  var strong__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.strong.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var strong = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return strong__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  strong.cljs$lang$maxFixedArity = 1;
  strong.cljs$lang$applyTo = function(arglist__10429) {
    var opts__4903__auto__ = cljs.core.first(arglist__10429);
    var children__4904__auto__ = cljs.core.rest(arglist__10429);
    return strong__delegate(opts__4903__auto__, children__4904__auto__);
  };
  strong.cljs$core$IFn$_invoke$arity$variadic = strong__delegate;
  return strong;
}();
om.dom.style = function() {
  var style__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.style.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var style = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return style__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  style.cljs$lang$maxFixedArity = 1;
  style.cljs$lang$applyTo = function(arglist__10430) {
    var opts__4903__auto__ = cljs.core.first(arglist__10430);
    var children__4904__auto__ = cljs.core.rest(arglist__10430);
    return style__delegate(opts__4903__auto__, children__4904__auto__);
  };
  style.cljs$core$IFn$_invoke$arity$variadic = style__delegate;
  return style;
}();
om.dom.sub = function() {
  var sub__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.sub.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var sub = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sub__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  sub.cljs$lang$maxFixedArity = 1;
  sub.cljs$lang$applyTo = function(arglist__10431) {
    var opts__4903__auto__ = cljs.core.first(arglist__10431);
    var children__4904__auto__ = cljs.core.rest(arglist__10431);
    return sub__delegate(opts__4903__auto__, children__4904__auto__);
  };
  sub.cljs$core$IFn$_invoke$arity$variadic = sub__delegate;
  return sub;
}();
om.dom.summary = function() {
  var summary__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.summary.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var summary = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return summary__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  summary.cljs$lang$maxFixedArity = 1;
  summary.cljs$lang$applyTo = function(arglist__10432) {
    var opts__4903__auto__ = cljs.core.first(arglist__10432);
    var children__4904__auto__ = cljs.core.rest(arglist__10432);
    return summary__delegate(opts__4903__auto__, children__4904__auto__);
  };
  summary.cljs$core$IFn$_invoke$arity$variadic = summary__delegate;
  return summary;
}();
om.dom.sup = function() {
  var sup__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.sup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var sup = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sup__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  sup.cljs$lang$maxFixedArity = 1;
  sup.cljs$lang$applyTo = function(arglist__10433) {
    var opts__4903__auto__ = cljs.core.first(arglist__10433);
    var children__4904__auto__ = cljs.core.rest(arglist__10433);
    return sup__delegate(opts__4903__auto__, children__4904__auto__);
  };
  sup.cljs$core$IFn$_invoke$arity$variadic = sup__delegate;
  return sup;
}();
om.dom.table = function() {
  var table__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.table.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var table = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return table__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  table.cljs$lang$maxFixedArity = 1;
  table.cljs$lang$applyTo = function(arglist__10434) {
    var opts__4903__auto__ = cljs.core.first(arglist__10434);
    var children__4904__auto__ = cljs.core.rest(arglist__10434);
    return table__delegate(opts__4903__auto__, children__4904__auto__);
  };
  table.cljs$core$IFn$_invoke$arity$variadic = table__delegate;
  return table;
}();
om.dom.tbody = function() {
  var tbody__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.tbody.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var tbody = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tbody__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  tbody.cljs$lang$maxFixedArity = 1;
  tbody.cljs$lang$applyTo = function(arglist__10435) {
    var opts__4903__auto__ = cljs.core.first(arglist__10435);
    var children__4904__auto__ = cljs.core.rest(arglist__10435);
    return tbody__delegate(opts__4903__auto__, children__4904__auto__);
  };
  tbody.cljs$core$IFn$_invoke$arity$variadic = tbody__delegate;
  return tbody;
}();
om.dom.td = function() {
  var td__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.td.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var td = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return td__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  td.cljs$lang$maxFixedArity = 1;
  td.cljs$lang$applyTo = function(arglist__10436) {
    var opts__4903__auto__ = cljs.core.first(arglist__10436);
    var children__4904__auto__ = cljs.core.rest(arglist__10436);
    return td__delegate(opts__4903__auto__, children__4904__auto__);
  };
  td.cljs$core$IFn$_invoke$arity$variadic = td__delegate;
  return td;
}();
om.dom.tfoot = function() {
  var tfoot__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.tfoot.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var tfoot = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tfoot__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  tfoot.cljs$lang$maxFixedArity = 1;
  tfoot.cljs$lang$applyTo = function(arglist__10437) {
    var opts__4903__auto__ = cljs.core.first(arglist__10437);
    var children__4904__auto__ = cljs.core.rest(arglist__10437);
    return tfoot__delegate(opts__4903__auto__, children__4904__auto__);
  };
  tfoot.cljs$core$IFn$_invoke$arity$variadic = tfoot__delegate;
  return tfoot;
}();
om.dom.th = function() {
  var th__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.th.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var th = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return th__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  th.cljs$lang$maxFixedArity = 1;
  th.cljs$lang$applyTo = function(arglist__10438) {
    var opts__4903__auto__ = cljs.core.first(arglist__10438);
    var children__4904__auto__ = cljs.core.rest(arglist__10438);
    return th__delegate(opts__4903__auto__, children__4904__auto__);
  };
  th.cljs$core$IFn$_invoke$arity$variadic = th__delegate;
  return th;
}();
om.dom.thead = function() {
  var thead__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.thead.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var thead = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return thead__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  thead.cljs$lang$maxFixedArity = 1;
  thead.cljs$lang$applyTo = function(arglist__10439) {
    var opts__4903__auto__ = cljs.core.first(arglist__10439);
    var children__4904__auto__ = cljs.core.rest(arglist__10439);
    return thead__delegate(opts__4903__auto__, children__4904__auto__);
  };
  thead.cljs$core$IFn$_invoke$arity$variadic = thead__delegate;
  return thead;
}();
om.dom.time = function() {
  var time__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.time.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var time = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return time__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  time.cljs$lang$maxFixedArity = 1;
  time.cljs$lang$applyTo = function(arglist__10440) {
    var opts__4903__auto__ = cljs.core.first(arglist__10440);
    var children__4904__auto__ = cljs.core.rest(arglist__10440);
    return time__delegate(opts__4903__auto__, children__4904__auto__);
  };
  time.cljs$core$IFn$_invoke$arity$variadic = time__delegate;
  return time;
}();
om.dom.title = function() {
  var title__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.title.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var title = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return title__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  title.cljs$lang$maxFixedArity = 1;
  title.cljs$lang$applyTo = function(arglist__10441) {
    var opts__4903__auto__ = cljs.core.first(arglist__10441);
    var children__4904__auto__ = cljs.core.rest(arglist__10441);
    return title__delegate(opts__4903__auto__, children__4904__auto__);
  };
  title.cljs$core$IFn$_invoke$arity$variadic = title__delegate;
  return title;
}();
om.dom.tr = function() {
  var tr__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.tr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var tr = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tr__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  tr.cljs$lang$maxFixedArity = 1;
  tr.cljs$lang$applyTo = function(arglist__10442) {
    var opts__4903__auto__ = cljs.core.first(arglist__10442);
    var children__4904__auto__ = cljs.core.rest(arglist__10442);
    return tr__delegate(opts__4903__auto__, children__4904__auto__);
  };
  tr.cljs$core$IFn$_invoke$arity$variadic = tr__delegate;
  return tr;
}();
om.dom.track = function() {
  var track__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.track.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var track = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return track__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  track.cljs$lang$maxFixedArity = 1;
  track.cljs$lang$applyTo = function(arglist__10443) {
    var opts__4903__auto__ = cljs.core.first(arglist__10443);
    var children__4904__auto__ = cljs.core.rest(arglist__10443);
    return track__delegate(opts__4903__auto__, children__4904__auto__);
  };
  track.cljs$core$IFn$_invoke$arity$variadic = track__delegate;
  return track;
}();
om.dom.u = function() {
  var u__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.u.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var u = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return u__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  u.cljs$lang$maxFixedArity = 1;
  u.cljs$lang$applyTo = function(arglist__10444) {
    var opts__4903__auto__ = cljs.core.first(arglist__10444);
    var children__4904__auto__ = cljs.core.rest(arglist__10444);
    return u__delegate(opts__4903__auto__, children__4904__auto__);
  };
  u.cljs$core$IFn$_invoke$arity$variadic = u__delegate;
  return u;
}();
om.dom.ul = function() {
  var ul__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.ul.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var ul = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ul__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  ul.cljs$lang$maxFixedArity = 1;
  ul.cljs$lang$applyTo = function(arglist__10445) {
    var opts__4903__auto__ = cljs.core.first(arglist__10445);
    var children__4904__auto__ = cljs.core.rest(arglist__10445);
    return ul__delegate(opts__4903__auto__, children__4904__auto__);
  };
  ul.cljs$core$IFn$_invoke$arity$variadic = ul__delegate;
  return ul;
}();
om.dom.var$ = function() {
  var var$__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.var$.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var var$ = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return var$__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  var$.cljs$lang$maxFixedArity = 1;
  var$.cljs$lang$applyTo = function(arglist__10446) {
    var opts__4903__auto__ = cljs.core.first(arglist__10446);
    var children__4904__auto__ = cljs.core.rest(arglist__10446);
    return var$__delegate(opts__4903__auto__, children__4904__auto__);
  };
  var$.cljs$core$IFn$_invoke$arity$variadic = var$__delegate;
  return var$;
}();
om.dom.video = function() {
  var video__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.video.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var video = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return video__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  video.cljs$lang$maxFixedArity = 1;
  video.cljs$lang$applyTo = function(arglist__10447) {
    var opts__4903__auto__ = cljs.core.first(arglist__10447);
    var children__4904__auto__ = cljs.core.rest(arglist__10447);
    return video__delegate(opts__4903__auto__, children__4904__auto__);
  };
  video.cljs$core$IFn$_invoke$arity$variadic = video__delegate;
  return video;
}();
om.dom.wbr = function() {
  var wbr__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.wbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var wbr = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return wbr__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  wbr.cljs$lang$maxFixedArity = 1;
  wbr.cljs$lang$applyTo = function(arglist__10448) {
    var opts__4903__auto__ = cljs.core.first(arglist__10448);
    var children__4904__auto__ = cljs.core.rest(arglist__10448);
    return wbr__delegate(opts__4903__auto__, children__4904__auto__);
  };
  wbr.cljs$core$IFn$_invoke$arity$variadic = wbr__delegate;
  return wbr;
}();
om.dom.circle = function() {
  var circle__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.circle.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var circle = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return circle__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  circle.cljs$lang$maxFixedArity = 1;
  circle.cljs$lang$applyTo = function(arglist__10449) {
    var opts__4903__auto__ = cljs.core.first(arglist__10449);
    var children__4904__auto__ = cljs.core.rest(arglist__10449);
    return circle__delegate(opts__4903__auto__, children__4904__auto__);
  };
  circle.cljs$core$IFn$_invoke$arity$variadic = circle__delegate;
  return circle;
}();
om.dom.g = function() {
  var g__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.g.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var g = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return g__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  g.cljs$lang$maxFixedArity = 1;
  g.cljs$lang$applyTo = function(arglist__10450) {
    var opts__4903__auto__ = cljs.core.first(arglist__10450);
    var children__4904__auto__ = cljs.core.rest(arglist__10450);
    return g__delegate(opts__4903__auto__, children__4904__auto__);
  };
  g.cljs$core$IFn$_invoke$arity$variadic = g__delegate;
  return g;
}();
om.dom.line = function() {
  var line__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.line.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var line = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return line__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  line.cljs$lang$maxFixedArity = 1;
  line.cljs$lang$applyTo = function(arglist__10451) {
    var opts__4903__auto__ = cljs.core.first(arglist__10451);
    var children__4904__auto__ = cljs.core.rest(arglist__10451);
    return line__delegate(opts__4903__auto__, children__4904__auto__);
  };
  line.cljs$core$IFn$_invoke$arity$variadic = line__delegate;
  return line;
}();
om.dom.path = function() {
  var path__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.path.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var path = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return path__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  path.cljs$lang$maxFixedArity = 1;
  path.cljs$lang$applyTo = function(arglist__10452) {
    var opts__4903__auto__ = cljs.core.first(arglist__10452);
    var children__4904__auto__ = cljs.core.rest(arglist__10452);
    return path__delegate(opts__4903__auto__, children__4904__auto__);
  };
  path.cljs$core$IFn$_invoke$arity$variadic = path__delegate;
  return path;
}();
om.dom.polyline = function() {
  var polyline__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.polyline.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var polyline = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polyline__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  polyline.cljs$lang$maxFixedArity = 1;
  polyline.cljs$lang$applyTo = function(arglist__10453) {
    var opts__4903__auto__ = cljs.core.first(arglist__10453);
    var children__4904__auto__ = cljs.core.rest(arglist__10453);
    return polyline__delegate(opts__4903__auto__, children__4904__auto__);
  };
  polyline.cljs$core$IFn$_invoke$arity$variadic = polyline__delegate;
  return polyline;
}();
om.dom.rect = function() {
  var rect__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.rect.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var rect = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rect__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  rect.cljs$lang$maxFixedArity = 1;
  rect.cljs$lang$applyTo = function(arglist__10454) {
    var opts__4903__auto__ = cljs.core.first(arglist__10454);
    var children__4904__auto__ = cljs.core.rest(arglist__10454);
    return rect__delegate(opts__4903__auto__, children__4904__auto__);
  };
  rect.cljs$core$IFn$_invoke$arity$variadic = rect__delegate;
  return rect;
}();
om.dom.svg = function() {
  var svg__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.svg.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var svg = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return svg__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  svg.cljs$lang$maxFixedArity = 1;
  svg.cljs$lang$applyTo = function(arglist__10455) {
    var opts__4903__auto__ = cljs.core.first(arglist__10455);
    var children__4904__auto__ = cljs.core.rest(arglist__10455);
    return svg__delegate(opts__4903__auto__, children__4904__auto__);
  };
  svg.cljs$core$IFn$_invoke$arity$variadic = svg__delegate;
  return svg;
}();
om.dom.text = function() {
  var text__delegate = function(opts__4903__auto__, children__4904__auto__) {
    return React.DOM.text.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4903__auto__, children__4904__auto__)));
  };
  var text = function(opts__4903__auto__, var_args) {
    var children__4904__auto__ = null;
    if (arguments.length > 1) {
      children__4904__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return text__delegate.call(this, opts__4903__auto__, children__4904__auto__);
  };
  text.cljs$lang$maxFixedArity = 1;
  text.cljs$lang$applyTo = function(arglist__10456) {
    var opts__4903__auto__ = cljs.core.first(arglist__10456);
    var children__4904__auto__ = cljs.core.rest(arglist__10456);
    return text__delegate(opts__4903__auto__, children__4904__auto__);
  };
  text.cljs$core$IFn$_invoke$arity$variadic = text__delegate;
  return text;
}();
om.dom.wrap_form_element = function wrap_form_element(ctor) {
  return React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }});
};
om.dom.input = om.dom.wrap_form_element.call(null, React.DOM.input);
om.dom.textarea = om.dom.wrap_form_element.call(null, React.DOM.textarea);
om.dom.option = om.dom.wrap_form_element.call(null, React.DOM.option);
om.dom.render = function render(component, el) {
  return React.renderComponent(component, el);
};
goog.provide("om.core");
goog.require("cljs.core");
goog.require("om.dom");
goog.require("om.dom");
om.core._STAR_read_enabled_STAR_ = false;
om.core.IInitState = function() {
  var obj10235 = {};
  return obj10235;
}();
om.core.init_state = function init_state(this$) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.om$core$IInitState$init_state$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.om$core$IInitState$init_state$arity$1(this$);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = om.core.init_state[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = om.core.init_state["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInitState.init-state", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IShouldUpdate = function() {
  var obj10237 = {};
  return obj10237;
}();
om.core.should_update = function should_update(this$, next_props, next_state) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.om$core$IShouldUpdate$should_update$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.om$core$IShouldUpdate$should_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = om.core.should_update[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = om.core.should_update["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IShouldUpdate.should-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IWillMount = function() {
  var obj10239 = {};
  return obj10239;
}();
om.core.will_mount = function will_mount(this$) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.om$core$IWillMount$will_mount$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.om$core$IWillMount$will_mount$arity$1(this$);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = om.core.will_mount[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = om.core.will_mount["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillMount.will-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IDidMount = function() {
  var obj10241 = {};
  return obj10241;
}();
om.core.did_mount = function did_mount(this$, node) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.om$core$IDidMount$did_mount$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.om$core$IDidMount$did_mount$arity$2(this$, node);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = om.core.did_mount[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = om.core.did_mount["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidMount.did-mount", this$);
        }
      }
    }().call(null, this$, node);
  }
};
om.core.IWillUnmount = function() {
  var obj10243 = {};
  return obj10243;
}();
om.core.will_unmount = function will_unmount(this$) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.om$core$IWillUnmount$will_unmount$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.om$core$IWillUnmount$will_unmount$arity$1(this$);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = om.core.will_unmount[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = om.core.will_unmount["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUnmount.will-unmount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUpdate = function() {
  var obj10245 = {};
  return obj10245;
}();
om.core.will_update = function will_update(this$, next_props, next_state) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.om$core$IWillUpdate$will_update$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.om$core$IWillUpdate$will_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = om.core.will_update[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = om.core.will_update["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUpdate.will-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IDidUpdate = function() {
  var obj10247 = {};
  return obj10247;
}();
om.core.did_update = function did_update(this$, prev_props, prev_state, root_node) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.om$core$IDidUpdate$did_update$arity$4;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.om$core$IDidUpdate$did_update$arity$4(this$, prev_props, prev_state, root_node);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = om.core.did_update[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = om.core.did_update["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidUpdate.did-update", this$);
        }
      }
    }().call(null, this$, prev_props, prev_state, root_node);
  }
};
om.core.IRender = function() {
  var obj10249 = {};
  return obj10249;
}();
om.core.render = function render(this$) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.om$core$IRender$render$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.om$core$IRender$render$arity$1(this$);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = om.core.render[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = om.core.render["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRender.render", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IRenderState = function() {
  var obj10251 = {};
  return obj10251;
}();
om.core.render_state = function render_state(this$, state) {
  if (function() {
    var and__3396__auto__ = this$;
    if (and__3396__auto__) {
      return this$.om$core$IRenderState$render_state$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return this$.om$core$IRenderState$render_state$arity$2(this$, state);
  } else {
    var x__4029__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3408__auto__ = om.core.render_state[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = om.core.render_state["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderState.render-state", this$);
        }
      }
    }().call(null, this$, state);
  }
};
om.core.IValue = function() {
  var obj10253 = {};
  return obj10253;
}();
om.core._value = function _value(x) {
  if (function() {
    var and__3396__auto__ = x;
    if (and__3396__auto__) {
      return x.om$core$IValue$_value$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return x.om$core$IValue$_value$arity$1(x);
  } else {
    var x__4029__auto__ = x == null ? null : x;
    return function() {
      var or__3408__auto__ = om.core._value[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = om.core._value["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IValue.-value", x);
        }
      }
    }().call(null, x);
  }
};
om.core.IValue["_"] = true;
om.core._value["_"] = function(x) {
  return x;
};
om.core.ICursor = function() {
  var obj10255 = {};
  return obj10255;
}();
om.core._path = function _path(cursor) {
  if (function() {
    var and__3396__auto__ = cursor;
    if (and__3396__auto__) {
      return cursor.om$core$ICursor$_path$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_path$arity$1(cursor);
  } else {
    var x__4029__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3408__auto__ = om.core._path[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = om.core._path["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-path", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core._state = function _state(cursor) {
  if (function() {
    var and__3396__auto__ = cursor;
    if (and__3396__auto__) {
      return cursor.om$core$ICursor$_state$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_state$arity$1(cursor);
  } else {
    var x__4029__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3408__auto__ = om.core._state[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = om.core._state["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-state", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core._shared = function _shared(cursor) {
  if (function() {
    var and__3396__auto__ = cursor;
    if (and__3396__auto__) {
      return cursor.om$core$ICursor$_shared$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_shared$arity$1(cursor);
  } else {
    var x__4029__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3408__auto__ = om.core._shared[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = om.core._shared["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-shared", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core.IToCursor = function() {
  var obj10257 = {};
  return obj10257;
}();
om.core._to_cursor = function() {
  var _to_cursor = null;
  var _to_cursor__2 = function(value, state) {
    if (function() {
      var and__3396__auto__ = value;
      if (and__3396__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$2;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$2(value, state);
    } else {
      var x__4029__auto__ = value == null ? null : value;
      return function() {
        var or__3408__auto__ = om.core._to_cursor[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = om.core._to_cursor["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state);
    }
  };
  var _to_cursor__3 = function(value, state, path) {
    if (function() {
      var and__3396__auto__ = value;
      if (and__3396__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$3;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$3(value, state, path);
    } else {
      var x__4029__auto__ = value == null ? null : value;
      return function() {
        var or__3408__auto__ = om.core._to_cursor[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = om.core._to_cursor["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state, path);
    }
  };
  var _to_cursor__4 = function(value, state, path, shared) {
    if (function() {
      var and__3396__auto__ = value;
      if (and__3396__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$4;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$4(value, state, path, shared);
    } else {
      var x__4029__auto__ = value == null ? null : value;
      return function() {
        var or__3408__auto__ = om.core._to_cursor[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = om.core._to_cursor["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state, path, shared);
    }
  };
  _to_cursor = function(value, state, path, shared) {
    switch(arguments.length) {
      case 2:
        return _to_cursor__2.call(this, value, state);
      case 3:
        return _to_cursor__3.call(this, value, state, path);
      case 4:
        return _to_cursor__4.call(this, value, state, path, shared);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _to_cursor.cljs$core$IFn$_invoke$arity$2 = _to_cursor__2;
  _to_cursor.cljs$core$IFn$_invoke$arity$3 = _to_cursor__3;
  _to_cursor.cljs$core$IFn$_invoke$arity$4 = _to_cursor__4;
  return _to_cursor;
}();
om.core.ITransact = function() {
  var obj10259 = {};
  return obj10259;
}();
om.core._transact_BANG_ = function _transact_BANG_(cursor, f) {
  if (function() {
    var and__3396__auto__ = cursor;
    if (and__3396__auto__) {
      return cursor.om$core$ITransact$_transact_BANG_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return cursor.om$core$ITransact$_transact_BANG_$arity$2(cursor, f);
  } else {
    var x__4029__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3408__auto__ = om.core._transact_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = om.core._transact_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransact.-transact!", cursor);
        }
      }
    }().call(null, cursor, f);
  }
};
om.core.children = function children(node) {
  var c = node.props.children;
  if (cljs.core.fn_QMARK_.call(null, c)) {
    return node.props.children = function() {
      var _STAR_read_enabled_STAR_10261 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        return c.call(null, node);
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10261;
      }
    }();
  } else {
    return c;
  }
};
om.core.get_props = function get_props(x) {
  return x.props["__om_cursor"];
};
om.core.get_state = function() {
  var get_state = null;
  var get_state__1 = function(owner) {
    var state = owner.state;
    var or__3408__auto__ = state["__om_pending_state"];
    if (cljs.core.truth_(or__3408__auto__)) {
      return or__3408__auto__;
    } else {
      return state["__om_state"];
    }
  };
  var get_state__2 = function(owner, korks) {
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      return cljs.core.get.call(null, get_state.call(null, owner), korks);
    } else {
      if (cljs.core.empty_QMARK_.call(null, korks)) {
        return get_state.call(null, owner);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.get_in.call(null, get_state.call(null, owner), korks);
        } else {
          return null;
        }
      }
    }
  };
  get_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_state__1.call(this, owner);
      case 2:
        return get_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_state.cljs$core$IFn$_invoke$arity$1 = get_state__1;
  get_state.cljs$core$IFn$_invoke$arity$2 = get_state__2;
  return get_state;
}();
om.core.get_shared = function() {
  var get_shared = null;
  var get_shared__1 = function(owner) {
    return om.core._shared.call(null, om.core.get_props.call(null, owner));
  };
  var get_shared__2 = function(owner, korks) {
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      return cljs.core.get.call(null, get_shared.call(null, owner), korks);
    } else {
      if (cljs.core.empty_QMARK_.call(null, korks)) {
        return get_shared.call(null, owner);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.get_in.call(null, get_shared.call(null, owner), korks);
        } else {
          return null;
        }
      }
    }
  };
  get_shared = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_shared__1.call(this, owner);
      case 2:
        return get_shared__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_shared.cljs$core$IFn$_invoke$arity$1 = get_shared__1;
  get_shared.cljs$core$IFn$_invoke$arity$2 = get_shared__2;
  return get_shared;
}();
om.core.merge_pending_state = function merge_pending_state(owner) {
  var state = owner.state;
  var temp__4092__auto__ = state["__om_pending_state"];
  if (cljs.core.truth_(temp__4092__auto__)) {
    var pending_state = temp__4092__auto__;
    var G__10263 = state;
    G__10263["__om_prev_state"] = state["__om_state"];
    G__10263["__om_state"] = pending_state;
    G__10263["__om_pending_state"] = null;
    return G__10263;
  } else {
    return null;
  }
};
om.core.merge_props_state = function() {
  var merge_props_state = null;
  var merge_props_state__1 = function(owner) {
    return merge_props_state.call(null, owner, null);
  };
  var merge_props_state__2 = function(owner, props) {
    var props__$1 = function() {
      var or__3408__auto__ = props;
      if (cljs.core.truth_(or__3408__auto__)) {
        return or__3408__auto__;
      } else {
        return owner.props;
      }
    }();
    var temp__4092__auto__ = props__$1["__om_state"];
    if (cljs.core.truth_(temp__4092__auto__)) {
      var props_state = temp__4092__auto__;
      var state = owner.state;
      state["__om_pending_state"] = cljs.core.merge.call(null, function() {
        var or__3408__auto__ = state["__om_pending_state"];
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          return state["__om_state"];
        }
      }(), props_state);
      return props__$1["__om_state"] = null;
    } else {
      return null;
    }
  };
  merge_props_state = function(owner, props) {
    switch(arguments.length) {
      case 1:
        return merge_props_state__1.call(this, owner);
      case 2:
        return merge_props_state__2.call(this, owner, props);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge_props_state.cljs$core$IFn$_invoke$arity$1 = merge_props_state__1;
  merge_props_state.cljs$core$IFn$_invoke$arity$2 = merge_props_state__2;
  return merge_props_state;
}();
om.core.Pure = React.createClass({"render":function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var _STAR_read_enabled_STAR_10278 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    if (function() {
      var G__10279 = c;
      if (G__10279) {
        var bit__4052__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3408__auto__ = bit__4052__auto__;
          if (cljs.core.truth_(or__3408__auto__)) {
            return or__3408__auto__;
          } else {
            return G__10279.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__10279.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__10279);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__10279);
      }
    }()) {
      return om.core.render.call(null, c);
    } else {
      if (function() {
        var G__10280 = c;
        if (G__10280) {
          var bit__4052__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3408__auto__ = bit__4052__auto__;
            if (cljs.core.truth_(or__3408__auto__)) {
              return or__3408__auto__;
            } else {
              return G__10280.om$core$IRenderState$;
            }
          }())) {
            return true;
          } else {
            if (!G__10280.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__10280);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__10280);
        }
      }()) {
        return om.core.render_state.call(null, c, om.core.get_state.call(null, this$));
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return c;
        } else {
          return null;
        }
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10278;
  }
}, "componentDidUpdate":function(prev_props, prev_state, root_node) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__10276 = c;
    if (G__10276) {
      var bit__4052__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3408__auto__ = bit__4052__auto__;
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          return G__10276.om$core$IDidUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__10276.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__10276);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__10276);
    }
  }()) {
    var state_10281 = this$.state;
    var _STAR_read_enabled_STAR_10277_10282 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.did_update.call(null, c, om.core.get_props.call(null, {"props":prev_props}), function() {
        var or__3408__auto__ = state_10281["__om_prev_state"];
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          return state_10281["__om_state"];
        }
      }(), root_node);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10277_10282;
    }
  } else {
  }
  return this$.state["__om_prev_state"] = null;
}, "componentWillUpdate":function(next_props, next_state) {
  var this$ = this;
  var c_10283 = om.core.children.call(null, this$);
  if (function() {
    var G__10274 = c_10283;
    if (G__10274) {
      var bit__4052__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3408__auto__ = bit__4052__auto__;
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          return G__10274.om$core$IWillUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__10274.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__10274);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__10274);
    }
  }()) {
    var state_10284 = this$.state;
    var _STAR_read_enabled_STAR_10275_10285 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_update.call(null, c_10283, om.core.get_props.call(null, {"props":next_props}), function() {
        var or__3408__auto__ = state_10284["__om_pending_state"];
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          return state_10284["__om_state"];
        }
      }());
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10275_10285;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}, "componentWillUnmount":function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__10272 = c;
    if (G__10272) {
      var bit__4052__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3408__auto__ = bit__4052__auto__;
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          return G__10272.om$core$IWillUnmount$;
        }
      }())) {
        return true;
      } else {
        if (!G__10272.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__10272);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__10272);
    }
  }()) {
    var _STAR_read_enabled_STAR_10273 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_unmount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10273;
    }
  } else {
    return null;
  }
}, "componentDidMount":function(node) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__10270 = c;
    if (G__10270) {
      var bit__4052__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3408__auto__ = bit__4052__auto__;
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          return G__10270.om$core$IDidMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__10270.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__10270);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__10270);
    }
  }()) {
    var _STAR_read_enabled_STAR_10271 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.did_mount.call(null, c, node);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10271;
    }
  } else {
    return null;
  }
}, "componentWillMount":function() {
  var this$ = this;
  om.core.merge_props_state.call(null, this$);
  var c_10286 = om.core.children.call(null, this$);
  if (function() {
    var G__10268 = c_10286;
    if (G__10268) {
      var bit__4052__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3408__auto__ = bit__4052__auto__;
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          return G__10268.om$core$IWillMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__10268.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__10268);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__10268);
    }
  }()) {
    var _STAR_read_enabled_STAR_10269_10287 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_mount.call(null, c_10286);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10269_10287;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}, "shouldComponentUpdate":function(next_props, next_state) {
  var this$ = this;
  var _STAR_read_enabled_STAR_10266 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    var props = this$.props;
    var state = this$.state;
    var c = om.core.children.call(null, this$);
    om.core.merge_props_state.call(null, this$, next_props);
    if (function() {
      var G__10267 = c;
      if (G__10267) {
        var bit__4052__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3408__auto__ = bit__4052__auto__;
          if (cljs.core.truth_(or__3408__auto__)) {
            return or__3408__auto__;
          } else {
            return G__10267.om$core$IShouldUpdate$;
          }
        }())) {
          return true;
        } else {
          if (!G__10267.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__10267);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__10267);
      }
    }()) {
      return om.core.should_update.call(null, c, om.core.get_props.call(null, {"props":next_props}), this$.state["__om_pending_state"]);
    } else {
      if (!(om.core._value.call(null, props["__om_cursor"]) === om.core._value.call(null, next_props["__om_cursor"]))) {
        return true;
      } else {
        if (!(state["__om_pending_state"] == null)) {
          return true;
        } else {
          if (!(props["__om_index"] === next_props["__om_index"])) {
            return true;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false;
            } else {
              return null;
            }
          }
        }
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10266;
  }
}, "getInitialState":function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var istate = function() {
    var or__3408__auto__ = props["__om_init_state"];
    if (cljs.core.truth_(or__3408__auto__)) {
      return or__3408__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  var ret = {"__om_state":cljs.core.merge.call(null, istate, function() {
    var G__10264 = c;
    if (G__10264) {
      var bit__4052__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3408__auto__ = bit__4052__auto__;
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          return G__10264.om$core$IInitState$;
        }
      }())) {
        return true;
      } else {
        if (!G__10264.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__10264);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__10264);
    }
  }() ? function() {
    var _STAR_read_enabled_STAR_10265 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.init_state.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10265;
    }
  }() : null)};
  props["__om_init_state"] = null;
  return ret;
}});
om.core.path = function path(cursor) {
  return om.core._path.call(null, cursor);
};
om.core.value = function value(cursor) {
  return om.core._value.call(null, cursor);
};
om.core.cursor_QMARK_ = function cursor_QMARK_(x) {
  var G__10289 = x;
  if (G__10289) {
    var bit__4052__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3408__auto__ = bit__4052__auto__;
      if (cljs.core.truth_(or__3408__auto__)) {
        return or__3408__auto__;
      } else {
        return G__10289.om$core$ICursor$;
      }
    }())) {
      return true;
    } else {
      if (!G__10289.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__10289);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__10289);
  }
};
om.core.MapCursor = function(value, state, path, shared) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.shared = shared;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2158397195;
};
om.core.MapCursor.cljs$lang$type = true;
om.core.MapCursor.cljs$lang$ctorStr = "om.core/MapCursor";
om.core.MapCursor.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "om.core/MapCursor");
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null);
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(_, k, not_found) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    var v = cljs.core._lookup.call(null, self__.value, k, not_found);
    if (!cljs.core._EQ_.call(null, v, not_found)) {
      return om.core.to_cursor.call(null, v, self__.state, cljs.core.conj.call(null, self__.path, k), self__.shared);
    } else {
      return not_found;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, k, v) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._assoc.call(null, self__.value, k, v), self__.state, self__.path, self__.shared);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.call = function() {
  var G__10293 = null;
  var G__10293__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10293__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10293 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10293__2.call(this, self__, k);
      case 3:
        return G__10293__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10293;
}();
om.core.MapCursor.prototype.apply = function(self__, args10290) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10290)));
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.MapCursor.prototype.om$core$ICursor$ = true;
om.core.MapCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return self__.path;
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return self__.state;
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.om$core$ICursor$_shared$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.shared;
};
om.core.MapCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot deref cursor during render phase: "), cljs.core.str(this$__$1)].join(""));
  }
};
om.core.MapCursor.prototype.om$core$IValue$ = true;
om.core.MapCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return self__.value;
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path, self__.shared);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(p__10291) {
        var vec__10292 = p__10291;
        var k = cljs.core.nth.call(null, vec__10292, 0, null);
        var v = cljs.core.nth.call(null, vec__10292, 1, null);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, om.core.to_cursor.call(null, v, self__.state, cljs.core.conj.call(null, self__.path, k), self__.shared)], null);
      }, self__.value);
    } else {
      return null;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path, self__.shared);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$ICloneable$ = true;
om.core.MapCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(self__.value, self__.state, self__.path, self__.shared);
};
om.core.MapCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IMap$_dissoc$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._dissoc.call(null, self__.value, k), self__.state, self__.path, self__.shared);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.om$core$ITransact$ = true;
om.core.MapCursor.prototype.om$core$ITransact$_transact_BANG_$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.swap_BANG_.call(null, self__.state, f, self__.path);
};
om.core.__GT_MapCursor = function __GT_MapCursor(value, state, path, shared) {
  return new om.core.MapCursor(value, state, path, shared);
};
om.core.IndexedCursor = function(value, state, path, shared) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.shared = shared;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2175181595;
};
om.core.IndexedCursor.cljs$lang$type = true;
om.core.IndexedCursor.cljs$lang$ctorStr = "om.core/IndexedCursor";
om.core.IndexedCursor.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "om.core/IndexedCursor");
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, null);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, not_found);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, n, v) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core.to_cursor.call(null, cljs.core._assoc_n.call(null, self__.value, n, v), self__.state, self__.path, self__.shared);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.call = function() {
  var G__10295 = null;
  var G__10295__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10295__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10295 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10295__2.call(this, self__, k);
      case 3:
        return G__10295__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10295;
}();
om.core.IndexedCursor.prototype.apply = function(self__, args10294) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10294)));
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.IndexedCursor.prototype.om$core$ICursor$ = true;
om.core.IndexedCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return self__.path;
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return self__.state;
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.om$core$ICursor$_shared$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.shared;
};
om.core.IndexedCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot deref cursor during render phase: "), cljs.core.str(this$__$1)].join(""));
  }
};
om.core.IndexedCursor.prototype.om$core$IValue$ = true;
om.core.IndexedCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return self__.value;
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path, self__.shared);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(v, i) {
        return om.core.to_cursor.call(null, v, self__.state, cljs.core.conj.call(null, self__.path, i), self__.shared);
      }, self__.value, cljs.core.range.call(null));
    } else {
      return null;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_peek$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core.to_cursor.call(null, cljs.core._peek.call(null, self__.value), self__.state, self__.path, self__.shared);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_pop$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core.to_cursor.call(null, cljs.core._pop.call(null, self__.value), self__.state, self__.path, self__.shared);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path, self__.shared);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICloneable$ = true;
om.core.IndexedCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(self__.value, self__.state, self__.path, self__.shared);
};
om.core.IndexedCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$2 = function(_, n) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core.to_cursor.call(null, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n), self__.shared);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$3 = function(_, n, not_found) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (n < cljs.core._count.call(null, self__.value)) {
      return om.core.to_cursor.call(null, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n), self__.shared);
    } else {
      return not_found;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.om$core$ITransact$ = true;
om.core.IndexedCursor.prototype.om$core$ITransact$_transact_BANG_$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.swap_BANG_.call(null, self__.state, f, self__.path);
};
om.core.__GT_IndexedCursor = function __GT_IndexedCursor(value, state, path, shared) {
  return new om.core.IndexedCursor(value, state, path, shared);
};
om.core.to_cursor_STAR_ = function to_cursor_STAR_(val, state, path, shared) {
  var x10297 = cljs.core.clone.call(null, val);
  x10297.cljs$core$IEquiv$ = true;
  x10297.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
    var ___$1 = this;
    if (om.core._STAR_read_enabled_STAR_) {
      if (om.core.cursor_QMARK_.call(null, other)) {
        return cljs.core._EQ_.call(null, val, om.core._value.call(null, other));
      } else {
        return cljs.core._EQ_.call(null, val, other);
      }
    } else {
      throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
    }
  };
  x10297.om$core$ITransact$ = true;
  x10297.om$core$ITransact$_transact_BANG_$arity$2 = function(_, f) {
    var ___$1 = this;
    return cljs.core.swap_BANG_.call(null, state, f, path);
  };
  x10297.om$core$ICursor$ = true;
  x10297.om$core$ICursor$_state$arity$1 = function(_) {
    var ___$1 = this;
    if (om.core._STAR_read_enabled_STAR_) {
      return state;
    } else {
      throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
    }
  };
  x10297.om$core$ICursor$_path$arity$1 = function(_) {
    var ___$1 = this;
    if (om.core._STAR_read_enabled_STAR_) {
      return path;
    } else {
      throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
    }
  };
  x10297.om$core$ICursor$_shared$arity$1 = function(_) {
    var ___$1 = this;
    return shared;
  };
  x10297.cljs$core$IDeref$ = true;
  x10297.cljs$core$IDeref$_deref$arity$1 = function(this$) {
    var this$__$1 = this;
    if (!om.core._STAR_read_enabled_STAR_) {
      return cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path);
    } else {
      throw new Error([cljs.core.str("Cannot deref cursor during render phase: "), cljs.core.str(this$__$1)].join(""));
    }
  };
  return x10297;
};
om.core.to_cursor = function() {
  var to_cursor = null;
  var to_cursor__1 = function(val) {
    return to_cursor.call(null, val, null, cljs.core.PersistentVector.EMPTY, null);
  };
  var to_cursor__2 = function(val, state) {
    return to_cursor.call(null, val, state, cljs.core.PersistentVector.EMPTY, null);
  };
  var to_cursor__3 = function(val, state, path) {
    return to_cursor.call(null, val, state, path, null);
  };
  var to_cursor__4 = function(val, state, path, shared) {
    if (om.core.cursor_QMARK_.call(null, val)) {
      return val;
    } else {
      if (function() {
        var G__10300 = val;
        if (G__10300) {
          var bit__4052__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3408__auto__ = bit__4052__auto__;
            if (cljs.core.truth_(or__3408__auto__)) {
              return or__3408__auto__;
            } else {
              return G__10300.om$core$IToCursor$;
            }
          }())) {
            return true;
          } else {
            if (!G__10300.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__10300);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__10300);
        }
      }()) {
        return om.core._to_cursor.call(null, val, state, path, shared);
      } else {
        if (cljs.core.indexed_QMARK_.call(null, val)) {
          return new om.core.IndexedCursor(val, state, path, shared);
        } else {
          if (cljs.core.map_QMARK_.call(null, val)) {
            return new om.core.MapCursor(val, state, path, shared);
          } else {
            if (function() {
              var G__10301 = val;
              if (G__10301) {
                var bit__4052__auto__ = null;
                if (cljs.core.truth_(function() {
                  var or__3408__auto__ = bit__4052__auto__;
                  if (cljs.core.truth_(or__3408__auto__)) {
                    return or__3408__auto__;
                  } else {
                    return G__10301.cljs$core$ICloneable$;
                  }
                }())) {
                  return true;
                } else {
                  if (!G__10301.cljs$lang$protocol_mask$partition$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__10301);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__10301);
              }
            }()) {
              return om.core.to_cursor_STAR_.call(null, val, state, path, shared);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return val;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  to_cursor = function(val, state, path, shared) {
    switch(arguments.length) {
      case 1:
        return to_cursor__1.call(this, val);
      case 2:
        return to_cursor__2.call(this, val, state);
      case 3:
        return to_cursor__3.call(this, val, state, path);
      case 4:
        return to_cursor__4.call(this, val, state, path, shared);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  to_cursor.cljs$core$IFn$_invoke$arity$1 = to_cursor__1;
  to_cursor.cljs$core$IFn$_invoke$arity$2 = to_cursor__2;
  to_cursor.cljs$core$IFn$_invoke$arity$3 = to_cursor__3;
  to_cursor.cljs$core$IFn$_invoke$arity$4 = to_cursor__4;
  return to_cursor;
}();
om.core.refresh_queued = false;
om.core.refresh_set = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
om.core.render_all = function render_all() {
  om.core.refresh_queued = false;
  var seq__10306 = cljs.core.seq.call(null, cljs.core.deref.call(null, om.core.refresh_set));
  var chunk__10307 = null;
  var count__10308 = 0;
  var i__10309 = 0;
  while (true) {
    if (i__10309 < count__10308) {
      var f = cljs.core._nth.call(null, chunk__10307, i__10309);
      f.call(null);
      var G__10310 = seq__10306;
      var G__10311 = chunk__10307;
      var G__10312 = count__10308;
      var G__10313 = i__10309 + 1;
      seq__10306 = G__10310;
      chunk__10307 = G__10311;
      count__10308 = G__10312;
      i__10309 = G__10313;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__10306);
      if (temp__4092__auto__) {
        var seq__10306__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__10306__$1)) {
          var c__4150__auto__ = cljs.core.chunk_first.call(null, seq__10306__$1);
          var G__10314 = cljs.core.chunk_rest.call(null, seq__10306__$1);
          var G__10315 = c__4150__auto__;
          var G__10316 = cljs.core.count.call(null, c__4150__auto__);
          var G__10317 = 0;
          seq__10306 = G__10314;
          chunk__10307 = G__10315;
          count__10308 = G__10316;
          i__10309 = G__10317;
          continue;
        } else {
          var f = cljs.core.first.call(null, seq__10306__$1);
          f.call(null);
          var G__10318 = cljs.core.next.call(null, seq__10306__$1);
          var G__10319 = null;
          var G__10320 = 0;
          var G__10321 = 0;
          seq__10306 = G__10318;
          chunk__10307 = G__10319;
          count__10308 = G__10320;
          i__10309 = G__10321;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
om.core.roots = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
om.core.root = function() {
  var root = null;
  var root__3 = function(value, f, target) {
    return root.call(null, value, null, f, target);
  };
  var root__4 = function(value, shared, f, target) {
    var roots_SINGLEQUOTE__10326 = cljs.core.deref.call(null, om.core.roots);
    if (cljs.core.contains_QMARK_.call(null, roots_SINGLEQUOTE__10326, target)) {
      cljs.core.get.call(null, roots_SINGLEQUOTE__10326, target).call(null);
    } else {
    }
    var state = value instanceof cljs.core.Atom ? value : cljs.core.atom.call(null, value);
    var rootf = function(state) {
      return function rootf() {
        cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.disj, rootf);
        var value__$1 = cljs.core.deref.call(null, state);
        var cursor = om.core.to_cursor.call(null, value__$1, state, cljs.core.PersistentVector.EMPTY, shared);
        return React.renderComponent(new om.core.Pure({"__om_cursor":cursor}, function(value__$1, cursor, state) {
          return function(this$) {
            var _STAR_read_enabled_STAR_10325 = om.core._STAR_read_enabled_STAR_;
            try {
              om.core._STAR_read_enabled_STAR_ = true;
              return f.call(null, cursor, this$);
            } finally {
              om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10325;
            }
          };
        }(value__$1, cursor, state)), target);
      };
    }(state);
    var watch_key = cljs.core.gensym.call(null);
    cljs.core.add_watch.call(null, state, watch_key, function(_, ___$1, ___$2, ___$3) {
      if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, om.core.refresh_set), rootf)) {
      } else {
        cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.conj, rootf);
      }
      if (cljs.core.truth_(om.core.refresh_queued)) {
        return null;
      } else {
        om.core.refresh_queued = true;
        if (typeof requestAnimationFrame !== "undefined") {
          return requestAnimationFrame(om.core.render_all);
        } else {
          return setTimeout(om.core.render_all, 16);
        }
      }
    });
    cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.assoc, target, function() {
      cljs.core.remove_watch.call(null, state, watch_key);
      cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.dissoc, target);
      return React.unmountComponentAtNode(target);
    });
    return rootf.call(null);
  };
  root = function(value, shared, f, target) {
    switch(arguments.length) {
      case 3:
        return root__3.call(this, value, shared, f);
      case 4:
        return root__4.call(this, value, shared, f, target);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  root.cljs$core$IFn$_invoke$arity$3 = root__3;
  root.cljs$core$IFn$_invoke$arity$4 = root__4;
  return root;
}();
om.core.valid_QMARK_ = function valid_QMARK_(m) {
  return cljs.core.every_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "init-state", "init-state", 4479067398), null, new cljs.core.Keyword(null, "state", "state", 1123661827), null, new cljs.core.Keyword(null, "react-key", "react-key", 4184082563), null, new cljs.core.Keyword("om.core", "index", "om.core/index", 3166146514), null, new cljs.core.Keyword(null, "key", "key", 1014010321), null, new cljs.core.Keyword(null, 
  "opts", "opts", 1017322386), null, new cljs.core.Keyword(null, "fn", "fn", 1013907514), null], null), null), cljs.core.keys.call(null, m));
};
om.core.build = function() {
  var build = null;
  var build__2 = function(f, cursor) {
    return build.call(null, f, cursor, null);
  };
  var build__3 = function(f, cursor, m) {
    if (om.core.valid_QMARK_.call(null, m)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, "build options contains invalid keys, only :key, :react-key, ", ":fn, :init-state, :state, and :opts allowed, given ", cljs.core.interpose.call(null, ", ", cljs.core.keys.call(null, m)))), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "valid?", "valid?", 1830611324, null), new cljs.core.Symbol(null, "m", "m", -1640531418, null))))].join(""));
    }
    if (m == null) {
      var pure__4961__auto__ = new om.core.Pure({"__om_cursor":cursor}, function(this$) {
        var _STAR_read_enabled_STAR_10331 = om.core._STAR_read_enabled_STAR_;
        try {
          om.core._STAR_read_enabled_STAR_ = true;
          return f.call(null, cursor, this$);
        } finally {
          om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10331;
        }
      });
      pure__4961__auto__.constructor = goog.getUid(f);
      return pure__4961__auto__;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var map__10332 = m;
        var map__10332__$1 = cljs.core.seq_QMARK_.call(null, map__10332) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10332) : map__10332;
        var opts = cljs.core.get.call(null, map__10332__$1, new cljs.core.Keyword(null, "opts", "opts", 1017322386));
        var init_state = cljs.core.get.call(null, map__10332__$1, new cljs.core.Keyword(null, "init-state", "init-state", 4479067398));
        var state = cljs.core.get.call(null, map__10332__$1, new cljs.core.Keyword(null, "state", "state", 1123661827));
        var key = cljs.core.get.call(null, map__10332__$1, new cljs.core.Keyword(null, "key", "key", 1014010321));
        var dataf = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "fn", "fn", 1013907514));
        var cursor_SINGLEQUOTE_ = !(dataf == null) ? dataf.call(null, cursor) : cursor;
        var rkey = !(key == null) ? cljs.core.get.call(null, cursor_SINGLEQUOTE_, key) : cljs.core.get.call(null, m, new cljs.core.Keyword(null, "react-key", "react-key", 4184082563));
        var pure__4961__auto__ = new om.core.Pure({"key":rkey, "__om_state":state, "__om_init_state":init_state, "__om_index":(new cljs.core.Keyword("om.core", "index", "om.core/index", 3166146514)).cljs$core$IFn$_invoke$arity$1(m), "__om_cursor":cursor_SINGLEQUOTE_}, opts == null ? function(this$) {
          var _STAR_read_enabled_STAR_10333 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            return f.call(null, cursor_SINGLEQUOTE_, this$);
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10333;
          }
        } : function(this$) {
          var _STAR_read_enabled_STAR_10334 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            return f.call(null, cursor_SINGLEQUOTE_, this$, opts);
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10334;
          }
        });
        pure__4961__auto__.constructor = goog.getUid(f);
        return pure__4961__auto__;
      } else {
        return null;
      }
    }
  };
  build = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build__2.call(this, f, cursor);
      case 3:
        return build__3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build.cljs$core$IFn$_invoke$arity$2 = build__2;
  build.cljs$core$IFn$_invoke$arity$3 = build__3;
  return build;
}();
om.core.build_all = function() {
  var build_all = null;
  var build_all__2 = function(f, xs) {
    return build_all.call(null, f, xs, null);
  };
  var build_all__3 = function(f, xs, m) {
    return cljs.core.map.call(null, function(x, i) {
      return om.core.build.call(null, f, x, cljs.core.assoc.call(null, m, new cljs.core.Keyword("om.core", "index", "om.core/index", 3166146514), i));
    }, xs, cljs.core.range.call(null));
  };
  build_all = function(f, xs, m) {
    switch(arguments.length) {
      case 2:
        return build_all__2.call(this, f, xs);
      case 3:
        return build_all__3.call(this, f, xs, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_all.cljs$core$IFn$_invoke$arity$2 = build_all__2;
  build_all.cljs$core$IFn$_invoke$arity$3 = build_all__3;
  return build_all;
}();
om.core.transact_BANG_ = function() {
  var transact_BANG_ = null;
  var transact_BANG___2 = function(cursor, f) {
    return om.core._transact_BANG_.call(null, cursor, function(state, path) {
      if (cljs.core.empty_QMARK_.call(null, path)) {
        return f.call(null, state);
      } else {
        return cljs.core.update_in.call(null, state, path, f);
      }
    });
  };
  var transact_BANG___3 = function(cursor, korks, f) {
    return om.core._transact_BANG_.call(null, cursor, function(state__4947__auto__, path__4948__auto__) {
      if (!cljs.core.sequential_QMARK_.call(null, korks)) {
        return cljs.core.update_in.call(null, state__4947__auto__, cljs.core.conj.call(null, path__4948__auto__, korks), f);
      } else {
        return cljs.core.update_in.call(null, state__4947__auto__, cljs.core.into.call(null, path__4948__auto__, korks), f);
      }
    });
  };
  var transact_BANG___4 = function(cursor, korks, f, a) {
    return om.core._transact_BANG_.call(null, cursor, function(state__4947__auto__, path__4948__auto__) {
      if (!cljs.core.sequential_QMARK_.call(null, korks)) {
        return cljs.core.update_in.call(null, state__4947__auto__, cljs.core.conj.call(null, path__4948__auto__, korks), f, a);
      } else {
        return cljs.core.update_in.call(null, state__4947__auto__, cljs.core.into.call(null, path__4948__auto__, korks), f, a);
      }
    });
  };
  var transact_BANG___5 = function(cursor, korks, f, a, b) {
    return om.core._transact_BANG_.call(null, cursor, function(state__4947__auto__, path__4948__auto__) {
      if (!cljs.core.sequential_QMARK_.call(null, korks)) {
        return cljs.core.update_in.call(null, state__4947__auto__, cljs.core.conj.call(null, path__4948__auto__, korks), f, a, b);
      } else {
        return cljs.core.update_in.call(null, state__4947__auto__, cljs.core.into.call(null, path__4948__auto__, korks), f, a, b);
      }
    });
  };
  var transact_BANG___6 = function(cursor, korks, f, a, b, c) {
    return om.core._transact_BANG_.call(null, cursor, function(state__4947__auto__, path__4948__auto__) {
      if (!cljs.core.sequential_QMARK_.call(null, korks)) {
        return cljs.core.update_in.call(null, state__4947__auto__, cljs.core.conj.call(null, path__4948__auto__, korks), f, a, b, c);
      } else {
        return cljs.core.update_in.call(null, state__4947__auto__, cljs.core.into.call(null, path__4948__auto__, korks), f, a, b, c);
      }
    });
  };
  var transact_BANG___7 = function(cursor, korks, f, a, b, c, d) {
    return om.core._transact_BANG_.call(null, cursor, function(state__4947__auto__, path__4948__auto__) {
      if (!cljs.core.sequential_QMARK_.call(null, korks)) {
        return cljs.core.update_in.call(null, state__4947__auto__, cljs.core.conj.call(null, path__4948__auto__, korks), f, a, b, c, d);
      } else {
        return cljs.core.update_in.call(null, state__4947__auto__, cljs.core.into.call(null, path__4948__auto__, korks), f, a, b, c, d);
      }
    });
  };
  var transact_BANG___8 = function() {
    var G__10335__delegate = function(cursor, korks, f, a, b, c, d, args) {
      return om.core._transact_BANG_.call(null, cursor, function(state, path) {
        if (!cljs.core.sequential_QMARK_.call(null, korks)) {
          return cljs.core.apply.call(null, cljs.core.update_in, state, cljs.core.conj.call(null, path, korks), f, a, b, c, d, args);
        } else {
          return cljs.core.apply.call(null, cljs.core.update_in, state, cljs.core.into.call(null, path, korks), f, a, b, c, d, args);
        }
      });
    };
    var G__10335 = function(cursor, korks, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 7) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 7), 0);
      }
      return G__10335__delegate.call(this, cursor, korks, f, a, b, c, d, args);
    };
    G__10335.cljs$lang$maxFixedArity = 7;
    G__10335.cljs$lang$applyTo = function(arglist__10336) {
      var cursor = cljs.core.first(arglist__10336);
      arglist__10336 = cljs.core.next(arglist__10336);
      var korks = cljs.core.first(arglist__10336);
      arglist__10336 = cljs.core.next(arglist__10336);
      var f = cljs.core.first(arglist__10336);
      arglist__10336 = cljs.core.next(arglist__10336);
      var a = cljs.core.first(arglist__10336);
      arglist__10336 = cljs.core.next(arglist__10336);
      var b = cljs.core.first(arglist__10336);
      arglist__10336 = cljs.core.next(arglist__10336);
      var c = cljs.core.first(arglist__10336);
      arglist__10336 = cljs.core.next(arglist__10336);
      var d = cljs.core.first(arglist__10336);
      var args = cljs.core.rest(arglist__10336);
      return G__10335__delegate(cursor, korks, f, a, b, c, d, args);
    };
    G__10335.cljs$core$IFn$_invoke$arity$variadic = G__10335__delegate;
    return G__10335;
  }();
  transact_BANG_ = function(cursor, korks, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return transact_BANG___2.call(this, cursor, korks);
      case 3:
        return transact_BANG___3.call(this, cursor, korks, f);
      case 4:
        return transact_BANG___4.call(this, cursor, korks, f, a);
      case 5:
        return transact_BANG___5.call(this, cursor, korks, f, a, b);
      case 6:
        return transact_BANG___6.call(this, cursor, korks, f, a, b, c);
      case 7:
        return transact_BANG___7.call(this, cursor, korks, f, a, b, c, d);
      default:
        return transact_BANG___8.cljs$core$IFn$_invoke$arity$variadic(cursor, korks, f, a, b, c, d, cljs.core.array_seq(arguments, 7));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transact_BANG_.cljs$lang$maxFixedArity = 7;
  transact_BANG_.cljs$lang$applyTo = transact_BANG___8.cljs$lang$applyTo;
  transact_BANG_.cljs$core$IFn$_invoke$arity$2 = transact_BANG___2;
  transact_BANG_.cljs$core$IFn$_invoke$arity$3 = transact_BANG___3;
  transact_BANG_.cljs$core$IFn$_invoke$arity$4 = transact_BANG___4;
  transact_BANG_.cljs$core$IFn$_invoke$arity$5 = transact_BANG___5;
  transact_BANG_.cljs$core$IFn$_invoke$arity$6 = transact_BANG___6;
  transact_BANG_.cljs$core$IFn$_invoke$arity$7 = transact_BANG___7;
  transact_BANG_.cljs$core$IFn$_invoke$arity$variadic = transact_BANG___8.cljs$core$IFn$_invoke$arity$variadic;
  return transact_BANG_;
}();
om.core.update_BANG_ = function() {
  var update_BANG_ = null;
  var update_BANG___2 = function(cursor, f) {
    return om.core._transact_BANG_.call(null, cursor, function(state__4954__auto__, path__4955__auto__) {
      if (cljs.core.empty_QMARK_.call(null, path__4955__auto__)) {
        return f.call(null, state__4954__auto__);
      } else {
        return cljs.core.update_in.call(null, state__4954__auto__, path__4955__auto__, f);
      }
    });
  };
  var update_BANG___3 = function(cursor, f, a) {
    return om.core._transact_BANG_.call(null, cursor, function(state__4954__auto__, path__4955__auto__) {
      if (cljs.core.empty_QMARK_.call(null, path__4955__auto__)) {
        return f.call(null, state__4954__auto__, a);
      } else {
        return cljs.core.update_in.call(null, state__4954__auto__, path__4955__auto__, f, a);
      }
    });
  };
  var update_BANG___4 = function(cursor, f, a, b) {
    return om.core._transact_BANG_.call(null, cursor, function(state__4954__auto__, path__4955__auto__) {
      if (cljs.core.empty_QMARK_.call(null, path__4955__auto__)) {
        return f.call(null, state__4954__auto__, a, b);
      } else {
        return cljs.core.update_in.call(null, state__4954__auto__, path__4955__auto__, f, a, b);
      }
    });
  };
  var update_BANG___5 = function(cursor, f, a, b, c) {
    return om.core._transact_BANG_.call(null, cursor, function(state__4954__auto__, path__4955__auto__) {
      if (cljs.core.empty_QMARK_.call(null, path__4955__auto__)) {
        return f.call(null, state__4954__auto__, a, b, c);
      } else {
        return cljs.core.update_in.call(null, state__4954__auto__, path__4955__auto__, f, a, b, c);
      }
    });
  };
  var update_BANG___6 = function(cursor, f, a, b, c, d) {
    return om.core._transact_BANG_.call(null, cursor, function(state__4954__auto__, path__4955__auto__) {
      if (cljs.core.empty_QMARK_.call(null, path__4955__auto__)) {
        return f.call(null, state__4954__auto__, a, b, c, d);
      } else {
        return cljs.core.update_in.call(null, state__4954__auto__, path__4955__auto__, f, a, b, c, d);
      }
    });
  };
  var update_BANG___7 = function() {
    var G__10337__delegate = function(cursor, f, a, b, c, d, args) {
      return om.core._transact_BANG_.call(null, cursor, function(state, path) {
        if (cljs.core.empty_QMARK_.call(null, path)) {
          return cljs.core.apply.call(null, f, state, a, b, c, d, args);
        } else {
          return cljs.core.apply.call(null, cljs.core.update_in, state, path, f, a, b, c, d, args);
        }
      });
    };
    var G__10337 = function(cursor, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__10337__delegate.call(this, cursor, f, a, b, c, d, args);
    };
    G__10337.cljs$lang$maxFixedArity = 6;
    G__10337.cljs$lang$applyTo = function(arglist__10338) {
      var cursor = cljs.core.first(arglist__10338);
      arglist__10338 = cljs.core.next(arglist__10338);
      var f = cljs.core.first(arglist__10338);
      arglist__10338 = cljs.core.next(arglist__10338);
      var a = cljs.core.first(arglist__10338);
      arglist__10338 = cljs.core.next(arglist__10338);
      var b = cljs.core.first(arglist__10338);
      arglist__10338 = cljs.core.next(arglist__10338);
      var c = cljs.core.first(arglist__10338);
      arglist__10338 = cljs.core.next(arglist__10338);
      var d = cljs.core.first(arglist__10338);
      var args = cljs.core.rest(arglist__10338);
      return G__10337__delegate(cursor, f, a, b, c, d, args);
    };
    G__10337.cljs$core$IFn$_invoke$arity$variadic = G__10337__delegate;
    return G__10337;
  }();
  update_BANG_ = function(cursor, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return update_BANG___2.call(this, cursor, f);
      case 3:
        return update_BANG___3.call(this, cursor, f, a);
      case 4:
        return update_BANG___4.call(this, cursor, f, a, b);
      case 5:
        return update_BANG___5.call(this, cursor, f, a, b, c);
      case 6:
        return update_BANG___6.call(this, cursor, f, a, b, c, d);
      default:
        return update_BANG___7.cljs$core$IFn$_invoke$arity$variadic(cursor, f, a, b, c, d, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_BANG_.cljs$lang$maxFixedArity = 6;
  update_BANG_.cljs$lang$applyTo = update_BANG___7.cljs$lang$applyTo;
  update_BANG_.cljs$core$IFn$_invoke$arity$2 = update_BANG___2;
  update_BANG_.cljs$core$IFn$_invoke$arity$3 = update_BANG___3;
  update_BANG_.cljs$core$IFn$_invoke$arity$4 = update_BANG___4;
  update_BANG_.cljs$core$IFn$_invoke$arity$5 = update_BANG___5;
  update_BANG_.cljs$core$IFn$_invoke$arity$6 = update_BANG___6;
  update_BANG_.cljs$core$IFn$_invoke$arity$variadic = update_BANG___7.cljs$core$IFn$_invoke$arity$variadic;
  return update_BANG_;
}();
om.core.get_node = function get_node(owner, name) {
  var temp__4092__auto__ = owner.refs;
  if (cljs.core.truth_(temp__4092__auto__)) {
    var refs = temp__4092__auto__;
    return refs[name].getDOMNode();
  } else {
    return null;
  }
};
om.core.set_state_BANG_ = function set_state_BANG_(owner, korks, v) {
  var _STAR_read_enabled_STAR_10340 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    var props = owner.props;
    var state = owner.state;
    var cursor = props["__om_cursor"];
    var path = om.core._path.call(null, cursor);
    var pstate = function() {
      var or__3408__auto__ = state["__om_pending_state"];
      if (cljs.core.truth_(or__3408__auto__)) {
        return or__3408__auto__;
      } else {
        return state["__om_state"];
      }
    }();
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      state["__om_pending_state"] = cljs.core.assoc.call(null, pstate, korks, v);
    } else {
      state["__om_pending_state"] = cljs.core.assoc_in.call(null, pstate, korks, v);
    }
    if (cljs.core.empty_QMARK_.call(null, path)) {
      return cljs.core.swap_BANG_.call(null, om.core._state.call(null, cursor), cljs.core.clone);
    } else {
      return cljs.core.swap_BANG_.call(null, om.core._state.call(null, cursor), cljs.core.update_in, path, cljs.core.clone);
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10340;
  }
};
om.core.get_render_state = function() {
  var get_render_state = null;
  var get_render_state__1 = function(owner) {
    return owner.state["__om_state"];
  };
  var get_render_state__2 = function(owner, korks) {
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      return cljs.core.get.call(null, get_render_state.call(null, owner), korks);
    } else {
      if (cljs.core.empty_QMARK_.call(null, korks)) {
        return get_render_state.call(null, owner);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.get_in.call(null, get_render_state.call(null, owner), korks);
        } else {
          return null;
        }
      }
    }
  };
  get_render_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_render_state__1.call(this, owner);
      case 2:
        return get_render_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_render_state.cljs$core$IFn$_invoke$arity$1 = get_render_state__1;
  get_render_state.cljs$core$IFn$_invoke$arity$2 = get_render_state__2;
  return get_render_state;
}();
om.core.graft = function graft(value, cursor) {
  var state = om.core._state.call(null, cursor);
  var path = om.core._path.call(null, cursor);
  var shared = om.core._shared.call(null, cursor);
  if (om.core.cursor_QMARK_.call(null, value)) {
    throw new Error([cljs.core.str(value), cljs.core.str(" is already a cursor.")].join(""));
  } else {
    var x10342 = cljs.core.clone.call(null, value);
    x10342.om$core$ICursor$ = true;
    x10342.om$core$ICursor$_state$arity$1 = function(_) {
      var ___$1 = this;
      return state;
    };
    x10342.om$core$ICursor$_path$arity$1 = function(_) {
      var ___$1 = this;
      return path;
    };
    x10342.om$core$ICursor$_shared$arity$1 = function(_) {
      var ___$1 = this;
      return shared;
    };
    x10342.om$core$IValue$ = true;
    x10342.om$core$IValue$_value$arity$1 = function(_) {
      var ___$1 = this;
      return value;
    };
    x10342.om$core$ITransact$ = true;
    x10342.om$core$ITransact$_transact_BANG_$arity$2 = function(_, ___$1) {
      var ___$2 = this;
      throw new Error("Cannot transact on graft");
    };
    return x10342;
  }
};
goog.provide("yantra.datatypes");
goog.require("cljs.core");
yantra.datatypes.Slider = function(value, range, __meta, __extmap) {
  this.value = value;
  this.range = range;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
yantra.datatypes.Slider.prototype.cljs$core$IHash$_hash$arity$1 = function(this__3983__auto__) {
  var self__ = this;
  var this__3983__auto____$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_imap.call(null, this__3983__auto____$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
yantra.datatypes.Slider.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__3988__auto__, k__3989__auto__) {
  var self__ = this;
  var this__3988__auto____$1 = this;
  return cljs.core._lookup.call(null, this__3988__auto____$1, k__3989__auto__, null);
};
yantra.datatypes.Slider.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__3990__auto__, k9101, else__3991__auto__) {
  var self__ = this;
  var this__3990__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k9101, new cljs.core.Keyword(null, "value", "value", 1125876963))) {
    return self__.value;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k9101, new cljs.core.Keyword(null, "range", "range", 1122184367))) {
      return self__.range;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.get.call(null, self__.__extmap, k9101, else__3991__auto__);
      } else {
        return null;
      }
    }
  }
};
yantra.datatypes.Slider.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__3995__auto__, k__3996__auto__, G__9100) {
  var self__ = this;
  var this__3995__auto____$1 = this;
  var pred__9103 = cljs.core.keyword_identical_QMARK_;
  var expr__9104 = k__3996__auto__;
  if (cljs.core.truth_(pred__9103.call(null, new cljs.core.Keyword(null, "value", "value", 1125876963), expr__9104))) {
    return new yantra.datatypes.Slider(G__9100, self__.range, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__9103.call(null, new cljs.core.Keyword(null, "range", "range", 1122184367), expr__9104))) {
      return new yantra.datatypes.Slider(self__.value, G__9100, self__.__meta, self__.__extmap, null);
    } else {
      return new yantra.datatypes.Slider(self__.value, self__.range, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__3996__auto__, G__9100), null);
    }
  }
};
yantra.datatypes.Slider.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4002__auto__, writer__4003__auto__, opts__4004__auto__) {
  var self__ = this;
  var this__4002__auto____$1 = this;
  var pr_pair__4005__auto__ = function(keyval__4006__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4003__auto__, cljs.core.pr_writer, "", " ", "", opts__4004__auto__, keyval__4006__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4003__auto__, pr_pair__4005__auto__, "#yantra.datatypes.Slider{", ", ", "}", opts__4004__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 1125876963), self__.value], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "range", "range", 1122184367), self__.range], null)], null), self__.__extmap));
};
yantra.datatypes.Slider.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__3993__auto__, entry__3994__auto__) {
  var self__ = this;
  var this__3993__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__3994__auto__)) {
    return cljs.core._assoc.call(null, this__3993__auto____$1, cljs.core._nth.call(null, entry__3994__auto__, 0), cljs.core._nth.call(null, entry__3994__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__3993__auto____$1, entry__3994__auto__);
  }
};
yantra.datatypes.Slider.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4000__auto__) {
  var self__ = this;
  var this__4000__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 1125876963), self__.value], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "range", "range", 1122184367), self__.range], null)], null), self__.__extmap));
};
yantra.datatypes.Slider.prototype.cljs$core$ICounted$_count$arity$1 = function(this__3992__auto__) {
  var self__ = this;
  var this__3992__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
yantra.datatypes.Slider.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__3984__auto__, other__3985__auto__) {
  var self__ = this;
  var this__3984__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3396__auto__ = other__3985__auto__;
    if (cljs.core.truth_(and__3396__auto__)) {
      return this__3984__auto____$1.constructor === other__3985__auto__.constructor && cljs.core.equiv_map.call(null, this__3984__auto____$1, other__3985__auto__);
    } else {
      return and__3396__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
yantra.datatypes.Slider.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__3987__auto__, G__9100) {
  var self__ = this;
  var this__3987__auto____$1 = this;
  return new yantra.datatypes.Slider(self__.value, self__.range, G__9100, self__.__extmap, self__.__hash);
};
yantra.datatypes.Slider.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__3986__auto__) {
  var self__ = this;
  var this__3986__auto____$1 = this;
  return self__.__meta;
};
yantra.datatypes.Slider.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__3997__auto__, k__3998__auto__) {
  var self__ = this;
  var this__3997__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "range", "range", 1122184367), null, new cljs.core.Keyword(null, "value", "value", 1125876963), null], null), null), k__3998__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__3997__auto____$1), self__.__meta), k__3998__auto__);
  } else {
    return new yantra.datatypes.Slider(self__.value, self__.range, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__3998__auto__)), null);
  }
};
yantra.datatypes.Slider.cljs$lang$type = true;
yantra.datatypes.Slider.cljs$lang$ctorPrSeq = function(this__4022__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "yantra.datatypes/Slider");
};
yantra.datatypes.Slider.cljs$lang$ctorPrWriter = function(this__4022__auto__, writer__4023__auto__) {
  return cljs.core._write.call(null, writer__4023__auto__, "yantra.datatypes/Slider");
};
yantra.datatypes.__GT_Slider = function __GT_Slider(value, range) {
  return new yantra.datatypes.Slider(value, range);
};
yantra.datatypes.map__GT_Slider = function map__GT_Slider(G__9102) {
  return new yantra.datatypes.Slider((new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(G__9102), (new cljs.core.Keyword(null, "range", "range", 1122184367)).cljs$core$IFn$_invoke$arity$1(G__9102), null, cljs.core.dissoc.call(null, G__9102, new cljs.core.Keyword(null, "value", "value", 1125876963), new cljs.core.Keyword(null, "range", "range", 1122184367)));
};
yantra.datatypes.Column = function(contents, __meta, __extmap) {
  this.contents = contents;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
yantra.datatypes.Column.prototype.cljs$core$IHash$_hash$arity$1 = function(this__3983__auto__) {
  var self__ = this;
  var this__3983__auto____$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_imap.call(null, this__3983__auto____$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
yantra.datatypes.Column.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__3988__auto__, k__3989__auto__) {
  var self__ = this;
  var this__3988__auto____$1 = this;
  return cljs.core._lookup.call(null, this__3988__auto____$1, k__3989__auto__, null);
};
yantra.datatypes.Column.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__3990__auto__, k9107, else__3991__auto__) {
  var self__ = this;
  var this__3990__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k9107, new cljs.core.Keyword(null, "contents", "contents", 4741549708))) {
    return self__.contents;
  } else {
    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return cljs.core.get.call(null, self__.__extmap, k9107, else__3991__auto__);
    } else {
      return null;
    }
  }
};
yantra.datatypes.Column.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__3995__auto__, k__3996__auto__, G__9106) {
  var self__ = this;
  var this__3995__auto____$1 = this;
  var pred__9109 = cljs.core.keyword_identical_QMARK_;
  var expr__9110 = k__3996__auto__;
  if (cljs.core.truth_(pred__9109.call(null, new cljs.core.Keyword(null, "contents", "contents", 4741549708), expr__9110))) {
    return new yantra.datatypes.Column(G__9106, self__.__meta, self__.__extmap, null);
  } else {
    return new yantra.datatypes.Column(self__.contents, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__3996__auto__, G__9106), null);
  }
};
yantra.datatypes.Column.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4002__auto__, writer__4003__auto__, opts__4004__auto__) {
  var self__ = this;
  var this__4002__auto____$1 = this;
  var pr_pair__4005__auto__ = function(keyval__4006__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4003__auto__, cljs.core.pr_writer, "", " ", "", opts__4004__auto__, keyval__4006__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4003__auto__, pr_pair__4005__auto__, "#yantra.datatypes.Column{", ", ", "}", opts__4004__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "contents", "contents", 4741549708), self__.contents], null)], null), self__.__extmap));
};
yantra.datatypes.Column.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__3993__auto__, entry__3994__auto__) {
  var self__ = this;
  var this__3993__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__3994__auto__)) {
    return cljs.core._assoc.call(null, this__3993__auto____$1, cljs.core._nth.call(null, entry__3994__auto__, 0), cljs.core._nth.call(null, entry__3994__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__3993__auto____$1, entry__3994__auto__);
  }
};
yantra.datatypes.Column.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4000__auto__) {
  var self__ = this;
  var this__4000__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "contents", "contents", 4741549708), self__.contents], null)], null), self__.__extmap));
};
yantra.datatypes.Column.prototype.cljs$core$ICounted$_count$arity$1 = function(this__3992__auto__) {
  var self__ = this;
  var this__3992__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
yantra.datatypes.Column.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__3984__auto__, other__3985__auto__) {
  var self__ = this;
  var this__3984__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3396__auto__ = other__3985__auto__;
    if (cljs.core.truth_(and__3396__auto__)) {
      return this__3984__auto____$1.constructor === other__3985__auto__.constructor && cljs.core.equiv_map.call(null, this__3984__auto____$1, other__3985__auto__);
    } else {
      return and__3396__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
yantra.datatypes.Column.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__3987__auto__, G__9106) {
  var self__ = this;
  var this__3987__auto____$1 = this;
  return new yantra.datatypes.Column(self__.contents, G__9106, self__.__extmap, self__.__hash);
};
yantra.datatypes.Column.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__3986__auto__) {
  var self__ = this;
  var this__3986__auto____$1 = this;
  return self__.__meta;
};
yantra.datatypes.Column.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__3997__auto__, k__3998__auto__) {
  var self__ = this;
  var this__3997__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "contents", "contents", 4741549708), null], null), null), k__3998__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__3997__auto____$1), self__.__meta), k__3998__auto__);
  } else {
    return new yantra.datatypes.Column(self__.contents, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__3998__auto__)), null);
  }
};
yantra.datatypes.Column.cljs$lang$type = true;
yantra.datatypes.Column.cljs$lang$ctorPrSeq = function(this__4022__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "yantra.datatypes/Column");
};
yantra.datatypes.Column.cljs$lang$ctorPrWriter = function(this__4022__auto__, writer__4023__auto__) {
  return cljs.core._write.call(null, writer__4023__auto__, "yantra.datatypes/Column");
};
yantra.datatypes.__GT_Column = function __GT_Column(contents) {
  return new yantra.datatypes.Column(contents);
};
yantra.datatypes.map__GT_Column = function map__GT_Column(G__9108) {
  return new yantra.datatypes.Column((new cljs.core.Keyword(null, "contents", "contents", 4741549708)).cljs$core$IFn$_invoke$arity$1(G__9108), null, cljs.core.dissoc.call(null, G__9108, new cljs.core.Keyword(null, "contents", "contents", 4741549708)));
};
yantra.datatypes.Graphics = function(contents, __meta, __extmap) {
  this.contents = contents;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
yantra.datatypes.Graphics.prototype.cljs$core$IHash$_hash$arity$1 = function(this__3983__auto__) {
  var self__ = this;
  var this__3983__auto____$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_imap.call(null, this__3983__auto____$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
yantra.datatypes.Graphics.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__3988__auto__, k__3989__auto__) {
  var self__ = this;
  var this__3988__auto____$1 = this;
  return cljs.core._lookup.call(null, this__3988__auto____$1, k__3989__auto__, null);
};
yantra.datatypes.Graphics.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__3990__auto__, k9113, else__3991__auto__) {
  var self__ = this;
  var this__3990__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k9113, new cljs.core.Keyword(null, "contents", "contents", 4741549708))) {
    return self__.contents;
  } else {
    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return cljs.core.get.call(null, self__.__extmap, k9113, else__3991__auto__);
    } else {
      return null;
    }
  }
};
yantra.datatypes.Graphics.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__3995__auto__, k__3996__auto__, G__9112) {
  var self__ = this;
  var this__3995__auto____$1 = this;
  var pred__9115 = cljs.core.keyword_identical_QMARK_;
  var expr__9116 = k__3996__auto__;
  if (cljs.core.truth_(pred__9115.call(null, new cljs.core.Keyword(null, "contents", "contents", 4741549708), expr__9116))) {
    return new yantra.datatypes.Graphics(G__9112, self__.__meta, self__.__extmap, null);
  } else {
    return new yantra.datatypes.Graphics(self__.contents, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__3996__auto__, G__9112), null);
  }
};
yantra.datatypes.Graphics.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4002__auto__, writer__4003__auto__, opts__4004__auto__) {
  var self__ = this;
  var this__4002__auto____$1 = this;
  var pr_pair__4005__auto__ = function(keyval__4006__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4003__auto__, cljs.core.pr_writer, "", " ", "", opts__4004__auto__, keyval__4006__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4003__auto__, pr_pair__4005__auto__, "#yantra.datatypes.Graphics{", ", ", "}", opts__4004__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "contents", "contents", 4741549708), self__.contents], null)], null), self__.__extmap));
};
yantra.datatypes.Graphics.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__3993__auto__, entry__3994__auto__) {
  var self__ = this;
  var this__3993__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__3994__auto__)) {
    return cljs.core._assoc.call(null, this__3993__auto____$1, cljs.core._nth.call(null, entry__3994__auto__, 0), cljs.core._nth.call(null, entry__3994__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__3993__auto____$1, entry__3994__auto__);
  }
};
yantra.datatypes.Graphics.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4000__auto__) {
  var self__ = this;
  var this__4000__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "contents", "contents", 4741549708), self__.contents], null)], null), self__.__extmap));
};
yantra.datatypes.Graphics.prototype.cljs$core$ICounted$_count$arity$1 = function(this__3992__auto__) {
  var self__ = this;
  var this__3992__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
yantra.datatypes.Graphics.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__3984__auto__, other__3985__auto__) {
  var self__ = this;
  var this__3984__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3396__auto__ = other__3985__auto__;
    if (cljs.core.truth_(and__3396__auto__)) {
      return this__3984__auto____$1.constructor === other__3985__auto__.constructor && cljs.core.equiv_map.call(null, this__3984__auto____$1, other__3985__auto__);
    } else {
      return and__3396__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
yantra.datatypes.Graphics.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__3987__auto__, G__9112) {
  var self__ = this;
  var this__3987__auto____$1 = this;
  return new yantra.datatypes.Graphics(self__.contents, G__9112, self__.__extmap, self__.__hash);
};
yantra.datatypes.Graphics.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__3986__auto__) {
  var self__ = this;
  var this__3986__auto____$1 = this;
  return self__.__meta;
};
yantra.datatypes.Graphics.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__3997__auto__, k__3998__auto__) {
  var self__ = this;
  var this__3997__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "contents", "contents", 4741549708), null], null), null), k__3998__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__3997__auto____$1), self__.__meta), k__3998__auto__);
  } else {
    return new yantra.datatypes.Graphics(self__.contents, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__3998__auto__)), null);
  }
};
yantra.datatypes.Graphics.cljs$lang$type = true;
yantra.datatypes.Graphics.cljs$lang$ctorPrSeq = function(this__4022__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "yantra.datatypes/Graphics");
};
yantra.datatypes.Graphics.cljs$lang$ctorPrWriter = function(this__4022__auto__, writer__4023__auto__) {
  return cljs.core._write.call(null, writer__4023__auto__, "yantra.datatypes/Graphics");
};
yantra.datatypes.__GT_Graphics = function __GT_Graphics(contents) {
  return new yantra.datatypes.Graphics(contents);
};
yantra.datatypes.map__GT_Graphics = function map__GT_Graphics(G__9114) {
  return new yantra.datatypes.Graphics((new cljs.core.Keyword(null, "contents", "contents", 4741549708)).cljs$core$IFn$_invoke$arity$1(G__9114), null, cljs.core.dissoc.call(null, G__9114, new cljs.core.Keyword(null, "contents", "contents", 4741549708)));
};
yantra.datatypes.Point = function(point, __meta, __extmap) {
  this.point = point;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
yantra.datatypes.Point.prototype.cljs$core$IHash$_hash$arity$1 = function(this__3983__auto__) {
  var self__ = this;
  var this__3983__auto____$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_imap.call(null, this__3983__auto____$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
yantra.datatypes.Point.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__3988__auto__, k__3989__auto__) {
  var self__ = this;
  var this__3988__auto____$1 = this;
  return cljs.core._lookup.call(null, this__3988__auto____$1, k__3989__auto__, null);
};
yantra.datatypes.Point.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__3990__auto__, k9119, else__3991__auto__) {
  var self__ = this;
  var this__3990__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k9119, new cljs.core.Keyword(null, "point", "point", 1120749826))) {
    return self__.point;
  } else {
    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return cljs.core.get.call(null, self__.__extmap, k9119, else__3991__auto__);
    } else {
      return null;
    }
  }
};
yantra.datatypes.Point.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__3995__auto__, k__3996__auto__, G__9118) {
  var self__ = this;
  var this__3995__auto____$1 = this;
  var pred__9121 = cljs.core.keyword_identical_QMARK_;
  var expr__9122 = k__3996__auto__;
  if (cljs.core.truth_(pred__9121.call(null, new cljs.core.Keyword(null, "point", "point", 1120749826), expr__9122))) {
    return new yantra.datatypes.Point(G__9118, self__.__meta, self__.__extmap, null);
  } else {
    return new yantra.datatypes.Point(self__.point, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__3996__auto__, G__9118), null);
  }
};
yantra.datatypes.Point.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4002__auto__, writer__4003__auto__, opts__4004__auto__) {
  var self__ = this;
  var this__4002__auto____$1 = this;
  var pr_pair__4005__auto__ = function(keyval__4006__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4003__auto__, cljs.core.pr_writer, "", " ", "", opts__4004__auto__, keyval__4006__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4003__auto__, pr_pair__4005__auto__, "#yantra.datatypes.Point{", ", ", "}", opts__4004__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "point", "point", 1120749826), self__.point], null)], null), self__.__extmap));
};
yantra.datatypes.Point.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__3993__auto__, entry__3994__auto__) {
  var self__ = this;
  var this__3993__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__3994__auto__)) {
    return cljs.core._assoc.call(null, this__3993__auto____$1, cljs.core._nth.call(null, entry__3994__auto__, 0), cljs.core._nth.call(null, entry__3994__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__3993__auto____$1, entry__3994__auto__);
  }
};
yantra.datatypes.Point.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4000__auto__) {
  var self__ = this;
  var this__4000__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "point", "point", 1120749826), self__.point], null)], null), self__.__extmap));
};
yantra.datatypes.Point.prototype.cljs$core$ICounted$_count$arity$1 = function(this__3992__auto__) {
  var self__ = this;
  var this__3992__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
yantra.datatypes.Point.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__3984__auto__, other__3985__auto__) {
  var self__ = this;
  var this__3984__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3396__auto__ = other__3985__auto__;
    if (cljs.core.truth_(and__3396__auto__)) {
      return this__3984__auto____$1.constructor === other__3985__auto__.constructor && cljs.core.equiv_map.call(null, this__3984__auto____$1, other__3985__auto__);
    } else {
      return and__3396__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
yantra.datatypes.Point.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__3987__auto__, G__9118) {
  var self__ = this;
  var this__3987__auto____$1 = this;
  return new yantra.datatypes.Point(self__.point, G__9118, self__.__extmap, self__.__hash);
};
yantra.datatypes.Point.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__3986__auto__) {
  var self__ = this;
  var this__3986__auto____$1 = this;
  return self__.__meta;
};
yantra.datatypes.Point.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__3997__auto__, k__3998__auto__) {
  var self__ = this;
  var this__3997__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "point", "point", 1120749826), null], null), null), k__3998__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__3997__auto____$1), self__.__meta), k__3998__auto__);
  } else {
    return new yantra.datatypes.Point(self__.point, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__3998__auto__)), null);
  }
};
yantra.datatypes.Point.cljs$lang$type = true;
yantra.datatypes.Point.cljs$lang$ctorPrSeq = function(this__4022__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "yantra.datatypes/Point");
};
yantra.datatypes.Point.cljs$lang$ctorPrWriter = function(this__4022__auto__, writer__4023__auto__) {
  return cljs.core._write.call(null, writer__4023__auto__, "yantra.datatypes/Point");
};
yantra.datatypes.__GT_Point = function __GT_Point(point) {
  return new yantra.datatypes.Point(point);
};
yantra.datatypes.map__GT_Point = function map__GT_Point(G__9120) {
  return new yantra.datatypes.Point((new cljs.core.Keyword(null, "point", "point", 1120749826)).cljs$core$IFn$_invoke$arity$1(G__9120), null, cljs.core.dissoc.call(null, G__9120, new cljs.core.Keyword(null, "point", "point", 1120749826)));
};
yantra.datatypes.Line = function(points, __meta, __extmap) {
  this.points = points;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
yantra.datatypes.Line.prototype.cljs$core$IHash$_hash$arity$1 = function(this__3983__auto__) {
  var self__ = this;
  var this__3983__auto____$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_imap.call(null, this__3983__auto____$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
yantra.datatypes.Line.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__3988__auto__, k__3989__auto__) {
  var self__ = this;
  var this__3988__auto____$1 = this;
  return cljs.core._lookup.call(null, this__3988__auto____$1, k__3989__auto__, null);
};
yantra.datatypes.Line.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__3990__auto__, k9125, else__3991__auto__) {
  var self__ = this;
  var this__3990__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k9125, new cljs.core.Keyword(null, "points", "points", 4326117461))) {
    return self__.points;
  } else {
    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return cljs.core.get.call(null, self__.__extmap, k9125, else__3991__auto__);
    } else {
      return null;
    }
  }
};
yantra.datatypes.Line.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__3995__auto__, k__3996__auto__, G__9124) {
  var self__ = this;
  var this__3995__auto____$1 = this;
  var pred__9127 = cljs.core.keyword_identical_QMARK_;
  var expr__9128 = k__3996__auto__;
  if (cljs.core.truth_(pred__9127.call(null, new cljs.core.Keyword(null, "points", "points", 4326117461), expr__9128))) {
    return new yantra.datatypes.Line(G__9124, self__.__meta, self__.__extmap, null);
  } else {
    return new yantra.datatypes.Line(self__.points, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__3996__auto__, G__9124), null);
  }
};
yantra.datatypes.Line.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4002__auto__, writer__4003__auto__, opts__4004__auto__) {
  var self__ = this;
  var this__4002__auto____$1 = this;
  var pr_pair__4005__auto__ = function(keyval__4006__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4003__auto__, cljs.core.pr_writer, "", " ", "", opts__4004__auto__, keyval__4006__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4003__auto__, pr_pair__4005__auto__, "#yantra.datatypes.Line{", ", ", "}", opts__4004__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "points", "points", 4326117461), self__.points], null)], null), self__.__extmap));
};
yantra.datatypes.Line.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__3993__auto__, entry__3994__auto__) {
  var self__ = this;
  var this__3993__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__3994__auto__)) {
    return cljs.core._assoc.call(null, this__3993__auto____$1, cljs.core._nth.call(null, entry__3994__auto__, 0), cljs.core._nth.call(null, entry__3994__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__3993__auto____$1, entry__3994__auto__);
  }
};
yantra.datatypes.Line.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4000__auto__) {
  var self__ = this;
  var this__4000__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "points", "points", 4326117461), self__.points], null)], null), self__.__extmap));
};
yantra.datatypes.Line.prototype.cljs$core$ICounted$_count$arity$1 = function(this__3992__auto__) {
  var self__ = this;
  var this__3992__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
yantra.datatypes.Line.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__3984__auto__, other__3985__auto__) {
  var self__ = this;
  var this__3984__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3396__auto__ = other__3985__auto__;
    if (cljs.core.truth_(and__3396__auto__)) {
      return this__3984__auto____$1.constructor === other__3985__auto__.constructor && cljs.core.equiv_map.call(null, this__3984__auto____$1, other__3985__auto__);
    } else {
      return and__3396__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
yantra.datatypes.Line.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__3987__auto__, G__9124) {
  var self__ = this;
  var this__3987__auto____$1 = this;
  return new yantra.datatypes.Line(self__.points, G__9124, self__.__extmap, self__.__hash);
};
yantra.datatypes.Line.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__3986__auto__) {
  var self__ = this;
  var this__3986__auto____$1 = this;
  return self__.__meta;
};
yantra.datatypes.Line.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__3997__auto__, k__3998__auto__) {
  var self__ = this;
  var this__3997__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "points", "points", 4326117461), null], null), null), k__3998__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__3997__auto____$1), self__.__meta), k__3998__auto__);
  } else {
    return new yantra.datatypes.Line(self__.points, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__3998__auto__)), null);
  }
};
yantra.datatypes.Line.cljs$lang$type = true;
yantra.datatypes.Line.cljs$lang$ctorPrSeq = function(this__4022__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "yantra.datatypes/Line");
};
yantra.datatypes.Line.cljs$lang$ctorPrWriter = function(this__4022__auto__, writer__4023__auto__) {
  return cljs.core._write.call(null, writer__4023__auto__, "yantra.datatypes/Line");
};
yantra.datatypes.__GT_Line = function __GT_Line(points) {
  return new yantra.datatypes.Line(points);
};
yantra.datatypes.map__GT_Line = function map__GT_Line(G__9126) {
  return new yantra.datatypes.Line((new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(G__9126), null, cljs.core.dissoc.call(null, G__9126, new cljs.core.Keyword(null, "points", "points", 4326117461)));
};
yantra.datatypes.Disk = function(point, radius, __meta, __extmap) {
  this.point = point;
  this.radius = radius;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
yantra.datatypes.Disk.prototype.cljs$core$IHash$_hash$arity$1 = function(this__3983__auto__) {
  var self__ = this;
  var this__3983__auto____$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_imap.call(null, this__3983__auto____$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
yantra.datatypes.Disk.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__3988__auto__, k__3989__auto__) {
  var self__ = this;
  var this__3988__auto____$1 = this;
  return cljs.core._lookup.call(null, this__3988__auto____$1, k__3989__auto__, null);
};
yantra.datatypes.Disk.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__3990__auto__, k9131, else__3991__auto__) {
  var self__ = this;
  var this__3990__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k9131, new cljs.core.Keyword(null, "point", "point", 1120749826))) {
    return self__.point;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k9131, new cljs.core.Keyword(null, "radius", "radius", 4370292740))) {
      return self__.radius;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.get.call(null, self__.__extmap, k9131, else__3991__auto__);
      } else {
        return null;
      }
    }
  }
};
yantra.datatypes.Disk.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__3995__auto__, k__3996__auto__, G__9130) {
  var self__ = this;
  var this__3995__auto____$1 = this;
  var pred__9133 = cljs.core.keyword_identical_QMARK_;
  var expr__9134 = k__3996__auto__;
  if (cljs.core.truth_(pred__9133.call(null, new cljs.core.Keyword(null, "point", "point", 1120749826), expr__9134))) {
    return new yantra.datatypes.Disk(G__9130, self__.radius, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__9133.call(null, new cljs.core.Keyword(null, "radius", "radius", 4370292740), expr__9134))) {
      return new yantra.datatypes.Disk(self__.point, G__9130, self__.__meta, self__.__extmap, null);
    } else {
      return new yantra.datatypes.Disk(self__.point, self__.radius, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__3996__auto__, G__9130), null);
    }
  }
};
yantra.datatypes.Disk.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4002__auto__, writer__4003__auto__, opts__4004__auto__) {
  var self__ = this;
  var this__4002__auto____$1 = this;
  var pr_pair__4005__auto__ = function(keyval__4006__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4003__auto__, cljs.core.pr_writer, "", " ", "", opts__4004__auto__, keyval__4006__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4003__auto__, pr_pair__4005__auto__, "#yantra.datatypes.Disk{", ", ", "}", opts__4004__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "point", "point", 1120749826), self__.point], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "radius", "radius", 4370292740), self__.radius], null)], null), self__.__extmap));
};
yantra.datatypes.Disk.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__3993__auto__, entry__3994__auto__) {
  var self__ = this;
  var this__3993__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__3994__auto__)) {
    return cljs.core._assoc.call(null, this__3993__auto____$1, cljs.core._nth.call(null, entry__3994__auto__, 0), cljs.core._nth.call(null, entry__3994__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__3993__auto____$1, entry__3994__auto__);
  }
};
yantra.datatypes.Disk.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4000__auto__) {
  var self__ = this;
  var this__4000__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "point", "point", 1120749826), self__.point], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "radius", "radius", 4370292740), self__.radius], null)], null), self__.__extmap));
};
yantra.datatypes.Disk.prototype.cljs$core$ICounted$_count$arity$1 = function(this__3992__auto__) {
  var self__ = this;
  var this__3992__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
yantra.datatypes.Disk.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__3984__auto__, other__3985__auto__) {
  var self__ = this;
  var this__3984__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3396__auto__ = other__3985__auto__;
    if (cljs.core.truth_(and__3396__auto__)) {
      return this__3984__auto____$1.constructor === other__3985__auto__.constructor && cljs.core.equiv_map.call(null, this__3984__auto____$1, other__3985__auto__);
    } else {
      return and__3396__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
yantra.datatypes.Disk.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__3987__auto__, G__9130) {
  var self__ = this;
  var this__3987__auto____$1 = this;
  return new yantra.datatypes.Disk(self__.point, self__.radius, G__9130, self__.__extmap, self__.__hash);
};
yantra.datatypes.Disk.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__3986__auto__) {
  var self__ = this;
  var this__3986__auto____$1 = this;
  return self__.__meta;
};
yantra.datatypes.Disk.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__3997__auto__, k__3998__auto__) {
  var self__ = this;
  var this__3997__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "point", "point", 1120749826), null, new cljs.core.Keyword(null, "radius", "radius", 4370292740), null], null), null), k__3998__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__3997__auto____$1), self__.__meta), k__3998__auto__);
  } else {
    return new yantra.datatypes.Disk(self__.point, self__.radius, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__3998__auto__)), null);
  }
};
yantra.datatypes.Disk.cljs$lang$type = true;
yantra.datatypes.Disk.cljs$lang$ctorPrSeq = function(this__4022__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "yantra.datatypes/Disk");
};
yantra.datatypes.Disk.cljs$lang$ctorPrWriter = function(this__4022__auto__, writer__4023__auto__) {
  return cljs.core._write.call(null, writer__4023__auto__, "yantra.datatypes/Disk");
};
yantra.datatypes.__GT_Disk = function __GT_Disk(point, radius) {
  return new yantra.datatypes.Disk(point, radius);
};
yantra.datatypes.map__GT_Disk = function map__GT_Disk(G__9132) {
  return new yantra.datatypes.Disk((new cljs.core.Keyword(null, "point", "point", 1120749826)).cljs$core$IFn$_invoke$arity$1(G__9132), (new cljs.core.Keyword(null, "radius", "radius", 4370292740)).cljs$core$IFn$_invoke$arity$1(G__9132), null, cljs.core.dissoc.call(null, G__9132, new cljs.core.Keyword(null, "point", "point", 1120749826), new cljs.core.Keyword(null, "radius", "radius", 4370292740)));
};
yantra.datatypes.Rectangle = function(p1, p2, __meta, __extmap) {
  this.p1 = p1;
  this.p2 = p2;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
yantra.datatypes.Rectangle.prototype.cljs$core$IHash$_hash$arity$1 = function(this__3983__auto__) {
  var self__ = this;
  var this__3983__auto____$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_imap.call(null, this__3983__auto____$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
yantra.datatypes.Rectangle.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__3988__auto__, k__3989__auto__) {
  var self__ = this;
  var this__3988__auto____$1 = this;
  return cljs.core._lookup.call(null, this__3988__auto____$1, k__3989__auto__, null);
};
yantra.datatypes.Rectangle.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__3990__auto__, k9137, else__3991__auto__) {
  var self__ = this;
  var this__3990__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k9137, new cljs.core.Keyword(null, "p1", "p1", 1013907763))) {
    return self__.p1;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k9137, new cljs.core.Keyword(null, "p2", "p2", 1013907764))) {
      return self__.p2;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.get.call(null, self__.__extmap, k9137, else__3991__auto__);
      } else {
        return null;
      }
    }
  }
};
yantra.datatypes.Rectangle.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__3995__auto__, k__3996__auto__, G__9136) {
  var self__ = this;
  var this__3995__auto____$1 = this;
  var pred__9139 = cljs.core.keyword_identical_QMARK_;
  var expr__9140 = k__3996__auto__;
  if (cljs.core.truth_(pred__9139.call(null, new cljs.core.Keyword(null, "p1", "p1", 1013907763), expr__9140))) {
    return new yantra.datatypes.Rectangle(G__9136, self__.p2, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__9139.call(null, new cljs.core.Keyword(null, "p2", "p2", 1013907764), expr__9140))) {
      return new yantra.datatypes.Rectangle(self__.p1, G__9136, self__.__meta, self__.__extmap, null);
    } else {
      return new yantra.datatypes.Rectangle(self__.p1, self__.p2, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__3996__auto__, G__9136), null);
    }
  }
};
yantra.datatypes.Rectangle.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4002__auto__, writer__4003__auto__, opts__4004__auto__) {
  var self__ = this;
  var this__4002__auto____$1 = this;
  var pr_pair__4005__auto__ = function(keyval__4006__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4003__auto__, cljs.core.pr_writer, "", " ", "", opts__4004__auto__, keyval__4006__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4003__auto__, pr_pair__4005__auto__, "#yantra.datatypes.Rectangle{", ", ", "}", opts__4004__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p1", "p1", 1013907763), self__.p1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "p2", "p2", 1013907764), self__.p2], null)], null), self__.__extmap));
};
yantra.datatypes.Rectangle.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__3993__auto__, entry__3994__auto__) {
  var self__ = this;
  var this__3993__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__3994__auto__)) {
    return cljs.core._assoc.call(null, this__3993__auto____$1, cljs.core._nth.call(null, entry__3994__auto__, 0), cljs.core._nth.call(null, entry__3994__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__3993__auto____$1, entry__3994__auto__);
  }
};
yantra.datatypes.Rectangle.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4000__auto__) {
  var self__ = this;
  var this__4000__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p1", "p1", 1013907763), self__.p1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p2", "p2", 1013907764), self__.p2], null)], null), self__.__extmap));
};
yantra.datatypes.Rectangle.prototype.cljs$core$ICounted$_count$arity$1 = function(this__3992__auto__) {
  var self__ = this;
  var this__3992__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
yantra.datatypes.Rectangle.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__3984__auto__, other__3985__auto__) {
  var self__ = this;
  var this__3984__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3396__auto__ = other__3985__auto__;
    if (cljs.core.truth_(and__3396__auto__)) {
      return this__3984__auto____$1.constructor === other__3985__auto__.constructor && cljs.core.equiv_map.call(null, this__3984__auto____$1, other__3985__auto__);
    } else {
      return and__3396__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
yantra.datatypes.Rectangle.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__3987__auto__, G__9136) {
  var self__ = this;
  var this__3987__auto____$1 = this;
  return new yantra.datatypes.Rectangle(self__.p1, self__.p2, G__9136, self__.__extmap, self__.__hash);
};
yantra.datatypes.Rectangle.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__3986__auto__) {
  var self__ = this;
  var this__3986__auto____$1 = this;
  return self__.__meta;
};
yantra.datatypes.Rectangle.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__3997__auto__, k__3998__auto__) {
  var self__ = this;
  var this__3997__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "p1", "p1", 1013907763), null, new cljs.core.Keyword(null, "p2", "p2", 1013907764), null], null), null), k__3998__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__3997__auto____$1), self__.__meta), k__3998__auto__);
  } else {
    return new yantra.datatypes.Rectangle(self__.p1, self__.p2, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__3998__auto__)), null);
  }
};
yantra.datatypes.Rectangle.cljs$lang$type = true;
yantra.datatypes.Rectangle.cljs$lang$ctorPrSeq = function(this__4022__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "yantra.datatypes/Rectangle");
};
yantra.datatypes.Rectangle.cljs$lang$ctorPrWriter = function(this__4022__auto__, writer__4023__auto__) {
  return cljs.core._write.call(null, writer__4023__auto__, "yantra.datatypes/Rectangle");
};
yantra.datatypes.__GT_Rectangle = function __GT_Rectangle(p1, p2) {
  return new yantra.datatypes.Rectangle(p1, p2);
};
yantra.datatypes.map__GT_Rectangle = function map__GT_Rectangle(G__9138) {
  return new yantra.datatypes.Rectangle((new cljs.core.Keyword(null, "p1", "p1", 1013907763)).cljs$core$IFn$_invoke$arity$1(G__9138), (new cljs.core.Keyword(null, "p2", "p2", 1013907764)).cljs$core$IFn$_invoke$arity$1(G__9138), null, cljs.core.dissoc.call(null, G__9138, new cljs.core.Keyword(null, "p1", "p1", 1013907763), new cljs.core.Keyword(null, "p2", "p2", 1013907764)));
};
yantra.datatypes.Style = function(style, prims, __meta, __extmap) {
  this.style = style;
  this.prims = prims;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
yantra.datatypes.Style.prototype.cljs$core$IHash$_hash$arity$1 = function(this__3983__auto__) {
  var self__ = this;
  var this__3983__auto____$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_imap.call(null, this__3983__auto____$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
yantra.datatypes.Style.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__3988__auto__, k__3989__auto__) {
  var self__ = this;
  var this__3988__auto____$1 = this;
  return cljs.core._lookup.call(null, this__3988__auto____$1, k__3989__auto__, null);
};
yantra.datatypes.Style.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__3990__auto__, k9143, else__3991__auto__) {
  var self__ = this;
  var this__3990__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k9143, new cljs.core.Keyword(null, "style", "style", 1123684643))) {
    return self__.style;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k9143, new cljs.core.Keyword(null, "prims", "prims", 1120839167))) {
      return self__.prims;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.get.call(null, self__.__extmap, k9143, else__3991__auto__);
      } else {
        return null;
      }
    }
  }
};
yantra.datatypes.Style.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__3995__auto__, k__3996__auto__, G__9142) {
  var self__ = this;
  var this__3995__auto____$1 = this;
  var pred__9145 = cljs.core.keyword_identical_QMARK_;
  var expr__9146 = k__3996__auto__;
  if (cljs.core.truth_(pred__9145.call(null, new cljs.core.Keyword(null, "style", "style", 1123684643), expr__9146))) {
    return new yantra.datatypes.Style(G__9142, self__.prims, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__9145.call(null, new cljs.core.Keyword(null, "prims", "prims", 1120839167), expr__9146))) {
      return new yantra.datatypes.Style(self__.style, G__9142, self__.__meta, self__.__extmap, null);
    } else {
      return new yantra.datatypes.Style(self__.style, self__.prims, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__3996__auto__, G__9142), null);
    }
  }
};
yantra.datatypes.Style.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4002__auto__, writer__4003__auto__, opts__4004__auto__) {
  var self__ = this;
  var this__4002__auto____$1 = this;
  var pr_pair__4005__auto__ = function(keyval__4006__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4003__auto__, cljs.core.pr_writer, "", " ", "", opts__4004__auto__, keyval__4006__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4003__auto__, pr_pair__4005__auto__, "#yantra.datatypes.Style{", ", ", "}", opts__4004__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "style", "style", 1123684643), self__.style], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "prims", "prims", 1120839167), self__.prims], null)], null), self__.__extmap));
};
yantra.datatypes.Style.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__3993__auto__, entry__3994__auto__) {
  var self__ = this;
  var this__3993__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__3994__auto__)) {
    return cljs.core._assoc.call(null, this__3993__auto____$1, cljs.core._nth.call(null, entry__3994__auto__, 0), cljs.core._nth.call(null, entry__3994__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__3993__auto____$1, entry__3994__auto__);
  }
};
yantra.datatypes.Style.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4000__auto__) {
  var self__ = this;
  var this__4000__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "style", "style", 1123684643), self__.style], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prims", "prims", 1120839167), self__.prims], null)], null), self__.__extmap));
};
yantra.datatypes.Style.prototype.cljs$core$ICounted$_count$arity$1 = function(this__3992__auto__) {
  var self__ = this;
  var this__3992__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
yantra.datatypes.Style.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__3984__auto__, other__3985__auto__) {
  var self__ = this;
  var this__3984__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3396__auto__ = other__3985__auto__;
    if (cljs.core.truth_(and__3396__auto__)) {
      return this__3984__auto____$1.constructor === other__3985__auto__.constructor && cljs.core.equiv_map.call(null, this__3984__auto____$1, other__3985__auto__);
    } else {
      return and__3396__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
yantra.datatypes.Style.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__3987__auto__, G__9142) {
  var self__ = this;
  var this__3987__auto____$1 = this;
  return new yantra.datatypes.Style(self__.style, self__.prims, G__9142, self__.__extmap, self__.__hash);
};
yantra.datatypes.Style.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__3986__auto__) {
  var self__ = this;
  var this__3986__auto____$1 = this;
  return self__.__meta;
};
yantra.datatypes.Style.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__3997__auto__, k__3998__auto__) {
  var self__ = this;
  var this__3997__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "prims", "prims", 1120839167), null, new cljs.core.Keyword(null, "style", "style", 1123684643), null], null), null), k__3998__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__3997__auto____$1), self__.__meta), k__3998__auto__);
  } else {
    return new yantra.datatypes.Style(self__.style, self__.prims, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__3998__auto__)), null);
  }
};
yantra.datatypes.Style.cljs$lang$type = true;
yantra.datatypes.Style.cljs$lang$ctorPrSeq = function(this__4022__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "yantra.datatypes/Style");
};
yantra.datatypes.Style.cljs$lang$ctorPrWriter = function(this__4022__auto__, writer__4023__auto__) {
  return cljs.core._write.call(null, writer__4023__auto__, "yantra.datatypes/Style");
};
yantra.datatypes.__GT_Style = function __GT_Style(style, prims) {
  return new yantra.datatypes.Style(style, prims);
};
yantra.datatypes.map__GT_Style = function map__GT_Style(G__9144) {
  return new yantra.datatypes.Style((new cljs.core.Keyword(null, "style", "style", 1123684643)).cljs$core$IFn$_invoke$arity$1(G__9144), (new cljs.core.Keyword(null, "prims", "prims", 1120839167)).cljs$core$IFn$_invoke$arity$1(G__9144), null, cljs.core.dissoc.call(null, G__9144, new cljs.core.Keyword(null, "style", "style", 1123684643), new cljs.core.Keyword(null, "prims", "prims", 1120839167)));
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj13036 = {};
  return obj13036;
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if (function() {
    var and__3396__auto__ = port;
    if (and__3396__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4029__auto__ = port == null ? null : port;
    return function() {
      var or__3408__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj13038 = {};
  return obj13038;
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn0_handler) {
  if (function() {
    var and__3396__auto__ = port;
    if (and__3396__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn0_handler);
  } else {
    var x__4029__auto__ = port == null ? null : port;
    return function() {
      var or__3408__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn0_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj13040 = {};
  return obj13040;
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if (function() {
    var and__3396__auto__ = chan;
    if (and__3396__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4029__auto__ = chan == null ? null : chan;
    return function() {
      var or__3408__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj13042 = {};
  return obj13042;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if (function() {
    var and__3396__auto__ = h;
    if (and__3396__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4029__auto__ = h == null ? null : h;
    return function() {
      var or__3408__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if (function() {
    var and__3396__auto__ = h;
    if (and__3396__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4029__auto__ = h == null ? null : h;
    return function() {
      var or__3408__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj13044 = {};
  return obj13044;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if (function() {
    var and__3396__auto__ = b;
    if (and__3396__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4029__auto__ = b == null ? null : b;
    return function() {
      var or__3408__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if (function() {
    var and__3396__auto__ = b;
    if (and__3396__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4029__auto__ = b == null ? null : b;
    return function() {
      var or__3408__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function add_BANG_(b, itm) {
  if (function() {
    var and__3396__auto__ = b;
    if (and__3396__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(b, itm);
  } else {
    var x__4029__auto__ = b == null ? null : b;
    return function() {
      var or__3408__auto__ = cljs.core.async.impl.protocols.add_BANG_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.impl.protocols.add_BANG_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!", b);
        }
      }
    }().call(null, b, itm);
  }
};
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
  var obj13046 = {};
  return obj13046;
}();
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", 4635210724));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t13064 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t13064 = function(f, fn_handler, meta13065) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta13065 = meta13065;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t13064.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t13064.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t13064";
    cljs.core.async.impl.ioc_helpers.t13064.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async.impl.ioc-helpers/t13064");
    };
    cljs.core.async.impl.ioc_helpers.t13064.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t13064.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t13064.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t13064.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13066) {
      var self__ = this;
      var _13066__$1 = this;
      return self__.meta13065;
    };
    cljs.core.async.impl.ioc_helpers.t13064.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13066, meta13065__$1) {
      var self__ = this;
      var _13066__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t13064(self__.f, self__.fn_handler, meta13065__$1);
    };
    cljs.core.async.impl.ioc_helpers.__GT_t13064 = function __GT_t13064(f__$1, fn_handler__$1, meta13065) {
      return new cljs.core.async.impl.ioc_helpers.t13064(f__$1, fn_handler__$1, meta13065);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t13064(f, fn_handler, null);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e13068) {
    if (e13068 instanceof Object) {
      var ex = e13068;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e13068;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_13071_13073 = state;
    statearr_13071_13073[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_13071_13073[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_13072_13074 = state;
    statearr_13072_13074[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_13072_13074[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
    var statearr_13077_13079 = state;
    statearr_13077_13079[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = null;
    statearr_13077_13079[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_13078_13080 = state;
    statearr_13078_13080[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_13078_13080[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__13081) {
    var map__13086 = p__13081;
    var map__13086__$1 = cljs.core.seq_QMARK_.call(null, map__13086) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13086) : map__13086;
    var opts = map__13086__$1;
    var statearr_13087_13090 = state;
    statearr_13087_13090[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4092__auto__ = cljs.core.async.do_alts.call(null, function(val) {
      var statearr_13088_13091 = state;
      statearr_13088_13091[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
    }, ports, opts);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var cb = temp__4092__auto__;
      var statearr_13089_13092 = state;
      statearr_13089_13092[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
    } else {
      return null;
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__13081 = null;
    if (arguments.length > 3) {
      p__13081 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__13081);
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__13093) {
    var state = cljs.core.first(arglist__13093);
    arglist__13093 = cljs.core.next(arglist__13093);
    var cont_block = cljs.core.first(arglist__13093);
    arglist__13093 = cljs.core.next(arglist__13093);
    var ports = cljs.core.first(arglist__13093);
    var p__13081 = cljs.core.rest(arglist__13093);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__13081);
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_;
}();
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
      return null;
    }));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  if (arguments.length > 5) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__3983__auto__) {
  var self__ = this;
  var this__3983__auto____$1 = this;
  var h__3819__auto__ = self__.__hash;
  if (!(h__3819__auto__ == null)) {
    return h__3819__auto__;
  } else {
    var h__3819__auto____$1 = cljs.core.hash_imap.call(null, this__3983__auto____$1);
    self__.__hash = h__3819__auto____$1;
    return h__3819__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__3988__auto__, k__3989__auto__) {
  var self__ = this;
  var this__3988__auto____$1 = this;
  return cljs.core._lookup.call(null, this__3988__auto____$1, k__3989__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__3990__auto__, k13095, else__3991__auto__) {
  var self__ = this;
  var this__3990__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k13095, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893))) {
    return self__.catch_block;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k13095, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687))) {
      return self__.catch_exception;
    } else {
      if (cljs.core.keyword_identical_QMARK_.call(null, k13095, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429))) {
        return self__.finally_block;
      } else {
        if (cljs.core.keyword_identical_QMARK_.call(null, k13095, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097))) {
          return self__.continue_block;
        } else {
          if (cljs.core.keyword_identical_QMARK_.call(null, k13095, new cljs.core.Keyword(null, "prev", "prev", 1017353637))) {
            return self__.prev;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.get.call(null, self__.__extmap, k13095, else__3991__auto__);
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__3995__auto__, k__3996__auto__, G__13094) {
  var self__ = this;
  var this__3995__auto____$1 = this;
  var pred__13097 = cljs.core.keyword_identical_QMARK_;
  var expr__13098 = k__3996__auto__;
  if (cljs.core.truth_(pred__13097.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), expr__13098))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__13094, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__13097.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), expr__13098))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__13094, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__13097.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), expr__13098))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__13094, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__13097.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), expr__13098))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__13094, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__13097.call(null, new cljs.core.Keyword(null, "prev", "prev", 1017353637), expr__13098))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__13094, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__3996__auto__, G__13094), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4002__auto__, writer__4003__auto__, opts__4004__auto__) {
  var self__ = this;
  var this__4002__auto____$1 = this;
  var pr_pair__4005__auto__ = function(keyval__4006__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4003__auto__, cljs.core.pr_writer, "", " ", "", opts__4004__auto__, keyval__4006__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4003__auto__, pr_pair__4005__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4004__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", 1017353637), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__3993__auto__, entry__3994__auto__) {
  var self__ = this;
  var this__3993__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__3994__auto__)) {
    return cljs.core._assoc.call(null, this__3993__auto____$1, cljs.core._nth.call(null, entry__3994__auto__, 0), cljs.core._nth.call(null, entry__3994__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__3993__auto____$1, entry__3994__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4000__auto__) {
  var self__ = this;
  var this__4000__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", 1017353637), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__3992__auto__) {
  var self__ = this;
  var this__3992__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__3984__auto__, other__3985__auto__) {
  var self__ = this;
  var this__3984__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3396__auto__ = other__3985__auto__;
    if (cljs.core.truth_(and__3396__auto__)) {
      return this__3984__auto____$1.constructor === other__3985__auto__.constructor && cljs.core.equiv_map.call(null, this__3984__auto____$1, other__3985__auto__);
    } else {
      return and__3396__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__3987__auto__, G__13094) {
  var self__ = this;
  var this__3987__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__13094, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__3986__auto__) {
  var self__ = this;
  var this__3986__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__3997__auto__, k__3998__auto__) {
  var self__ = this;
  var this__3997__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), null, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), null, new cljs.core.Keyword(null, "prev", "prev", 1017353637), 
  null], null), null), k__3998__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__3997__auto____$1), self__.__meta), k__3998__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__3998__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4022__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4022__auto__, writer__4023__auto__) {
  return cljs.core._write.call(null, writer__4023__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function __GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function map__GT_ExceptionFrame(G__13096) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893)).cljs$core$IFn$_invoke$arity$1(G__13096), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687)).cljs$core$IFn$_invoke$arity$1(G__13096), (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(G__13096), (new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097)).cljs$core$IFn$_invoke$arity$1(G__13096), 
  (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(G__13096), null, cljs.core.dissoc.call(null, G__13096, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), new cljs.core.Keyword(null, "prev", "prev", 1017353637)));
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_13101 = state;
  statearr_13101[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_13101;
};
cljs.core.async.impl.ioc_helpers.process_exception = function process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__3396__auto__ = exception;
      if (cljs.core.truth_(and__3396__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__3396__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__3396__auto__ = exception;
        if (cljs.core.truth_(and__3396__auto__)) {
          var and__3396__auto____$1 = catch_block;
          if (cljs.core.truth_(and__3396__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__3396__auto____$1;
          }
        } else {
          return and__3396__auto__;
        }
      }())) {
        var statearr_13107 = state;
        statearr_13107[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_13107[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_13107[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_13107[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), null);
        return statearr_13107;
      } else {
        if (cljs.core.truth_(function() {
          var and__3396__auto__ = exception;
          if (cljs.core.truth_(and__3396__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__3396__auto__;
          }
        }())) {
          var statearr_13108_13112 = state;
          statearr_13108_13112[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__13113 = state;
          state = G__13113;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__3396__auto__ = exception;
            if (cljs.core.truth_(and__3396__auto__)) {
              var and__3396__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__3396__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3396__auto____$1;
              }
            } else {
              return and__3396__auto__;
            }
          }())) {
            var statearr_13109 = state;
            statearr_13109[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_13109[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null);
            return statearr_13109;
          } else {
            if (cljs.core.truth_(function() {
              var and__3396__auto__ = cljs.core.not.call(null, exception);
              if (and__3396__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3396__auto__;
              }
            }())) {
              var statearr_13110 = state;
              statearr_13110[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_13110[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null);
              return statearr_13110;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_13111 = state;
                statearr_13111[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_13111[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_13111;
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  if (false) {
                    return null;
                  } else {
                    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("No matching clause"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, false))].join(""));
                  }
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__13058 = cnt + 1;
      cnt = G__13058;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4250__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4250__auto__) {
      var v_13059 = this$.pop();
      if (keep_QMARK_.call(null, v_13059)) {
        this$.unshift(v_13059);
      } else {
      }
      var G__13060 = x + 1;
      x = G__13060;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", -1640531465, null), new cljs.core.Symbol(null, "n", "n", -1640531417, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, this$__$1))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't add to a full buffer"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol("impl", "full?", "impl/full?", -1337857039, null), new cljs.core.Symbol(null, "this", "this", -1636972457, null)))))].join(""));
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    return null;
  } else {
    return self__.buf.unshift(itm);
  }
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.message_channel = null;
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_13047 = 0;
  while (true) {
    var m_13048 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_13048 == null) {
    } else {
      m_13048.call(null);
      if (count_13047 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__13049 = count_13047 + 1;
        count_13047 = G__13049;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
if (typeof MessageChannel !== "undefined") {
  cljs.core.async.impl.dispatch.message_channel = new MessageChannel;
  cljs.core.async.impl.dispatch.message_channel.port1.onmessage = function(msg) {
    return cljs.core.async.impl.dispatch.process_messages.call(null);
  };
} else {
}
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__3396__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (and__3396__auto__) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__3396__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    if (typeof MessageChannel !== "undefined") {
      return cljs.core.async.impl.dispatch.message_channel.port2.postMessage(0);
    } else {
      if (typeof setImmediate !== "undefined") {
        return setImmediate(cljs.core.async.impl.dispatch.process_messages);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return setTimeout(cljs.core.async.impl.dispatch.process_messages, 0);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if (typeof cljs.core.async.impl.channels.t13053 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t13053 = function(val, box, meta13054) {
      this.val = val;
      this.box = box;
      this.meta13054 = meta13054;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t13053.cljs$lang$type = true;
    cljs.core.async.impl.channels.t13053.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t13053";
    cljs.core.async.impl.channels.t13053.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async.impl.channels/t13053");
    };
    cljs.core.async.impl.channels.t13053.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t13053.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13055) {
      var self__ = this;
      var _13055__$1 = this;
      return self__.meta13054;
    };
    cljs.core.async.impl.channels.t13053.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13055, meta13054__$1) {
      var self__ = this;
      var _13055__$1 = this;
      return new cljs.core.async.impl.channels.t13053(self__.val, self__.box, meta13054__$1);
    };
    cljs.core.async.impl.channels.__GT_t13053 = function __GT_t13053(val__$1, box__$1, meta13054) {
      return new cljs.core.async.impl.channels.t13053(val__$1, box__$1, meta13054);
    };
  }
  return new cljs.core.async.impl.channels.t13053(val, box, null);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__3973__auto__, writer__3974__auto__, opts__3975__auto__) {
  return cljs.core._write.call(null, writer__3974__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    while (true) {
      var taker_13056 = self__.takes.pop();
      if (taker_13056 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_13056)) {
          var take_cb_13057 = cljs.core.async.impl.protocols.commit.call(null, taker_13056);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_13057, taker_13056) {
            return function() {
              return take_cb_13057.call(null, null);
            };
          }(take_cb_13057, taker_13056));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      return cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
    } else {
      while (true) {
        var putter = self__.puts.pop();
        if (!(putter == null)) {
          var put_handler = putter.handler;
          var val = putter.val;
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler)) {
            var put_cb = cljs.core.async.impl.protocols.commit.call(null, put_handler);
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, put_cb);
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            continue;
          }
        } else {
          if (self__.closed) {
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            return cljs.core.async.impl.channels.box.call(null, null);
          } else {
            if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
              self__.dirty_takes = 0;
              self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
            } else {
              self__.dirty_takes = self__.dirty_takes + 1;
            }
            if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            } else {
              throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 1395928862, null), new cljs.core.Symbol(null, 
              "takes", "takes", -1530407291, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
            }
            self__.takes.unbounded_unshift(handler);
            return null;
          }
        }
        break;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "val", "val", -1640415014, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, null);
  } else {
    while (true) {
      var taker = self__.takes.pop();
      if (!(taker == null)) {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker)) {
          var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb, _, taker) {
            return function() {
              return take_cb.call(null, val);
            };
          }(take_cb, _, taker));
          return cljs.core.async.impl.channels.box.call(null, null);
        } else {
          continue;
        }
      } else {
        if (!(self__.buf == null || cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val);
          return cljs.core.async.impl.channels.box.call(null, null);
        } else {
          if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_puts = 0;
            self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
          } else {
            self__.dirty_puts = self__.dirty_puts + 1;
          }
          if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
            1395928862, null), new cljs.core.Symbol(null, "puts", "puts", -1637078787, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
          return null;
        }
      }
      break;
    }
  }
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed);
};
cljs.core.async.impl.channels.chan = function chan(buf) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, null);
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0);
  };
  var random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__13011 = level + 1;
        level = G__13011;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level);
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_13012 = 0;
    while (true) {
      if (i_13012 < arr.length) {
        arr[i_13012] = null;
        var G__13013 = i_13012 + 1;
        i_13012 = G__13013;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null);
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4090__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4090__auto__)) {
              var x_SINGLEQUOTE_ = temp__4090__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__13014 = x_SINGLEQUOTE_;
                x__$1 = G__13014;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__13015 = x__$1;
        var G__13016 = k;
        var G__13017 = level - 1;
        var G__13018 = update;
        x = G__13015;
        k = G__13016;
        level = G__13017;
        update = G__13018;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function iter(node) {
    return new cljs.core.LazySeq(null, function() {
      if (node == null) {
        return null;
      } else {
        return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter.call(null, node.forward[0]));
      }
    }, null, null);
  };
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_13019 = self__.level + 1;
      while (true) {
        if (i_13019 <= new_level + 1) {
          update[i_13019] = self__.header;
          var G__13020 = i_13019 + 1;
          i_13019 = G__13020;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_13021 = 0;
    while (true) {
      if (i_13021 <= self__.level) {
        var links_13022 = update[i_13021].forward;
        if (links_13022[i_13021] === x__$1) {
          links_13022[i_13021] = x__$1.forward[i_13021];
          var G__13023 = i_13021 + 1;
          i_13021 = G__13023;
          continue;
        } else {
          var G__13024 = i_13021 + 1;
          i_13021 = G__13024;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__13025 = x_SINGLEQUOTE_;
              x__$1 = G__13025;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__13026 = nx;
        var G__13027 = level__$1 - 1;
        x = G__13026;
        level__$1 = G__13027;
        continue;
      } else {
        var G__13028 = x;
        var G__13029 = level__$1 - 1;
        x = G__13028;
        level__$1 = G__13029;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__13030 = x_SINGLEQUOTE_;
              x__$1 = G__13030;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__13031 = nx;
        var G__13032 = level__$1 - 1;
        x = G__13031;
        level__$1 = G__13032;
        continue;
      } else {
        var G__13033 = x;
        var G__13034 = level__$1 - 1;
        x = G__13033;
        level__$1 = G__13034;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3408__auto__ = cljs.core.truth_(function() {
    var and__3396__auto__ = me;
    if (cljs.core.truth_(and__3396__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__3396__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__3408__auto__)) {
    return or__3408__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function() {
      cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
      return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
    }, msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.ioc_helpers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.t10460 !== "undefined") {
  } else {
    cljs.core.async.t10460 = function(f, fn_handler, meta10461) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta10461 = meta10461;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t10460.cljs$lang$type = true;
    cljs.core.async.t10460.cljs$lang$ctorStr = "cljs.core.async/t10460";
    cljs.core.async.t10460.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async/t10460");
    };
    cljs.core.async.t10460.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t10460.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t10460.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t10460.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10462) {
      var self__ = this;
      var _10462__$1 = this;
      return self__.meta10461;
    };
    cljs.core.async.t10460.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10462, meta10461__$1) {
      var self__ = this;
      var _10462__$1 = this;
      return new cljs.core.async.t10460(self__.f, self__.fn_handler, meta10461__$1);
    };
    cljs.core.async.__GT_t10460 = function __GT_t10460(f__$1, fn_handler__$1, meta10461) {
      return new cljs.core.async.t10460(f__$1, fn_handler__$1, meta10461);
    };
  }
  return new cljs.core.async.t10460(f, fn_handler, null);
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function unblocking_buffer_QMARK_(buff) {
  var G__10464 = buff;
  if (G__10464) {
    var bit__4052__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3408__auto__ = bit__4052__auto__;
      if (cljs.core.truth_(or__3408__auto__)) {
        return or__3408__auto__;
      } else {
        return G__10464.cljs$core$async$impl$protocols$UnblockingBuffer$;
      }
    }())) {
      return true;
    } else {
      if (!G__10464.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__10464);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__10464);
  }
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null);
  };
  var chan__1 = function(buf_or_n) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1);
  };
  chan = function(buf_or_n) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  return chan;
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  if (null) {
    return null;
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3c! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true);
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(ret)) {
      var val_10465 = cljs.core.deref.call(null, ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_10465);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function() {
          return fn1.call(null, val_10465);
        });
      }
    } else {
    }
    return null;
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_;
}();
cljs.core.async.nop = function nop() {
  return null;
};
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  if (null) {
    return null;
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3e! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    return put_BANG_.call(null, port, val, cljs.core.async.nop);
  };
  var put_BANG___3 = function(port, val, fn0) {
    return put_BANG_.call(null, port, val, fn0, true);
  };
  var put_BANG___4 = function(port, val, fn0, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn0));
    if (cljs.core.truth_(function() {
      var and__3396__auto__ = ret;
      if (cljs.core.truth_(and__3396__auto__)) {
        return cljs.core.not_EQ_.call(null, fn0, cljs.core.async.nop);
      } else {
        return and__3396__auto__;
      }
    }())) {
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn0.call(null);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, fn0);
      }
    } else {
    }
    return null;
  };
  put_BANG_ = function(port, val, fn0, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn0);
      case 4:
        return put_BANG___4.call(this, port, val, fn0, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_;
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4250__auto___10466 = n;
  var x_10467 = 0;
  while (true) {
    if (x_10467 < n__4250__auto___10466) {
      a[x_10467] = 0;
      var G__10468 = x_10467 + 1;
      x_10467 = G__10468;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__10469 = i + 1;
      i = G__10469;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t10473 !== "undefined") {
  } else {
    cljs.core.async.t10473 = function(flag, alt_flag, meta10474) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta10474 = meta10474;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t10473.cljs$lang$type = true;
    cljs.core.async.t10473.cljs$lang$ctorStr = "cljs.core.async/t10473";
    cljs.core.async.t10473.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async/t10473");
    };
    cljs.core.async.t10473.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t10473.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.deref.call(null, self__.flag);
    };
    cljs.core.async.t10473.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.reset_BANG_.call(null, self__.flag, null);
      return true;
    };
    cljs.core.async.t10473.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10475) {
      var self__ = this;
      var _10475__$1 = this;
      return self__.meta10474;
    };
    cljs.core.async.t10473.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10475, meta10474__$1) {
      var self__ = this;
      var _10475__$1 = this;
      return new cljs.core.async.t10473(self__.flag, self__.alt_flag, meta10474__$1);
    };
    cljs.core.async.__GT_t10473 = function __GT_t10473(flag__$1, alt_flag__$1, meta10474) {
      return new cljs.core.async.t10473(flag__$1, alt_flag__$1, meta10474);
    };
  }
  return new cljs.core.async.t10473(flag, alt_flag, null);
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if (typeof cljs.core.async.t10479 !== "undefined") {
  } else {
    cljs.core.async.t10479 = function(cb, flag, alt_handler, meta10480) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta10480 = meta10480;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t10479.cljs$lang$type = true;
    cljs.core.async.t10479.cljs$lang$ctorStr = "cljs.core.async/t10479";
    cljs.core.async.t10479.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async/t10479");
    };
    cljs.core.async.t10479.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t10479.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t10479.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t10479.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10481) {
      var self__ = this;
      var _10481__$1 = this;
      return self__.meta10480;
    };
    cljs.core.async.t10479.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10481, meta10480__$1) {
      var self__ = this;
      var _10481__$1 = this;
      return new cljs.core.async.t10479(self__.cb, self__.flag, self__.alt_handler, meta10480__$1);
    };
    cljs.core.async.__GT_t10479 = function __GT_t10479(cb__$1, flag__$1, alt_handler__$1, meta10480) {
      return new cljs.core.async.t10479(cb__$1, flag__$1, alt_handler__$1, meta10480);
    };
  }
  return new cljs.core.async.t10479(cb, flag, alt_handler, null);
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 4143410454)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function() {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__10482_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__10482_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__3408__auto__ = wport;
            if (cljs.core.truth_(or__3408__auto__)) {
              return or__3408__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__10483 = i + 1;
          i = G__10483;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__3408__auto__ = ret;
  if (cljs.core.truth_(or__3408__auto__)) {
    return or__3408__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
      var temp__4092__auto__ = function() {
        var and__3396__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__3396__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__3396__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4092__auto__)) {
        var got = temp__4092__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", 2558708147)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", 2558708147)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__10484) {
    var map__10486 = p__10484;
    var map__10486__$1 = cljs.core.seq_QMARK_.call(null, map__10486) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10486) : map__10486;
    var opts = map__10486__$1;
    if (null) {
      return null;
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("alts! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
    }
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__10484 = null;
    if (arguments.length > 1) {
      p__10484 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return alts_BANG___delegate.call(this, ports, p__10484);
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__10487) {
    var ports = cljs.core.first(arglist__10487);
    var p__10484 = cljs.core.rest(arglist__10487);
    return alts_BANG___delegate(ports, p__10484);
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_;
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if (typeof cljs.core.async.t10495 !== "undefined") {
  } else {
    cljs.core.async.t10495 = function(ch, f, map_LT_, meta10496) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta10496 = meta10496;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t10495.cljs$lang$type = true;
    cljs.core.async.t10495.cljs$lang$ctorStr = "cljs.core.async/t10495";
    cljs.core.async.t10495.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async/t10495");
    };
    cljs.core.async.t10495.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t10495.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0);
    };
    cljs.core.async.t10495.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t10495.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t10498 !== "undefined") {
        } else {
          cljs.core.async.t10498 = function(fn1, _, meta10496, ch, f, map_LT_, meta10499) {
            this.fn1 = fn1;
            this._ = _;
            this.meta10496 = meta10496;
            this.ch = ch;
            this.f = f;
            this.map_LT_ = map_LT_;
            this.meta10499 = meta10499;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t10498.cljs$lang$type = true;
          cljs.core.async.t10498.cljs$lang$ctorStr = "cljs.core.async/t10498";
          cljs.core.async.t10498.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
            return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async/t10498");
          };
          cljs.core.async.t10498.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t10498.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$3) {
            var self__ = this;
            var ___$4 = this;
            return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
          };
          cljs.core.async.t10498.prototype.cljs$core$async$impl$protocols$Handler$lock_id$arity$1 = function(___$3) {
            var self__ = this;
            var ___$4 = this;
            return cljs.core.async.impl.protocols.lock_id.call(null, self__.fn1);
          };
          cljs.core.async.t10498.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$3) {
            var self__ = this;
            var ___$4 = this;
            var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
            return function(f1, ___$4) {
              return function(p1__10488_SHARP_) {
                return f1.call(null, p1__10488_SHARP_ == null ? null : self__.f.call(null, p1__10488_SHARP_));
              };
            }(f1, ___$4);
          };
          cljs.core.async.t10498.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10500) {
            var self__ = this;
            var _10500__$1 = this;
            return self__.meta10499;
          };
          cljs.core.async.t10498.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10500, meta10499__$1) {
            var self__ = this;
            var _10500__$1 = this;
            return new cljs.core.async.t10498(self__.fn1, self__._, self__.meta10496, self__.ch, self__.f, self__.map_LT_, meta10499__$1);
          };
          cljs.core.async.__GT_t10498 = function __GT_t10498(fn1__$1, ___$2, meta10496__$1, ch__$2, f__$2, map_LT___$2, meta10499) {
            return new cljs.core.async.t10498(fn1__$1, ___$2, meta10496__$1, ch__$2, f__$2, map_LT___$2, meta10499);
          };
        }
        return new cljs.core.async.t10498(fn1, ___$1, self__.meta10496, self__.ch, self__.f, self__.map_LT_, null);
      }());
      if (cljs.core.truth_(function() {
        var and__3396__auto__ = ret;
        if (cljs.core.truth_(and__3396__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__3396__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t10495.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t10495.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t10495.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10497) {
      var self__ = this;
      var _10497__$1 = this;
      return self__.meta10496;
    };
    cljs.core.async.t10495.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10497, meta10496__$1) {
      var self__ = this;
      var _10497__$1 = this;
      return new cljs.core.async.t10495(self__.ch, self__.f, self__.map_LT_, meta10496__$1);
    };
    cljs.core.async.__GT_t10495 = function __GT_t10495(ch__$1, f__$1, map_LT___$1, meta10496) {
      return new cljs.core.async.t10495(ch__$1, f__$1, map_LT___$1, meta10496);
    };
  }
  return new cljs.core.async.t10495(ch, f, map_LT_, null);
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if (typeof cljs.core.async.t10504 !== "undefined") {
  } else {
    cljs.core.async.t10504 = function(ch, f, map_GT_, meta10505) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta10505 = meta10505;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t10504.cljs$lang$type = true;
    cljs.core.async.t10504.cljs$lang$ctorStr = "cljs.core.async/t10504";
    cljs.core.async.t10504.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async/t10504");
    };
    cljs.core.async.t10504.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t10504.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn0);
    };
    cljs.core.async.t10504.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t10504.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t10504.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t10504.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t10504.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10506) {
      var self__ = this;
      var _10506__$1 = this;
      return self__.meta10505;
    };
    cljs.core.async.t10504.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10506, meta10505__$1) {
      var self__ = this;
      var _10506__$1 = this;
      return new cljs.core.async.t10504(self__.ch, self__.f, self__.map_GT_, meta10505__$1);
    };
    cljs.core.async.__GT_t10504 = function __GT_t10504(ch__$1, f__$1, map_GT___$1, meta10505) {
      return new cljs.core.async.t10504(ch__$1, f__$1, map_GT___$1, meta10505);
    };
  }
  return new cljs.core.async.t10504(ch, f, map_GT_, null);
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if (typeof cljs.core.async.t10510 !== "undefined") {
  } else {
    cljs.core.async.t10510 = function(ch, p, filter_GT_, meta10511) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta10511 = meta10511;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t10510.cljs$lang$type = true;
    cljs.core.async.t10510.cljs$lang$ctorStr = "cljs.core.async/t10510";
    cljs.core.async.t10510.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async/t10510");
    };
    cljs.core.async.t10510.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t10510.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0);
      } else {
        return cljs.core.async.impl.channels.box.call(null, null);
      }
    };
    cljs.core.async.t10510.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t10510.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t10510.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t10510.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t10510.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10512) {
      var self__ = this;
      var _10512__$1 = this;
      return self__.meta10511;
    };
    cljs.core.async.t10510.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10512, meta10511__$1) {
      var self__ = this;
      var _10512__$1 = this;
      return new cljs.core.async.t10510(self__.ch, self__.p, self__.filter_GT_, meta10511__$1);
    };
    cljs.core.async.__GT_t10510 = function __GT_t10510(ch__$1, p__$1, filter_GT___$1, meta10511) {
      return new cljs.core.async.t10510(ch__$1, p__$1, filter_GT___$1, meta10511);
    };
  }
  return new cljs.core.async.t10510(ch, p, filter_GT_, null);
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null);
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6175__auto___10595 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6176__auto__ = function() {
        var switch__6160__auto__ = function(state_10574) {
          var state_val_10575 = state_10574[1];
          if (state_val_10575 === 1) {
            var state_10574__$1 = state_10574;
            var statearr_10576_10596 = state_10574__$1;
            statearr_10576_10596[2] = null;
            statearr_10576_10596[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_10575 === 2) {
              var state_10574__$1 = state_10574;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10574__$1, 4, ch);
            } else {
              if (state_val_10575 === 3) {
                var inst_10572 = state_10574[2];
                var state_10574__$1 = state_10574;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10574__$1, inst_10572);
              } else {
                if (state_val_10575 === 4) {
                  var inst_10556 = state_10574[7];
                  var inst_10556__$1 = state_10574[2];
                  var inst_10557 = inst_10556__$1 == null;
                  var state_10574__$1 = function() {
                    var statearr_10577 = state_10574;
                    statearr_10577[7] = inst_10556__$1;
                    return statearr_10577;
                  }();
                  if (cljs.core.truth_(inst_10557)) {
                    var statearr_10578_10597 = state_10574__$1;
                    statearr_10578_10597[1] = 5;
                  } else {
                    var statearr_10579_10598 = state_10574__$1;
                    statearr_10579_10598[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_10575 === 5) {
                    var inst_10559 = cljs.core.async.close_BANG_.call(null, out);
                    var state_10574__$1 = state_10574;
                    var statearr_10580_10599 = state_10574__$1;
                    statearr_10580_10599[2] = inst_10559;
                    statearr_10580_10599[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_10575 === 6) {
                      var inst_10556 = state_10574[7];
                      var inst_10561 = p.call(null, inst_10556);
                      var state_10574__$1 = state_10574;
                      if (cljs.core.truth_(inst_10561)) {
                        var statearr_10581_10600 = state_10574__$1;
                        statearr_10581_10600[1] = 8;
                      } else {
                        var statearr_10582_10601 = state_10574__$1;
                        statearr_10582_10601[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_10575 === 7) {
                        var inst_10570 = state_10574[2];
                        var state_10574__$1 = state_10574;
                        var statearr_10583_10602 = state_10574__$1;
                        statearr_10583_10602[2] = inst_10570;
                        statearr_10583_10602[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_10575 === 8) {
                          var inst_10556 = state_10574[7];
                          var state_10574__$1 = state_10574;
                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_10574__$1, 11, out, inst_10556);
                        } else {
                          if (state_val_10575 === 9) {
                            var state_10574__$1 = state_10574;
                            var statearr_10584_10603 = state_10574__$1;
                            statearr_10584_10603[2] = null;
                            statearr_10584_10603[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_10575 === 10) {
                              var inst_10567 = state_10574[2];
                              var state_10574__$1 = function() {
                                var statearr_10585 = state_10574;
                                statearr_10585[8] = inst_10567;
                                return statearr_10585;
                              }();
                              var statearr_10586_10604 = state_10574__$1;
                              statearr_10586_10604[2] = null;
                              statearr_10586_10604[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_10575 === 11) {
                                var inst_10564 = state_10574[2];
                                var state_10574__$1 = state_10574;
                                var statearr_10587_10605 = state_10574__$1;
                                statearr_10587_10605[2] = inst_10564;
                                statearr_10587_10605[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6160__auto__) {
          return function() {
            var state_machine__6161__auto__ = null;
            var state_machine__6161__auto____0 = function() {
              var statearr_10591 = [null, null, null, null, null, null, null, null, null];
              statearr_10591[0] = state_machine__6161__auto__;
              statearr_10591[1] = 1;
              return statearr_10591;
            };
            var state_machine__6161__auto____1 = function(state_10574) {
              while (true) {
                var ret_value__6162__auto__ = function() {
                  try {
                    while (true) {
                      var result__6163__auto__ = switch__6160__auto__.call(null, state_10574);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6163__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6163__auto__;
                      }
                      break;
                    }
                  } catch (e10592) {
                    if (e10592 instanceof Object) {
                      var ex__6164__auto__ = e10592;
                      var statearr_10593_10606 = state_10574;
                      statearr_10593_10606[5] = ex__6164__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10574);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e10592;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6162__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__10607 = state_10574;
                  state_10574 = G__10607;
                  continue;
                } else {
                  return ret_value__6162__auto__;
                }
                break;
              }
            };
            state_machine__6161__auto__ = function(state_10574) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6161__auto____0.call(this);
                case 1:
                  return state_machine__6161__auto____1.call(this, state_10574);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6161__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6161__auto____0;
            state_machine__6161__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6161__auto____1;
            return state_machine__6161__auto__;
          }();
        }(switch__6160__auto__);
      }();
      var state__6177__auto__ = function() {
        var statearr_10594 = f__6176__auto__.call(null);
        statearr_10594[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6175__auto___10595;
        return statearr_10594;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6177__auto__);
    });
    return out;
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null);
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__6175__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__6176__auto__ = function() {
      var switch__6160__auto__ = function(state_10759) {
        var state_val_10760 = state_10759[1];
        if (state_val_10760 === 1) {
          var state_10759__$1 = state_10759;
          var statearr_10761_10798 = state_10759__$1;
          statearr_10761_10798[2] = null;
          statearr_10761_10798[1] = 2;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_10760 === 2) {
            var state_10759__$1 = state_10759;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10759__$1, 4, in$);
          } else {
            if (state_val_10760 === 3) {
              var inst_10757 = state_10759[2];
              var state_10759__$1 = state_10759;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10759__$1, inst_10757);
            } else {
              if (state_val_10760 === 4) {
                var inst_10705 = state_10759[7];
                var inst_10705__$1 = state_10759[2];
                var inst_10706 = inst_10705__$1 == null;
                var state_10759__$1 = function() {
                  var statearr_10762 = state_10759;
                  statearr_10762[7] = inst_10705__$1;
                  return statearr_10762;
                }();
                if (cljs.core.truth_(inst_10706)) {
                  var statearr_10763_10799 = state_10759__$1;
                  statearr_10763_10799[1] = 5;
                } else {
                  var statearr_10764_10800 = state_10759__$1;
                  statearr_10764_10800[1] = 6;
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_10760 === 5) {
                  var inst_10708 = cljs.core.async.close_BANG_.call(null, out);
                  var state_10759__$1 = state_10759;
                  var statearr_10765_10801 = state_10759__$1;
                  statearr_10765_10801[2] = inst_10708;
                  statearr_10765_10801[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_10760 === 6) {
                    var inst_10705 = state_10759[7];
                    var inst_10710 = f.call(null, inst_10705);
                    var inst_10715 = cljs.core.seq.call(null, inst_10710);
                    var inst_10716 = inst_10715;
                    var inst_10717 = null;
                    var inst_10718 = 0;
                    var inst_10719 = 0;
                    var state_10759__$1 = function() {
                      var statearr_10766 = state_10759;
                      statearr_10766[8] = inst_10718;
                      statearr_10766[9] = inst_10719;
                      statearr_10766[10] = inst_10716;
                      statearr_10766[11] = inst_10717;
                      return statearr_10766;
                    }();
                    var statearr_10767_10802 = state_10759__$1;
                    statearr_10767_10802[2] = null;
                    statearr_10767_10802[1] = 8;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_10760 === 7) {
                      var inst_10755 = state_10759[2];
                      var state_10759__$1 = state_10759;
                      var statearr_10768_10803 = state_10759__$1;
                      statearr_10768_10803[2] = inst_10755;
                      statearr_10768_10803[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_10760 === 8) {
                        var inst_10718 = state_10759[8];
                        var inst_10719 = state_10759[9];
                        var inst_10721 = inst_10719 < inst_10718;
                        var inst_10722 = inst_10721;
                        var state_10759__$1 = state_10759;
                        if (cljs.core.truth_(inst_10722)) {
                          var statearr_10769_10804 = state_10759__$1;
                          statearr_10769_10804[1] = 10;
                        } else {
                          var statearr_10770_10805 = state_10759__$1;
                          statearr_10770_10805[1] = 11;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_10760 === 9) {
                          var inst_10752 = state_10759[2];
                          var state_10759__$1 = function() {
                            var statearr_10771 = state_10759;
                            statearr_10771[12] = inst_10752;
                            return statearr_10771;
                          }();
                          var statearr_10772_10806 = state_10759__$1;
                          statearr_10772_10806[2] = null;
                          statearr_10772_10806[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_10760 === 10) {
                            var inst_10719 = state_10759[9];
                            var inst_10717 = state_10759[11];
                            var inst_10724 = cljs.core._nth.call(null, inst_10717, inst_10719);
                            var state_10759__$1 = state_10759;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_10759__$1, 13, out, inst_10724);
                          } else {
                            if (state_val_10760 === 11) {
                              var inst_10716 = state_10759[10];
                              var inst_10730 = state_10759[13];
                              var inst_10730__$1 = cljs.core.seq.call(null, inst_10716);
                              var state_10759__$1 = function() {
                                var statearr_10776 = state_10759;
                                statearr_10776[13] = inst_10730__$1;
                                return statearr_10776;
                              }();
                              if (inst_10730__$1) {
                                var statearr_10777_10807 = state_10759__$1;
                                statearr_10777_10807[1] = 14;
                              } else {
                                var statearr_10778_10808 = state_10759__$1;
                                statearr_10778_10808[1] = 15;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_10760 === 12) {
                                var inst_10750 = state_10759[2];
                                var state_10759__$1 = state_10759;
                                var statearr_10779_10809 = state_10759__$1;
                                statearr_10779_10809[2] = inst_10750;
                                statearr_10779_10809[1] = 9;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_10760 === 13) {
                                  var inst_10718 = state_10759[8];
                                  var inst_10719 = state_10759[9];
                                  var inst_10716 = state_10759[10];
                                  var inst_10717 = state_10759[11];
                                  var inst_10726 = state_10759[2];
                                  var inst_10727 = inst_10719 + 1;
                                  var tmp10773 = inst_10718;
                                  var tmp10774 = inst_10716;
                                  var tmp10775 = inst_10717;
                                  var inst_10716__$1 = tmp10774;
                                  var inst_10717__$1 = tmp10775;
                                  var inst_10718__$1 = tmp10773;
                                  var inst_10719__$1 = inst_10727;
                                  var state_10759__$1 = function() {
                                    var statearr_10780 = state_10759;
                                    statearr_10780[8] = inst_10718__$1;
                                    statearr_10780[9] = inst_10719__$1;
                                    statearr_10780[10] = inst_10716__$1;
                                    statearr_10780[11] = inst_10717__$1;
                                    statearr_10780[14] = inst_10726;
                                    return statearr_10780;
                                  }();
                                  var statearr_10781_10810 = state_10759__$1;
                                  statearr_10781_10810[2] = null;
                                  statearr_10781_10810[1] = 8;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_10760 === 14) {
                                    var inst_10730 = state_10759[13];
                                    var inst_10732 = cljs.core.chunked_seq_QMARK_.call(null, inst_10730);
                                    var state_10759__$1 = state_10759;
                                    if (inst_10732) {
                                      var statearr_10782_10811 = state_10759__$1;
                                      statearr_10782_10811[1] = 17;
                                    } else {
                                      var statearr_10783_10812 = state_10759__$1;
                                      statearr_10783_10812[1] = 18;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_10760 === 15) {
                                      var state_10759__$1 = state_10759;
                                      var statearr_10784_10813 = state_10759__$1;
                                      statearr_10784_10813[2] = null;
                                      statearr_10784_10813[1] = 16;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_10760 === 16) {
                                        var inst_10748 = state_10759[2];
                                        var state_10759__$1 = state_10759;
                                        var statearr_10785_10814 = state_10759__$1;
                                        statearr_10785_10814[2] = inst_10748;
                                        statearr_10785_10814[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_10760 === 17) {
                                          var inst_10730 = state_10759[13];
                                          var inst_10734 = cljs.core.chunk_first.call(null, inst_10730);
                                          var inst_10735 = cljs.core.chunk_rest.call(null, inst_10730);
                                          var inst_10736 = cljs.core.count.call(null, inst_10734);
                                          var inst_10716 = inst_10735;
                                          var inst_10717 = inst_10734;
                                          var inst_10718 = inst_10736;
                                          var inst_10719 = 0;
                                          var state_10759__$1 = function() {
                                            var statearr_10786 = state_10759;
                                            statearr_10786[8] = inst_10718;
                                            statearr_10786[9] = inst_10719;
                                            statearr_10786[10] = inst_10716;
                                            statearr_10786[11] = inst_10717;
                                            return statearr_10786;
                                          }();
                                          var statearr_10787_10815 = state_10759__$1;
                                          statearr_10787_10815[2] = null;
                                          statearr_10787_10815[1] = 8;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_10760 === 18) {
                                            var inst_10730 = state_10759[13];
                                            var inst_10739 = cljs.core.first.call(null, inst_10730);
                                            var state_10759__$1 = state_10759;
                                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_10759__$1, 20, out, inst_10739);
                                          } else {
                                            if (state_val_10760 === 19) {
                                              var inst_10745 = state_10759[2];
                                              var state_10759__$1 = state_10759;
                                              var statearr_10788_10816 = state_10759__$1;
                                              statearr_10788_10816[2] = inst_10745;
                                              statearr_10788_10816[1] = 16;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_10760 === 20) {
                                                var inst_10730 = state_10759[13];
                                                var inst_10741 = state_10759[2];
                                                var inst_10742 = cljs.core.next.call(null, inst_10730);
                                                var inst_10716 = inst_10742;
                                                var inst_10717 = null;
                                                var inst_10718 = 0;
                                                var inst_10719 = 0;
                                                var state_10759__$1 = function() {
                                                  var statearr_10789 = state_10759;
                                                  statearr_10789[8] = inst_10718;
                                                  statearr_10789[15] = inst_10741;
                                                  statearr_10789[9] = inst_10719;
                                                  statearr_10789[10] = inst_10716;
                                                  statearr_10789[11] = inst_10717;
                                                  return statearr_10789;
                                                }();
                                                var statearr_10790_10817 = state_10759__$1;
                                                statearr_10790_10817[2] = null;
                                                statearr_10790_10817[1] = 8;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                return null;
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__6160__auto__) {
        return function() {
          var state_machine__6161__auto__ = null;
          var state_machine__6161__auto____0 = function() {
            var statearr_10794 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            statearr_10794[0] = state_machine__6161__auto__;
            statearr_10794[1] = 1;
            return statearr_10794;
          };
          var state_machine__6161__auto____1 = function(state_10759) {
            while (true) {
              var ret_value__6162__auto__ = function() {
                try {
                  while (true) {
                    var result__6163__auto__ = switch__6160__auto__.call(null, state_10759);
                    if (cljs.core.keyword_identical_QMARK_.call(null, result__6163__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__6163__auto__;
                    }
                    break;
                  }
                } catch (e10795) {
                  if (e10795 instanceof Object) {
                    var ex__6164__auto__ = e10795;
                    var statearr_10796_10818 = state_10759;
                    statearr_10796_10818[5] = ex__6164__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10759);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e10795;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6162__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__10819 = state_10759;
                state_10759 = G__10819;
                continue;
              } else {
                return ret_value__6162__auto__;
              }
              break;
            }
          };
          state_machine__6161__auto__ = function(state_10759) {
            switch(arguments.length) {
              case 0:
                return state_machine__6161__auto____0.call(this);
              case 1:
                return state_machine__6161__auto____1.call(this, state_10759);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__6161__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6161__auto____0;
          state_machine__6161__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6161__auto____1;
          return state_machine__6161__auto__;
        }();
      }(switch__6160__auto__);
    }();
    var state__6177__auto__ = function() {
      var statearr_10797 = f__6176__auto__.call(null);
      statearr_10797[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6175__auto__;
      return statearr_10797;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6177__auto__);
  });
  return c__6175__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null);
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out;
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null);
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$;
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_;
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true);
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__6175__auto___10900 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6176__auto__ = function() {
        var switch__6160__auto__ = function(state_10879) {
          var state_val_10880 = state_10879[1];
          if (state_val_10880 === 1) {
            var state_10879__$1 = state_10879;
            var statearr_10881_10901 = state_10879__$1;
            statearr_10881_10901[2] = null;
            statearr_10881_10901[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_10880 === 2) {
              var state_10879__$1 = state_10879;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10879__$1, 4, from);
            } else {
              if (state_val_10880 === 3) {
                var inst_10877 = state_10879[2];
                var state_10879__$1 = state_10879;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10879__$1, inst_10877);
              } else {
                if (state_val_10880 === 4) {
                  var inst_10862 = state_10879[7];
                  var inst_10862__$1 = state_10879[2];
                  var inst_10863 = inst_10862__$1 == null;
                  var state_10879__$1 = function() {
                    var statearr_10882 = state_10879;
                    statearr_10882[7] = inst_10862__$1;
                    return statearr_10882;
                  }();
                  if (cljs.core.truth_(inst_10863)) {
                    var statearr_10883_10902 = state_10879__$1;
                    statearr_10883_10902[1] = 5;
                  } else {
                    var statearr_10884_10903 = state_10879__$1;
                    statearr_10884_10903[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_10880 === 5) {
                    var state_10879__$1 = state_10879;
                    if (cljs.core.truth_(close_QMARK_)) {
                      var statearr_10885_10904 = state_10879__$1;
                      statearr_10885_10904[1] = 8;
                    } else {
                      var statearr_10886_10905 = state_10879__$1;
                      statearr_10886_10905[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_10880 === 6) {
                      var inst_10862 = state_10879[7];
                      var state_10879__$1 = state_10879;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_10879__$1, 11, to, inst_10862);
                    } else {
                      if (state_val_10880 === 7) {
                        var inst_10875 = state_10879[2];
                        var state_10879__$1 = state_10879;
                        var statearr_10887_10906 = state_10879__$1;
                        statearr_10887_10906[2] = inst_10875;
                        statearr_10887_10906[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_10880 === 8) {
                          var inst_10866 = cljs.core.async.close_BANG_.call(null, to);
                          var state_10879__$1 = state_10879;
                          var statearr_10888_10907 = state_10879__$1;
                          statearr_10888_10907[2] = inst_10866;
                          statearr_10888_10907[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_10880 === 9) {
                            var state_10879__$1 = state_10879;
                            var statearr_10889_10908 = state_10879__$1;
                            statearr_10889_10908[2] = null;
                            statearr_10889_10908[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_10880 === 10) {
                              var inst_10869 = state_10879[2];
                              var state_10879__$1 = state_10879;
                              var statearr_10890_10909 = state_10879__$1;
                              statearr_10890_10909[2] = inst_10869;
                              statearr_10890_10909[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_10880 === 11) {
                                var inst_10872 = state_10879[2];
                                var state_10879__$1 = function() {
                                  var statearr_10891 = state_10879;
                                  statearr_10891[8] = inst_10872;
                                  return statearr_10891;
                                }();
                                var statearr_10892_10910 = state_10879__$1;
                                statearr_10892_10910[2] = null;
                                statearr_10892_10910[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6160__auto__) {
          return function() {
            var state_machine__6161__auto__ = null;
            var state_machine__6161__auto____0 = function() {
              var statearr_10896 = [null, null, null, null, null, null, null, null, null];
              statearr_10896[0] = state_machine__6161__auto__;
              statearr_10896[1] = 1;
              return statearr_10896;
            };
            var state_machine__6161__auto____1 = function(state_10879) {
              while (true) {
                var ret_value__6162__auto__ = function() {
                  try {
                    while (true) {
                      var result__6163__auto__ = switch__6160__auto__.call(null, state_10879);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6163__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6163__auto__;
                      }
                      break;
                    }
                  } catch (e10897) {
                    if (e10897 instanceof Object) {
                      var ex__6164__auto__ = e10897;
                      var statearr_10898_10911 = state_10879;
                      statearr_10898_10911[5] = ex__6164__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10879);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e10897;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6162__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__10912 = state_10879;
                  state_10879 = G__10912;
                  continue;
                } else {
                  return ret_value__6162__auto__;
                }
                break;
              }
            };
            state_machine__6161__auto__ = function(state_10879) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6161__auto____0.call(this);
                case 1:
                  return state_machine__6161__auto____1.call(this, state_10879);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6161__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6161__auto____0;
            state_machine__6161__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6161__auto____1;
            return state_machine__6161__auto__;
          }();
        }(switch__6160__auto__);
      }();
      var state__6177__auto__ = function() {
        var statearr_10899 = f__6176__auto__.call(null);
        statearr_10899[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6175__auto___10900;
        return statearr_10899;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6177__auto__);
    });
    return to;
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe;
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null);
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__6175__auto___10999 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6176__auto__ = function() {
        var switch__6160__auto__ = function(state_10977) {
          var state_val_10978 = state_10977[1];
          if (state_val_10978 === 1) {
            var state_10977__$1 = state_10977;
            var statearr_10979_11000 = state_10977__$1;
            statearr_10979_11000[2] = null;
            statearr_10979_11000[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_10978 === 2) {
              var state_10977__$1 = state_10977;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10977__$1, 4, ch);
            } else {
              if (state_val_10978 === 3) {
                var inst_10975 = state_10977[2];
                var state_10977__$1 = state_10977;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10977__$1, inst_10975);
              } else {
                if (state_val_10978 === 4) {
                  var inst_10958 = state_10977[7];
                  var inst_10958__$1 = state_10977[2];
                  var inst_10959 = inst_10958__$1 == null;
                  var state_10977__$1 = function() {
                    var statearr_10980 = state_10977;
                    statearr_10980[7] = inst_10958__$1;
                    return statearr_10980;
                  }();
                  if (cljs.core.truth_(inst_10959)) {
                    var statearr_10981_11001 = state_10977__$1;
                    statearr_10981_11001[1] = 5;
                  } else {
                    var statearr_10982_11002 = state_10977__$1;
                    statearr_10982_11002[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_10978 === 5) {
                    var inst_10961 = cljs.core.async.close_BANG_.call(null, tc);
                    var inst_10962 = cljs.core.async.close_BANG_.call(null, fc);
                    var state_10977__$1 = function() {
                      var statearr_10983 = state_10977;
                      statearr_10983[8] = inst_10961;
                      return statearr_10983;
                    }();
                    var statearr_10984_11003 = state_10977__$1;
                    statearr_10984_11003[2] = inst_10962;
                    statearr_10984_11003[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_10978 === 6) {
                      var inst_10958 = state_10977[7];
                      var inst_10964 = p.call(null, inst_10958);
                      var state_10977__$1 = state_10977;
                      if (cljs.core.truth_(inst_10964)) {
                        var statearr_10985_11004 = state_10977__$1;
                        statearr_10985_11004[1] = 9;
                      } else {
                        var statearr_10986_11005 = state_10977__$1;
                        statearr_10986_11005[1] = 10;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_10978 === 7) {
                        var inst_10973 = state_10977[2];
                        var state_10977__$1 = state_10977;
                        var statearr_10987_11006 = state_10977__$1;
                        statearr_10987_11006[2] = inst_10973;
                        statearr_10987_11006[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_10978 === 8) {
                          var inst_10970 = state_10977[2];
                          var state_10977__$1 = function() {
                            var statearr_10988 = state_10977;
                            statearr_10988[9] = inst_10970;
                            return statearr_10988;
                          }();
                          var statearr_10989_11007 = state_10977__$1;
                          statearr_10989_11007[2] = null;
                          statearr_10989_11007[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_10978 === 9) {
                            var state_10977__$1 = state_10977;
                            var statearr_10990_11008 = state_10977__$1;
                            statearr_10990_11008[2] = tc;
                            statearr_10990_11008[1] = 11;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_10978 === 10) {
                              var state_10977__$1 = state_10977;
                              var statearr_10991_11009 = state_10977__$1;
                              statearr_10991_11009[2] = fc;
                              statearr_10991_11009[1] = 11;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_10978 === 11) {
                                var inst_10958 = state_10977[7];
                                var inst_10968 = state_10977[2];
                                var state_10977__$1 = state_10977;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_10977__$1, 8, inst_10968, inst_10958);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6160__auto__) {
          return function() {
            var state_machine__6161__auto__ = null;
            var state_machine__6161__auto____0 = function() {
              var statearr_10995 = [null, null, null, null, null, null, null, null, null, null];
              statearr_10995[0] = state_machine__6161__auto__;
              statearr_10995[1] = 1;
              return statearr_10995;
            };
            var state_machine__6161__auto____1 = function(state_10977) {
              while (true) {
                var ret_value__6162__auto__ = function() {
                  try {
                    while (true) {
                      var result__6163__auto__ = switch__6160__auto__.call(null, state_10977);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6163__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6163__auto__;
                      }
                      break;
                    }
                  } catch (e10996) {
                    if (e10996 instanceof Object) {
                      var ex__6164__auto__ = e10996;
                      var statearr_10997_11010 = state_10977;
                      statearr_10997_11010[5] = ex__6164__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10977);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e10996;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6162__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__11011 = state_10977;
                  state_10977 = G__11011;
                  continue;
                } else {
                  return ret_value__6162__auto__;
                }
                break;
              }
            };
            state_machine__6161__auto__ = function(state_10977) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6161__auto____0.call(this);
                case 1:
                  return state_machine__6161__auto____1.call(this, state_10977);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6161__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6161__auto____0;
            state_machine__6161__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6161__auto____1;
            return state_machine__6161__auto__;
          }();
        }(switch__6160__auto__);
      }();
      var state__6177__auto__ = function() {
        var statearr_10998 = f__6176__auto__.call(null);
        statearr_10998[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6175__auto___10999;
        return statearr_10998;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6177__auto__);
    });
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split;
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__6175__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__6176__auto__ = function() {
      var switch__6160__auto__ = function(state_11058) {
        var state_val_11059 = state_11058[1];
        if (state_val_11059 === 7) {
          var inst_11054 = state_11058[2];
          var state_11058__$1 = state_11058;
          var statearr_11060_11076 = state_11058__$1;
          statearr_11060_11076[2] = inst_11054;
          statearr_11060_11076[1] = 3;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_11059 === 6) {
            var inst_11047 = state_11058[7];
            var inst_11044 = state_11058[8];
            var inst_11051 = f.call(null, inst_11044, inst_11047);
            var inst_11044__$1 = inst_11051;
            var state_11058__$1 = function() {
              var statearr_11061 = state_11058;
              statearr_11061[8] = inst_11044__$1;
              return statearr_11061;
            }();
            var statearr_11062_11077 = state_11058__$1;
            statearr_11062_11077[2] = null;
            statearr_11062_11077[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_11059 === 5) {
              var inst_11044 = state_11058[8];
              var state_11058__$1 = state_11058;
              var statearr_11063_11078 = state_11058__$1;
              statearr_11063_11078[2] = inst_11044;
              statearr_11063_11078[1] = 7;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_11059 === 4) {
                var inst_11047 = state_11058[7];
                var inst_11047__$1 = state_11058[2];
                var inst_11048 = inst_11047__$1 == null;
                var state_11058__$1 = function() {
                  var statearr_11064 = state_11058;
                  statearr_11064[7] = inst_11047__$1;
                  return statearr_11064;
                }();
                if (cljs.core.truth_(inst_11048)) {
                  var statearr_11065_11079 = state_11058__$1;
                  statearr_11065_11079[1] = 5;
                } else {
                  var statearr_11066_11080 = state_11058__$1;
                  statearr_11066_11080[1] = 6;
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_11059 === 3) {
                  var inst_11056 = state_11058[2];
                  var state_11058__$1 = state_11058;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11058__$1, inst_11056);
                } else {
                  if (state_val_11059 === 2) {
                    var state_11058__$1 = state_11058;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11058__$1, 4, ch);
                  } else {
                    if (state_val_11059 === 1) {
                      var inst_11044 = init;
                      var state_11058__$1 = function() {
                        var statearr_11067 = state_11058;
                        statearr_11067[8] = inst_11044;
                        return statearr_11067;
                      }();
                      var statearr_11068_11081 = state_11058__$1;
                      statearr_11068_11081[2] = null;
                      statearr_11068_11081[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      return null;
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__6160__auto__) {
        return function() {
          var state_machine__6161__auto__ = null;
          var state_machine__6161__auto____0 = function() {
            var statearr_11072 = [null, null, null, null, null, null, null, null, null];
            statearr_11072[0] = state_machine__6161__auto__;
            statearr_11072[1] = 1;
            return statearr_11072;
          };
          var state_machine__6161__auto____1 = function(state_11058) {
            while (true) {
              var ret_value__6162__auto__ = function() {
                try {
                  while (true) {
                    var result__6163__auto__ = switch__6160__auto__.call(null, state_11058);
                    if (cljs.core.keyword_identical_QMARK_.call(null, result__6163__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__6163__auto__;
                    }
                    break;
                  }
                } catch (e11073) {
                  if (e11073 instanceof Object) {
                    var ex__6164__auto__ = e11073;
                    var statearr_11074_11082 = state_11058;
                    statearr_11074_11082[5] = ex__6164__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11058);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e11073;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6162__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__11083 = state_11058;
                state_11058 = G__11083;
                continue;
              } else {
                return ret_value__6162__auto__;
              }
              break;
            }
          };
          state_machine__6161__auto__ = function(state_11058) {
            switch(arguments.length) {
              case 0:
                return state_machine__6161__auto____0.call(this);
              case 1:
                return state_machine__6161__auto____1.call(this, state_11058);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__6161__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6161__auto____0;
          state_machine__6161__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6161__auto____1;
          return state_machine__6161__auto__;
        }();
      }(switch__6160__auto__);
    }();
    var state__6177__auto__ = function() {
      var statearr_11075 = f__6176__auto__.call(null);
      statearr_11075[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6175__auto__;
      return statearr_11075;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6177__auto__);
  });
  return c__6175__auto__;
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true);
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__6175__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6176__auto__ = function() {
        var switch__6160__auto__ = function(state_11145) {
          var state_val_11146 = state_11145[1];
          if (state_val_11146 === 1) {
            var inst_11125 = cljs.core.seq.call(null, coll);
            var inst_11126 = inst_11125;
            var state_11145__$1 = function() {
              var statearr_11147 = state_11145;
              statearr_11147[7] = inst_11126;
              return statearr_11147;
            }();
            var statearr_11148_11166 = state_11145__$1;
            statearr_11148_11166[2] = null;
            statearr_11148_11166[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_11146 === 2) {
              var inst_11126 = state_11145[7];
              var state_11145__$1 = state_11145;
              if (cljs.core.truth_(inst_11126)) {
                var statearr_11149_11167 = state_11145__$1;
                statearr_11149_11167[1] = 4;
              } else {
                var statearr_11150_11168 = state_11145__$1;
                statearr_11150_11168[1] = 5;
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_11146 === 3) {
                var inst_11143 = state_11145[2];
                var state_11145__$1 = state_11145;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11145__$1, inst_11143);
              } else {
                if (state_val_11146 === 4) {
                  var inst_11126 = state_11145[7];
                  var inst_11129 = cljs.core.first.call(null, inst_11126);
                  var state_11145__$1 = state_11145;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11145__$1, 7, ch, inst_11129);
                } else {
                  if (state_val_11146 === 5) {
                    var state_11145__$1 = state_11145;
                    if (cljs.core.truth_(close_QMARK_)) {
                      var statearr_11151_11169 = state_11145__$1;
                      statearr_11151_11169[1] = 8;
                    } else {
                      var statearr_11152_11170 = state_11145__$1;
                      statearr_11152_11170[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_11146 === 6) {
                      var inst_11141 = state_11145[2];
                      var state_11145__$1 = state_11145;
                      var statearr_11153_11171 = state_11145__$1;
                      statearr_11153_11171[2] = inst_11141;
                      statearr_11153_11171[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_11146 === 7) {
                        var inst_11126 = state_11145[7];
                        var inst_11131 = state_11145[2];
                        var inst_11132 = cljs.core.next.call(null, inst_11126);
                        var inst_11126__$1 = inst_11132;
                        var state_11145__$1 = function() {
                          var statearr_11154 = state_11145;
                          statearr_11154[8] = inst_11131;
                          statearr_11154[7] = inst_11126__$1;
                          return statearr_11154;
                        }();
                        var statearr_11155_11172 = state_11145__$1;
                        statearr_11155_11172[2] = null;
                        statearr_11155_11172[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_11146 === 8) {
                          var inst_11136 = cljs.core.async.close_BANG_.call(null, ch);
                          var state_11145__$1 = state_11145;
                          var statearr_11156_11173 = state_11145__$1;
                          statearr_11156_11173[2] = inst_11136;
                          statearr_11156_11173[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_11146 === 9) {
                            var state_11145__$1 = state_11145;
                            var statearr_11157_11174 = state_11145__$1;
                            statearr_11157_11174[2] = null;
                            statearr_11157_11174[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_11146 === 10) {
                              var inst_11139 = state_11145[2];
                              var state_11145__$1 = state_11145;
                              var statearr_11158_11175 = state_11145__$1;
                              statearr_11158_11175[2] = inst_11139;
                              statearr_11158_11175[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6160__auto__) {
          return function() {
            var state_machine__6161__auto__ = null;
            var state_machine__6161__auto____0 = function() {
              var statearr_11162 = [null, null, null, null, null, null, null, null, null];
              statearr_11162[0] = state_machine__6161__auto__;
              statearr_11162[1] = 1;
              return statearr_11162;
            };
            var state_machine__6161__auto____1 = function(state_11145) {
              while (true) {
                var ret_value__6162__auto__ = function() {
                  try {
                    while (true) {
                      var result__6163__auto__ = switch__6160__auto__.call(null, state_11145);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6163__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6163__auto__;
                      }
                      break;
                    }
                  } catch (e11163) {
                    if (e11163 instanceof Object) {
                      var ex__6164__auto__ = e11163;
                      var statearr_11164_11176 = state_11145;
                      statearr_11164_11176[5] = ex__6164__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11145);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e11163;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6162__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__11177 = state_11145;
                  state_11145 = G__11177;
                  continue;
                } else {
                  return ret_value__6162__auto__;
                }
                break;
              }
            };
            state_machine__6161__auto__ = function(state_11145) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6161__auto____0.call(this);
                case 1:
                  return state_machine__6161__auto____1.call(this, state_11145);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6161__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6161__auto____0;
            state_machine__6161__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6161__auto____1;
            return state_machine__6161__auto__;
          }();
        }(switch__6160__auto__);
      }();
      var state__6177__auto__ = function() {
        var statearr_11165 = f__6176__auto__.call(null);
        statearr_11165[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6175__auto__;
        return statearr_11165;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6177__auto__);
    });
    return c__6175__auto__;
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan;
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj11179 = {};
  return obj11179;
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if (function() {
    var and__3396__auto__ = _;
    if (and__3396__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4029__auto__ = _ == null ? null : _;
    return function() {
      var or__3408__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj11181 = {};
  return obj11181;
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__3396__auto__ = m;
    if (and__3396__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4029__auto__ = m == null ? null : m;
    return function() {
      var or__3408__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if (function() {
    var and__3396__auto__ = m;
    if (and__3396__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4029__auto__ = m == null ? null : m;
    return function() {
      var or__3408__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if (function() {
    var and__3396__auto__ = m;
    if (and__3396__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4029__auto__ = m == null ? null : m;
    return function() {
      var or__3408__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t11405 !== "undefined") {
    } else {
      cljs.core.async.t11405 = function(cs, ch, mult, meta11406) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta11406 = meta11406;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t11405.cljs$lang$type = true;
      cljs.core.async.t11405.cljs$lang$ctorStr = "cljs.core.async/t11405";
      cljs.core.async.t11405.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
          return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async/t11405");
        };
      }(cs);
      cljs.core.async.t11405.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t11405.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$2, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$2, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t11405.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$2) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$2);
          return null;
        };
      }(cs);
      cljs.core.async.t11405.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t11405.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t11405.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t11405.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_11407) {
          var self__ = this;
          var _11407__$1 = this;
          return self__.meta11406;
        };
      }(cs);
      cljs.core.async.t11405.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_11407, meta11406__$1) {
          var self__ = this;
          var _11407__$1 = this;
          return new cljs.core.async.t11405(self__.cs, self__.ch, self__.mult, meta11406__$1);
        };
      }(cs);
      cljs.core.async.__GT_t11405 = function(cs) {
        return function __GT_t11405(cs__$1, ch__$1, mult__$1, meta11406) {
          return new cljs.core.async.t11405(cs__$1, ch__$1, mult__$1, meta11406);
        };
      }(cs);
    }
    return new cljs.core.async.t11405(cs, ch, mult, null);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function() {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__6175__auto___11628 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__6176__auto__ = function() {
      var switch__6160__auto__ = function(state_11542) {
        var state_val_11543 = state_11542[1];
        if (state_val_11543 === 32) {
          var inst_11410 = state_11542[7];
          var inst_11486 = state_11542[8];
          var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_11542, 31, Object, null, 30);
          var inst_11493 = cljs.core.async.put_BANG_.call(null, inst_11486, inst_11410, done);
          var state_11542__$1 = state_11542;
          var statearr_11544_11629 = state_11542__$1;
          statearr_11544_11629[2] = inst_11493;
          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11542__$1);
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_11543 === 1) {
            var state_11542__$1 = state_11542;
            var statearr_11545_11630 = state_11542__$1;
            statearr_11545_11630[2] = null;
            statearr_11545_11630[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_11543 === 33) {
              var inst_11499 = state_11542[9];
              var inst_11501 = cljs.core.chunked_seq_QMARK_.call(null, inst_11499);
              var state_11542__$1 = state_11542;
              if (inst_11501) {
                var statearr_11546_11631 = state_11542__$1;
                statearr_11546_11631[1] = 36;
              } else {
                var statearr_11547_11632 = state_11542__$1;
                statearr_11547_11632[1] = 37;
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_11543 === 2) {
                var state_11542__$1 = state_11542;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11542__$1, 4, ch);
              } else {
                if (state_val_11543 === 34) {
                  var state_11542__$1 = state_11542;
                  var statearr_11548_11633 = state_11542__$1;
                  statearr_11548_11633[2] = null;
                  statearr_11548_11633[1] = 35;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_11543 === 3) {
                    var inst_11540 = state_11542[2];
                    var state_11542__$1 = state_11542;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11542__$1, inst_11540);
                  } else {
                    if (state_val_11543 === 35) {
                      var inst_11524 = state_11542[2];
                      var state_11542__$1 = state_11542;
                      var statearr_11549_11634 = state_11542__$1;
                      statearr_11549_11634[2] = inst_11524;
                      statearr_11549_11634[1] = 29;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_11543 === 4) {
                        var inst_11410 = state_11542[7];
                        var inst_11410__$1 = state_11542[2];
                        var inst_11411 = inst_11410__$1 == null;
                        var state_11542__$1 = function() {
                          var statearr_11550 = state_11542;
                          statearr_11550[7] = inst_11410__$1;
                          return statearr_11550;
                        }();
                        if (cljs.core.truth_(inst_11411)) {
                          var statearr_11551_11635 = state_11542__$1;
                          statearr_11551_11635[1] = 5;
                        } else {
                          var statearr_11552_11636 = state_11542__$1;
                          statearr_11552_11636[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_11543 === 36) {
                          var inst_11499 = state_11542[9];
                          var inst_11503 = cljs.core.chunk_first.call(null, inst_11499);
                          var inst_11504 = cljs.core.chunk_rest.call(null, inst_11499);
                          var inst_11505 = cljs.core.count.call(null, inst_11503);
                          var inst_11478 = inst_11504;
                          var inst_11479 = inst_11503;
                          var inst_11480 = inst_11505;
                          var inst_11481 = 0;
                          var state_11542__$1 = function() {
                            var statearr_11553 = state_11542;
                            statearr_11553[10] = inst_11478;
                            statearr_11553[11] = inst_11479;
                            statearr_11553[12] = inst_11481;
                            statearr_11553[13] = inst_11480;
                            return statearr_11553;
                          }();
                          var statearr_11554_11637 = state_11542__$1;
                          statearr_11554_11637[2] = null;
                          statearr_11554_11637[1] = 25;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_11543 === 5) {
                            var inst_11417 = cljs.core.deref.call(null, cs);
                            var inst_11418 = cljs.core.seq.call(null, inst_11417);
                            var inst_11419 = inst_11418;
                            var inst_11420 = null;
                            var inst_11421 = 0;
                            var inst_11422 = 0;
                            var state_11542__$1 = function() {
                              var statearr_11555 = state_11542;
                              statearr_11555[14] = inst_11422;
                              statearr_11555[15] = inst_11421;
                              statearr_11555[16] = inst_11420;
                              statearr_11555[17] = inst_11419;
                              return statearr_11555;
                            }();
                            var statearr_11556_11638 = state_11542__$1;
                            statearr_11556_11638[2] = null;
                            statearr_11556_11638[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_11543 === 37) {
                              var inst_11499 = state_11542[9];
                              var inst_11508 = cljs.core.first.call(null, inst_11499);
                              var state_11542__$1 = function() {
                                var statearr_11557 = state_11542;
                                statearr_11557[18] = inst_11508;
                                return statearr_11557;
                              }();
                              var statearr_11558_11639 = state_11542__$1;
                              statearr_11558_11639[2] = null;
                              statearr_11558_11639[1] = 41;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_11543 === 6) {
                                var inst_11470 = state_11542[19];
                                var inst_11469 = cljs.core.deref.call(null, cs);
                                var inst_11470__$1 = cljs.core.keys.call(null, inst_11469);
                                var inst_11471 = cljs.core.count.call(null, inst_11470__$1);
                                var inst_11472 = cljs.core.reset_BANG_.call(null, dctr, inst_11471);
                                var inst_11477 = cljs.core.seq.call(null, inst_11470__$1);
                                var inst_11478 = inst_11477;
                                var inst_11479 = null;
                                var inst_11480 = 0;
                                var inst_11481 = 0;
                                var state_11542__$1 = function() {
                                  var statearr_11559 = state_11542;
                                  statearr_11559[20] = inst_11472;
                                  statearr_11559[19] = inst_11470__$1;
                                  statearr_11559[10] = inst_11478;
                                  statearr_11559[11] = inst_11479;
                                  statearr_11559[12] = inst_11481;
                                  statearr_11559[13] = inst_11480;
                                  return statearr_11559;
                                }();
                                var statearr_11560_11640 = state_11542__$1;
                                statearr_11560_11640[2] = null;
                                statearr_11560_11640[1] = 25;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_11543 === 38) {
                                  var inst_11521 = state_11542[2];
                                  var state_11542__$1 = state_11542;
                                  var statearr_11561_11641 = state_11542__$1;
                                  statearr_11561_11641[2] = inst_11521;
                                  statearr_11561_11641[1] = 35;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_11543 === 7) {
                                    var inst_11538 = state_11542[2];
                                    var state_11542__$1 = state_11542;
                                    var statearr_11562_11642 = state_11542__$1;
                                    statearr_11562_11642[2] = inst_11538;
                                    statearr_11562_11642[1] = 3;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_11543 === 39) {
                                      var inst_11499 = state_11542[9];
                                      var inst_11517 = state_11542[2];
                                      var inst_11518 = cljs.core.next.call(null, inst_11499);
                                      var inst_11478 = inst_11518;
                                      var inst_11479 = null;
                                      var inst_11480 = 0;
                                      var inst_11481 = 0;
                                      var state_11542__$1 = function() {
                                        var statearr_11563 = state_11542;
                                        statearr_11563[21] = inst_11517;
                                        statearr_11563[10] = inst_11478;
                                        statearr_11563[11] = inst_11479;
                                        statearr_11563[12] = inst_11481;
                                        statearr_11563[13] = inst_11480;
                                        return statearr_11563;
                                      }();
                                      var statearr_11564_11643 = state_11542__$1;
                                      statearr_11564_11643[2] = null;
                                      statearr_11564_11643[1] = 25;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_11543 === 8) {
                                        var inst_11422 = state_11542[14];
                                        var inst_11421 = state_11542[15];
                                        var inst_11424 = inst_11422 < inst_11421;
                                        var inst_11425 = inst_11424;
                                        var state_11542__$1 = state_11542;
                                        if (cljs.core.truth_(inst_11425)) {
                                          var statearr_11565_11644 = state_11542__$1;
                                          statearr_11565_11644[1] = 10;
                                        } else {
                                          var statearr_11566_11645 = state_11542__$1;
                                          statearr_11566_11645[1] = 11;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_11543 === 40) {
                                          var inst_11508 = state_11542[18];
                                          var inst_11509 = state_11542[2];
                                          var inst_11510 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                          var inst_11511 = cljs.core.async.untap_STAR_.call(null, m, inst_11508);
                                          var state_11542__$1 = function() {
                                            var statearr_11567 = state_11542;
                                            statearr_11567[22] = inst_11509;
                                            statearr_11567[23] = inst_11510;
                                            return statearr_11567;
                                          }();
                                          var statearr_11568_11646 = state_11542__$1;
                                          statearr_11568_11646[2] = inst_11511;
                                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11542__$1);
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_11543 === 9) {
                                            var inst_11467 = state_11542[2];
                                            var state_11542__$1 = state_11542;
                                            var statearr_11569_11647 = state_11542__$1;
                                            statearr_11569_11647[2] = inst_11467;
                                            statearr_11569_11647[1] = 7;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_11543 === 41) {
                                              var inst_11508 = state_11542[18];
                                              var inst_11410 = state_11542[7];
                                              var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_11542, 40, Object, null, 39);
                                              var inst_11515 = cljs.core.async.put_BANG_.call(null, inst_11508, inst_11410, done);
                                              var state_11542__$1 = state_11542;
                                              var statearr_11570_11648 = state_11542__$1;
                                              statearr_11570_11648[2] = inst_11515;
                                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11542__$1);
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_11543 === 10) {
                                                var inst_11422 = state_11542[14];
                                                var inst_11420 = state_11542[16];
                                                var inst_11428 = cljs.core._nth.call(null, inst_11420, inst_11422);
                                                var inst_11429 = cljs.core.nth.call(null, inst_11428, 0, null);
                                                var inst_11430 = cljs.core.nth.call(null, inst_11428, 1, null);
                                                var state_11542__$1 = function() {
                                                  var statearr_11571 = state_11542;
                                                  statearr_11571[24] = inst_11429;
                                                  return statearr_11571;
                                                }();
                                                if (cljs.core.truth_(inst_11430)) {
                                                  var statearr_11572_11649 = state_11542__$1;
                                                  statearr_11572_11649[1] = 13;
                                                } else {
                                                  var statearr_11573_11650 = state_11542__$1;
                                                  statearr_11573_11650[1] = 14;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                if (state_val_11543 === 42) {
                                                  var state_11542__$1 = state_11542;
                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11542__$1, 45, dchan);
                                                } else {
                                                  if (state_val_11543 === 11) {
                                                    var inst_11439 = state_11542[25];
                                                    var inst_11419 = state_11542[17];
                                                    var inst_11439__$1 = cljs.core.seq.call(null, inst_11419);
                                                    var state_11542__$1 = function() {
                                                      var statearr_11574 = state_11542;
                                                      statearr_11574[25] = inst_11439__$1;
                                                      return statearr_11574;
                                                    }();
                                                    if (inst_11439__$1) {
                                                      var statearr_11575_11651 = state_11542__$1;
                                                      statearr_11575_11651[1] = 16;
                                                    } else {
                                                      var statearr_11576_11652 = state_11542__$1;
                                                      statearr_11576_11652[1] = 17;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_11543 === 43) {
                                                      var state_11542__$1 = state_11542;
                                                      var statearr_11577_11653 = state_11542__$1;
                                                      statearr_11577_11653[2] = null;
                                                      statearr_11577_11653[1] = 44;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      if (state_val_11543 === 12) {
                                                        var inst_11465 = state_11542[2];
                                                        var state_11542__$1 = state_11542;
                                                        var statearr_11578_11654 = state_11542__$1;
                                                        statearr_11578_11654[2] = inst_11465;
                                                        statearr_11578_11654[1] = 9;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                      } else {
                                                        if (state_val_11543 === 44) {
                                                          var inst_11535 = state_11542[2];
                                                          var state_11542__$1 = function() {
                                                            var statearr_11579 = state_11542;
                                                            statearr_11579[26] = inst_11535;
                                                            return statearr_11579;
                                                          }();
                                                          var statearr_11580_11655 = state_11542__$1;
                                                          statearr_11580_11655[2] = null;
                                                          statearr_11580_11655[1] = 2;
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                        } else {
                                                          if (state_val_11543 === 13) {
                                                            var inst_11429 = state_11542[24];
                                                            var inst_11432 = cljs.core.async.close_BANG_.call(null, inst_11429);
                                                            var state_11542__$1 = state_11542;
                                                            var statearr_11581_11656 = state_11542__$1;
                                                            statearr_11581_11656[2] = inst_11432;
                                                            statearr_11581_11656[1] = 15;
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                          } else {
                                                            if (state_val_11543 === 45) {
                                                              var inst_11532 = state_11542[2];
                                                              var state_11542__$1 = state_11542;
                                                              var statearr_11585_11657 = state_11542__$1;
                                                              statearr_11585_11657[2] = inst_11532;
                                                              statearr_11585_11657[1] = 44;
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                            } else {
                                                              if (state_val_11543 === 14) {
                                                                var state_11542__$1 = state_11542;
                                                                var statearr_11586_11658 = state_11542__$1;
                                                                statearr_11586_11658[2] = null;
                                                                statearr_11586_11658[1] = 15;
                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                              } else {
                                                                if (state_val_11543 === 15) {
                                                                  var inst_11422 = state_11542[14];
                                                                  var inst_11421 = state_11542[15];
                                                                  var inst_11420 = state_11542[16];
                                                                  var inst_11419 = state_11542[17];
                                                                  var inst_11435 = state_11542[2];
                                                                  var inst_11436 = inst_11422 + 1;
                                                                  var tmp11582 = inst_11421;
                                                                  var tmp11583 = inst_11420;
                                                                  var tmp11584 = inst_11419;
                                                                  var inst_11419__$1 = tmp11584;
                                                                  var inst_11420__$1 = tmp11583;
                                                                  var inst_11421__$1 = tmp11582;
                                                                  var inst_11422__$1 = inst_11436;
                                                                  var state_11542__$1 = function() {
                                                                    var statearr_11587 = state_11542;
                                                                    statearr_11587[14] = inst_11422__$1;
                                                                    statearr_11587[15] = inst_11421__$1;
                                                                    statearr_11587[16] = inst_11420__$1;
                                                                    statearr_11587[27] = inst_11435;
                                                                    statearr_11587[17] = inst_11419__$1;
                                                                    return statearr_11587;
                                                                  }();
                                                                  var statearr_11588_11659 = state_11542__$1;
                                                                  statearr_11588_11659[2] = null;
                                                                  statearr_11588_11659[1] = 8;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                } else {
                                                                  if (state_val_11543 === 16) {
                                                                    var inst_11439 = state_11542[25];
                                                                    var inst_11441 = cljs.core.chunked_seq_QMARK_.call(null, inst_11439);
                                                                    var state_11542__$1 = state_11542;
                                                                    if (inst_11441) {
                                                                      var statearr_11589_11660 = state_11542__$1;
                                                                      statearr_11589_11660[1] = 19;
                                                                    } else {
                                                                      var statearr_11590_11661 = state_11542__$1;
                                                                      statearr_11590_11661[1] = 20;
                                                                    }
                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                  } else {
                                                                    if (state_val_11543 === 17) {
                                                                      var state_11542__$1 = state_11542;
                                                                      var statearr_11591_11662 = state_11542__$1;
                                                                      statearr_11591_11662[2] = null;
                                                                      statearr_11591_11662[1] = 18;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                    } else {
                                                                      if (state_val_11543 === 18) {
                                                                        var inst_11463 = state_11542[2];
                                                                        var state_11542__$1 = state_11542;
                                                                        var statearr_11592_11663 = state_11542__$1;
                                                                        statearr_11592_11663[2] = inst_11463;
                                                                        statearr_11592_11663[1] = 12;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                      } else {
                                                                        if (state_val_11543 === 19) {
                                                                          var inst_11439 = state_11542[25];
                                                                          var inst_11443 = cljs.core.chunk_first.call(null, inst_11439);
                                                                          var inst_11444 = cljs.core.chunk_rest.call(null, inst_11439);
                                                                          var inst_11445 = cljs.core.count.call(null, inst_11443);
                                                                          var inst_11419 = inst_11444;
                                                                          var inst_11420 = inst_11443;
                                                                          var inst_11421 = inst_11445;
                                                                          var inst_11422 = 0;
                                                                          var state_11542__$1 = function() {
                                                                            var statearr_11593 = state_11542;
                                                                            statearr_11593[14] = inst_11422;
                                                                            statearr_11593[15] = inst_11421;
                                                                            statearr_11593[16] = inst_11420;
                                                                            statearr_11593[17] = inst_11419;
                                                                            return statearr_11593;
                                                                          }();
                                                                          var statearr_11594_11664 = state_11542__$1;
                                                                          statearr_11594_11664[2] = null;
                                                                          statearr_11594_11664[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                        } else {
                                                                          if (state_val_11543 === 20) {
                                                                            var inst_11439 = state_11542[25];
                                                                            var inst_11449 = cljs.core.first.call(null, inst_11439);
                                                                            var inst_11450 = cljs.core.nth.call(null, inst_11449, 0, null);
                                                                            var inst_11451 = cljs.core.nth.call(null, inst_11449, 1, null);
                                                                            var state_11542__$1 = function() {
                                                                              var statearr_11595 = state_11542;
                                                                              statearr_11595[28] = inst_11450;
                                                                              return statearr_11595;
                                                                            }();
                                                                            if (cljs.core.truth_(inst_11451)) {
                                                                              var statearr_11596_11665 = state_11542__$1;
                                                                              statearr_11596_11665[1] = 22;
                                                                            } else {
                                                                              var statearr_11597_11666 = state_11542__$1;
                                                                              statearr_11597_11666[1] = 23;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                          } else {
                                                                            if (state_val_11543 === 21) {
                                                                              var inst_11460 = state_11542[2];
                                                                              var state_11542__$1 = state_11542;
                                                                              var statearr_11598_11667 = state_11542__$1;
                                                                              statearr_11598_11667[2] = inst_11460;
                                                                              statearr_11598_11667[1] = 18;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                            } else {
                                                                              if (state_val_11543 === 22) {
                                                                                var inst_11450 = state_11542[28];
                                                                                var inst_11453 = cljs.core.async.close_BANG_.call(null, inst_11450);
                                                                                var state_11542__$1 = state_11542;
                                                                                var statearr_11599_11668 = state_11542__$1;
                                                                                statearr_11599_11668[2] = inst_11453;
                                                                                statearr_11599_11668[1] = 24;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                              } else {
                                                                                if (state_val_11543 === 23) {
                                                                                  var state_11542__$1 = state_11542;
                                                                                  var statearr_11600_11669 = state_11542__$1;
                                                                                  statearr_11600_11669[2] = null;
                                                                                  statearr_11600_11669[1] = 24;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                } else {
                                                                                  if (state_val_11543 === 24) {
                                                                                    var inst_11439 = state_11542[25];
                                                                                    var inst_11456 = state_11542[2];
                                                                                    var inst_11457 = cljs.core.next.call(null, inst_11439);
                                                                                    var inst_11419 = inst_11457;
                                                                                    var inst_11420 = null;
                                                                                    var inst_11421 = 0;
                                                                                    var inst_11422 = 0;
                                                                                    var state_11542__$1 = function() {
                                                                                      var statearr_11601 = state_11542;
                                                                                      statearr_11601[14] = inst_11422;
                                                                                      statearr_11601[29] = inst_11456;
                                                                                      statearr_11601[15] = inst_11421;
                                                                                      statearr_11601[16] = inst_11420;
                                                                                      statearr_11601[17] = inst_11419;
                                                                                      return statearr_11601;
                                                                                    }();
                                                                                    var statearr_11602_11670 = state_11542__$1;
                                                                                    statearr_11602_11670[2] = null;
                                                                                    statearr_11602_11670[1] = 8;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                  } else {
                                                                                    if (state_val_11543 === 25) {
                                                                                      var inst_11481 = state_11542[12];
                                                                                      var inst_11480 = state_11542[13];
                                                                                      var inst_11483 = inst_11481 < inst_11480;
                                                                                      var inst_11484 = inst_11483;
                                                                                      var state_11542__$1 = state_11542;
                                                                                      if (cljs.core.truth_(inst_11484)) {
                                                                                        var statearr_11603_11671 = state_11542__$1;
                                                                                        statearr_11603_11671[1] = 27;
                                                                                      } else {
                                                                                        var statearr_11604_11672 = state_11542__$1;
                                                                                        statearr_11604_11672[1] = 28;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                    } else {
                                                                                      if (state_val_11543 === 26) {
                                                                                        var inst_11470 = state_11542[19];
                                                                                        var inst_11528 = state_11542[2];
                                                                                        var inst_11529 = cljs.core.seq.call(null, inst_11470);
                                                                                        var state_11542__$1 = function() {
                                                                                          var statearr_11605 = state_11542;
                                                                                          statearr_11605[30] = inst_11528;
                                                                                          return statearr_11605;
                                                                                        }();
                                                                                        if (inst_11529) {
                                                                                          var statearr_11606_11673 = state_11542__$1;
                                                                                          statearr_11606_11673[1] = 42;
                                                                                        } else {
                                                                                          var statearr_11607_11674 = state_11542__$1;
                                                                                          statearr_11607_11674[1] = 43;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                      } else {
                                                                                        if (state_val_11543 === 27) {
                                                                                          var inst_11479 = state_11542[11];
                                                                                          var inst_11481 = state_11542[12];
                                                                                          var inst_11486 = cljs.core._nth.call(null, inst_11479, inst_11481);
                                                                                          var state_11542__$1 = function() {
                                                                                            var statearr_11608 = state_11542;
                                                                                            statearr_11608[8] = inst_11486;
                                                                                            return statearr_11608;
                                                                                          }();
                                                                                          var statearr_11609_11675 = state_11542__$1;
                                                                                          statearr_11609_11675[2] = null;
                                                                                          statearr_11609_11675[1] = 32;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                        } else {
                                                                                          if (state_val_11543 === 28) {
                                                                                            var inst_11499 = state_11542[9];
                                                                                            var inst_11478 = state_11542[10];
                                                                                            var inst_11499__$1 = cljs.core.seq.call(null, inst_11478);
                                                                                            var state_11542__$1 = function() {
                                                                                              var statearr_11613 = state_11542;
                                                                                              statearr_11613[9] = inst_11499__$1;
                                                                                              return statearr_11613;
                                                                                            }();
                                                                                            if (inst_11499__$1) {
                                                                                              var statearr_11614_11676 = state_11542__$1;
                                                                                              statearr_11614_11676[1] = 33;
                                                                                            } else {
                                                                                              var statearr_11615_11677 = state_11542__$1;
                                                                                              statearr_11615_11677[1] = 34;
                                                                                            }
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                          } else {
                                                                                            if (state_val_11543 === 29) {
                                                                                              var inst_11526 = state_11542[2];
                                                                                              var state_11542__$1 = state_11542;
                                                                                              var statearr_11616_11678 = state_11542__$1;
                                                                                              statearr_11616_11678[2] = inst_11526;
                                                                                              statearr_11616_11678[1] = 26;
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                            } else {
                                                                                              if (state_val_11543 === 30) {
                                                                                                var inst_11478 = state_11542[10];
                                                                                                var inst_11479 = state_11542[11];
                                                                                                var inst_11481 = state_11542[12];
                                                                                                var inst_11480 = state_11542[13];
                                                                                                var inst_11495 = state_11542[2];
                                                                                                var inst_11496 = inst_11481 + 1;
                                                                                                var tmp11610 = inst_11478;
                                                                                                var tmp11611 = inst_11479;
                                                                                                var tmp11612 = inst_11480;
                                                                                                var inst_11478__$1 = tmp11610;
                                                                                                var inst_11479__$1 = tmp11611;
                                                                                                var inst_11480__$1 = tmp11612;
                                                                                                var inst_11481__$1 = inst_11496;
                                                                                                var state_11542__$1 = function() {
                                                                                                  var statearr_11617 = state_11542;
                                                                                                  statearr_11617[31] = inst_11495;
                                                                                                  statearr_11617[10] = inst_11478__$1;
                                                                                                  statearr_11617[11] = inst_11479__$1;
                                                                                                  statearr_11617[12] = inst_11481__$1;
                                                                                                  statearr_11617[13] = inst_11480__$1;
                                                                                                  return statearr_11617;
                                                                                                }();
                                                                                                var statearr_11618_11679 = state_11542__$1;
                                                                                                statearr_11618_11679[2] = null;
                                                                                                statearr_11618_11679[1] = 25;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                              } else {
                                                                                                if (state_val_11543 === 31) {
                                                                                                  var inst_11486 = state_11542[8];
                                                                                                  var inst_11487 = state_11542[2];
                                                                                                  var inst_11488 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                                                                                  var inst_11489 = cljs.core.async.untap_STAR_.call(null, m, inst_11486);
                                                                                                  var state_11542__$1 = function() {
                                                                                                    var statearr_11619 = state_11542;
                                                                                                    statearr_11619[32] = inst_11488;
                                                                                                    statearr_11619[33] = inst_11487;
                                                                                                    return statearr_11619;
                                                                                                  }();
                                                                                                  var statearr_11620_11680 = state_11542__$1;
                                                                                                  statearr_11620_11680[2] = inst_11489;
                                                                                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11542__$1);
                                                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                                } else {
                                                                                                  return null;
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__6160__auto__) {
        return function() {
          var state_machine__6161__auto__ = null;
          var state_machine__6161__auto____0 = function() {
            var statearr_11624 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            statearr_11624[0] = state_machine__6161__auto__;
            statearr_11624[1] = 1;
            return statearr_11624;
          };
          var state_machine__6161__auto____1 = function(state_11542) {
            while (true) {
              var ret_value__6162__auto__ = function() {
                try {
                  while (true) {
                    var result__6163__auto__ = switch__6160__auto__.call(null, state_11542);
                    if (cljs.core.keyword_identical_QMARK_.call(null, result__6163__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__6163__auto__;
                    }
                    break;
                  }
                } catch (e11625) {
                  if (e11625 instanceof Object) {
                    var ex__6164__auto__ = e11625;
                    var statearr_11626_11681 = state_11542;
                    statearr_11626_11681[5] = ex__6164__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11542);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e11625;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6162__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__11682 = state_11542;
                state_11542 = G__11682;
                continue;
              } else {
                return ret_value__6162__auto__;
              }
              break;
            }
          };
          state_machine__6161__auto__ = function(state_11542) {
            switch(arguments.length) {
              case 0:
                return state_machine__6161__auto____0.call(this);
              case 1:
                return state_machine__6161__auto____1.call(this, state_11542);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__6161__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6161__auto____0;
          state_machine__6161__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6161__auto____1;
          return state_machine__6161__auto__;
        }();
      }(switch__6160__auto__);
    }();
    var state__6177__auto__ = function() {
      var statearr_11627 = f__6176__auto__.call(null);
      statearr_11627[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6175__auto___11628;
      return statearr_11627;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6177__auto__);
  });
  return m;
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true);
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch;
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap;
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
  var obj11684 = {};
  return obj11684;
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if (function() {
    var and__3396__auto__ = m;
    if (and__3396__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4029__auto__ = m == null ? null : m;
    return function() {
      var or__3408__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if (function() {
    var and__3396__auto__ = m;
    if (and__3396__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4029__auto__ = m == null ? null : m;
    return function() {
      var or__3408__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if (function() {
    var and__3396__auto__ = m;
    if (and__3396__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4029__auto__ = m == null ? null : m;
    return function() {
      var or__3408__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if (function() {
    var and__3396__auto__ = m;
    if (and__3396__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4029__auto__ = m == null ? null : m;
    return function() {
      var or__3408__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if (function() {
    var and__3396__auto__ = m;
    if (and__3396__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4029__auto__ = m == null ? null : m;
    return function() {
      var or__3408__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", 1120344424), null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", 1017440337));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1017267595));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", 1017440337), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", 1120344424), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1123523302), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), chs), new cljs.core.Keyword(null, "reads", "reads", 1122290959), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", 1120344424)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t11794 !== "undefined") {
    } else {
      cljs.core.async.t11794 = function(pick, out, attrs, cs, calc_state, solo_modes, mix, changed, change, solo_mode, meta11795) {
        this.pick = pick;
        this.out = out;
        this.attrs = attrs;
        this.cs = cs;
        this.calc_state = calc_state;
        this.solo_modes = solo_modes;
        this.mix = mix;
        this.changed = changed;
        this.change = change;
        this.solo_mode = solo_mode;
        this.meta11795 = meta11795;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t11794.cljs$lang$type = true;
      cljs.core.async.t11794.cljs$lang$ctorStr = "cljs.core.async/t11794";
      cljs.core.async.t11794.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
          return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async/t11794");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t11794.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t11794.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t11794.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t11794.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t11794.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t11794.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", -1162732933, null), new cljs.core.Symbol(null, "mode", "mode", -1637174436, null))))].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t11794.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t11794.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t11794.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_11796) {
          var self__ = this;
          var _11796__$1 = this;
          return self__.meta11795;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t11794.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_11796, meta11795__$1) {
          var self__ = this;
          var _11796__$1 = this;
          return new cljs.core.async.t11794(self__.pick, self__.out, self__.attrs, self__.cs, self__.calc_state, self__.solo_modes, self__.mix, self__.changed, self__.change, self__.solo_mode, meta11795__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t11794 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t11794(pick__$1, out__$1, attrs__$1, cs__$1, calc_state__$1, solo_modes__$1, mix__$1, changed__$1, change__$1, solo_mode__$1, meta11795) {
          return new cljs.core.async.t11794(pick__$1, out__$1, attrs__$1, cs__$1, calc_state__$1, solo_modes__$1, mix__$1, changed__$1, change__$1, solo_mode__$1, meta11795);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t11794(pick, out, attrs, cs, calc_state, solo_modes, mix, changed, change, solo_mode, null);
  }();
  var c__6175__auto___11903 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__6176__auto__ = function() {
      var switch__6160__auto__ = function(state_11861) {
        var state_val_11862 = state_11861[1];
        if (state_val_11862 === 1) {
          var inst_11800 = state_11861[7];
          var inst_11800__$1 = calc_state.call(null);
          var inst_11801 = cljs.core.seq_QMARK_.call(null, inst_11800__$1);
          var state_11861__$1 = function() {
            var statearr_11863 = state_11861;
            statearr_11863[7] = inst_11800__$1;
            return statearr_11863;
          }();
          if (inst_11801) {
            var statearr_11864_11904 = state_11861__$1;
            statearr_11864_11904[1] = 2;
          } else {
            var statearr_11865_11905 = state_11861__$1;
            statearr_11865_11905[1] = 3;
          }
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_11862 === 2) {
            var inst_11800 = state_11861[7];
            var inst_11803 = cljs.core.apply.call(null, cljs.core.hash_map, inst_11800);
            var state_11861__$1 = state_11861;
            var statearr_11866_11906 = state_11861__$1;
            statearr_11866_11906[2] = inst_11803;
            statearr_11866_11906[1] = 4;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_11862 === 3) {
              var inst_11800 = state_11861[7];
              var state_11861__$1 = state_11861;
              var statearr_11867_11907 = state_11861__$1;
              statearr_11867_11907[2] = inst_11800;
              statearr_11867_11907[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_11862 === 4) {
                var inst_11800 = state_11861[7];
                var inst_11806 = state_11861[2];
                var inst_11807 = cljs.core.get.call(null, inst_11806, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                var inst_11808 = cljs.core.get.call(null, inst_11806, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                var inst_11809 = cljs.core.get.call(null, inst_11806, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                var inst_11810 = inst_11800;
                var state_11861__$1 = function() {
                  var statearr_11868 = state_11861;
                  statearr_11868[8] = inst_11810;
                  statearr_11868[9] = inst_11807;
                  statearr_11868[10] = inst_11808;
                  statearr_11868[11] = inst_11809;
                  return statearr_11868;
                }();
                var statearr_11869_11908 = state_11861__$1;
                statearr_11869_11908[2] = null;
                statearr_11869_11908[1] = 5;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_11862 === 5) {
                  var inst_11810 = state_11861[8];
                  var inst_11813 = cljs.core.seq_QMARK_.call(null, inst_11810);
                  var state_11861__$1 = state_11861;
                  if (inst_11813) {
                    var statearr_11870_11909 = state_11861__$1;
                    statearr_11870_11909[1] = 7;
                  } else {
                    var statearr_11871_11910 = state_11861__$1;
                    statearr_11871_11910[1] = 8;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_11862 === 6) {
                    var inst_11859 = state_11861[2];
                    var state_11861__$1 = state_11861;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11861__$1, inst_11859);
                  } else {
                    if (state_val_11862 === 7) {
                      var inst_11810 = state_11861[8];
                      var inst_11815 = cljs.core.apply.call(null, cljs.core.hash_map, inst_11810);
                      var state_11861__$1 = state_11861;
                      var statearr_11872_11911 = state_11861__$1;
                      statearr_11872_11911[2] = inst_11815;
                      statearr_11872_11911[1] = 9;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_11862 === 8) {
                        var inst_11810 = state_11861[8];
                        var state_11861__$1 = state_11861;
                        var statearr_11873_11912 = state_11861__$1;
                        statearr_11873_11912[2] = inst_11810;
                        statearr_11873_11912[1] = 9;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_11862 === 9) {
                          var inst_11818 = state_11861[12];
                          var inst_11818__$1 = state_11861[2];
                          var inst_11819 = cljs.core.get.call(null, inst_11818__$1, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                          var inst_11820 = cljs.core.get.call(null, inst_11818__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                          var inst_11821 = cljs.core.get.call(null, inst_11818__$1, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                          var state_11861__$1 = function() {
                            var statearr_11874 = state_11861;
                            statearr_11874[12] = inst_11818__$1;
                            statearr_11874[13] = inst_11820;
                            statearr_11874[14] = inst_11821;
                            return statearr_11874;
                          }();
                          return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_11861__$1, 10, inst_11819);
                        } else {
                          if (state_val_11862 === 10) {
                            var inst_11826 = state_11861[15];
                            var inst_11825 = state_11861[16];
                            var inst_11824 = state_11861[2];
                            var inst_11825__$1 = cljs.core.nth.call(null, inst_11824, 0, null);
                            var inst_11826__$1 = cljs.core.nth.call(null, inst_11824, 1, null);
                            var inst_11827 = inst_11825__$1 == null;
                            var inst_11828 = cljs.core._EQ_.call(null, inst_11826__$1, change);
                            var inst_11829 = inst_11827 || inst_11828;
                            var state_11861__$1 = function() {
                              var statearr_11875 = state_11861;
                              statearr_11875[15] = inst_11826__$1;
                              statearr_11875[16] = inst_11825__$1;
                              return statearr_11875;
                            }();
                            if (cljs.core.truth_(inst_11829)) {
                              var statearr_11876_11913 = state_11861__$1;
                              statearr_11876_11913[1] = 11;
                            } else {
                              var statearr_11877_11914 = state_11861__$1;
                              statearr_11877_11914[1] = 12;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_11862 === 11) {
                              var inst_11825 = state_11861[16];
                              var inst_11831 = inst_11825 == null;
                              var state_11861__$1 = state_11861;
                              if (cljs.core.truth_(inst_11831)) {
                                var statearr_11878_11915 = state_11861__$1;
                                statearr_11878_11915[1] = 14;
                              } else {
                                var statearr_11879_11916 = state_11861__$1;
                                statearr_11879_11916[1] = 15;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_11862 === 12) {
                                var inst_11826 = state_11861[15];
                                var inst_11840 = state_11861[17];
                                var inst_11821 = state_11861[14];
                                var inst_11840__$1 = inst_11821.call(null, inst_11826);
                                var state_11861__$1 = function() {
                                  var statearr_11880 = state_11861;
                                  statearr_11880[17] = inst_11840__$1;
                                  return statearr_11880;
                                }();
                                if (cljs.core.truth_(inst_11840__$1)) {
                                  var statearr_11881_11917 = state_11861__$1;
                                  statearr_11881_11917[1] = 17;
                                } else {
                                  var statearr_11882_11918 = state_11861__$1;
                                  statearr_11882_11918[1] = 18;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_11862 === 13) {
                                  var inst_11857 = state_11861[2];
                                  var state_11861__$1 = state_11861;
                                  var statearr_11883_11919 = state_11861__$1;
                                  statearr_11883_11919[2] = inst_11857;
                                  statearr_11883_11919[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_11862 === 14) {
                                    var inst_11826 = state_11861[15];
                                    var inst_11833 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_11826);
                                    var state_11861__$1 = state_11861;
                                    var statearr_11884_11920 = state_11861__$1;
                                    statearr_11884_11920[2] = inst_11833;
                                    statearr_11884_11920[1] = 16;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_11862 === 15) {
                                      var state_11861__$1 = state_11861;
                                      var statearr_11885_11921 = state_11861__$1;
                                      statearr_11885_11921[2] = null;
                                      statearr_11885_11921[1] = 16;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_11862 === 16) {
                                        var inst_11836 = state_11861[2];
                                        var inst_11837 = calc_state.call(null);
                                        var inst_11810 = inst_11837;
                                        var state_11861__$1 = function() {
                                          var statearr_11886 = state_11861;
                                          statearr_11886[8] = inst_11810;
                                          statearr_11886[18] = inst_11836;
                                          return statearr_11886;
                                        }();
                                        var statearr_11887_11922 = state_11861__$1;
                                        statearr_11887_11922[2] = null;
                                        statearr_11887_11922[1] = 5;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_11862 === 17) {
                                          var inst_11840 = state_11861[17];
                                          var state_11861__$1 = state_11861;
                                          var statearr_11888_11923 = state_11861__$1;
                                          statearr_11888_11923[2] = inst_11840;
                                          statearr_11888_11923[1] = 19;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_11862 === 18) {
                                            var inst_11826 = state_11861[15];
                                            var inst_11820 = state_11861[13];
                                            var inst_11821 = state_11861[14];
                                            var inst_11843 = cljs.core.empty_QMARK_.call(null, inst_11821);
                                            var inst_11844 = inst_11820.call(null, inst_11826);
                                            var inst_11845 = cljs.core.not.call(null, inst_11844);
                                            var inst_11846 = inst_11843 && inst_11845;
                                            var state_11861__$1 = state_11861;
                                            var statearr_11889_11924 = state_11861__$1;
                                            statearr_11889_11924[2] = inst_11846;
                                            statearr_11889_11924[1] = 19;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_11862 === 19) {
                                              var inst_11848 = state_11861[2];
                                              var state_11861__$1 = state_11861;
                                              if (cljs.core.truth_(inst_11848)) {
                                                var statearr_11890_11925 = state_11861__$1;
                                                statearr_11890_11925[1] = 20;
                                              } else {
                                                var statearr_11891_11926 = state_11861__$1;
                                                statearr_11891_11926[1] = 21;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_11862 === 20) {
                                                var inst_11825 = state_11861[16];
                                                var state_11861__$1 = state_11861;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11861__$1, 23, out, inst_11825);
                                              } else {
                                                if (state_val_11862 === 21) {
                                                  var state_11861__$1 = state_11861;
                                                  var statearr_11892_11927 = state_11861__$1;
                                                  statearr_11892_11927[2] = null;
                                                  statearr_11892_11927[1] = 22;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_11862 === 22) {
                                                    var inst_11818 = state_11861[12];
                                                    var inst_11854 = state_11861[2];
                                                    var inst_11810 = inst_11818;
                                                    var state_11861__$1 = function() {
                                                      var statearr_11893 = state_11861;
                                                      statearr_11893[8] = inst_11810;
                                                      statearr_11893[19] = inst_11854;
                                                      return statearr_11893;
                                                    }();
                                                    var statearr_11894_11928 = state_11861__$1;
                                                    statearr_11894_11928[2] = null;
                                                    statearr_11894_11928[1] = 5;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_11862 === 23) {
                                                      var inst_11851 = state_11861[2];
                                                      var state_11861__$1 = state_11861;
                                                      var statearr_11895_11929 = state_11861__$1;
                                                      statearr_11895_11929[2] = inst_11851;
                                                      statearr_11895_11929[1] = 22;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__6160__auto__) {
        return function() {
          var state_machine__6161__auto__ = null;
          var state_machine__6161__auto____0 = function() {
            var statearr_11899 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            statearr_11899[0] = state_machine__6161__auto__;
            statearr_11899[1] = 1;
            return statearr_11899;
          };
          var state_machine__6161__auto____1 = function(state_11861) {
            while (true) {
              var ret_value__6162__auto__ = function() {
                try {
                  while (true) {
                    var result__6163__auto__ = switch__6160__auto__.call(null, state_11861);
                    if (cljs.core.keyword_identical_QMARK_.call(null, result__6163__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__6163__auto__;
                    }
                    break;
                  }
                } catch (e11900) {
                  if (e11900 instanceof Object) {
                    var ex__6164__auto__ = e11900;
                    var statearr_11901_11930 = state_11861;
                    statearr_11901_11930[5] = ex__6164__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11861);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e11900;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6162__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__11931 = state_11861;
                state_11861 = G__11931;
                continue;
              } else {
                return ret_value__6162__auto__;
              }
              break;
            }
          };
          state_machine__6161__auto__ = function(state_11861) {
            switch(arguments.length) {
              case 0:
                return state_machine__6161__auto____0.call(this);
              case 1:
                return state_machine__6161__auto____1.call(this, state_11861);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__6161__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6161__auto____0;
          state_machine__6161__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6161__auto____1;
          return state_machine__6161__auto__;
        }();
      }(switch__6160__auto__);
    }();
    var state__6177__auto__ = function() {
      var statearr_11902 = f__6176__auto__.call(null);
      statearr_11902[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6175__auto___11903;
      return statearr_11902;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6177__auto__);
  });
  return m;
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
  var obj11933 = {};
  return obj11933;
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__3396__auto__ = p;
    if (and__3396__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4029__auto__ = p == null ? null : p;
    return function() {
      var or__3408__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if (function() {
    var and__3396__auto__ = p;
    if (and__3396__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4029__auto__ = p == null ? null : p;
    return function() {
      var or__3408__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__3396__auto__ = p;
      if (and__3396__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__4029__auto__ = p == null ? null : p;
      return function() {
        var or__3408__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__3396__auto__ = p;
      if (and__3396__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__3396__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__4029__auto__ = p == null ? null : p;
      return function() {
        var or__3408__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4029__auto__)];
        if (or__3408__auto__) {
          return or__3408__auto__;
        } else {
          var or__3408__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3408__auto____$1) {
            return or__3408__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3408__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if (cljs.core.truth_(or__3408__auto__)) {
          return or__3408__auto__;
        } else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3408__auto__, mults) {
            return function(p1__11934_SHARP_) {
              if (cljs.core.truth_(p1__11934_SHARP_.call(null, topic))) {
                return p1__11934_SHARP_;
              } else {
                return cljs.core.assoc.call(null, p1__11934_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
              }
            };
          }(or__3408__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t12059 !== "undefined") {
      } else {
        cljs.core.async.t12059 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta12060) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta12060 = meta12060;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t12059.cljs$lang$type = true;
        cljs.core.async.t12059.cljs$lang$ctorStr = "cljs.core.async/t12059";
        cljs.core.async.t12059.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
            return cljs.core._write.call(null, writer__3971__auto__, "cljs.core.async/t12059");
          };
        }(mults, ensure_mult);
        cljs.core.async.t12059.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t12059.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$2, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t12059.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2) {
            var self__ = this;
            var p__$1 = this;
            var temp__4092__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if (cljs.core.truth_(temp__4092__auto__)) {
              var m = temp__4092__auto__;
              return cljs.core.async.untap.call(null, m, ch__$2);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t12059.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t12059.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t12059.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t12059.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t12059.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_12061) {
            var self__ = this;
            var _12061__$1 = this;
            return self__.meta12060;
          };
        }(mults, ensure_mult);
        cljs.core.async.t12059.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_12061, meta12060__$1) {
            var self__ = this;
            var _12061__$1 = this;
            return new cljs.core.async.t12059(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta12060__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t12059 = function(mults, ensure_mult) {
          return function __GT_t12059(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta12060) {
            return new cljs.core.async.t12059(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta12060);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t12059(ensure_mult, mults, buf_fn, topic_fn, ch, pub, null);
    }();
    var c__6175__auto___12183 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6176__auto__ = function() {
        var switch__6160__auto__ = function(state_12135) {
          var state_val_12136 = state_12135[1];
          if (state_val_12136 === 1) {
            var state_12135__$1 = state_12135;
            var statearr_12137_12184 = state_12135__$1;
            statearr_12137_12184[2] = null;
            statearr_12137_12184[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_12136 === 2) {
              var state_12135__$1 = state_12135;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12135__$1, 4, ch);
            } else {
              if (state_val_12136 === 3) {
                var inst_12133 = state_12135[2];
                var state_12135__$1 = state_12135;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12135__$1, inst_12133);
              } else {
                if (state_val_12136 === 4) {
                  var inst_12064 = state_12135[7];
                  var inst_12064__$1 = state_12135[2];
                  var inst_12065 = inst_12064__$1 == null;
                  var state_12135__$1 = function() {
                    var statearr_12138 = state_12135;
                    statearr_12138[7] = inst_12064__$1;
                    return statearr_12138;
                  }();
                  if (cljs.core.truth_(inst_12065)) {
                    var statearr_12139_12185 = state_12135__$1;
                    statearr_12139_12185[1] = 5;
                  } else {
                    var statearr_12140_12186 = state_12135__$1;
                    statearr_12140_12186[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_12136 === 5) {
                    var inst_12071 = cljs.core.deref.call(null, mults);
                    var inst_12072 = cljs.core.vals.call(null, inst_12071);
                    var inst_12073 = cljs.core.seq.call(null, inst_12072);
                    var inst_12074 = inst_12073;
                    var inst_12075 = null;
                    var inst_12076 = 0;
                    var inst_12077 = 0;
                    var state_12135__$1 = function() {
                      var statearr_12141 = state_12135;
                      statearr_12141[8] = inst_12077;
                      statearr_12141[9] = inst_12075;
                      statearr_12141[10] = inst_12076;
                      statearr_12141[11] = inst_12074;
                      return statearr_12141;
                    }();
                    var statearr_12142_12187 = state_12135__$1;
                    statearr_12142_12187[2] = null;
                    statearr_12142_12187[1] = 8;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_12136 === 6) {
                      var inst_12064 = state_12135[7];
                      var inst_12114 = state_12135[12];
                      var inst_12112 = state_12135[13];
                      var inst_12112__$1 = topic_fn.call(null, inst_12064);
                      var inst_12113 = cljs.core.deref.call(null, mults);
                      var inst_12114__$1 = cljs.core.get.call(null, inst_12113, inst_12112__$1);
                      var state_12135__$1 = function() {
                        var statearr_12143 = state_12135;
                        statearr_12143[12] = inst_12114__$1;
                        statearr_12143[13] = inst_12112__$1;
                        return statearr_12143;
                      }();
                      if (cljs.core.truth_(inst_12114__$1)) {
                        var statearr_12144_12188 = state_12135__$1;
                        statearr_12144_12188[1] = 19;
                      } else {
                        var statearr_12145_12189 = state_12135__$1;
                        statearr_12145_12189[1] = 20;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_12136 === 7) {
                        var inst_12131 = state_12135[2];
                        var state_12135__$1 = state_12135;
                        var statearr_12146_12190 = state_12135__$1;
                        statearr_12146_12190[2] = inst_12131;
                        statearr_12146_12190[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_12136 === 8) {
                          var inst_12077 = state_12135[8];
                          var inst_12076 = state_12135[10];
                          var inst_12079 = inst_12077 < inst_12076;
                          var inst_12080 = inst_12079;
                          var state_12135__$1 = state_12135;
                          if (cljs.core.truth_(inst_12080)) {
                            var statearr_12150_12191 = state_12135__$1;
                            statearr_12150_12191[1] = 10;
                          } else {
                            var statearr_12151_12192 = state_12135__$1;
                            statearr_12151_12192[1] = 11;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_12136 === 9) {
                            var inst_12110 = state_12135[2];
                            var state_12135__$1 = state_12135;
                            var statearr_12152_12193 = state_12135__$1;
                            statearr_12152_12193[2] = inst_12110;
                            statearr_12152_12193[1] = 7;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_12136 === 10) {
                              var inst_12077 = state_12135[8];
                              var inst_12075 = state_12135[9];
                              var inst_12076 = state_12135[10];
                              var inst_12074 = state_12135[11];
                              var inst_12082 = cljs.core._nth.call(null, inst_12075, inst_12077);
                              var inst_12083 = cljs.core.async.muxch_STAR_.call(null, inst_12082);
                              var inst_12084 = cljs.core.async.close_BANG_.call(null, inst_12083);
                              var inst_12085 = inst_12077 + 1;
                              var tmp12147 = inst_12075;
                              var tmp12148 = inst_12076;
                              var tmp12149 = inst_12074;
                              var inst_12074__$1 = tmp12149;
                              var inst_12075__$1 = tmp12147;
                              var inst_12076__$1 = tmp12148;
                              var inst_12077__$1 = inst_12085;
                              var state_12135__$1 = function() {
                                var statearr_12153 = state_12135;
                                statearr_12153[8] = inst_12077__$1;
                                statearr_12153[9] = inst_12075__$1;
                                statearr_12153[10] = inst_12076__$1;
                                statearr_12153[11] = inst_12074__$1;
                                statearr_12153[14] = inst_12084;
                                return statearr_12153;
                              }();
                              var statearr_12154_12194 = state_12135__$1;
                              statearr_12154_12194[2] = null;
                              statearr_12154_12194[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_12136 === 11) {
                                var inst_12074 = state_12135[11];
                                var inst_12088 = state_12135[15];
                                var inst_12088__$1 = cljs.core.seq.call(null, inst_12074);
                                var state_12135__$1 = function() {
                                  var statearr_12155 = state_12135;
                                  statearr_12155[15] = inst_12088__$1;
                                  return statearr_12155;
                                }();
                                if (inst_12088__$1) {
                                  var statearr_12156_12195 = state_12135__$1;
                                  statearr_12156_12195[1] = 13;
                                } else {
                                  var statearr_12157_12196 = state_12135__$1;
                                  statearr_12157_12196[1] = 14;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_12136 === 12) {
                                  var inst_12108 = state_12135[2];
                                  var state_12135__$1 = state_12135;
                                  var statearr_12158_12197 = state_12135__$1;
                                  statearr_12158_12197[2] = inst_12108;
                                  statearr_12158_12197[1] = 9;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_12136 === 13) {
                                    var inst_12088 = state_12135[15];
                                    var inst_12090 = cljs.core.chunked_seq_QMARK_.call(null, inst_12088);
                                    var state_12135__$1 = state_12135;
                                    if (inst_12090) {
                                      var statearr_12159_12198 = state_12135__$1;
                                      statearr_12159_12198[1] = 16;
                                    } else {
                                      var statearr_12160_12199 = state_12135__$1;
                                      statearr_12160_12199[1] = 17;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_12136 === 14) {
                                      var state_12135__$1 = state_12135;
                                      var statearr_12161_12200 = state_12135__$1;
                                      statearr_12161_12200[2] = null;
                                      statearr_12161_12200[1] = 15;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_12136 === 15) {
                                        var inst_12106 = state_12135[2];
                                        var state_12135__$1 = state_12135;
                                        var statearr_12162_12201 = state_12135__$1;
                                        statearr_12162_12201[2] = inst_12106;
                                        statearr_12162_12201[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_12136 === 16) {
                                          var inst_12088 = state_12135[15];
                                          var inst_12092 = cljs.core.chunk_first.call(null, inst_12088);
                                          var inst_12093 = cljs.core.chunk_rest.call(null, inst_12088);
                                          var inst_12094 = cljs.core.count.call(null, inst_12092);
                                          var inst_12074 = inst_12093;
                                          var inst_12075 = inst_12092;
                                          var inst_12076 = inst_12094;
                                          var inst_12077 = 0;
                                          var state_12135__$1 = function() {
                                            var statearr_12163 = state_12135;
                                            statearr_12163[8] = inst_12077;
                                            statearr_12163[9] = inst_12075;
                                            statearr_12163[10] = inst_12076;
                                            statearr_12163[11] = inst_12074;
                                            return statearr_12163;
                                          }();
                                          var statearr_12164_12202 = state_12135__$1;
                                          statearr_12164_12202[2] = null;
                                          statearr_12164_12202[1] = 8;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_12136 === 17) {
                                            var inst_12088 = state_12135[15];
                                            var inst_12097 = cljs.core.first.call(null, inst_12088);
                                            var inst_12098 = cljs.core.async.muxch_STAR_.call(null, inst_12097);
                                            var inst_12099 = cljs.core.async.close_BANG_.call(null, inst_12098);
                                            var inst_12100 = cljs.core.next.call(null, inst_12088);
                                            var inst_12074 = inst_12100;
                                            var inst_12075 = null;
                                            var inst_12076 = 0;
                                            var inst_12077 = 0;
                                            var state_12135__$1 = function() {
                                              var statearr_12165 = state_12135;
                                              statearr_12165[8] = inst_12077;
                                              statearr_12165[9] = inst_12075;
                                              statearr_12165[10] = inst_12076;
                                              statearr_12165[11] = inst_12074;
                                              statearr_12165[16] = inst_12099;
                                              return statearr_12165;
                                            }();
                                            var statearr_12166_12203 = state_12135__$1;
                                            statearr_12166_12203[2] = null;
                                            statearr_12166_12203[1] = 8;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_12136 === 18) {
                                              var inst_12103 = state_12135[2];
                                              var state_12135__$1 = state_12135;
                                              var statearr_12167_12204 = state_12135__$1;
                                              statearr_12167_12204[2] = inst_12103;
                                              statearr_12167_12204[1] = 15;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_12136 === 19) {
                                                var state_12135__$1 = state_12135;
                                                var statearr_12168_12205 = state_12135__$1;
                                                statearr_12168_12205[2] = null;
                                                statearr_12168_12205[1] = 24;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                if (state_val_12136 === 20) {
                                                  var state_12135__$1 = state_12135;
                                                  var statearr_12169_12206 = state_12135__$1;
                                                  statearr_12169_12206[2] = null;
                                                  statearr_12169_12206[1] = 21;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_12136 === 21) {
                                                    var inst_12128 = state_12135[2];
                                                    var state_12135__$1 = function() {
                                                      var statearr_12170 = state_12135;
                                                      statearr_12170[17] = inst_12128;
                                                      return statearr_12170;
                                                    }();
                                                    var statearr_12171_12207 = state_12135__$1;
                                                    statearr_12171_12207[2] = null;
                                                    statearr_12171_12207[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_12136 === 22) {
                                                      var inst_12125 = state_12135[2];
                                                      var state_12135__$1 = state_12135;
                                                      var statearr_12172_12208 = state_12135__$1;
                                                      statearr_12172_12208[2] = inst_12125;
                                                      statearr_12172_12208[1] = 21;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      if (state_val_12136 === 23) {
                                                        var inst_12112 = state_12135[13];
                                                        var inst_12116 = state_12135[2];
                                                        var inst_12117 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_12112);
                                                        var state_12135__$1 = function() {
                                                          var statearr_12173 = state_12135;
                                                          statearr_12173[18] = inst_12116;
                                                          return statearr_12173;
                                                        }();
                                                        var statearr_12174_12209 = state_12135__$1;
                                                        statearr_12174_12209[2] = inst_12117;
                                                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12135__$1);
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                      } else {
                                                        if (state_val_12136 === 24) {
                                                          var inst_12064 = state_12135[7];
                                                          var inst_12114 = state_12135[12];
                                                          var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_12135, 23, Object, null, 22);
                                                          var inst_12121 = cljs.core.async.muxch_STAR_.call(null, inst_12114);
                                                          var state_12135__$1 = state_12135;
                                                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12135__$1, 25, inst_12121, inst_12064);
                                                        } else {
                                                          if (state_val_12136 === 25) {
                                                            var inst_12123 = state_12135[2];
                                                            var state_12135__$1 = state_12135;
                                                            var statearr_12175_12210 = state_12135__$1;
                                                            statearr_12175_12210[2] = inst_12123;
                                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12135__$1);
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                          } else {
                                                            return null;
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6160__auto__) {
          return function() {
            var state_machine__6161__auto__ = null;
            var state_machine__6161__auto____0 = function() {
              var statearr_12179 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_12179[0] = state_machine__6161__auto__;
              statearr_12179[1] = 1;
              return statearr_12179;
            };
            var state_machine__6161__auto____1 = function(state_12135) {
              while (true) {
                var ret_value__6162__auto__ = function() {
                  try {
                    while (true) {
                      var result__6163__auto__ = switch__6160__auto__.call(null, state_12135);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6163__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6163__auto__;
                      }
                      break;
                    }
                  } catch (e12180) {
                    if (e12180 instanceof Object) {
                      var ex__6164__auto__ = e12180;
                      var statearr_12181_12211 = state_12135;
                      statearr_12181_12211[5] = ex__6164__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12135);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e12180;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6162__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__12212 = state_12135;
                  state_12135 = G__12212;
                  continue;
                } else {
                  return ret_value__6162__auto__;
                }
                break;
              }
            };
            state_machine__6161__auto__ = function(state_12135) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6161__auto____0.call(this);
                case 1:
                  return state_machine__6161__auto____1.call(this, state_12135);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6161__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6161__auto____0;
            state_machine__6161__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6161__auto____1;
            return state_machine__6161__auto__;
          }();
        }(switch__6160__auto__);
      }();
      var state__6177__auto__ = function() {
        var statearr_12182 = f__6176__auto__.call(null);
        statearr_12182[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6175__auto___12183;
        return statearr_12182;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6177__auto__);
    });
    return p;
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub;
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true);
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub;
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p);
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all;
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null);
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__6175__auto___12349 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6176__auto__ = function() {
        var switch__6160__auto__ = function(state_12319) {
          var state_val_12320 = state_12319[1];
          if (state_val_12320 === 1) {
            var state_12319__$1 = state_12319;
            var statearr_12321_12350 = state_12319__$1;
            statearr_12321_12350[2] = null;
            statearr_12321_12350[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_12320 === 2) {
              var inst_12282 = cljs.core.reset_BANG_.call(null, dctr, cnt);
              var inst_12283 = 0;
              var state_12319__$1 = function() {
                var statearr_12322 = state_12319;
                statearr_12322[7] = inst_12283;
                statearr_12322[8] = inst_12282;
                return statearr_12322;
              }();
              var statearr_12323_12351 = state_12319__$1;
              statearr_12323_12351[2] = null;
              statearr_12323_12351[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_12320 === 3) {
                var inst_12317 = state_12319[2];
                var state_12319__$1 = state_12319;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12319__$1, inst_12317);
              } else {
                if (state_val_12320 === 4) {
                  var inst_12283 = state_12319[7];
                  var inst_12285 = inst_12283 < cnt;
                  var state_12319__$1 = state_12319;
                  if (cljs.core.truth_(inst_12285)) {
                    var statearr_12324_12352 = state_12319__$1;
                    statearr_12324_12352[1] = 6;
                  } else {
                    var statearr_12325_12353 = state_12319__$1;
                    statearr_12325_12353[1] = 7;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_12320 === 5) {
                    var inst_12303 = state_12319[2];
                    var state_12319__$1 = function() {
                      var statearr_12326 = state_12319;
                      statearr_12326[9] = inst_12303;
                      return statearr_12326;
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12319__$1, 12, dchan);
                  } else {
                    if (state_val_12320 === 6) {
                      var state_12319__$1 = state_12319;
                      var statearr_12327_12354 = state_12319__$1;
                      statearr_12327_12354[2] = null;
                      statearr_12327_12354[1] = 11;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_12320 === 7) {
                        var state_12319__$1 = state_12319;
                        var statearr_12328_12355 = state_12319__$1;
                        statearr_12328_12355[2] = null;
                        statearr_12328_12355[1] = 8;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_12320 === 8) {
                          var inst_12301 = state_12319[2];
                          var state_12319__$1 = state_12319;
                          var statearr_12329_12356 = state_12319__$1;
                          statearr_12329_12356[2] = inst_12301;
                          statearr_12329_12356[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_12320 === 9) {
                            var inst_12283 = state_12319[7];
                            var inst_12296 = state_12319[2];
                            var inst_12297 = inst_12283 + 1;
                            var inst_12283__$1 = inst_12297;
                            var state_12319__$1 = function() {
                              var statearr_12330 = state_12319;
                              statearr_12330[7] = inst_12283__$1;
                              statearr_12330[10] = inst_12296;
                              return statearr_12330;
                            }();
                            var statearr_12331_12357 = state_12319__$1;
                            statearr_12331_12357[2] = null;
                            statearr_12331_12357[1] = 4;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_12320 === 10) {
                              var inst_12287 = state_12319[2];
                              var inst_12288 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                              var state_12319__$1 = function() {
                                var statearr_12332 = state_12319;
                                statearr_12332[11] = inst_12287;
                                return statearr_12332;
                              }();
                              var statearr_12333_12358 = state_12319__$1;
                              statearr_12333_12358[2] = inst_12288;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12319__$1);
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_12320 === 11) {
                                var inst_12283 = state_12319[7];
                                var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_12319, 10, Object, null, 9);
                                var inst_12292 = chs__$1.call(null, inst_12283);
                                var inst_12293 = done.call(null, inst_12283);
                                var inst_12294 = cljs.core.async.take_BANG_.call(null, inst_12292, inst_12293);
                                var state_12319__$1 = state_12319;
                                var statearr_12334_12359 = state_12319__$1;
                                statearr_12334_12359[2] = inst_12294;
                                cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12319__$1);
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_12320 === 12) {
                                  var inst_12305 = state_12319[12];
                                  var inst_12305__$1 = state_12319[2];
                                  var inst_12306 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_12305__$1);
                                  var state_12319__$1 = function() {
                                    var statearr_12335 = state_12319;
                                    statearr_12335[12] = inst_12305__$1;
                                    return statearr_12335;
                                  }();
                                  if (cljs.core.truth_(inst_12306)) {
                                    var statearr_12336_12360 = state_12319__$1;
                                    statearr_12336_12360[1] = 13;
                                  } else {
                                    var statearr_12337_12361 = state_12319__$1;
                                    statearr_12337_12361[1] = 14;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_12320 === 13) {
                                    var inst_12308 = cljs.core.async.close_BANG_.call(null, out);
                                    var state_12319__$1 = state_12319;
                                    var statearr_12338_12362 = state_12319__$1;
                                    statearr_12338_12362[2] = inst_12308;
                                    statearr_12338_12362[1] = 15;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_12320 === 14) {
                                      var inst_12305 = state_12319[12];
                                      var inst_12310 = cljs.core.apply.call(null, f, inst_12305);
                                      var state_12319__$1 = state_12319;
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12319__$1, 16, out, inst_12310);
                                    } else {
                                      if (state_val_12320 === 15) {
                                        var inst_12315 = state_12319[2];
                                        var state_12319__$1 = state_12319;
                                        var statearr_12339_12363 = state_12319__$1;
                                        statearr_12339_12363[2] = inst_12315;
                                        statearr_12339_12363[1] = 3;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_12320 === 16) {
                                          var inst_12312 = state_12319[2];
                                          var state_12319__$1 = function() {
                                            var statearr_12340 = state_12319;
                                            statearr_12340[13] = inst_12312;
                                            return statearr_12340;
                                          }();
                                          var statearr_12341_12364 = state_12319__$1;
                                          statearr_12341_12364[2] = null;
                                          statearr_12341_12364[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6160__auto__) {
          return function() {
            var state_machine__6161__auto__ = null;
            var state_machine__6161__auto____0 = function() {
              var statearr_12345 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_12345[0] = state_machine__6161__auto__;
              statearr_12345[1] = 1;
              return statearr_12345;
            };
            var state_machine__6161__auto____1 = function(state_12319) {
              while (true) {
                var ret_value__6162__auto__ = function() {
                  try {
                    while (true) {
                      var result__6163__auto__ = switch__6160__auto__.call(null, state_12319);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6163__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6163__auto__;
                      }
                      break;
                    }
                  } catch (e12346) {
                    if (e12346 instanceof Object) {
                      var ex__6164__auto__ = e12346;
                      var statearr_12347_12365 = state_12319;
                      statearr_12347_12365[5] = ex__6164__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12319);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e12346;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6162__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__12366 = state_12319;
                  state_12319 = G__12366;
                  continue;
                } else {
                  return ret_value__6162__auto__;
                }
                break;
              }
            };
            state_machine__6161__auto__ = function(state_12319) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6161__auto____0.call(this);
                case 1:
                  return state_machine__6161__auto____1.call(this, state_12319);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6161__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6161__auto____0;
            state_machine__6161__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6161__auto____1;
            return state_machine__6161__auto__;
          }();
        }(switch__6160__auto__);
      }();
      var state__6177__auto__ = function() {
        var statearr_12348 = f__6176__auto__.call(null);
        statearr_12348[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6175__auto___12349;
        return statearr_12348;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6177__auto__);
    });
    return out;
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map;
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null);
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6175__auto___12474 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6176__auto__ = function() {
        var switch__6160__auto__ = function(state_12450) {
          var state_val_12451 = state_12450[1];
          if (state_val_12451 === 1) {
            var inst_12421 = cljs.core.vec.call(null, chs);
            var inst_12422 = inst_12421;
            var state_12450__$1 = function() {
              var statearr_12452 = state_12450;
              statearr_12452[7] = inst_12422;
              return statearr_12452;
            }();
            var statearr_12453_12475 = state_12450__$1;
            statearr_12453_12475[2] = null;
            statearr_12453_12475[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_12451 === 2) {
              var inst_12422 = state_12450[7];
              var inst_12424 = cljs.core.count.call(null, inst_12422);
              var inst_12425 = inst_12424 > 0;
              var state_12450__$1 = state_12450;
              if (cljs.core.truth_(inst_12425)) {
                var statearr_12454_12476 = state_12450__$1;
                statearr_12454_12476[1] = 4;
              } else {
                var statearr_12455_12477 = state_12450__$1;
                statearr_12455_12477[1] = 5;
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_12451 === 3) {
                var inst_12448 = state_12450[2];
                var state_12450__$1 = state_12450;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12450__$1, inst_12448);
              } else {
                if (state_val_12451 === 4) {
                  var inst_12422 = state_12450[7];
                  var state_12450__$1 = state_12450;
                  return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_12450__$1, 7, inst_12422);
                } else {
                  if (state_val_12451 === 5) {
                    var inst_12444 = cljs.core.async.close_BANG_.call(null, out);
                    var state_12450__$1 = state_12450;
                    var statearr_12456_12478 = state_12450__$1;
                    statearr_12456_12478[2] = inst_12444;
                    statearr_12456_12478[1] = 6;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_12451 === 6) {
                      var inst_12446 = state_12450[2];
                      var state_12450__$1 = state_12450;
                      var statearr_12457_12479 = state_12450__$1;
                      statearr_12457_12479[2] = inst_12446;
                      statearr_12457_12479[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_12451 === 7) {
                        var inst_12430 = state_12450[8];
                        var inst_12429 = state_12450[9];
                        var inst_12429__$1 = state_12450[2];
                        var inst_12430__$1 = cljs.core.nth.call(null, inst_12429__$1, 0, null);
                        var inst_12431 = cljs.core.nth.call(null, inst_12429__$1, 1, null);
                        var inst_12432 = inst_12430__$1 == null;
                        var state_12450__$1 = function() {
                          var statearr_12458 = state_12450;
                          statearr_12458[10] = inst_12431;
                          statearr_12458[8] = inst_12430__$1;
                          statearr_12458[9] = inst_12429__$1;
                          return statearr_12458;
                        }();
                        if (cljs.core.truth_(inst_12432)) {
                          var statearr_12459_12480 = state_12450__$1;
                          statearr_12459_12480[1] = 8;
                        } else {
                          var statearr_12460_12481 = state_12450__$1;
                          statearr_12460_12481[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_12451 === 8) {
                          var inst_12431 = state_12450[10];
                          var inst_12430 = state_12450[8];
                          var inst_12422 = state_12450[7];
                          var inst_12429 = state_12450[9];
                          var inst_12434 = function() {
                            var c = inst_12431;
                            var v = inst_12430;
                            var vec__12427 = inst_12429;
                            var cs = inst_12422;
                            return function(c, v, vec__12427, cs, inst_12431, inst_12430, inst_12422, inst_12429, state_val_12451) {
                              return function(p1__12367_SHARP_) {
                                return cljs.core.not_EQ_.call(null, c, p1__12367_SHARP_);
                              };
                            }(c, v, vec__12427, cs, inst_12431, inst_12430, inst_12422, inst_12429, state_val_12451);
                          }();
                          var inst_12435 = cljs.core.filterv.call(null, inst_12434, inst_12422);
                          var inst_12422__$1 = inst_12435;
                          var state_12450__$1 = function() {
                            var statearr_12461 = state_12450;
                            statearr_12461[7] = inst_12422__$1;
                            return statearr_12461;
                          }();
                          var statearr_12462_12482 = state_12450__$1;
                          statearr_12462_12482[2] = null;
                          statearr_12462_12482[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_12451 === 9) {
                            var inst_12430 = state_12450[8];
                            var state_12450__$1 = state_12450;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12450__$1, 11, out, inst_12430);
                          } else {
                            if (state_val_12451 === 10) {
                              var inst_12442 = state_12450[2];
                              var state_12450__$1 = state_12450;
                              var statearr_12464_12483 = state_12450__$1;
                              statearr_12464_12483[2] = inst_12442;
                              statearr_12464_12483[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_12451 === 11) {
                                var inst_12422 = state_12450[7];
                                var inst_12439 = state_12450[2];
                                var tmp12463 = inst_12422;
                                var inst_12422__$1 = tmp12463;
                                var state_12450__$1 = function() {
                                  var statearr_12465 = state_12450;
                                  statearr_12465[11] = inst_12439;
                                  statearr_12465[7] = inst_12422__$1;
                                  return statearr_12465;
                                }();
                                var statearr_12466_12484 = state_12450__$1;
                                statearr_12466_12484[2] = null;
                                statearr_12466_12484[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6160__auto__) {
          return function() {
            var state_machine__6161__auto__ = null;
            var state_machine__6161__auto____0 = function() {
              var statearr_12470 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_12470[0] = state_machine__6161__auto__;
              statearr_12470[1] = 1;
              return statearr_12470;
            };
            var state_machine__6161__auto____1 = function(state_12450) {
              while (true) {
                var ret_value__6162__auto__ = function() {
                  try {
                    while (true) {
                      var result__6163__auto__ = switch__6160__auto__.call(null, state_12450);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6163__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6163__auto__;
                      }
                      break;
                    }
                  } catch (e12471) {
                    if (e12471 instanceof Object) {
                      var ex__6164__auto__ = e12471;
                      var statearr_12472_12485 = state_12450;
                      statearr_12472_12485[5] = ex__6164__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12450);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e12471;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6162__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__12486 = state_12450;
                  state_12450 = G__12486;
                  continue;
                } else {
                  return ret_value__6162__auto__;
                }
                break;
              }
            };
            state_machine__6161__auto__ = function(state_12450) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6161__auto____0.call(this);
                case 1:
                  return state_machine__6161__auto____1.call(this, state_12450);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6161__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6161__auto____0;
            state_machine__6161__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6161__auto____1;
            return state_machine__6161__auto__;
          }();
        }(switch__6160__auto__);
      }();
      var state__6177__auto__ = function() {
        var statearr_12473 = f__6176__auto__.call(null);
        statearr_12473[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6175__auto___12474;
        return statearr_12473;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6177__auto__);
    });
    return out;
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge;
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function() {
  var take = null;
  var take__2 = function(n, ch) {
    return take.call(null, n, ch, null);
  };
  var take__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6175__auto___12579 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6176__auto__ = function() {
        var switch__6160__auto__ = function(state_12556) {
          var state_val_12557 = state_12556[1];
          if (state_val_12557 === 1) {
            var inst_12533 = 0;
            var state_12556__$1 = function() {
              var statearr_12558 = state_12556;
              statearr_12558[7] = inst_12533;
              return statearr_12558;
            }();
            var statearr_12559_12580 = state_12556__$1;
            statearr_12559_12580[2] = null;
            statearr_12559_12580[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_12557 === 2) {
              var inst_12533 = state_12556[7];
              var inst_12535 = inst_12533 < n;
              var state_12556__$1 = state_12556;
              if (cljs.core.truth_(inst_12535)) {
                var statearr_12560_12581 = state_12556__$1;
                statearr_12560_12581[1] = 4;
              } else {
                var statearr_12561_12582 = state_12556__$1;
                statearr_12561_12582[1] = 5;
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_12557 === 3) {
                var inst_12553 = state_12556[2];
                var inst_12554 = cljs.core.async.close_BANG_.call(null, out);
                var state_12556__$1 = function() {
                  var statearr_12562 = state_12556;
                  statearr_12562[8] = inst_12553;
                  return statearr_12562;
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12556__$1, inst_12554);
              } else {
                if (state_val_12557 === 4) {
                  var state_12556__$1 = state_12556;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12556__$1, 7, ch);
                } else {
                  if (state_val_12557 === 5) {
                    var state_12556__$1 = state_12556;
                    var statearr_12563_12583 = state_12556__$1;
                    statearr_12563_12583[2] = null;
                    statearr_12563_12583[1] = 6;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_12557 === 6) {
                      var inst_12551 = state_12556[2];
                      var state_12556__$1 = state_12556;
                      var statearr_12564_12584 = state_12556__$1;
                      statearr_12564_12584[2] = inst_12551;
                      statearr_12564_12584[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_12557 === 7) {
                        var inst_12538 = state_12556[9];
                        var inst_12538__$1 = state_12556[2];
                        var inst_12539 = inst_12538__$1 == null;
                        var inst_12540 = cljs.core.not.call(null, inst_12539);
                        var state_12556__$1 = function() {
                          var statearr_12565 = state_12556;
                          statearr_12565[9] = inst_12538__$1;
                          return statearr_12565;
                        }();
                        if (inst_12540) {
                          var statearr_12566_12585 = state_12556__$1;
                          statearr_12566_12585[1] = 8;
                        } else {
                          var statearr_12567_12586 = state_12556__$1;
                          statearr_12567_12586[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_12557 === 8) {
                          var inst_12538 = state_12556[9];
                          var state_12556__$1 = state_12556;
                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12556__$1, 11, out, inst_12538);
                        } else {
                          if (state_val_12557 === 9) {
                            var state_12556__$1 = state_12556;
                            var statearr_12568_12587 = state_12556__$1;
                            statearr_12568_12587[2] = null;
                            statearr_12568_12587[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_12557 === 10) {
                              var inst_12548 = state_12556[2];
                              var state_12556__$1 = state_12556;
                              var statearr_12569_12588 = state_12556__$1;
                              statearr_12569_12588[2] = inst_12548;
                              statearr_12569_12588[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_12557 === 11) {
                                var inst_12533 = state_12556[7];
                                var inst_12543 = state_12556[2];
                                var inst_12544 = inst_12533 + 1;
                                var inst_12533__$1 = inst_12544;
                                var state_12556__$1 = function() {
                                  var statearr_12570 = state_12556;
                                  statearr_12570[10] = inst_12543;
                                  statearr_12570[7] = inst_12533__$1;
                                  return statearr_12570;
                                }();
                                var statearr_12571_12589 = state_12556__$1;
                                statearr_12571_12589[2] = null;
                                statearr_12571_12589[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6160__auto__) {
          return function() {
            var state_machine__6161__auto__ = null;
            var state_machine__6161__auto____0 = function() {
              var statearr_12575 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_12575[0] = state_machine__6161__auto__;
              statearr_12575[1] = 1;
              return statearr_12575;
            };
            var state_machine__6161__auto____1 = function(state_12556) {
              while (true) {
                var ret_value__6162__auto__ = function() {
                  try {
                    while (true) {
                      var result__6163__auto__ = switch__6160__auto__.call(null, state_12556);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6163__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6163__auto__;
                      }
                      break;
                    }
                  } catch (e12576) {
                    if (e12576 instanceof Object) {
                      var ex__6164__auto__ = e12576;
                      var statearr_12577_12590 = state_12556;
                      statearr_12577_12590[5] = ex__6164__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12556);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e12576;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6162__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__12591 = state_12556;
                  state_12556 = G__12591;
                  continue;
                } else {
                  return ret_value__6162__auto__;
                }
                break;
              }
            };
            state_machine__6161__auto__ = function(state_12556) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6161__auto____0.call(this);
                case 1:
                  return state_machine__6161__auto____1.call(this, state_12556);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6161__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6161__auto____0;
            state_machine__6161__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6161__auto____1;
            return state_machine__6161__auto__;
          }();
        }(switch__6160__auto__);
      }();
      var state__6177__auto__ = function() {
        var statearr_12578 = f__6176__auto__.call(null);
        statearr_12578[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6175__auto___12579;
        return statearr_12578;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6177__auto__);
    });
    return out;
  };
  take = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return take__2.call(this, n, ch);
      case 3:
        return take__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  take.cljs$core$IFn$_invoke$arity$3 = take__3;
  return take;
}();
cljs.core.async.unique = function() {
  var unique = null;
  var unique__1 = function(ch) {
    return unique.call(null, ch, null);
  };
  var unique__2 = function(ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6175__auto___12688 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6176__auto__ = function() {
        var switch__6160__auto__ = function(state_12663) {
          var state_val_12664 = state_12663[1];
          if (state_val_12664 === 1) {
            var inst_12640 = null;
            var state_12663__$1 = function() {
              var statearr_12665 = state_12663;
              statearr_12665[7] = inst_12640;
              return statearr_12665;
            }();
            var statearr_12666_12689 = state_12663__$1;
            statearr_12666_12689[2] = null;
            statearr_12666_12689[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_12664 === 2) {
              var state_12663__$1 = state_12663;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12663__$1, 4, ch);
            } else {
              if (state_val_12664 === 3) {
                var inst_12660 = state_12663[2];
                var inst_12661 = cljs.core.async.close_BANG_.call(null, out);
                var state_12663__$1 = function() {
                  var statearr_12667 = state_12663;
                  statearr_12667[8] = inst_12660;
                  return statearr_12667;
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12663__$1, inst_12661);
              } else {
                if (state_val_12664 === 4) {
                  var inst_12643 = state_12663[9];
                  var inst_12643__$1 = state_12663[2];
                  var inst_12644 = inst_12643__$1 == null;
                  var inst_12645 = cljs.core.not.call(null, inst_12644);
                  var state_12663__$1 = function() {
                    var statearr_12668 = state_12663;
                    statearr_12668[9] = inst_12643__$1;
                    return statearr_12668;
                  }();
                  if (inst_12645) {
                    var statearr_12669_12690 = state_12663__$1;
                    statearr_12669_12690[1] = 5;
                  } else {
                    var statearr_12670_12691 = state_12663__$1;
                    statearr_12670_12691[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_12664 === 5) {
                    var inst_12643 = state_12663[9];
                    var inst_12640 = state_12663[7];
                    var inst_12647 = cljs.core._EQ_.call(null, inst_12643, inst_12640);
                    var state_12663__$1 = state_12663;
                    if (inst_12647) {
                      var statearr_12671_12692 = state_12663__$1;
                      statearr_12671_12692[1] = 8;
                    } else {
                      var statearr_12672_12693 = state_12663__$1;
                      statearr_12672_12693[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_12664 === 6) {
                      var state_12663__$1 = state_12663;
                      var statearr_12674_12694 = state_12663__$1;
                      statearr_12674_12694[2] = null;
                      statearr_12674_12694[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_12664 === 7) {
                        var inst_12658 = state_12663[2];
                        var state_12663__$1 = state_12663;
                        var statearr_12675_12695 = state_12663__$1;
                        statearr_12675_12695[2] = inst_12658;
                        statearr_12675_12695[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_12664 === 8) {
                          var inst_12640 = state_12663[7];
                          var tmp12673 = inst_12640;
                          var inst_12640__$1 = tmp12673;
                          var state_12663__$1 = function() {
                            var statearr_12676 = state_12663;
                            statearr_12676[7] = inst_12640__$1;
                            return statearr_12676;
                          }();
                          var statearr_12677_12696 = state_12663__$1;
                          statearr_12677_12696[2] = null;
                          statearr_12677_12696[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_12664 === 9) {
                            var inst_12643 = state_12663[9];
                            var state_12663__$1 = state_12663;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12663__$1, 11, out, inst_12643);
                          } else {
                            if (state_val_12664 === 10) {
                              var inst_12655 = state_12663[2];
                              var state_12663__$1 = state_12663;
                              var statearr_12678_12697 = state_12663__$1;
                              statearr_12678_12697[2] = inst_12655;
                              statearr_12678_12697[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_12664 === 11) {
                                var inst_12643 = state_12663[9];
                                var inst_12652 = state_12663[2];
                                var inst_12640 = inst_12643;
                                var state_12663__$1 = function() {
                                  var statearr_12679 = state_12663;
                                  statearr_12679[10] = inst_12652;
                                  statearr_12679[7] = inst_12640;
                                  return statearr_12679;
                                }();
                                var statearr_12680_12698 = state_12663__$1;
                                statearr_12680_12698[2] = null;
                                statearr_12680_12698[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6160__auto__) {
          return function() {
            var state_machine__6161__auto__ = null;
            var state_machine__6161__auto____0 = function() {
              var statearr_12684 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_12684[0] = state_machine__6161__auto__;
              statearr_12684[1] = 1;
              return statearr_12684;
            };
            var state_machine__6161__auto____1 = function(state_12663) {
              while (true) {
                var ret_value__6162__auto__ = function() {
                  try {
                    while (true) {
                      var result__6163__auto__ = switch__6160__auto__.call(null, state_12663);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6163__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6163__auto__;
                      }
                      break;
                    }
                  } catch (e12685) {
                    if (e12685 instanceof Object) {
                      var ex__6164__auto__ = e12685;
                      var statearr_12686_12699 = state_12663;
                      statearr_12686_12699[5] = ex__6164__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12663);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e12685;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6162__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__12700 = state_12663;
                  state_12663 = G__12700;
                  continue;
                } else {
                  return ret_value__6162__auto__;
                }
                break;
              }
            };
            state_machine__6161__auto__ = function(state_12663) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6161__auto____0.call(this);
                case 1:
                  return state_machine__6161__auto____1.call(this, state_12663);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6161__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6161__auto____0;
            state_machine__6161__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6161__auto____1;
            return state_machine__6161__auto__;
          }();
        }(switch__6160__auto__);
      }();
      var state__6177__auto__ = function() {
        var statearr_12687 = f__6176__auto__.call(null);
        statearr_12687[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6175__auto___12688;
        return statearr_12687;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6177__auto__);
    });
    return out;
  };
  unique = function(ch, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return unique__1.call(this, ch);
      case 2:
        return unique__2.call(this, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unique.cljs$core$IFn$_invoke$arity$1 = unique__1;
  unique.cljs$core$IFn$_invoke$arity$2 = unique__2;
  return unique;
}();
cljs.core.async.partition = function() {
  var partition = null;
  var partition__2 = function(n, ch) {
    return partition.call(null, n, ch, null);
  };
  var partition__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6175__auto___12835 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6176__auto__ = function() {
        var switch__6160__auto__ = function(state_12805) {
          var state_val_12806 = state_12805[1];
          if (state_val_12806 === 1) {
            var inst_12768 = new Array(n);
            var inst_12769 = inst_12768;
            var inst_12770 = 0;
            var state_12805__$1 = function() {
              var statearr_12807 = state_12805;
              statearr_12807[7] = inst_12769;
              statearr_12807[8] = inst_12770;
              return statearr_12807;
            }();
            var statearr_12808_12836 = state_12805__$1;
            statearr_12808_12836[2] = null;
            statearr_12808_12836[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_12806 === 2) {
              var state_12805__$1 = state_12805;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12805__$1, 4, ch);
            } else {
              if (state_val_12806 === 3) {
                var inst_12803 = state_12805[2];
                var state_12805__$1 = state_12805;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12805__$1, inst_12803);
              } else {
                if (state_val_12806 === 4) {
                  var inst_12773 = state_12805[9];
                  var inst_12773__$1 = state_12805[2];
                  var inst_12774 = inst_12773__$1 == null;
                  var inst_12775 = cljs.core.not.call(null, inst_12774);
                  var state_12805__$1 = function() {
                    var statearr_12809 = state_12805;
                    statearr_12809[9] = inst_12773__$1;
                    return statearr_12809;
                  }();
                  if (inst_12775) {
                    var statearr_12810_12837 = state_12805__$1;
                    statearr_12810_12837[1] = 5;
                  } else {
                    var statearr_12811_12838 = state_12805__$1;
                    statearr_12811_12838[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_12806 === 5) {
                    var inst_12769 = state_12805[7];
                    var inst_12778 = state_12805[10];
                    var inst_12773 = state_12805[9];
                    var inst_12770 = state_12805[8];
                    var inst_12777 = inst_12769[inst_12770] = inst_12773;
                    var inst_12778__$1 = inst_12770 + 1;
                    var inst_12779 = inst_12778__$1 < n;
                    var state_12805__$1 = function() {
                      var statearr_12812 = state_12805;
                      statearr_12812[11] = inst_12777;
                      statearr_12812[10] = inst_12778__$1;
                      return statearr_12812;
                    }();
                    if (cljs.core.truth_(inst_12779)) {
                      var statearr_12813_12839 = state_12805__$1;
                      statearr_12813_12839[1] = 8;
                    } else {
                      var statearr_12814_12840 = state_12805__$1;
                      statearr_12814_12840[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_12806 === 6) {
                      var inst_12770 = state_12805[8];
                      var inst_12791 = inst_12770 > 0;
                      var state_12805__$1 = state_12805;
                      if (cljs.core.truth_(inst_12791)) {
                        var statearr_12816_12841 = state_12805__$1;
                        statearr_12816_12841[1] = 12;
                      } else {
                        var statearr_12817_12842 = state_12805__$1;
                        statearr_12817_12842[1] = 13;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_12806 === 7) {
                        var inst_12801 = state_12805[2];
                        var state_12805__$1 = state_12805;
                        var statearr_12818_12843 = state_12805__$1;
                        statearr_12818_12843[2] = inst_12801;
                        statearr_12818_12843[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_12806 === 8) {
                          var inst_12769 = state_12805[7];
                          var inst_12778 = state_12805[10];
                          var tmp12815 = inst_12769;
                          var inst_12769__$1 = tmp12815;
                          var inst_12770 = inst_12778;
                          var state_12805__$1 = function() {
                            var statearr_12819 = state_12805;
                            statearr_12819[7] = inst_12769__$1;
                            statearr_12819[8] = inst_12770;
                            return statearr_12819;
                          }();
                          var statearr_12820_12844 = state_12805__$1;
                          statearr_12820_12844[2] = null;
                          statearr_12820_12844[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_12806 === 9) {
                            var inst_12769 = state_12805[7];
                            var inst_12783 = cljs.core.vec.call(null, inst_12769);
                            var state_12805__$1 = state_12805;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12805__$1, 11, out, inst_12783);
                          } else {
                            if (state_val_12806 === 10) {
                              var inst_12789 = state_12805[2];
                              var state_12805__$1 = state_12805;
                              var statearr_12821_12845 = state_12805__$1;
                              statearr_12821_12845[2] = inst_12789;
                              statearr_12821_12845[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_12806 === 11) {
                                var inst_12785 = state_12805[2];
                                var inst_12786 = new Array(n);
                                var inst_12769 = inst_12786;
                                var inst_12770 = 0;
                                var state_12805__$1 = function() {
                                  var statearr_12822 = state_12805;
                                  statearr_12822[7] = inst_12769;
                                  statearr_12822[12] = inst_12785;
                                  statearr_12822[8] = inst_12770;
                                  return statearr_12822;
                                }();
                                var statearr_12823_12846 = state_12805__$1;
                                statearr_12823_12846[2] = null;
                                statearr_12823_12846[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_12806 === 12) {
                                  var inst_12769 = state_12805[7];
                                  var inst_12793 = cljs.core.vec.call(null, inst_12769);
                                  var state_12805__$1 = state_12805;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12805__$1, 15, out, inst_12793);
                                } else {
                                  if (state_val_12806 === 13) {
                                    var state_12805__$1 = state_12805;
                                    var statearr_12824_12847 = state_12805__$1;
                                    statearr_12824_12847[2] = null;
                                    statearr_12824_12847[1] = 14;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_12806 === 14) {
                                      var inst_12798 = state_12805[2];
                                      var inst_12799 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_12805__$1 = function() {
                                        var statearr_12825 = state_12805;
                                        statearr_12825[13] = inst_12798;
                                        return statearr_12825;
                                      }();
                                      var statearr_12826_12848 = state_12805__$1;
                                      statearr_12826_12848[2] = inst_12799;
                                      statearr_12826_12848[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_12806 === 15) {
                                        var inst_12795 = state_12805[2];
                                        var state_12805__$1 = state_12805;
                                        var statearr_12827_12849 = state_12805__$1;
                                        statearr_12827_12849[2] = inst_12795;
                                        statearr_12827_12849[1] = 14;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6160__auto__) {
          return function() {
            var state_machine__6161__auto__ = null;
            var state_machine__6161__auto____0 = function() {
              var statearr_12831 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_12831[0] = state_machine__6161__auto__;
              statearr_12831[1] = 1;
              return statearr_12831;
            };
            var state_machine__6161__auto____1 = function(state_12805) {
              while (true) {
                var ret_value__6162__auto__ = function() {
                  try {
                    while (true) {
                      var result__6163__auto__ = switch__6160__auto__.call(null, state_12805);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6163__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6163__auto__;
                      }
                      break;
                    }
                  } catch (e12832) {
                    if (e12832 instanceof Object) {
                      var ex__6164__auto__ = e12832;
                      var statearr_12833_12850 = state_12805;
                      statearr_12833_12850[5] = ex__6164__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12805);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e12832;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6162__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__12851 = state_12805;
                  state_12805 = G__12851;
                  continue;
                } else {
                  return ret_value__6162__auto__;
                }
                break;
              }
            };
            state_machine__6161__auto__ = function(state_12805) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6161__auto____0.call(this);
                case 1:
                  return state_machine__6161__auto____1.call(this, state_12805);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6161__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6161__auto____0;
            state_machine__6161__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6161__auto____1;
            return state_machine__6161__auto__;
          }();
        }(switch__6160__auto__);
      }();
      var state__6177__auto__ = function() {
        var statearr_12834 = f__6176__auto__.call(null);
        statearr_12834[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6175__auto___12835;
        return statearr_12834;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6177__auto__);
    });
    return out;
  };
  partition = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, ch);
      case 3:
        return partition__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  return partition;
}();
cljs.core.async.partition_by = function() {
  var partition_by = null;
  var partition_by__2 = function(f, ch) {
    return partition_by.call(null, f, ch, null);
  };
  var partition_by__3 = function(f, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6175__auto___12994 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6176__auto__ = function() {
        var switch__6160__auto__ = function(state_12964) {
          var state_val_12965 = state_12964[1];
          if (state_val_12965 === 1) {
            var inst_12923 = [];
            var inst_12924 = inst_12923;
            var inst_12925 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", 4382193538);
            var state_12964__$1 = function() {
              var statearr_12966 = state_12964;
              statearr_12966[7] = inst_12924;
              statearr_12966[8] = inst_12925;
              return statearr_12966;
            }();
            var statearr_12967_12995 = state_12964__$1;
            statearr_12967_12995[2] = null;
            statearr_12967_12995[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_12965 === 2) {
              var state_12964__$1 = state_12964;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12964__$1, 4, ch);
            } else {
              if (state_val_12965 === 3) {
                var inst_12962 = state_12964[2];
                var state_12964__$1 = state_12964;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12964__$1, inst_12962);
              } else {
                if (state_val_12965 === 4) {
                  var inst_12928 = state_12964[9];
                  var inst_12928__$1 = state_12964[2];
                  var inst_12929 = inst_12928__$1 == null;
                  var inst_12930 = cljs.core.not.call(null, inst_12929);
                  var state_12964__$1 = function() {
                    var statearr_12968 = state_12964;
                    statearr_12968[9] = inst_12928__$1;
                    return statearr_12968;
                  }();
                  if (inst_12930) {
                    var statearr_12969_12996 = state_12964__$1;
                    statearr_12969_12996[1] = 5;
                  } else {
                    var statearr_12970_12997 = state_12964__$1;
                    statearr_12970_12997[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_12965 === 5) {
                    var inst_12925 = state_12964[8];
                    var inst_12932 = state_12964[10];
                    var inst_12928 = state_12964[9];
                    var inst_12932__$1 = f.call(null, inst_12928);
                    var inst_12933 = cljs.core._EQ_.call(null, inst_12932__$1, inst_12925);
                    var inst_12934 = cljs.core.keyword_identical_QMARK_.call(null, inst_12925, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", 4382193538));
                    var inst_12935 = inst_12933 || inst_12934;
                    var state_12964__$1 = function() {
                      var statearr_12971 = state_12964;
                      statearr_12971[10] = inst_12932__$1;
                      return statearr_12971;
                    }();
                    if (cljs.core.truth_(inst_12935)) {
                      var statearr_12972_12998 = state_12964__$1;
                      statearr_12972_12998[1] = 8;
                    } else {
                      var statearr_12973_12999 = state_12964__$1;
                      statearr_12973_12999[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_12965 === 6) {
                      var inst_12924 = state_12964[7];
                      var inst_12949 = inst_12924.length;
                      var inst_12950 = inst_12949 > 0;
                      var state_12964__$1 = state_12964;
                      if (cljs.core.truth_(inst_12950)) {
                        var statearr_12975_13000 = state_12964__$1;
                        statearr_12975_13000[1] = 12;
                      } else {
                        var statearr_12976_13001 = state_12964__$1;
                        statearr_12976_13001[1] = 13;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_12965 === 7) {
                        var inst_12960 = state_12964[2];
                        var state_12964__$1 = state_12964;
                        var statearr_12977_13002 = state_12964__$1;
                        statearr_12977_13002[2] = inst_12960;
                        statearr_12977_13002[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_12965 === 8) {
                          var inst_12924 = state_12964[7];
                          var inst_12932 = state_12964[10];
                          var inst_12928 = state_12964[9];
                          var inst_12937 = inst_12924.push(inst_12928);
                          var tmp12974 = inst_12924;
                          var inst_12924__$1 = tmp12974;
                          var inst_12925 = inst_12932;
                          var state_12964__$1 = function() {
                            var statearr_12978 = state_12964;
                            statearr_12978[7] = inst_12924__$1;
                            statearr_12978[8] = inst_12925;
                            statearr_12978[11] = inst_12937;
                            return statearr_12978;
                          }();
                          var statearr_12979_13003 = state_12964__$1;
                          statearr_12979_13003[2] = null;
                          statearr_12979_13003[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_12965 === 9) {
                            var inst_12924 = state_12964[7];
                            var inst_12940 = cljs.core.vec.call(null, inst_12924);
                            var state_12964__$1 = state_12964;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12964__$1, 11, out, inst_12940);
                          } else {
                            if (state_val_12965 === 10) {
                              var inst_12947 = state_12964[2];
                              var state_12964__$1 = state_12964;
                              var statearr_12980_13004 = state_12964__$1;
                              statearr_12980_13004[2] = inst_12947;
                              statearr_12980_13004[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_12965 === 11) {
                                var inst_12932 = state_12964[10];
                                var inst_12928 = state_12964[9];
                                var inst_12942 = state_12964[2];
                                var inst_12943 = [];
                                var inst_12944 = inst_12943.push(inst_12928);
                                var inst_12924 = inst_12943;
                                var inst_12925 = inst_12932;
                                var state_12964__$1 = function() {
                                  var statearr_12981 = state_12964;
                                  statearr_12981[12] = inst_12942;
                                  statearr_12981[13] = inst_12944;
                                  statearr_12981[7] = inst_12924;
                                  statearr_12981[8] = inst_12925;
                                  return statearr_12981;
                                }();
                                var statearr_12982_13005 = state_12964__$1;
                                statearr_12982_13005[2] = null;
                                statearr_12982_13005[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_12965 === 12) {
                                  var inst_12924 = state_12964[7];
                                  var inst_12952 = cljs.core.vec.call(null, inst_12924);
                                  var state_12964__$1 = state_12964;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12964__$1, 15, out, inst_12952);
                                } else {
                                  if (state_val_12965 === 13) {
                                    var state_12964__$1 = state_12964;
                                    var statearr_12983_13006 = state_12964__$1;
                                    statearr_12983_13006[2] = null;
                                    statearr_12983_13006[1] = 14;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_12965 === 14) {
                                      var inst_12957 = state_12964[2];
                                      var inst_12958 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_12964__$1 = function() {
                                        var statearr_12984 = state_12964;
                                        statearr_12984[14] = inst_12957;
                                        return statearr_12984;
                                      }();
                                      var statearr_12985_13007 = state_12964__$1;
                                      statearr_12985_13007[2] = inst_12958;
                                      statearr_12985_13007[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_12965 === 15) {
                                        var inst_12954 = state_12964[2];
                                        var state_12964__$1 = state_12964;
                                        var statearr_12986_13008 = state_12964__$1;
                                        statearr_12986_13008[2] = inst_12954;
                                        statearr_12986_13008[1] = 14;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__6160__auto__) {
          return function() {
            var state_machine__6161__auto__ = null;
            var state_machine__6161__auto____0 = function() {
              var statearr_12990 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_12990[0] = state_machine__6161__auto__;
              statearr_12990[1] = 1;
              return statearr_12990;
            };
            var state_machine__6161__auto____1 = function(state_12964) {
              while (true) {
                var ret_value__6162__auto__ = function() {
                  try {
                    while (true) {
                      var result__6163__auto__ = switch__6160__auto__.call(null, state_12964);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6163__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6163__auto__;
                      }
                      break;
                    }
                  } catch (e12991) {
                    if (e12991 instanceof Object) {
                      var ex__6164__auto__ = e12991;
                      var statearr_12992_13009 = state_12964;
                      statearr_12992_13009[5] = ex__6164__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12964);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e12991;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6162__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__13010 = state_12964;
                  state_12964 = G__13010;
                  continue;
                } else {
                  return ret_value__6162__auto__;
                }
                break;
              }
            };
            state_machine__6161__auto__ = function(state_12964) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6161__auto____0.call(this);
                case 1:
                  return state_machine__6161__auto____1.call(this, state_12964);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6161__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6161__auto____0;
            state_machine__6161__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6161__auto____1;
            return state_machine__6161__auto__;
          }();
        }(switch__6160__auto__);
      }();
      var state__6177__auto__ = function() {
        var statearr_12993 = f__6176__auto__.call(null);
        statearr_12993[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6175__auto___12994;
        return statearr_12993;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6177__auto__);
    });
    return out;
  };
  partition_by = function(f, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition_by__2.call(this, f, ch);
      case 3:
        return partition_by__3.call(this, f, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  partition_by.cljs$core$IFn$_invoke$arity$3 = partition_by__3;
  return partition_by;
}();
goog.provide("yantra.graphics");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("om.dom");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("React");
goog.require("yantra.datatypes");
goog.require("yantra.datatypes");
yantra.graphics.BoundingBox = function() {
  var obj9183 = {};
  return obj9183;
}();
yantra.graphics.bounding_points = function bounding_points(x) {
  if (function() {
    var and__3396__auto__ = x;
    if (and__3396__auto__) {
      return x.yantra$graphics$BoundingBox$bounding_points$arity$1;
    } else {
      return and__3396__auto__;
    }
  }()) {
    return x.yantra$graphics$BoundingBox$bounding_points$arity$1(x);
  } else {
    var x__4029__auto__ = x == null ? null : x;
    return function() {
      var or__3408__auto__ = yantra.graphics.bounding_points[goog.typeOf(x__4029__auto__)];
      if (or__3408__auto__) {
        return or__3408__auto__;
      } else {
        var or__3408__auto____$1 = yantra.graphics.bounding_points["_"];
        if (or__3408__auto____$1) {
          return or__3408__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "BoundingBox.bounding-points", x);
        }
      }
    }().call(null, x);
  }
};
yantra.datatypes.Style.prototype.yantra$graphics$BoundingBox$ = true;
yantra.datatypes.Style.prototype.yantra$graphics$BoundingBox$bounding_points$arity$1 = function(this$) {
  var this$__$1 = this;
  return yantra.graphics.bounding_points.call(null, (new cljs.core.Keyword(null, "prims", "prims", 1120839167)).cljs$core$IFn$_invoke$arity$1(this$__$1));
};
yantra.datatypes.Rectangle.prototype.yantra$graphics$BoundingBox$ = true;
yantra.datatypes.Rectangle.prototype.yantra$graphics$BoundingBox$bounding_points$arity$1 = function(this$) {
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "p1", "p1", 1013907763)).cljs$core$IFn$_invoke$arity$1(this$__$1), (new cljs.core.Keyword(null, "p2", "p2", 1013907764)).cljs$core$IFn$_invoke$arity$1(this$__$1)], null);
};
yantra.datatypes.Disk.prototype.yantra$graphics$BoundingBox$ = true;
yantra.datatypes.Disk.prototype.yantra$graphics$BoundingBox$bounding_points$arity$1 = function(this$) {
  var this$__$1 = this;
  var point = (new cljs.core.Keyword(null, "point", "point", 1120749826)).cljs$core$IFn$_invoke$arity$1(this$__$1);
  var radius = (new cljs.core.Keyword(null, "radius", "radius", 4370292740)).cljs$core$IFn$_invoke$arity$1(this$__$1);
  var x = cljs.core.first.call(null, point);
  var y = cljs.core.last.call(null, point);
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x + radius, y], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x - radius, y], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y + radius], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y - radius], 
  null)], null);
};
yantra.datatypes.Line.prototype.yantra$graphics$BoundingBox$ = true;
yantra.datatypes.Line.prototype.yantra$graphics$BoundingBox$bounding_points$arity$1 = function(this$) {
  var this$__$1 = this;
  return(new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(this$__$1);
};
yantra.datatypes.Point.prototype.yantra$graphics$BoundingBox$ = true;
yantra.datatypes.Point.prototype.yantra$graphics$BoundingBox$bounding_points$arity$1 = function(this$) {
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "point", "point", 1120749826)).cljs$core$IFn$_invoke$arity$1(this$__$1)], null);
};
yantra.graphics.transpose = function transpose(m) {
  return cljs.core.apply.call(null, cljs.core.mapv, cljs.core.vector, m);
};
yantra.graphics.bounding_box = function bounding_box(g) {
  if (cljs.core.seq_QMARK_.call(null, g) || cljs.core.vector_QMARK_.call(null, g)) {
    return yantra.graphics.transpose.call(null, cljs.core.map.call(null, function(v) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, cljs.core.min, v), cljs.core.apply.call(null, cljs.core.max, v)], null);
    }, yantra.graphics.transpose.call(null, cljs.core.mapcat.call(null, bounding_box, g))));
  } else {
    return yantra.graphics.transpose.call(null, cljs.core.map.call(null, function(v) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, cljs.core.min, v), cljs.core.apply.call(null, cljs.core.max, v)], null);
    }, yantra.graphics.transpose.call(null, yantra.graphics.bounding_points.call(null, g))));
  }
};
yantra.graphics.expand_plot_range = function expand_plot_range(bounding_box, image_size) {
  var vec__9188 = bounding_box;
  var vec__9189 = cljs.core.nth.call(null, vec__9188, 0, null);
  var xmin = cljs.core.nth.call(null, vec__9189, 0, null);
  var ymin = cljs.core.nth.call(null, vec__9189, 1, null);
  var vec__9190 = cljs.core.nth.call(null, vec__9188, 1, null);
  var xmax = cljs.core.nth.call(null, vec__9190, 0, null);
  var ymax = cljs.core.nth.call(null, vec__9190, 1, null);
  var vec__9191 = image_size;
  var image_width = cljs.core.nth.call(null, vec__9191, 0, null);
  var image_height = cljs.core.nth.call(null, vec__9191, 1, null);
  var width = Math.abs.call(null, xmax - xmin);
  var height = Math.abs.call(null, ymax - ymin);
  var plotaspect = height / width;
  var imageaspect = image_height / image_width;
  if (plotaspect < imageaspect) {
    var newheight = width * imageaspect;
    var heightdiff = (newheight - height) / 2;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xmin, ymin - heightdiff], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xmax, ymax + heightdiff], null)], null);
  } else {
    alert([cljs.core.str("no aspect change"), cljs.core.str(plotaspect), cljs.core.str(" "), cljs.core.str(imageaspect)].join(""));
    return bounding_box;
  }
};
yantra.graphics.coordinate_transformer = function coordinate_transformer(bounding_box, image_size) {
  var vec__9198 = yantra.graphics.expand_plot_range.call(null, bounding_box, image_size);
  var vec__9199 = cljs.core.nth.call(null, vec__9198, 0, null);
  var xmin = cljs.core.nth.call(null, vec__9199, 0, null);
  var ymin = cljs.core.nth.call(null, vec__9199, 1, null);
  var vec__9200 = cljs.core.nth.call(null, vec__9198, 1, null);
  var xmax = cljs.core.nth.call(null, vec__9200, 0, null);
  var ymax = cljs.core.nth.call(null, vec__9200, 1, null);
  var vec__9201 = image_size;
  var image_width = cljs.core.nth.call(null, vec__9201, 0, null);
  var image_height = cljs.core.nth.call(null, vec__9201, 1, null);
  var width = Math.abs.call(null, xmax - xmin);
  var height = Math.abs.call(null, ymax - ymin);
  return function(p__9202) {
    var vec__9203 = p__9202;
    var x = cljs.core.nth.call(null, vec__9203, 0, null);
    var y = cljs.core.nth.call(null, vec__9203, 1, null);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(x - xmin) * (image_width / width), image_height - (y - ymin) * (image_height / height)], null);
  };
};
yantra.graphics.distance_transformer = function distance_transformer(bounding_box, image_size) {
  var vec__9208 = bounding_box;
  var vec__9209 = cljs.core.nth.call(null, vec__9208, 0, null);
  var xmin = cljs.core.nth.call(null, vec__9209, 0, null);
  var ymin = cljs.core.nth.call(null, vec__9209, 1, null);
  var vec__9210 = cljs.core.nth.call(null, vec__9208, 1, null);
  var xmax = cljs.core.nth.call(null, vec__9210, 0, null);
  var ymax = cljs.core.nth.call(null, vec__9210, 1, null);
  var vec__9211 = image_size;
  var image_width = cljs.core.nth.call(null, vec__9211, 0, null);
  var image_height = cljs.core.nth.call(null, vec__9211, 1, null);
  var width = Math.abs.call(null, xmax - xmin);
  var height = Math.abs.call(null, ymax - ymin);
  return function(d) {
    return d * (image_width / width);
  };
};
yantra.graphics.listplot = function listplot(l) {
  return new yantra.datatypes.Graphics(cljs.core.vec.call(null, cljs.core.map_indexed.call(null, function(p1__9212_SHARP_, p2__9213_SHARP_) {
    return new yantra.datatypes.Point(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__9212_SHARP_, p2__9213_SHARP_], null));
  }, l)));
};
yantra.graphics.graphics_renderers = new cljs.core.PersistentArrayMap.fromArray([yantra.datatypes.Point, function(cursor, owner, opts) {
  var p2 = (new cljs.core.Keyword(null, "point", "point", 1120749826)).cljs$core$IFn$_invoke$arity$1(om.core.value.call(null, cursor));
  return React.DOM.circle(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "cx", "cx", 1013907431), cljs.core.first.call(null, p2), new cljs.core.Keyword(null, "cy", "cy", 1013907432), cljs.core.last.call(null, p2), new cljs.core.Keyword(null, "r", "r", 1013904356), "3"], null));
}, yantra.datatypes.Disk, function(cursor, owner, opts) {
  var coordfn = (new cljs.core.Keyword(null, "coord-fn", "coord-fn", 4768239122)).cljs$core$IFn$_invoke$arity$1(opts);
  var distancefn = (new cljs.core.Keyword(null, "distance-fn", "distance-fn", 4584217874)).cljs$core$IFn$_invoke$arity$1(opts);
  var v = om.core.value.call(null, cursor);
  var p2 = coordfn.call(null, (new cljs.core.Keyword(null, "point", "point", 1120749826)).cljs$core$IFn$_invoke$arity$1(v));
  return React.DOM.circle({"r":distancefn.call(null, (new cljs.core.Keyword(null, "radius", "radius", 4370292740)).cljs$core$IFn$_invoke$arity$1(v)), "cy":cljs.core.last.call(null, p2), "cx":cljs.core.first.call(null, p2)});
}, yantra.datatypes.Graphics, function(cursor, owner, opts) {
  var builder = om.core.get_shared.call(null, owner, new cljs.core.Keyword(null, "builder", "builder", 1244848909));
  var bb = yantra.graphics.bounding_box.call(null, (new cljs.core.Keyword(null, "contents", "contents", 4741549708)).cljs$core$IFn$_invoke$arity$1(om.core.value.call(null, cursor)));
  var coordfn = yantra.graphics.coordinate_transformer.call(null, bb, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [200, 200], null));
  var distancefn = yantra.graphics.distance_transformer.call(null, bb, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [200, 200], null));
  return React.DOM.svg({"height":200, "width":200}, cljs.core.into_array.call(null, cljs.core.map.call(null, function(p1__9214_SHARP_) {
    return builder.call(null, p1__9214_SHARP_, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "coord-fn", "coord-fn", 4768239122), coordfn, new cljs.core.Keyword(null, "distance-fn", "distance-fn", 4584217874), distancefn], null)], null));
  }, (new cljs.core.Keyword(null, "contents", "contents", 4741549708)).cljs$core$IFn$_invoke$arity$1(cursor))));
}], true, false);
goog.provide("yantra.edn");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("om.dom");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("React");
cljs.core.ICloneable["number"] = true;
cljs.core._clone["number"] = function(n) {
  return new Number(n);
};
cljs.core.ICloneable["string"] = true;
cljs.core._clone["string"] = function(n) {
  return new String(n);
};
yantra.edn.render_sequential = function render_sequential(begin, render_one, sep, end, sequence) {
  return React.DOM.span(null, cljs.core.into_array.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [begin], null), cljs.core.interpose.call(null, sep, cljs.core.map.call(null, render_one, sequence)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [end], null))));
};
yantra.edn.SequentialCursor = function(value, state, path, shared) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.shared = shared;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2175180810;
};
yantra.edn.SequentialCursor.cljs$lang$type = true;
yantra.edn.SequentialCursor.cljs$lang$ctorStr = "yantra.edn/SequentialCursor";
yantra.edn.SequentialCursor.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
  return cljs.core._write.call(null, writer__3971__auto__, "yantra.edn/SequentialCursor");
};
yantra.edn.SequentialCursor.prototype.om$core$ICursor$ = true;
yantra.edn.SequentialCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return self__.path;
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return self__.state;
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.om$core$ICursor$_shared$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.shared;
};
yantra.edn.SequentialCursor.prototype.om$core$IValue$ = true;
yantra.edn.SequentialCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return self__.value;
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot deref cursor during render phase: "), cljs.core.str(this$__$1)].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new yantra.edn.SequentialCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path, self__.shared);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(v, i) {
        return om.core.to_cursor.call(null, v, self__.state, cljs.core.conj.call(null, self__.path, i), self__.shared);
      }, self__.value, cljs.core.range.call(null));
    } else {
      return null;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.cljs$core$IStack$_peek$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core.to_cursor.call(null, cljs.core._peek.call(null, self__.value), self__.state, self__.path, self__.shared);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.cljs$core$IStack$_pop$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core.to_cursor.call(null, cljs.core._pop.call(null, self__.value), self__.state, self__.path, self__.shared);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.om$core$ITransact$ = true;
yantra.edn.SequentialCursor.prototype.om$core$ITransact$_transact_BANG_$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.swap_BANG_.call(null, self__.state, f, self__.path);
};
yantra.edn.SequentialCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new yantra.edn.SequentialCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path, self__.shared);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.cljs$core$ICloneable$ = true;
yantra.edn.SequentialCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new yantra.edn.SequentialCursor(self__.value, self__.state, self__.path, self__.shared);
};
yantra.edn.SequentialCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.__GT_SequentialCursor = function __GT_SequentialCursor(value, state, path, shared) {
  return new yantra.edn.SequentialCursor(value, state, path, shared);
};
yantra.edn.extend_sequential_cursor = function extend_sequential_cursor(type) {
  type.prototype.om$core$IToCursor$ = true;
  type.prototype.om$core$IToCursor$_to_cursor$arity$2 = function(value, state) {
    var value__$1 = this;
    return new yantra.edn.SequentialCursor(value__$1, state, cljs.core.PersistentVector.EMPTY, null);
  };
  type.prototype.om$core$IToCursor$_to_cursor$arity$3 = function(value, state, path) {
    var value__$1 = this;
    return new yantra.edn.SequentialCursor(value__$1, state, path, null);
  };
  return type.prototype.om$core$IToCursor$_to_cursor$arity$4 = function(value, state, path, shared) {
    var value__$1 = this;
    return new yantra.edn.SequentialCursor(value__$1, state, path, shared);
  };
};
cljs.core.map.call(null, yantra.edn.extend_sequential_cursor, cljs.core.PersistentHashSet.fromArray([cljs.core.KeySeq, cljs.core.IndexedSeq, cljs.core.ChunkedCons, cljs.core.LazySeq, cljs.core.RSeq, cljs.core.NodeSeq, cljs.core.List, cljs.core.PersistentArrayMapSeq, cljs.core.EmptyList, cljs.core.Cons, cljs.core.Range, cljs.core.ArrayNodeSeq, cljs.core.ValSeq, cljs.core.PersistentTreeMapSeq], true));
yantra.edn.thread_sets = function thread_sets(x) {
  return cljs.core.reduce.call(null, function(m, p__9152) {
    var vec__9153 = p__9152;
    var k = cljs.core.nth.call(null, vec__9153, 0, null);
    var v = cljs.core.nth.call(null, vec__9153, 1, null);
    if (cljs.core.set_QMARK_.call(null, k)) {
      return cljs.core.reduce.call(null, function(p1__9148_SHARP_, p2__9149_SHARP_) {
        return cljs.core.assoc.call(null, p1__9148_SHARP_, p2__9149_SHARP_, v);
      }, m, k);
    } else {
      return cljs.core.assoc.call(null, m, k, v);
    }
  }, cljs.core.PersistentArrayMap.EMPTY, x);
};
yantra.edn.edn_renderers = yantra.edn.thread_sets.call(null, new cljs.core.PersistentArrayMap.fromArray([String, function(cursor, owner, opts) {
  if (typeof yantra.edn.t9158 !== "undefined") {
  } else {
    yantra.edn.t9158 = function(opts, owner, cursor, meta9159) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9159 = meta9159;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.edn.t9158.cljs$lang$type = true;
    yantra.edn.t9158.cljs$lang$ctorStr = "yantra.edn/t9158";
    yantra.edn.t9158.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "yantra.edn/t9158");
    };
    yantra.edn.t9158.prototype.om$core$IRender$ = true;
    yantra.edn.t9158.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return React.DOM.span(null, [cljs.core.str('"'), cljs.core.str(om.core.value.call(null, self__.cursor)), cljs.core.str('"')].join(""));
    };
    yantra.edn.t9158.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9160) {
      var self__ = this;
      var _9160__$1 = this;
      return self__.meta9159;
    };
    yantra.edn.t9158.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9160, meta9159__$1) {
      var self__ = this;
      var _9160__$1 = this;
      return new yantra.edn.t9158(self__.opts, self__.owner, self__.cursor, meta9159__$1);
    };
    yantra.edn.__GT_t9158 = function __GT_t9158(opts__$1, owner__$1, cursor__$1, meta9159) {
      return new yantra.edn.t9158(opts__$1, owner__$1, cursor__$1, meta9159);
    };
  }
  return new yantra.edn.t9158(opts, owner, cursor, null);
}, Number, function(cursor, owner, opts) {
  if (typeof yantra.edn.t9161 !== "undefined") {
  } else {
    yantra.edn.t9161 = function(opts, owner, cursor, meta9162) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9162 = meta9162;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.edn.t9161.cljs$lang$type = true;
    yantra.edn.t9161.cljs$lang$ctorStr = "yantra.edn/t9161";
    yantra.edn.t9161.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "yantra.edn/t9161");
    };
    yantra.edn.t9161.prototype.om$core$IRender$ = true;
    yantra.edn.t9161.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return React.DOM.span(null, [cljs.core.str(om.core.value.call(null, self__.cursor))].join(""));
    };
    yantra.edn.t9161.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9163) {
      var self__ = this;
      var _9163__$1 = this;
      return self__.meta9162;
    };
    yantra.edn.t9161.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9163, meta9162__$1) {
      var self__ = this;
      var _9163__$1 = this;
      return new yantra.edn.t9161(self__.opts, self__.owner, self__.cursor, meta9162__$1);
    };
    yantra.edn.__GT_t9161 = function __GT_t9161(opts__$1, owner__$1, cursor__$1, meta9162) {
      return new yantra.edn.t9161(opts__$1, owner__$1, cursor__$1, meta9162);
    };
  }
  return new yantra.edn.t9161(opts, owner, cursor, null);
}, cljs.core.Keyword, function(cursor, owner, opts) {
  if (typeof yantra.edn.t9164 !== "undefined") {
  } else {
    yantra.edn.t9164 = function(opts, owner, cursor, meta9165) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9165 = meta9165;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.edn.t9164.cljs$lang$type = true;
    yantra.edn.t9164.cljs$lang$ctorStr = "yantra.edn/t9164";
    yantra.edn.t9164.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "yantra.edn/t9164");
    };
    yantra.edn.t9164.prototype.om$core$IRender$ = true;
    yantra.edn.t9164.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return React.DOM.span(null, [cljs.core.str(om.core.value.call(null, self__.cursor))].join(""));
    };
    yantra.edn.t9164.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9166) {
      var self__ = this;
      var _9166__$1 = this;
      return self__.meta9165;
    };
    yantra.edn.t9164.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9166, meta9165__$1) {
      var self__ = this;
      var _9166__$1 = this;
      return new yantra.edn.t9164(self__.opts, self__.owner, self__.cursor, meta9165__$1);
    };
    yantra.edn.__GT_t9164 = function __GT_t9164(opts__$1, owner__$1, cursor__$1, meta9165) {
      return new yantra.edn.t9164(opts__$1, owner__$1, cursor__$1, meta9165);
    };
  }
  return new yantra.edn.t9164(opts, owner, cursor, null);
}, cljs.core.Symbol, function(cursor, owner, opts) {
  if (typeof yantra.edn.t9167 !== "undefined") {
  } else {
    yantra.edn.t9167 = function(opts, owner, cursor, meta9168) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9168 = meta9168;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.edn.t9167.cljs$lang$type = true;
    yantra.edn.t9167.cljs$lang$ctorStr = "yantra.edn/t9167";
    yantra.edn.t9167.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "yantra.edn/t9167");
    };
    yantra.edn.t9167.prototype.om$core$IRender$ = true;
    yantra.edn.t9167.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return React.DOM.span(null, [cljs.core.str(om.core.value.call(null, self__.cursor))].join(""));
    };
    yantra.edn.t9167.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9169) {
      var self__ = this;
      var _9169__$1 = this;
      return self__.meta9168;
    };
    yantra.edn.t9167.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9169, meta9168__$1) {
      var self__ = this;
      var _9169__$1 = this;
      return new yantra.edn.t9167(self__.opts, self__.owner, self__.cursor, meta9168__$1);
    };
    yantra.edn.__GT_t9167 = function __GT_t9167(opts__$1, owner__$1, cursor__$1, meta9168) {
      return new yantra.edn.t9167(opts__$1, owner__$1, cursor__$1, meta9168);
    };
  }
  return new yantra.edn.t9167(opts, owner, cursor, null);
}, cljs.core.PersistentHashSet.fromArray([cljs.core.KeySeq, cljs.core.IndexedSeq, cljs.core.ChunkedCons, cljs.core.LazySeq, cljs.core.RSeq, cljs.core.NodeSeq, cljs.core.ChunkedSeq, cljs.core.List, cljs.core.PersistentArrayMapSeq, cljs.core.EmptyList, cljs.core.Cons, cljs.core.Range, cljs.core.ArrayNodeSeq, cljs.core.ValSeq, cljs.core.PersistentTreeMapSeq], true), function(cursor, owner, opts) {
  var builder = om.core.get_shared.call(null, owner, new cljs.core.Keyword(null, "builder", "builder", 1244848909));
  if (typeof yantra.edn.t9170 !== "undefined") {
  } else {
    yantra.edn.t9170 = function(builder, opts, owner, cursor, meta9171) {
      this.builder = builder;
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9171 = meta9171;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.edn.t9170.cljs$lang$type = true;
    yantra.edn.t9170.cljs$lang$ctorStr = "yantra.edn/t9170";
    yantra.edn.t9170.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "yantra.edn/t9170");
    };
    yantra.edn.t9170.prototype.om$core$IRender$ = true;
    yantra.edn.t9170.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return yantra.edn.render_sequential.call(null, "(", function(p1__9154_SHARP_) {
        return self__.builder.call(null, p1__9154_SHARP_);
      }, " ", ")", self__.cursor);
    };
    yantra.edn.t9170.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9172) {
      var self__ = this;
      var _9172__$1 = this;
      return self__.meta9171;
    };
    yantra.edn.t9170.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9172, meta9171__$1) {
      var self__ = this;
      var _9172__$1 = this;
      return new yantra.edn.t9170(self__.builder, self__.opts, self__.owner, self__.cursor, meta9171__$1);
    };
    yantra.edn.__GT_t9170 = function __GT_t9170(builder__$1, opts__$1, owner__$1, cursor__$1, meta9171) {
      return new yantra.edn.t9170(builder__$1, opts__$1, owner__$1, cursor__$1, meta9171);
    };
  }
  return new yantra.edn.t9170(builder, opts, owner, cursor, null);
}, cljs.core.PersistentHashSet.fromArray([cljs.core.Subvec, cljs.core.RedNode, cljs.core.PersistentVector, cljs.core.BlackNode], true), function(cursor, owner, opts) {
  var builder = om.core.get_shared.call(null, owner, new cljs.core.Keyword(null, "builder", "builder", 1244848909));
  if (typeof yantra.edn.t9173 !== "undefined") {
  } else {
    yantra.edn.t9173 = function(builder, opts, owner, cursor, meta9174) {
      this.builder = builder;
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9174 = meta9174;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.edn.t9173.cljs$lang$type = true;
    yantra.edn.t9173.cljs$lang$ctorStr = "yantra.edn/t9173";
    yantra.edn.t9173.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "yantra.edn/t9173");
    };
    yantra.edn.t9173.prototype.om$core$IRender$ = true;
    yantra.edn.t9173.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return yantra.edn.render_sequential.call(null, "[", function(p1__9155_SHARP_) {
        return self__.builder.call(null, p1__9155_SHARP_);
      }, " ", "]", self__.cursor);
    };
    yantra.edn.t9173.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9175) {
      var self__ = this;
      var _9175__$1 = this;
      return self__.meta9174;
    };
    yantra.edn.t9173.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9175, meta9174__$1) {
      var self__ = this;
      var _9175__$1 = this;
      return new yantra.edn.t9173(self__.builder, self__.opts, self__.owner, self__.cursor, meta9174__$1);
    };
    yantra.edn.__GT_t9173 = function __GT_t9173(builder__$1, opts__$1, owner__$1, cursor__$1, meta9174) {
      return new yantra.edn.t9173(builder__$1, opts__$1, owner__$1, cursor__$1, meta9174);
    };
  }
  return new yantra.edn.t9173(builder, opts, owner, cursor, null);
}, cljs.core.PersistentHashSet.fromArray([cljs.core.PersistentTreeSet, cljs.core.PersistentHashSet], true), function(cursor, owner, opts) {
  var builder = om.core.get_shared.call(null, owner, new cljs.core.Keyword(null, "builder", "builder", 1244848909));
  if (typeof yantra.edn.t9176 !== "undefined") {
  } else {
    yantra.edn.t9176 = function(builder, opts, owner, cursor, meta9177) {
      this.builder = builder;
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9177 = meta9177;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.edn.t9176.cljs$lang$type = true;
    yantra.edn.t9176.cljs$lang$ctorStr = "yantra.edn/t9176";
    yantra.edn.t9176.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "yantra.edn/t9176");
    };
    yantra.edn.t9176.prototype.om$core$IRender$ = true;
    yantra.edn.t9176.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return yantra.edn.render_sequential.call(null, "#{", function(p1__9156_SHARP_) {
        return self__.builder.call(null, p1__9156_SHARP_);
      }, " ", "}", self__.cursor);
    };
    yantra.edn.t9176.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9178) {
      var self__ = this;
      var _9178__$1 = this;
      return self__.meta9177;
    };
    yantra.edn.t9176.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9178, meta9177__$1) {
      var self__ = this;
      var _9178__$1 = this;
      return new yantra.edn.t9176(self__.builder, self__.opts, self__.owner, self__.cursor, meta9177__$1);
    };
    yantra.edn.__GT_t9176 = function __GT_t9176(builder__$1, opts__$1, owner__$1, cursor__$1, meta9177) {
      return new yantra.edn.t9176(builder__$1, opts__$1, owner__$1, cursor__$1, meta9177);
    };
  }
  return new yantra.edn.t9176(builder, opts, owner, cursor, null);
}, cljs.core.PersistentHashSet.fromArray([cljs.core.PersistentTreeMap, cljs.core.PersistentArrayMap, cljs.core.PersistentHashMap], true), function(cursor, owner, opts) {
  var builder = om.core.get_shared.call(null, owner, new cljs.core.Keyword(null, "builder", "builder", 1244848909));
  if (typeof yantra.edn.t9179 !== "undefined") {
  } else {
    yantra.edn.t9179 = function(builder, opts, owner, cursor, meta9180) {
      this.builder = builder;
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9180 = meta9180;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.edn.t9179.cljs$lang$type = true;
    yantra.edn.t9179.cljs$lang$ctorStr = "yantra.edn/t9179";
    yantra.edn.t9179.cljs$lang$ctorPrWriter = function(this__3970__auto__, writer__3971__auto__, opt__3972__auto__) {
      return cljs.core._write.call(null, writer__3971__auto__, "yantra.edn/t9179");
    };
    yantra.edn.t9179.prototype.om$core$IRender$ = true;
    yantra.edn.t9179.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return yantra.edn.render_sequential.call(null, "{", function(p1__9157_SHARP_) {
        return React.DOM.span(null, [self__.builder.call(null, cljs.core.key.call(null, p1__9157_SHARP_)), " ", self__.builder.call(null, cljs.core.val.call(null, p1__9157_SHARP_), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), self__.opts], null))]);
      }, ", ", "}", self__.cursor);
    };
    yantra.edn.t9179.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9181) {
      var self__ = this;
      var _9181__$1 = this;
      return self__.meta9180;
    };
    yantra.edn.t9179.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9181, meta9180__$1) {
      var self__ = this;
      var _9181__$1 = this;
      return new yantra.edn.t9179(self__.builder, self__.opts, self__.owner, self__.cursor, meta9180__$1);
    };
    yantra.edn.__GT_t9179 = function __GT_t9179(builder__$1, opts__$1, owner__$1, cursor__$1, meta9180) {
      return new yantra.edn.t9179(builder__$1, opts__$1, owner__$1, cursor__$1, meta9180);
    };
  }
  return new yantra.edn.t9179(builder, opts, owner, cursor, null);
}], true, false));
goog.provide("yantra.layout");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("om.dom");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("React");
goog.require("yantra.datatypes");
goog.require("yantra.datatypes");
yantra.layout.layout_renderers = new cljs.core.PersistentArrayMap.fromArray([yantra.datatypes.Column, function(cursor, owner, opts) {
  var builder = om.core.get_shared.call(null, owner, new cljs.core.Keyword(null, "builder", "builder", 1244848909));
  return React.DOM.div(null, cljs.core.into_array.call(null, cljs.core.map.call(null, function(p1__9215_SHARP_) {
    return React.DOM.div(null, builder.call(null, p1__9215_SHARP_));
  }, (new cljs.core.Keyword(null, "contents", "contents", 4741549708)).cljs$core$IFn$_invoke$arity$1(cursor))));
}], true, false);
goog.provide("yantra.controls");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("om.dom");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("React");
goog.require("yantra.datatypes");
goog.require("yantra.datatypes");
yantra.controls.control_renderers = new cljs.core.PersistentArrayMap.fromArray([yantra.datatypes.Slider, function(cursor, owner, opts) {
  var v = om.core.value.call(null, cursor);
  var val = (new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(v);
  var r = (new cljs.core.Keyword(null, "range", "range", 1122184367)).cljs$core$IFn$_invoke$arity$1(v);
  var min = cljs.core.first.call(null, r);
  var max = cljs.core.second.call(null, r);
  var step = cljs.core._EQ_.call(null, 3, cljs.core.count.call(null, r)) ? cljs.core.last.call(null, r) : 1;
  return om.dom.input.call(null, {"step":step, "max":max, "min":min, "defaultValue":val, "type":"range"});
}], true, false);
goog.provide("yantra.test");
goog.require("cljs.core");
goog.require("om.dom");
goog.require("om.core");
goog.require("yantra.graphics");
goog.require("yantra.datatypes");
goog.require("yantra.layout");
goog.require("om.core");
goog.require("yantra.datatypes");
goog.require("React");
goog.require("yantra.edn");
goog.require("yantra.controls");
goog.require("yantra.graphics");
goog.require("yantra.edn");
goog.require("om.dom");
goog.require("yantra.layout");
goog.require("yantra.controls");
yantra.test.app_state = 1;
yantra.test.tests = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "graphics-1", "graphics-1", 3304008929), new yantra.datatypes.Column(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new yantra.datatypes.Slider(4, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 10], null)), new yantra.datatypes.Slider(5, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 10], null)), 
new yantra.datatypes.Graphics(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new yantra.datatypes.Disk(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), 1), new yantra.datatypes.Disk(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [10, 2], null), 1), new yantra.datatypes.Disk(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null), 1), new yantra.datatypes.Disk(new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [20, 0], null), 1)], null))], null)), new cljs.core.Keyword(null, "column-1", "column-1", 4685450988), new yantra.datatypes.Column(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 3], null)), new cljs.core.Keyword(null, "column-2", "column-2", 4685450989), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new yantra.datatypes.Column(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, 2, 3], null))], null), new cljs.core.Keyword(null, "edn-0", "edn-0", 1110266116), 1, new cljs.core.Keyword(null, "edn-1", "edn-1", 1110266117), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, "a", new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.Symbol(null, "a", "a", -1640531430, null), new cljs.core.PersistentArrayMap(null, 2, [1, 2, 3, 4], null), new yantra.datatypes.Slider(4, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, 10], null)), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [1, null, 2, null, 3, null, 4, null], null), null), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 4), 3), 2), 1), new yantra.datatypes.Graphics(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new yantra.datatypes.Disk(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, 0], null), 1), new yantra.datatypes.Disk(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 2], null), 1), new yantra.datatypes.Disk(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null), 1)], null))], null)], null);
yantra.test.renderers = cljs.core.merge.call(null, yantra.graphics.graphics_renderers, yantra.controls.control_renderers, yantra.layout.layout_renderers, yantra.edn.edn_renderers);
yantra.test.builder = function builder(x, y) {
  console.log(om.core.value.call(null, x));
  console.log(cljs.core.type.call(null, om.core.value.call(null, x)));
  console.log(yantra.test.renderers.call(null, cljs.core.type.call(null, om.core.value.call(null, x))));
  return om.core.build.call(null, yantra.test.renderers.call(null, cljs.core.type.call(null, om.core.value.call(null, x))), x, y);
};
yantra.test.t = document.getElementById("root");
yantra.test.start = function start() {
  return om.core.root.call(null, cljs.core.atom.call(null, (new cljs.core.Keyword(null, "column-2", "column-2", 4685450989)).cljs$core$IFn$_invoke$arity$1(yantra.test.tests)), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "builder", "builder", 1244848909), yantra.test.builder], null), function(app, owner) {
    return yantra.test.builder.call(null, app, cljs.core.PersistentArrayMap.EMPTY);
  }, document.getElementById("root"));
};
goog.exportSymbol("yantra.test.start", yantra.test.start);
goog.provide("yantra.datamappings");
goog.require("cljs.core");
goog.require("yantra.datatypes");
goog.require("yantra.datatypes");
yantra.datamappings.data_mappings = new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "record", "record", 4373962691), yantra.datatypes.Slider, new cljs.core.Keyword(null, "tag", "tag", 1014018828), "yantra.controls/Slider"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "record", "record", 4373962691), yantra.datatypes.Column, new cljs.core.Keyword(null, "tag", 
"tag", 1014018828), "yantra.layout/Column"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "record", "record", 4373962691), yantra.datatypes.Graphics, new cljs.core.Keyword(null, "tag", "tag", 1014018828), "yantra.graphics/Graphics"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "record", "record", 4373962691), yantra.datatypes.Point, new cljs.core.Keyword(null, "tag", "tag", 1014018828), "yantra.graphics/Point"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "record", "record", 4373962691), yantra.datatypes.Line, new cljs.core.Keyword(null, "tag", "tag", 1014018828), "yantra.graphics/Line"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "record", "record", 4373962691), yantra.datatypes.Disk, new cljs.core.Keyword(null, "tag", "tag", 1014018828), "yantra.graphics/Disk"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "record", "record", 4373962691), yantra.datatypes.Rectangle, 
new cljs.core.Keyword(null, "tag", "tag", 1014018828), "yantra.graphics/Rectangle"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "record", "record", 4373962691), yantra.datatypes.Style, new cljs.core.Keyword(null, "tag", "tag", 1014018828), "yantra.graphics/Style"], null)], null);
goog.provide("yantra.dom");
goog.require("cljs.core");
