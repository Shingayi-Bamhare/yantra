var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_DEFINES;
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && opt_object !== undefined) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
      value = goog.global.CLOSURE_DEFINES[name];
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && (typeof value.splice != "undefined" && (typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")))) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && (typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call"))) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isDef = function(val) {
  return val !== undefined;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for (var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value);
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.DEBUG) {
    if (!caller) {
      throw Error("arguments.caller not defined.  goog.base() expects not " + "to be running in strict mode. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
    }
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && (ch >= " " && ch <= "~") || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "\x26amp;").replace(goog.string.ltRe_, "\x26lt;").replace(goog.string.gtRe_, "\x26gt;").replace(goog.string.quotRe_, "\x26quot;").replace(goog.string.singleQuoteRe_, "\x26#39;");
  } else {
    if (!goog.string.allRe_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.amperRe_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.ltRe_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.gtRe_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.singleQuoteRe_, "\x26#39;");
    }
    return str;
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /"/g;
goog.string.singleQuoteRe_ = /'/g;
goog.string.allRe_ = /[&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1;
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && (index < s.length && stringLength > 0)) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || (goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]));
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || (!goog.isArrayLike(arr2) || arr1.length != arr2.length)) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2197";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 4441712502), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1017252215), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 1014004081), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  3960797560), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__9381__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args));
    };
    var G__9381 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__9381__delegate.call(this, args);
    };
    G__9381.cljs$lang$maxFixedArity = 0;
    G__9381.cljs$lang$applyTo = function(arglist__9382) {
      var args = cljs.core.seq(arglist__9382);
      return G__9381__delegate(args);
    };
    G__9381.cljs$core$IFn$_invoke$arity$variadic = G__9381__delegate;
    return G__9381;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return false;
      } else {
        return null;
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3450__auto__ = ty;
    if (cljs.core.truth_(and__3450__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3450__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4090__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4090__auto__)) {
    var s = temp__4090__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4310__auto___9383 = len;
  var i_9384 = 0;
  while (true) {
    if (i_9384 < n__4310__auto___9383) {
      new_arr[i_9384] = arr[i_9384];
      var G__9385 = i_9384 + 1;
      i_9384 = G__9385;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments);
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__9386__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs);
    };
    var G__9386 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9386__delegate.call(this, array, i, idxs);
    };
    G__9386.cljs$lang$maxFixedArity = 2;
    G__9386.cljs$lang$applyTo = function(arglist__9387) {
      var array = cljs.core.first(arglist__9387);
      arglist__9387 = cljs.core.next(arglist__9387);
      var i = cljs.core.first(arglist__9387);
      var idxs = cljs.core.rest(arglist__9387);
      return G__9386__delegate(array, i, idxs);
    };
    G__9386.cljs$core$IFn$_invoke$arity$variadic = G__9386__delegate;
    return G__9386;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__9388__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv);
    };
    var G__9388 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__9388__delegate.call(this, array, idx, idx2, idxv);
    };
    G__9388.cljs$lang$maxFixedArity = 3;
    G__9388.cljs$lang$applyTo = function(arglist__9389) {
      var array = cljs.core.first(arglist__9389);
      arglist__9389 = cljs.core.next(arglist__9389);
      var idx = cljs.core.first(arglist__9389);
      arglist__9389 = cljs.core.next(arglist__9389);
      var idx2 = cljs.core.first(arglist__9389);
      var idxv = cljs.core.rest(arglist__9389);
      return G__9388__delegate(array, idx, idx2, idxv);
    };
    G__9388.cljs$core$IFn$_invoke$arity$variadic = G__9388__delegate;
    return G__9388;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a;
    }, [], aseq);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.Fn = function() {
  var obj9391 = {};
  return obj9391;
}();
cljs.core.IFn = function() {
  var obj9393 = {};
  return obj9393;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3450__auto__ = this$;
      if (and__3450__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4089__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3462__auto__ = cljs.core._invoke[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = cljs.core._invoke["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3450__auto__ = this$;
      if (and__3450__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4089__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3462__auto__ = cljs.core._invoke[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = cljs.core._invoke["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3450__auto__ = this$;
      if (and__3450__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4089__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3462__auto__ = cljs.core._invoke[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = cljs.core._invoke["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3450__auto__ = this$;
      if (and__3450__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4089__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3462__auto__ = cljs.core._invoke[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = cljs.core._invoke["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3450__auto__ = this$;
      if (and__3450__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4089__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3462__auto__ = cljs.core._invoke[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = cljs.core._invoke["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3450__auto__ = this$;
      if (and__3450__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4089__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3462__auto__ = cljs.core._invoke[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = cljs.core._invoke["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3450__auto__ = this$;
      if (and__3450__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4089__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3462__auto__ = cljs.core._invoke[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = cljs.core._invoke["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3450__auto__ = this$;
      if (and__3450__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4089__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3462__auto__ = cljs.core._invoke[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = cljs.core._invoke["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3450__auto__ = this$;
      if (and__3450__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4089__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3462__auto__ = cljs.core._invoke[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = cljs.core._invoke["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3450__auto__ = this$;
      if (and__3450__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4089__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3462__auto__ = cljs.core._invoke[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = cljs.core._invoke["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3450__auto__ = this$;
      if (and__3450__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4089__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3462__auto__ = cljs.core._invoke[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = cljs.core._invoke["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3450__auto__ = this$;
      if (and__3450__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4089__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3462__auto__ = cljs.core._invoke[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = cljs.core._invoke["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3450__auto__ = this$;
      if (and__3450__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4089__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3462__auto__ = cljs.core._invoke[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = cljs.core._invoke["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3450__auto__ = this$;
      if (and__3450__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4089__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3462__auto__ = cljs.core._invoke[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = cljs.core._invoke["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3450__auto__ = this$;
      if (and__3450__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4089__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3462__auto__ = cljs.core._invoke[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = cljs.core._invoke["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3450__auto__ = this$;
      if (and__3450__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4089__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3462__auto__ = cljs.core._invoke[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = cljs.core._invoke["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3450__auto__ = this$;
      if (and__3450__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4089__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3462__auto__ = cljs.core._invoke[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = cljs.core._invoke["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3450__auto__ = this$;
      if (and__3450__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4089__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3462__auto__ = cljs.core._invoke[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = cljs.core._invoke["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if (function() {
      var and__3450__auto__ = this$;
      if (and__3450__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    } else {
      var x__4089__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3462__auto__ = cljs.core._invoke[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = cljs.core._invoke["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if (function() {
      var and__3450__auto__ = this$;
      if (and__3450__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    } else {
      var x__4089__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3462__auto__ = cljs.core._invoke[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = cljs.core._invoke["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if (function() {
      var and__3450__auto__ = this$;
      if (and__3450__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    } else {
      var x__4089__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3462__auto__ = cljs.core._invoke[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = cljs.core._invoke["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj9395 = {};
  return obj9395;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3450__auto__ = value;
    if (and__3450__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4089__auto__ = value == null ? null : value;
    return function() {
      var or__3462__auto__ = cljs.core._clone[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._clone["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj9397 = {};
  return obj9397;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3450__auto__ = coll;
    if (and__3450__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4089__auto__ = coll == null ? null : coll;
    return function() {
      var or__3462__auto__ = cljs.core._count[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._count["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj9399 = {};
  return obj9399;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3450__auto__ = coll;
    if (and__3450__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4089__auto__ = coll == null ? null : coll;
    return function() {
      var or__3462__auto__ = cljs.core._empty[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._empty["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj9401 = {};
  return obj9401;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3450__auto__ = coll;
    if (and__3450__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4089__auto__ = coll == null ? null : coll;
    return function() {
      var or__3462__auto__ = cljs.core._conj[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._conj["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj9403 = {};
  return obj9403;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3450__auto__ = coll;
      if (and__3450__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4089__auto__ = coll == null ? null : coll;
      return function() {
        var or__3462__auto__ = cljs.core._nth[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = cljs.core._nth["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3450__auto__ = coll;
      if (and__3450__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4089__auto__ = coll == null ? null : coll;
      return function() {
        var or__3462__auto__ = cljs.core._nth[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = cljs.core._nth["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj9405 = {};
  return obj9405;
}();
cljs.core.ISeq = function() {
  var obj9407 = {};
  return obj9407;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3450__auto__ = coll;
    if (and__3450__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4089__auto__ = coll == null ? null : coll;
    return function() {
      var or__3462__auto__ = cljs.core._first[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._first["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3450__auto__ = coll;
    if (and__3450__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4089__auto__ = coll == null ? null : coll;
    return function() {
      var or__3462__auto__ = cljs.core._rest[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._rest["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj9409 = {};
  return obj9409;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3450__auto__ = coll;
    if (and__3450__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4089__auto__ = coll == null ? null : coll;
    return function() {
      var or__3462__auto__ = cljs.core._next[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._next["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj9411 = {};
  return obj9411;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3450__auto__ = o;
      if (and__3450__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4089__auto__ = o == null ? null : o;
      return function() {
        var or__3462__auto__ = cljs.core._lookup[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = cljs.core._lookup["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3450__auto__ = o;
      if (and__3450__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4089__auto__ = o == null ? null : o;
      return function() {
        var or__3462__auto__ = cljs.core._lookup[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = cljs.core._lookup["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj9413 = {};
  return obj9413;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3450__auto__ = coll;
    if (and__3450__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4089__auto__ = coll == null ? null : coll;
    return function() {
      var or__3462__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3450__auto__ = coll;
    if (and__3450__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4089__auto__ = coll == null ? null : coll;
    return function() {
      var or__3462__auto__ = cljs.core._assoc[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._assoc["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj9415 = {};
  return obj9415;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3450__auto__ = coll;
    if (and__3450__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4089__auto__ = coll == null ? null : coll;
    return function() {
      var or__3462__auto__ = cljs.core._dissoc[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._dissoc["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj9417 = {};
  return obj9417;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3450__auto__ = coll;
    if (and__3450__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4089__auto__ = coll == null ? null : coll;
    return function() {
      var or__3462__auto__ = cljs.core._key[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._key["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3450__auto__ = coll;
    if (and__3450__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4089__auto__ = coll == null ? null : coll;
    return function() {
      var or__3462__auto__ = cljs.core._val[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._val["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj9419 = {};
  return obj9419;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3450__auto__ = coll;
    if (and__3450__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4089__auto__ = coll == null ? null : coll;
    return function() {
      var or__3462__auto__ = cljs.core._disjoin[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._disjoin["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj9421 = {};
  return obj9421;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3450__auto__ = coll;
    if (and__3450__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4089__auto__ = coll == null ? null : coll;
    return function() {
      var or__3462__auto__ = cljs.core._peek[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._peek["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3450__auto__ = coll;
    if (and__3450__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4089__auto__ = coll == null ? null : coll;
    return function() {
      var or__3462__auto__ = cljs.core._pop[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._pop["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj9423 = {};
  return obj9423;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3450__auto__ = coll;
    if (and__3450__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4089__auto__ = coll == null ? null : coll;
    return function() {
      var or__3462__auto__ = cljs.core._assoc_n[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj9425 = {};
  return obj9425;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3450__auto__ = o;
    if (and__3450__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4089__auto__ = o == null ? null : o;
    return function() {
      var or__3462__auto__ = cljs.core._deref[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._deref["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj9427 = {};
  return obj9427;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3450__auto__ = o;
    if (and__3450__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4089__auto__ = o == null ? null : o;
    return function() {
      var or__3462__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj9429 = {};
  return obj9429;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3450__auto__ = o;
    if (and__3450__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4089__auto__ = o == null ? null : o;
    return function() {
      var or__3462__auto__ = cljs.core._meta[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._meta["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj9431 = {};
  return obj9431;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3450__auto__ = o;
    if (and__3450__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4089__auto__ = o == null ? null : o;
    return function() {
      var or__3462__auto__ = cljs.core._with_meta[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._with_meta["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj9433 = {};
  return obj9433;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3450__auto__ = coll;
      if (and__3450__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4089__auto__ = coll == null ? null : coll;
      return function() {
        var or__3462__auto__ = cljs.core._reduce[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = cljs.core._reduce["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3450__auto__ = coll;
      if (and__3450__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4089__auto__ = coll == null ? null : coll;
      return function() {
        var or__3462__auto__ = cljs.core._reduce[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = cljs.core._reduce["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj9435 = {};
  return obj9435;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3450__auto__ = coll;
    if (and__3450__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4089__auto__ = coll == null ? null : coll;
    return function() {
      var or__3462__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj9437 = {};
  return obj9437;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3450__auto__ = o;
    if (and__3450__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4089__auto__ = o == null ? null : o;
    return function() {
      var or__3462__auto__ = cljs.core._equiv[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._equiv["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj9439 = {};
  return obj9439;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3450__auto__ = o;
    if (and__3450__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4089__auto__ = o == null ? null : o;
    return function() {
      var or__3462__auto__ = cljs.core._hash[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._hash["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj9441 = {};
  return obj9441;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3450__auto__ = o;
    if (and__3450__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4089__auto__ = o == null ? null : o;
    return function() {
      var or__3462__auto__ = cljs.core._seq[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._seq["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj9443 = {};
  return obj9443;
}();
cljs.core.IList = function() {
  var obj9445 = {};
  return obj9445;
}();
cljs.core.IRecord = function() {
  var obj9447 = {};
  return obj9447;
}();
cljs.core.IReversible = function() {
  var obj9449 = {};
  return obj9449;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3450__auto__ = coll;
    if (and__3450__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4089__auto__ = coll == null ? null : coll;
    return function() {
      var or__3462__auto__ = cljs.core._rseq[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._rseq["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj9451 = {};
  return obj9451;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3450__auto__ = coll;
    if (and__3450__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4089__auto__ = coll == null ? null : coll;
    return function() {
      var or__3462__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3450__auto__ = coll;
    if (and__3450__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4089__auto__ = coll == null ? null : coll;
    return function() {
      var or__3462__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3450__auto__ = coll;
    if (and__3450__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4089__auto__ = coll == null ? null : coll;
    return function() {
      var or__3462__auto__ = cljs.core._entry_key[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._entry_key["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3450__auto__ = coll;
    if (and__3450__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4089__auto__ = coll == null ? null : coll;
    return function() {
      var or__3462__auto__ = cljs.core._comparator[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._comparator["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj9453 = {};
  return obj9453;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3450__auto__ = writer;
    if (and__3450__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4089__auto__ = writer == null ? null : writer;
    return function() {
      var or__3462__auto__ = cljs.core._write[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._write["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3450__auto__ = writer;
    if (and__3450__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4089__auto__ = writer == null ? null : writer;
    return function() {
      var or__3462__auto__ = cljs.core._flush[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._flush["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj9455 = {};
  return obj9455;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3450__auto__ = o;
    if (and__3450__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4089__auto__ = o == null ? null : o;
    return function() {
      var or__3462__auto__ = cljs.core._pr_writer[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj9457 = {};
  return obj9457;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3450__auto__ = d;
    if (and__3450__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4089__auto__ = d == null ? null : d;
    return function() {
      var or__3462__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj9459 = {};
  return obj9459;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3450__auto__ = this$;
    if (and__3450__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4089__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3462__auto__ = cljs.core._notify_watches[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3450__auto__ = this$;
    if (and__3450__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4089__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3462__auto__ = cljs.core._add_watch[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._add_watch["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3450__auto__ = this$;
    if (and__3450__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4089__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3462__auto__ = cljs.core._remove_watch[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj9461 = {};
  return obj9461;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3450__auto__ = coll;
    if (and__3450__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4089__auto__ = coll == null ? null : coll;
    return function() {
      var or__3462__auto__ = cljs.core._as_transient[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._as_transient["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj9463 = {};
  return obj9463;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3450__auto__ = tcoll;
    if (and__3450__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4089__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3462__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3450__auto__ = tcoll;
    if (and__3450__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4089__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3462__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj9465 = {};
  return obj9465;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3450__auto__ = tcoll;
    if (and__3450__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4089__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3462__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj9467 = {};
  return obj9467;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3450__auto__ = tcoll;
    if (and__3450__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4089__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3462__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj9469 = {};
  return obj9469;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3450__auto__ = tcoll;
    if (and__3450__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4089__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3462__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3450__auto__ = tcoll;
    if (and__3450__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4089__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3462__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj9471 = {};
  return obj9471;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3450__auto__ = tcoll;
    if (and__3450__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4089__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3462__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj9473 = {};
  return obj9473;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3450__auto__ = x;
    if (and__3450__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4089__auto__ = x == null ? null : x;
    return function() {
      var or__3462__auto__ = cljs.core._compare[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._compare["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj9475 = {};
  return obj9475;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3450__auto__ = coll;
    if (and__3450__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4089__auto__ = coll == null ? null : coll;
    return function() {
      var or__3462__auto__ = cljs.core._drop_first[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._drop_first["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj9477 = {};
  return obj9477;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3450__auto__ = coll;
    if (and__3450__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4089__auto__ = coll == null ? null : coll;
    return function() {
      var or__3462__auto__ = cljs.core._chunked_first[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3450__auto__ = coll;
    if (and__3450__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4089__auto__ = coll == null ? null : coll;
    return function() {
      var or__3462__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj9479 = {};
  return obj9479;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3450__auto__ = coll;
    if (and__3450__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4089__auto__ = coll == null ? null : coll;
    return function() {
      var or__3462__auto__ = cljs.core._chunked_next[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj9481 = {};
  return obj9481;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3450__auto__ = x;
    if (and__3450__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4089__auto__ = x == null ? null : x;
    return function() {
      var or__3462__auto__ = cljs.core._name[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._name["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3450__auto__ = x;
    if (and__3450__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4089__auto__ = x == null ? null : x;
    return function() {
      var or__3462__auto__ = cljs.core._namespace[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._namespace["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return[cljs.core.str(sb)].join("");
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.hash.call(null, sym.ns), cljs.core.hash.call(null, sym.name));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (cljs.core.truth_(cljs.core._EQ_.call(null, a, b))) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3450__auto__ = cljs.core.not.call(null, a.ns);
      if (and__3450__auto__) {
        return b.ns;
      } else {
        return and__3450__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = cljs.core.compare.call(null, a.ns, b.ns);
          if (nsc === 0) {
            return cljs.core.compare.call(null, a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
          return cljs.core.compare.call(null, a.name, b.name);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/Symbol");
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__3873__auto__ = self__._hash;
  if (!(h__3873__auto__ == null)) {
    return h__3873__auto__;
  } else {
    var h__3873__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__3873__auto____$1;
    return h__3873__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__9483 = null;
  var G__9483__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null);
  };
  var G__9483__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found);
  };
  G__9483 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9483__2.call(this, self__, coll);
      case 3:
        return G__9483__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9483;
}();
cljs.core.Symbol.prototype.apply = function(self__, args9482) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args9482)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.call(null, null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.clone = function clone(value) {
  return cljs.core._clone.call(null, value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__9485 = value;
  if (G__9485) {
    var bit__4112__auto__ = G__9485.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4112__auto__ || G__9485.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__9485.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__9485);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__9485);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__9487 = coll;
      if (G__9487) {
        var bit__4105__auto__ = G__9487.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4105__auto__ || G__9487.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._seq.call(null, coll);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw new Error([cljs.core.str(coll), cljs.core.str("is not ISeqable")].join(""));
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__9489 = coll;
      if (G__9489) {
        var bit__4105__auto__ = G__9489.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4105__auto__ || G__9489.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._first.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first.call(null, s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__9491 = coll;
      if (G__9491) {
        var bit__4105__auto__ = G__9491.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4105__auto__ || G__9491.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._rest.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s) {
        return cljs.core._rest.call(null, s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__9493 = coll;
      if (G__9493) {
        var bit__4105__auto__ = G__9493.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4105__auto__ || G__9493.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._next.call(null, coll);
    } else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv.call(null, x, y);
    }
  };
  var _EQ___3 = function() {
    var G__9494__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__9495 = y;
            var G__9496 = cljs.core.first.call(null, more);
            var G__9497 = cljs.core.next.call(null, more);
            x = G__9495;
            y = G__9496;
            more = G__9497;
            continue;
          } else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__9494 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9494__delegate.call(this, x, y, more);
    };
    G__9494.cljs$lang$maxFixedArity = 2;
    G__9494.cljs$lang$applyTo = function(arglist__9498) {
      var x = cljs.core.first(arglist__9498);
      arglist__9498 = cljs.core.next(arglist__9498);
      var y = cljs.core.first(arglist__9498);
      var more = cljs.core.rest(arglist__9498);
      return G__9494__delegate(x, y, more);
    };
    G__9494.cljs$core$IFn$_invoke$arity$variadic = G__9494__delegate;
    return G__9494;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/Reduced");
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if (cnt === 0) {
      return f.call(null);
    } else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__9499 = nval;
            var G__9500 = n + 1;
            val = G__9499;
            n = G__9500;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__9501 = nval;
          var G__9502 = n + 1;
          val__$1 = G__9501;
          n = G__9502;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__9503 = nval;
          var G__9504 = n + 1;
          val__$1 = G__9503;
          n = G__9504;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__9505 = nval;
            var G__9506 = n + 1;
            val = G__9505;
            n = G__9506;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__9507 = nval;
          var G__9508 = n + 1;
          val__$1 = G__9507;
          n = G__9508;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__9509 = nval;
          var G__9510 = n + 1;
          val__$1 = G__9509;
          n = G__9510;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__9512 = x;
  if (G__9512) {
    var bit__4112__auto__ = G__9512.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4112__auto__ || G__9512.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__9512.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__9512);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__9512);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__9514 = x;
  if (G__9514) {
    var bit__4112__auto__ = G__9514.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4112__auto__ || G__9514.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__9514.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__9514);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__9514);
  }
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/IndexedSeq");
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/RSeq");
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next.call(null, s);
    if (!(sn == null)) {
      var G__9515 = sn;
      s = G__9515;
      continue;
    } else {
      return cljs.core.first.call(null, s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj.call(null, coll, x);
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__9516__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__9517 = conj.call(null, coll, x);
          var G__9518 = cljs.core.first.call(null, xs);
          var G__9519 = cljs.core.next.call(null, xs);
          coll = G__9517;
          x = G__9518;
          xs = G__9519;
          continue;
        } else {
          return conj.call(null, coll, x);
        }
        break;
      }
    };
    var G__9516 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9516__delegate.call(this, coll, x, xs);
    };
    G__9516.cljs$lang$maxFixedArity = 2;
    G__9516.cljs$lang$applyTo = function(arglist__9520) {
      var coll = cljs.core.first(arglist__9520);
      arglist__9520 = cljs.core.next(arglist__9520);
      var x = cljs.core.first(arglist__9520);
      var xs = cljs.core.rest(arglist__9520);
      return G__9516__delegate(coll, x, xs);
    };
    G__9516.cljs$core$IFn$_invoke$arity$variadic = G__9516__delegate;
    return G__9516;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty.call(null, coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s);
    } else {
      var G__9521 = cljs.core.next.call(null, s);
      var G__9522 = acc + 1;
      s = G__9521;
      acc = G__9522;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__9524 = coll;
      if (G__9524) {
        var bit__4105__auto__ = G__9524.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4105__auto__ || G__9524.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._count.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.accumulating_seq_count.call(null, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__9525 = cljs.core.next.call(null, coll);
              var G__9526 = n - 1;
              coll = G__9525;
              n = G__9526;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw new Error("Index out of bounds");
              } else {
                return null;
              }
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__9527 = cljs.core.next.call(null, coll);
              var G__9528 = n - 1;
              var G__9529 = not_found;
              coll = G__9527;
              n = G__9528;
              not_found = G__9529;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found;
              } else {
                return null;
              }
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__9534 = coll;
          if (G__9534) {
            var bit__4105__auto__ = G__9534.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4105__auto__ || G__9534.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__9535 = coll;
                  if (G__9535) {
                    var bit__4112__auto__ = G__9535.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4112__auto__ || G__9535.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__9535.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__9535);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__9535);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n);
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                  } else {
                    return null;
                  }
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__9536 = coll;
          if (G__9536) {
            var bit__4105__auto__ = G__9536.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4105__auto__ || G__9536.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__9537 = coll;
                  if (G__9537) {
                    var bit__4112__auto__ = G__9537.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4112__auto__ || G__9537.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__9537.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__9537);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__9537);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found);
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                  } else {
                    return null;
                  }
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__9540 = o;
        if (G__9540) {
          var bit__4105__auto__ = G__9540.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4105__auto__ || G__9540.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return null;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__9541 = o;
        if (G__9541) {
          var bit__4105__auto__ = G__9541.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4105__auto__ || G__9541.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found;
              } else {
                return null;
              }
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays.call(null, [k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__9542__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.call(null, coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__9543 = ret;
          var G__9544 = cljs.core.first.call(null, kvs);
          var G__9545 = cljs.core.second.call(null, kvs);
          var G__9546 = cljs.core.nnext.call(null, kvs);
          coll = G__9543;
          k = G__9544;
          v = G__9545;
          kvs = G__9546;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__9542 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__9542__delegate.call(this, coll, k, v, kvs);
    };
    G__9542.cljs$lang$maxFixedArity = 3;
    G__9542.cljs$lang$applyTo = function(arglist__9547) {
      var coll = cljs.core.first(arglist__9547);
      arglist__9547 = cljs.core.next(arglist__9547);
      var k = cljs.core.first(arglist__9547);
      arglist__9547 = cljs.core.next(arglist__9547);
      var v = cljs.core.first(arglist__9547);
      var kvs = cljs.core.rest(arglist__9547);
      return G__9542__delegate(coll, k, v, kvs);
    };
    G__9542.cljs$core$IFn$_invoke$arity$variadic = G__9542__delegate;
    return G__9542;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc.call(null, coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__9548__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__9549 = ret;
            var G__9550 = cljs.core.first.call(null, ks);
            var G__9551 = cljs.core.next.call(null, ks);
            coll = G__9549;
            k = G__9550;
            ks = G__9551;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__9548 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9548__delegate.call(this, coll, k, ks);
    };
    G__9548.cljs$lang$maxFixedArity = 2;
    G__9548.cljs$lang$applyTo = function(arglist__9552) {
      var coll = cljs.core.first(arglist__9552);
      arglist__9552 = cljs.core.next(arglist__9552);
      var k = cljs.core.first(arglist__9552);
      var ks = cljs.core.rest(arglist__9552);
      return G__9548__delegate(coll, k, ks);
    };
    G__9548.cljs$core$IFn$_invoke$arity$variadic = G__9548__delegate;
    return G__9548;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3462__auto__ = goog.isFunction(f);
  if (or__3462__auto__) {
    return or__3462__auto__;
  } else {
    var G__9556 = f;
    if (G__9556) {
      var bit__4112__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3462__auto____$1 = bit__4112__auto__;
        if (cljs.core.truth_(or__3462__auto____$1)) {
          return or__3462__auto____$1;
        } else {
          return G__9556.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__9556.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__9556);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__9556);
    }
  }
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__9564 = o;
    if (G__9564) {
      var bit__4112__auto__ = G__9564.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4112__auto__ || G__9564.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__9564.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__9564);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__9564);
    }
  }()) {
    return with_meta.call(null, function() {
      if (typeof cljs.core.t9565 !== "undefined") {
      } else {
        cljs.core.t9565 = function(meta, o, with_meta, meta9566) {
          this.meta = meta;
          this.o = o;
          this.with_meta = with_meta;
          this.meta9566 = meta9566;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217;
        };
        cljs.core.t9565.cljs$lang$type = true;
        cljs.core.t9565.cljs$lang$ctorStr = "cljs.core/t9565";
        cljs.core.t9565.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
          return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/t9565");
        };
        cljs.core.t9565.prototype.call = function() {
          var G__9569__delegate = function(self__, args) {
            var self____$1 = this;
            var _ = self____$1;
            return cljs.core.apply.call(null, self__.o, args);
          };
          var G__9569 = function(self__, var_args) {
            var self__ = this;
            var args = null;
            if (arguments.length > 1) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
            }
            return G__9569__delegate.call(this, self__, args);
          };
          G__9569.cljs$lang$maxFixedArity = 1;
          G__9569.cljs$lang$applyTo = function(arglist__9570) {
            var self__ = cljs.core.first(arglist__9570);
            var args = cljs.core.rest(arglist__9570);
            return G__9569__delegate(self__, args);
          };
          G__9569.cljs$core$IFn$_invoke$arity$variadic = G__9569__delegate;
          return G__9569;
        }();
        cljs.core.t9565.prototype.apply = function(self__, args9568) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args9568)));
        };
        cljs.core.t9565.prototype.cljs$core$IFn$_invoke$arity$2 = function() {
          var G__9571__delegate = function(args) {
            var _ = this;
            return cljs.core.apply.call(null, self__.o, args);
          };
          var G__9571 = function(var_args) {
            var self__ = this;
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__9571__delegate.call(this, args);
          };
          G__9571.cljs$lang$maxFixedArity = 0;
          G__9571.cljs$lang$applyTo = function(arglist__9572) {
            var args = cljs.core.seq(arglist__9572);
            return G__9571__delegate(args);
          };
          G__9571.cljs$core$IFn$_invoke$arity$variadic = G__9571__delegate;
          return G__9571;
        }();
        cljs.core.t9565.prototype.cljs$core$Fn$ = true;
        cljs.core.t9565.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9567) {
          var self__ = this;
          var _9567__$1 = this;
          return self__.meta9566;
        };
        cljs.core.t9565.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9567, meta9566__$1) {
          var self__ = this;
          var _9567__$1 = this;
          return new cljs.core.t9565(self__.meta, self__.o, self__.with_meta, meta9566__$1);
        };
        cljs.core.__GT_t9565 = function __GT_t9565(meta__$1, o__$1, with_meta__$1, meta9566) {
          return new cljs.core.t9565(meta__$1, o__$1, with_meta__$1, meta9566);
        };
      }
      return new cljs.core.t9565(meta, o, with_meta, null);
    }(), meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta.call(null, o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3450__auto__ = !(o == null);
    if (and__3450__auto__) {
      var G__9576 = o;
      if (G__9576) {
        var bit__4112__auto__ = G__9576.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4112__auto__ || G__9576.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__9576.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__9576);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__9576);
      }
    } else {
      return and__3450__auto__;
    }
  }()) {
    return cljs.core._meta.call(null, o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek.call(null, coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop.call(null, coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin.call(null, coll, k);
    }
  };
  var disj__3 = function() {
    var G__9577__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__9578 = ret;
            var G__9579 = cljs.core.first.call(null, ks);
            var G__9580 = cljs.core.next.call(null, ks);
            coll = G__9578;
            k = G__9579;
            ks = G__9580;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__9577 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9577__delegate.call(this, coll, k, ks);
    };
    G__9577.cljs$lang$maxFixedArity = 2;
    G__9577.cljs$lang$applyTo = function(arglist__9581) {
      var coll = cljs.core.first(arglist__9581);
      arglist__9581 = cljs.core.next(arglist__9581);
      var k = cljs.core.first(arglist__9581);
      var ks = cljs.core.rest(arglist__9581);
      return G__9577__delegate(coll, k, ks);
    };
    G__9577.cljs$core$IFn$_invoke$arity$variadic = G__9577__delegate;
    return G__9577;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.string_hash_cache = function() {
  var obj9583 = {};
  return obj9583;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj9587 = {};
      return obj9587;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache.call(null, k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__9589 = o;
    if (G__9589) {
      var bit__4105__auto__ = G__9589.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4105__auto__ || G__9589.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._hash.call(null, o);
  } else {
    if (typeof o === "number") {
      return Math.floor(o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.check_string_hash_cache.call(null, o);
          } else {
            if (o == null) {
              return 0;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return cljs.core._hash.call(null, o);
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__9591 = x;
    if (G__9591) {
      var bit__4112__auto__ = G__9591.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4112__auto__ || G__9591.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__9591.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__9591);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__9591);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__9593 = x;
    if (G__9593) {
      var bit__4112__auto__ = G__9593.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4112__auto__ || G__9593.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__9593.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__9593);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__9593);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__9595 = x;
  if (G__9595) {
    var bit__4112__auto__ = G__9595.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4112__auto__ || G__9595.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__9595.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__9595);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__9595);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__9597 = x;
  if (G__9597) {
    var bit__4112__auto__ = G__9597.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4112__auto__ || G__9597.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__9597.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__9597);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__9597);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__9599 = x;
  if (G__9599) {
    var bit__4112__auto__ = G__9599.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4112__auto__ || G__9599.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__9599.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__9599);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__9599);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__9601 = x;
  if (G__9601) {
    var bit__4112__auto__ = G__9601.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4112__auto__ || G__9601.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__9601.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__9601);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__9601);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__9603 = x;
    if (G__9603) {
      var bit__4112__auto__ = G__9603.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4112__auto__ || G__9603.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__9603.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__9603);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__9603);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__9605 = x;
  if (G__9605) {
    var bit__4112__auto__ = G__9605.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4112__auto__ || G__9605.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__9605.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__9605);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__9605);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__9607 = x;
  if (G__9607) {
    var bit__4105__auto__ = G__9607.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4105__auto__ || G__9607.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj9611 = {};
    return obj9611;
  };
  var js_obj__1 = function() {
    var G__9612__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals);
    };
    var G__9612 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__9612__delegate.call(this, keyvals);
    };
    G__9612.cljs$lang$maxFixedArity = 0;
    G__9612.cljs$lang$applyTo = function(arglist__9613) {
      var keyvals = cljs.core.seq(arglist__9613);
      return G__9612__delegate(keyvals);
    };
    G__9612.cljs$core$IFn$_invoke$arity$variadic = G__9612__delegate;
    return G__9612;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(keys));
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__9614 = i__$1 + 1;
      var G__9615 = j__$1 + 1;
      var G__9616 = len__$1 - 1;
      i__$1 = G__9614;
      j__$1 = G__9615;
      len__$1 = G__9616;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__9617 = i__$1 - 1;
      var G__9618 = j__$1 - 1;
      var G__9619 = len__$1 - 1;
      i__$1 = G__9617;
      j__$1 = G__9618;
      len__$1 = G__9619;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj9621 = {};
  return obj9621;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__9623 = s;
    if (G__9623) {
      var bit__4112__auto__ = G__9623.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4112__auto__ || G__9623.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__9623.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__9623);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__9623);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__9625 = s;
  if (G__9625) {
    var bit__4112__auto__ = G__9625.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4112__auto__ || G__9625.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__9625.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__9625);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__9625);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3462__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if (or__3462__auto__) {
    return or__3462__auto__;
  } else {
    var G__9629 = f;
    if (G__9629) {
      var bit__4112__auto__ = G__9629.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4112__auto__ || G__9629.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__9629.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__9629);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__9629);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && (!isNaN(n) && (!(n === Infinity) && parseFloat(n) === parseInt(n, 10)));
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && (cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.call(null, coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__9630__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([y, x], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false;
            } else {
              var G__9631 = cljs.core.conj.call(null, s, x__$1);
              var G__9632 = etc;
              s = G__9631;
              xs = G__9632;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__9630 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9630__delegate.call(this, x, y, more);
    };
    G__9630.cljs$lang$maxFixedArity = 2;
    G__9630.cljs$lang$applyTo = function(arglist__9633) {
      var x = cljs.core.first(arglist__9633);
      arglist__9633 = cljs.core.next(arglist__9633);
      var y = cljs.core.first(arglist__9633);
      var more = cljs.core.rest(arglist__9633);
      return G__9630__delegate(x, y, more);
    };
    G__9630.cljs$core$IFn$_invoke$arity$variadic = G__9630__delegate;
    return G__9630;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.sequence = function sequence(coll) {
  if (cljs.core.seq_QMARK_.call(null, coll)) {
    return coll;
  } else {
    var or__3462__auto__ = cljs.core.seq.call(null, coll);
    if (or__3462__auto__) {
      return or__3462__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if (function() {
            var G__9635 = x;
            if (G__9635) {
              var bit__4105__auto__ = G__9635.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4105__auto__ || G__9635.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._compare.call(null, x, y);
          } else {
            return goog.array.defaultCompare(x, y);
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error("compare on non-nil objects of different types");
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return compare_indexed.call(null, xs, ys, xl, 0);
        } else {
          return null;
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if (d === 0 && n + 1 < len) {
        var G__9636 = xs;
        var G__9637 = ys;
        var G__9638 = len;
        var G__9639 = n + 1;
        xs = G__9636;
        ys = G__9637;
        len = G__9638;
        n = G__9639;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y));
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4090__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4090__auto__) {
      var s = temp__4090__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s));
    } else {
      return f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__9640 = nval;
          var G__9641 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__9640;
          coll__$1 = G__9641;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__9644 = coll;
      if (G__9644) {
        var bit__4105__auto__ = G__9644.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4105__auto__ || G__9644.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__9645 = coll;
      if (G__9645) {
        var bit__4105__auto__ = G__9645.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4105__auto__ || G__9645.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, val, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce.call(null, coll, f, init);
  } else {
    return init;
  }
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__9646__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more);
    };
    var G__9646 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9646__delegate.call(this, x, y, more);
    };
    G__9646.cljs$lang$maxFixedArity = 2;
    G__9646.cljs$lang$applyTo = function(arglist__9647) {
      var x = cljs.core.first(arglist__9647);
      arglist__9647 = cljs.core.next(arglist__9647);
      var y = cljs.core.first(arglist__9647);
      var more = cljs.core.rest(arglist__9647);
      return G__9646__delegate(x, y, more);
    };
    G__9646.cljs$core$IFn$_invoke$arity$variadic = G__9646__delegate;
    return G__9646;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__9648__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more);
    };
    var G__9648 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9648__delegate.call(this, x, y, more);
    };
    G__9648.cljs$lang$maxFixedArity = 2;
    G__9648.cljs$lang$applyTo = function(arglist__9649) {
      var x = cljs.core.first(arglist__9649);
      arglist__9649 = cljs.core.next(arglist__9649);
      var y = cljs.core.first(arglist__9649);
      var more = cljs.core.rest(arglist__9649);
      return G__9648__delegate(x, y, more);
    };
    G__9648.cljs$core$IFn$_invoke$arity$variadic = G__9648__delegate;
    return G__9648;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__9650__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more);
    };
    var G__9650 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9650__delegate.call(this, x, y, more);
    };
    G__9650.cljs$lang$maxFixedArity = 2;
    G__9650.cljs$lang$applyTo = function(arglist__9651) {
      var x = cljs.core.first(arglist__9651);
      arglist__9651 = cljs.core.next(arglist__9651);
      var y = cljs.core.first(arglist__9651);
      var more = cljs.core.rest(arglist__9651);
      return G__9650__delegate(x, y, more);
    };
    G__9650.cljs$core$IFn$_invoke$arity$variadic = G__9650__delegate;
    return G__9650;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__9652__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more);
    };
    var G__9652 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9652__delegate.call(this, x, y, more);
    };
    G__9652.cljs$lang$maxFixedArity = 2;
    G__9652.cljs$lang$applyTo = function(arglist__9653) {
      var x = cljs.core.first(arglist__9653);
      arglist__9653 = cljs.core.next(arglist__9653);
      var y = cljs.core.first(arglist__9653);
      var more = cljs.core.rest(arglist__9653);
      return G__9652__delegate(x, y, more);
    };
    G__9652.cljs$core$IFn$_invoke$arity$variadic = G__9652__delegate;
    return G__9652;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__9654__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next.call(null, more)) {
            var G__9655 = y;
            var G__9656 = cljs.core.first.call(null, more);
            var G__9657 = cljs.core.next.call(null, more);
            x = G__9655;
            y = G__9656;
            more = G__9657;
            continue;
          } else {
            return y < cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__9654 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9654__delegate.call(this, x, y, more);
    };
    G__9654.cljs$lang$maxFixedArity = 2;
    G__9654.cljs$lang$applyTo = function(arglist__9658) {
      var x = cljs.core.first(arglist__9658);
      arglist__9658 = cljs.core.next(arglist__9658);
      var y = cljs.core.first(arglist__9658);
      var more = cljs.core.rest(arglist__9658);
      return G__9654__delegate(x, y, more);
    };
    G__9654.cljs$core$IFn$_invoke$arity$variadic = G__9654__delegate;
    return G__9654;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__9659__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next.call(null, more)) {
            var G__9660 = y;
            var G__9661 = cljs.core.first.call(null, more);
            var G__9662 = cljs.core.next.call(null, more);
            x = G__9660;
            y = G__9661;
            more = G__9662;
            continue;
          } else {
            return y <= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__9659 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9659__delegate.call(this, x, y, more);
    };
    G__9659.cljs$lang$maxFixedArity = 2;
    G__9659.cljs$lang$applyTo = function(arglist__9663) {
      var x = cljs.core.first(arglist__9663);
      arglist__9663 = cljs.core.next(arglist__9663);
      var y = cljs.core.first(arglist__9663);
      var more = cljs.core.rest(arglist__9663);
      return G__9659__delegate(x, y, more);
    };
    G__9659.cljs$core$IFn$_invoke$arity$variadic = G__9659__delegate;
    return G__9659;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__9664__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next.call(null, more)) {
            var G__9665 = y;
            var G__9666 = cljs.core.first.call(null, more);
            var G__9667 = cljs.core.next.call(null, more);
            x = G__9665;
            y = G__9666;
            more = G__9667;
            continue;
          } else {
            return y > cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__9664 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9664__delegate.call(this, x, y, more);
    };
    G__9664.cljs$lang$maxFixedArity = 2;
    G__9664.cljs$lang$applyTo = function(arglist__9668) {
      var x = cljs.core.first(arglist__9668);
      arglist__9668 = cljs.core.next(arglist__9668);
      var y = cljs.core.first(arglist__9668);
      var more = cljs.core.rest(arglist__9668);
      return G__9664__delegate(x, y, more);
    };
    G__9664.cljs$core$IFn$_invoke$arity$variadic = G__9664__delegate;
    return G__9664;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__9669__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next.call(null, more)) {
            var G__9670 = y;
            var G__9671 = cljs.core.first.call(null, more);
            var G__9672 = cljs.core.next.call(null, more);
            x = G__9670;
            y = G__9671;
            more = G__9672;
            continue;
          } else {
            return y >= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__9669 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9669__delegate.call(this, x, y, more);
    };
    G__9669.cljs$lang$maxFixedArity = 2;
    G__9669.cljs$lang$applyTo = function(arglist__9673) {
      var x = cljs.core.first(arglist__9673);
      arglist__9673 = cljs.core.next(arglist__9673);
      var y = cljs.core.first(arglist__9673);
      var more = cljs.core.rest(arglist__9673);
      return G__9669__delegate(x, y, more);
    };
    G__9669.cljs$core$IFn$_invoke$arity$variadic = G__9669__delegate;
    return G__9669;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__3769__auto__ = x;
    var y__3770__auto__ = y;
    return x__3769__auto__ > y__3770__auto__ ? x__3769__auto__ : y__3770__auto__;
  };
  var max__3 = function() {
    var G__9674__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3769__auto__ = x;
        var y__3770__auto__ = y;
        return x__3769__auto__ > y__3770__auto__ ? x__3769__auto__ : y__3770__auto__;
      }(), more);
    };
    var G__9674 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9674__delegate.call(this, x, y, more);
    };
    G__9674.cljs$lang$maxFixedArity = 2;
    G__9674.cljs$lang$applyTo = function(arglist__9675) {
      var x = cljs.core.first(arglist__9675);
      arglist__9675 = cljs.core.next(arglist__9675);
      var y = cljs.core.first(arglist__9675);
      var more = cljs.core.rest(arglist__9675);
      return G__9674__delegate(x, y, more);
    };
    G__9674.cljs$core$IFn$_invoke$arity$variadic = G__9674__delegate;
    return G__9674;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__3776__auto__ = x;
    var y__3777__auto__ = y;
    return x__3776__auto__ < y__3777__auto__ ? x__3776__auto__ : y__3777__auto__;
  };
  var min__3 = function() {
    var G__9676__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3776__auto__ = x;
        var y__3777__auto__ = y;
        return x__3776__auto__ < y__3777__auto__ ? x__3776__auto__ : y__3777__auto__;
      }(), more);
    };
    var G__9676 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9676__delegate.call(this, x, y, more);
    };
    G__9676.cljs$lang$maxFixedArity = 2;
    G__9676.cljs$lang$applyTo = function(arglist__9677) {
      var x = cljs.core.first(arglist__9677);
      arglist__9677 = cljs.core.next(arglist__9677);
      var y = cljs.core.first(arglist__9677);
      var more = cljs.core.rest(arglist__9677);
      return G__9676__delegate(x, y, more);
    };
    G__9676.cljs$core$IFn$_invoke$arity$variadic = G__9676__delegate;
    return G__9676;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error("Argument to char must be a character or number");
      } else {
        return null;
      }
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__9678__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more);
    };
    var G__9678 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9678__delegate.call(this, x, y, more);
    };
    G__9678.cljs$lang$maxFixedArity = 2;
    G__9678.cljs$lang$applyTo = function(arglist__9679) {
      var x = cljs.core.first(arglist__9679);
      arglist__9679 = cljs.core.next(arglist__9679);
      var y = cljs.core.first(arglist__9679);
      var more = cljs.core.rest(arglist__9679);
      return G__9678__delegate(x, y, more);
    };
    G__9678.cljs$core$IFn$_invoke$arity$variadic = G__9678__delegate;
    return G__9678;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__9680__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more);
    };
    var G__9680 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9680__delegate.call(this, x, y, more);
    };
    G__9680.cljs$lang$maxFixedArity = 2;
    G__9680.cljs$lang$applyTo = function(arglist__9681) {
      var x = cljs.core.first(arglist__9681);
      arglist__9681 = cljs.core.next(arglist__9681);
      var y = cljs.core.first(arglist__9681);
      var more = cljs.core.rest(arglist__9681);
      return G__9680__delegate(x, y, more);
    };
    G__9680.cljs$core$IFn$_invoke$arity$variadic = G__9680__delegate;
    return G__9680;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__9682__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more);
    };
    var G__9682 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9682__delegate.call(this, x, y, more);
    };
    G__9682.cljs$lang$maxFixedArity = 2;
    G__9682.cljs$lang$applyTo = function(arglist__9683) {
      var x = cljs.core.first(arglist__9683);
      arglist__9683 = cljs.core.next(arglist__9683);
      var y = cljs.core.first(arglist__9683);
      var more = cljs.core.rest(arglist__9683);
      return G__9682__delegate(x, y, more);
    };
    G__9682.cljs$core$IFn$_invoke$arity$variadic = G__9682__delegate;
    return G__9682;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__9684__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more);
    };
    var G__9684 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9684__delegate.call(this, x, y, more);
    };
    G__9684.cljs$lang$maxFixedArity = 2;
    G__9684.cljs$lang$applyTo = function(arglist__9685) {
      var x = cljs.core.first(arglist__9685);
      arglist__9685 = cljs.core.next(arglist__9685);
      var y = cljs.core.first(arglist__9685);
      var more = cljs.core.rest(arglist__9685);
      return G__9684__delegate(x, y, more);
    };
    G__9684.cljs$core$IFn$_invoke$arity$variadic = G__9684__delegate;
    return G__9684;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__9686__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more);
    };
    var G__9686 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9686__delegate.call(this, x, y, more);
    };
    G__9686.cljs$lang$maxFixedArity = 2;
    G__9686.cljs$lang$applyTo = function(arglist__9687) {
      var x = cljs.core.first(arglist__9687);
      arglist__9687 = cljs.core.next(arglist__9687);
      var y = cljs.core.first(arglist__9687);
      var more = cljs.core.rest(arglist__9687);
      return G__9686__delegate(x, y, more);
    };
    G__9686.cljs$core$IFn$_invoke$arity$variadic = G__9686__delegate;
    return G__9686;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_substract = function() {
  var unchecked_substract = null;
  var unchecked_substract__1 = function(x) {
    return-x;
  };
  var unchecked_substract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_substract__3 = function() {
    var G__9688__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract, x - y, more);
    };
    var G__9688 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9688__delegate.call(this, x, y, more);
    };
    G__9688.cljs$lang$maxFixedArity = 2;
    G__9688.cljs$lang$applyTo = function(arglist__9689) {
      var x = cljs.core.first(arglist__9689);
      arglist__9689 = cljs.core.next(arglist__9689);
      var y = cljs.core.first(arglist__9689);
      var more = cljs.core.rest(arglist__9689);
      return G__9688__delegate(x, y, more);
    };
    G__9688.cljs$core$IFn$_invoke$arity$variadic = G__9688__delegate;
    return G__9688;
  }();
  unchecked_substract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract__1.call(this, x);
      case 2:
        return unchecked_substract__2.call(this, x, y);
      default:
        return unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract.cljs$lang$maxFixedArity = 2;
  unchecked_substract.cljs$lang$applyTo = unchecked_substract__3.cljs$lang$applyTo;
  unchecked_substract.cljs$core$IFn$_invoke$arity$1 = unchecked_substract__1;
  unchecked_substract.cljs$core$IFn$_invoke$arity$2 = unchecked_substract__2;
  unchecked_substract.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract;
}();
cljs.core.unchecked_substract_int = function() {
  var unchecked_substract_int = null;
  var unchecked_substract_int__1 = function(x) {
    return-x;
  };
  var unchecked_substract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_substract_int__3 = function() {
    var G__9690__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract_int, x - y, more);
    };
    var G__9690 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9690__delegate.call(this, x, y, more);
    };
    G__9690.cljs$lang$maxFixedArity = 2;
    G__9690.cljs$lang$applyTo = function(arglist__9691) {
      var x = cljs.core.first(arglist__9691);
      arglist__9691 = cljs.core.next(arglist__9691);
      var y = cljs.core.first(arglist__9691);
      var more = cljs.core.rest(arglist__9691);
      return G__9690__delegate(x, y, more);
    };
    G__9690.cljs$core$IFn$_invoke$arity$variadic = G__9690__delegate;
    return G__9690;
  }();
  unchecked_substract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract_int__1.call(this, x);
      case 2:
        return unchecked_substract_int__2.call(this, x, y);
      default:
        return unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract_int.cljs$lang$maxFixedArity = 2;
  unchecked_substract_int.cljs$lang$applyTo = unchecked_substract_int__3.cljs$lang$applyTo;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_substract_int__1;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_substract_int__2;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    return Math.floor.call(null, q);
  } else {
    return Math.ceil.call(null, q);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q;
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null);
  };
  var rand__1 = function(n) {
    return n * rand.call(null);
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n));
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__9692__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__9693 = y;
            var G__9694 = cljs.core.first.call(null, more);
            var G__9695 = cljs.core.next.call(null, more);
            x = G__9693;
            y = G__9694;
            more = G__9695;
            continue;
          } else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__9692 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9692__delegate.call(this, x, y, more);
    };
    G__9692.cljs$lang$maxFixedArity = 2;
    G__9692.cljs$lang$applyTo = function(arglist__9696) {
      var x = cljs.core.first(arglist__9696);
      arglist__9696 = cljs.core.next(arglist__9696);
      var y = cljs.core.first(arglist__9696);
      var more = cljs.core.rest(arglist__9696);
      return G__9692__delegate(x, y, more);
    };
    G__9692.cljs$core$IFn$_invoke$arity$variadic = G__9692__delegate;
    return G__9692;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__9697 = n__$1 - 1;
      var G__9698 = cljs.core.next.call(null, xs);
      n__$1 = G__9697;
      xs = G__9698;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      return x.toString();
    }
  };
  var str__2 = function() {
    var G__9699__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__9700 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__9701 = cljs.core.next.call(null, more);
          sb = G__9700;
          more = G__9701;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__9699 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__9699__delegate.call(this, x, ys);
    };
    G__9699.cljs$lang$maxFixedArity = 1;
    G__9699.cljs$lang$applyTo = function(arglist__9702) {
      var x = cljs.core.first(arglist__9702);
      var ys = cljs.core.rest(arglist__9702);
      return G__9699__delegate(x, ys);
    };
    G__9699.cljs$core$IFn$_invoke$arity$variadic = G__9699__delegate;
    return G__9699;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__9703 = cljs.core.next.call(null, xs);
            var G__9704 = cljs.core.next.call(null, ys);
            xs = G__9703;
            ys = G__9704;
            continue;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false;
            } else {
              return null;
            }
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__9705 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__9706 = cljs.core.next.call(null, s);
        res = G__9705;
        s = G__9706;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__9707 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__9708 = cljs.core.next.call(null, s);
      h = G__9707;
      s = G__9708;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__9709 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__9710 = cljs.core.next.call(null, s__$1);
      h = G__9709;
      s__$1 = G__9710;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__9717_9723 = cljs.core.seq.call(null, fn_map);
  var chunk__9718_9724 = null;
  var count__9719_9725 = 0;
  var i__9720_9726 = 0;
  while (true) {
    if (i__9720_9726 < count__9719_9725) {
      var vec__9721_9727 = cljs.core._nth.call(null, chunk__9718_9724, i__9720_9726);
      var key_name_9728 = cljs.core.nth.call(null, vec__9721_9727, 0, null);
      var f_9729 = cljs.core.nth.call(null, vec__9721_9727, 1, null);
      var str_name_9730 = cljs.core.name.call(null, key_name_9728);
      obj[str_name_9730] = f_9729;
      var G__9731 = seq__9717_9723;
      var G__9732 = chunk__9718_9724;
      var G__9733 = count__9719_9725;
      var G__9734 = i__9720_9726 + 1;
      seq__9717_9723 = G__9731;
      chunk__9718_9724 = G__9732;
      count__9719_9725 = G__9733;
      i__9720_9726 = G__9734;
      continue;
    } else {
      var temp__4092__auto___9735 = cljs.core.seq.call(null, seq__9717_9723);
      if (temp__4092__auto___9735) {
        var seq__9717_9736__$1 = temp__4092__auto___9735;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__9717_9736__$1)) {
          var c__4210__auto___9737 = cljs.core.chunk_first.call(null, seq__9717_9736__$1);
          var G__9738 = cljs.core.chunk_rest.call(null, seq__9717_9736__$1);
          var G__9739 = c__4210__auto___9737;
          var G__9740 = cljs.core.count.call(null, c__4210__auto___9737);
          var G__9741 = 0;
          seq__9717_9723 = G__9738;
          chunk__9718_9724 = G__9739;
          count__9719_9725 = G__9740;
          i__9720_9726 = G__9741;
          continue;
        } else {
          var vec__9722_9742 = cljs.core.first.call(null, seq__9717_9736__$1);
          var key_name_9743 = cljs.core.nth.call(null, vec__9722_9742, 0, null);
          var f_9744 = cljs.core.nth.call(null, vec__9722_9742, 1, null);
          var str_name_9745 = cljs.core.name.call(null, key_name_9743);
          obj[str_name_9745] = f_9744;
          var G__9746 = cljs.core.next.call(null, seq__9717_9736__$1);
          var G__9747 = null;
          var G__9748 = 0;
          var G__9749 = 0;
          seq__9717_9723 = G__9746;
          chunk__9718_9724 = G__9747;
          count__9719_9725 = G__9748;
          i__9720_9726 = G__9749;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/List");
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3873__auto__ = self__.__hash;
  if (!(h__3873__auto__ == null)) {
    return h__3873__auto__;
  } else {
    var h__3873__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3873__auto____$1;
    return h__3873__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/EmptyList");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__9751 = coll;
  if (G__9751) {
    var bit__4112__auto__ = G__9751.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4112__auto__ || G__9751.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__9751.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__9751);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__9751);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__9752 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__9752;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__9753 = i - 1;
        var G__9754 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__9753;
        r = G__9754;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__9755) {
    var xs = cljs.core.seq(arglist__9755);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/Cons");
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3873__auto__ = self__.__hash;
  if (!(h__3873__auto__ == null)) {
    return h__3873__auto__;
  } else {
    var h__3873__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3873__auto____$1;
    return h__3873__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq.call(null, self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3462__auto__ = coll == null;
    if (or__3462__auto__) {
      return or__3462__auto__;
    } else {
      var G__9759 = coll;
      if (G__9759) {
        var bit__4105__auto__ = G__9759.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4105__auto__ || G__9759.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__9761 = x;
  if (G__9761) {
    var bit__4112__auto__ = G__9761.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4112__auto__ || G__9761.cljs$core$IList$) {
      return true;
    } else {
      if (!G__9761.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__9761);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__9761);
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/Keyword");
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._hash == null) {
    self__._hash = cljs.core.hash_combine.call(null, cljs.core.hash.call(null, self__.ns), cljs.core.hash.call(null, self__.name)) + 2654435769;
    return self__._hash;
  } else {
    return self__._hash;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__9763 = null;
  var G__9763__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw);
  };
  var G__9763__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found);
  };
  G__9763 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9763__2.call(this, self__, coll);
      case 3:
        return G__9763__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9763;
}();
cljs.core.Keyword.prototype.apply = function(self__, args9762) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args9762)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__9765 = x;
    if (G__9765) {
      var bit__4105__auto__ = G__9765.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4105__auto__ || G__9765.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._namespace.call(null, x);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace.call(null, name), cljs.core.name.call(null, name), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/LazySeq");
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3873__auto__ = self__.__hash;
  if (!(h__3873__auto__ == null)) {
    return h__3873__auto__;
  } else {
    var h__3873__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3873__auto____$1;
    return h__3873__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__9766 = ls.sval();
        ls = G__9766;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/ArrayChunk");
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/ChunkedCons");
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3873__auto__ = self__.__hash;
  if (!(h__3873__auto__ == null)) {
    return h__3873__auto__;
  } else {
    var h__3873__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3873__auto____$1;
    return h__3873__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1);
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count.call(null, chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__9768 = s;
    if (G__9768) {
      var bit__4105__auto__ = G__9768.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4105__auto__ || G__9768.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next.call(null, s);
  } else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__9769 = cljs.core.next.call(null, s__$1);
      s__$1 = G__9769;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_9770 = 0;
  var xs_9771 = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs_9771) {
      ret[i_9770] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_9771));
      var G__9772 = i_9770 + 1;
      var G__9773 = cljs.core.next.call(null, xs_9771);
      i_9770 = G__9772;
      xs_9771 = G__9773;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__9774 = i + 1;
          var G__9775 = cljs.core.next.call(null, s__$1);
          i = G__9774;
          s__$1 = G__9775;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4310__auto___9776 = size;
      var i_9777 = 0;
      while (true) {
        if (i_9777 < n__4310__auto___9776) {
          a[i_9777] = init_val_or_seq;
          var G__9778 = i_9777 + 1;
          i_9777 = G__9778;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__9779 = i + 1;
          var G__9780 = cljs.core.next.call(null, s__$1);
          i = G__9779;
          s__$1 = G__9780;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4310__auto___9781 = size;
      var i_9782 = 0;
      while (true) {
        if (i_9782 < n__4310__auto___9781) {
          a[i_9782] = init_val_or_seq;
          var G__9783 = i_9782 + 1;
          i_9782 = G__9783;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__9784 = i + 1;
          var G__9785 = cljs.core.next.call(null, s__$1);
          i = G__9784;
          s__$1 = G__9785;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4310__auto___9786 = size;
      var i_9787 = 0;
      while (true) {
        if (i_9787 < n__4310__auto___9786) {
          a[i_9787] = init_val_or_seq;
          var G__9788 = i_9787 + 1;
          i_9787 = G__9788;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__9789 = i + 1;
          var G__9790 = cljs.core.next.call(null, s__$1);
          i = G__9789;
          s__$1 = G__9790;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4310__auto___9791 = size;
      var i_9792 = 0;
      while (true) {
        if (i_9792 < n__4310__auto___9791) {
          a[i_9792] = init_val_or_seq;
          var G__9793 = i_9792 + 1;
          i_9792 = G__9793;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__9794 = cljs.core.next.call(null, s__$1);
        var G__9795 = i - 1;
        var G__9796 = sum + 1;
        s__$1 = G__9794;
        i = G__9795;
        sum = G__9796;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)));
      } else {
        return null;
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y));
        } else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__9797__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1));
            } else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat.call(null, concat.call(null, x, y), zs);
    };
    var G__9797 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9797__delegate.call(this, x, y, zs);
    };
    G__9797.cljs$lang$maxFixedArity = 2;
    G__9797.cljs$lang$applyTo = function(arglist__9798) {
      var x = cljs.core.first(arglist__9798);
      arglist__9798 = cljs.core.next(arglist__9798);
      var y = cljs.core.first(arglist__9798);
      var zs = cljs.core.rest(arglist__9798);
      return G__9797__delegate(x, y, zs);
    };
    G__9797.cljs$core$IFn$_invoke$arity$variadic = G__9797__delegate;
    return G__9797;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)));
  };
  var list_STAR___5 = function() {
    var G__9799__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))));
    };
    var G__9799 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__9799__delegate.call(this, a, b, c, d, more);
    };
    G__9799.cljs$lang$maxFixedArity = 4;
    G__9799.cljs$lang$applyTo = function(arglist__9800) {
      var a = cljs.core.first(arglist__9800);
      arglist__9800 = cljs.core.next(arglist__9800);
      var b = cljs.core.first(arglist__9800);
      arglist__9800 = cljs.core.next(arglist__9800);
      var c = cljs.core.first(arglist__9800);
      arglist__9800 = cljs.core.next(arglist__9800);
      var d = cljs.core.first(arglist__9800);
      var more = cljs.core.rest(arglist__9800);
      return G__9799__delegate(a, b, c, d, more);
    };
    G__9799.cljs$core$IFn$_invoke$arity$variadic = G__9799__delegate;
    return G__9799;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_.call(null, tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__9801__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__9802 = ntcoll;
          var G__9803 = cljs.core.first.call(null, vals);
          var G__9804 = cljs.core.next.call(null, vals);
          tcoll = G__9802;
          val = G__9803;
          vals = G__9804;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__9801 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9801__delegate.call(this, tcoll, val, vals);
    };
    G__9801.cljs$lang$maxFixedArity = 2;
    G__9801.cljs$lang$applyTo = function(arglist__9805) {
      var tcoll = cljs.core.first(arglist__9805);
      arglist__9805 = cljs.core.next(arglist__9805);
      var val = cljs.core.first(arglist__9805);
      var vals = cljs.core.rest(arglist__9805);
      return G__9801__delegate(tcoll, val, vals);
    };
    G__9801.cljs$core$IFn$_invoke$arity$variadic = G__9801__delegate;
    return G__9801;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_.call(null, tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__9806__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_.call(null, tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__9807 = ntcoll;
          var G__9808 = cljs.core.first.call(null, kvs);
          var G__9809 = cljs.core.second.call(null, kvs);
          var G__9810 = cljs.core.nnext.call(null, kvs);
          tcoll = G__9807;
          key = G__9808;
          val = G__9809;
          kvs = G__9810;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__9806 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__9806__delegate.call(this, tcoll, key, val, kvs);
    };
    G__9806.cljs$lang$maxFixedArity = 3;
    G__9806.cljs$lang$applyTo = function(arglist__9811) {
      var tcoll = cljs.core.first(arglist__9811);
      arglist__9811 = cljs.core.next(arglist__9811);
      var key = cljs.core.first(arglist__9811);
      arglist__9811 = cljs.core.next(arglist__9811);
      var val = cljs.core.first(arglist__9811);
      var kvs = cljs.core.rest(arglist__9811);
      return G__9806__delegate(tcoll, key, val, kvs);
    };
    G__9806.cljs$core$IFn$_invoke$arity$variadic = G__9806__delegate;
    return G__9806;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_.call(null, tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__9812__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_.call(null, tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__9813 = ntcoll;
          var G__9814 = cljs.core.first.call(null, ks);
          var G__9815 = cljs.core.next.call(null, ks);
          tcoll = G__9813;
          key = G__9814;
          ks = G__9815;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__9812 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9812__delegate.call(this, tcoll, key, ks);
    };
    G__9812.cljs$lang$maxFixedArity = 2;
    G__9812.cljs$lang$applyTo = function(arglist__9816) {
      var tcoll = cljs.core.first(arglist__9816);
      arglist__9816 = cljs.core.next(arglist__9816);
      var key = cljs.core.first(arglist__9816);
      var ks = cljs.core.rest(arglist__9816);
      return G__9812__delegate(tcoll, key, ks);
    };
    G__9812.cljs$core$IFn$_invoke$arity$variadic = G__9812__delegate;
    return G__9812;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_.call(null, tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__9817__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__9818 = ntcoll;
          var G__9819 = cljs.core.first.call(null, vals);
          var G__9820 = cljs.core.next.call(null, vals);
          tcoll = G__9818;
          val = G__9819;
          vals = G__9820;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__9817 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9817__delegate.call(this, tcoll, val, vals);
    };
    G__9817.cljs$lang$maxFixedArity = 2;
    G__9817.cljs$lang$applyTo = function(arglist__9821) {
      var tcoll = cljs.core.first(arglist__9821);
      arglist__9821 = cljs.core.next(arglist__9821);
      var val = cljs.core.first(arglist__9821);
      var vals = cljs.core.rest(arglist__9821);
      return G__9817__delegate(tcoll, val, vals);
    };
    G__9817.cljs$core$IFn$_invoke$arity$variadic = G__9817__delegate;
    return G__9817;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if (argc === 0) {
    return f.call(null);
  } else {
    var a4354 = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4354);
      } else {
        return f.call(null, a4354);
      }
    } else {
      var b4355 = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4354, b4355);
        } else {
          return f.call(null, a4354, b4355);
        }
      } else {
        var c4356 = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4354, b4355, c4356);
          } else {
            return f.call(null, a4354, b4355, c4356);
          }
        } else {
          var d4357 = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4354, b4355, c4356, d4357);
            } else {
              return f.call(null, a4354, b4355, c4356, d4357);
            }
          } else {
            var e4358 = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4354, b4355, c4356, d4357, e4358);
              } else {
                return f.call(null, a4354, b4355, c4356, d4357, e4358);
              }
            } else {
              var f4359 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4354, b4355, c4356, d4357, e4358, f4359);
                } else {
                  return f.call(null, a4354, b4355, c4356, d4357, e4358, f4359);
                }
              } else {
                var g4360 = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4354, b4355, c4356, d4357, e4358, f4359, g4360);
                  } else {
                    return f.call(null, a4354, b4355, c4356, d4357, e4358, f4359, g4360);
                  }
                } else {
                  var h4361 = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4354, b4355, c4356, d4357, e4358, f4359, g4360, h4361);
                    } else {
                      return f.call(null, a4354, b4355, c4356, d4357, e4358, f4359, g4360, h4361);
                    }
                  } else {
                    var i4362 = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4354, b4355, c4356, d4357, e4358, f4359, g4360, h4361, i4362);
                      } else {
                        return f.call(null, a4354, b4355, c4356, d4357, e4358, f4359, g4360, h4361, i4362);
                      }
                    } else {
                      var j4363 = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4354, b4355, c4356, d4357, e4358, f4359, g4360, h4361, i4362, j4363);
                        } else {
                          return f.call(null, a4354, b4355, c4356, d4357, e4358, f4359, g4360, h4361, i4362, j4363);
                        }
                      } else {
                        var k4364 = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4354, b4355, c4356, d4357, e4358, f4359, g4360, h4361, i4362, j4363, k4364);
                          } else {
                            return f.call(null, a4354, b4355, c4356, d4357, e4358, f4359, g4360, h4361, i4362, j4363, k4364);
                          }
                        } else {
                          var l4365 = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4354, b4355, c4356, d4357, e4358, f4359, g4360, h4361, i4362, j4363, k4364, l4365);
                            } else {
                              return f.call(null, a4354, b4355, c4356, d4357, e4358, f4359, g4360, h4361, i4362, j4363, k4364, l4365);
                            }
                          } else {
                            var m4366 = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4354, b4355, c4356, d4357, e4358, f4359, g4360, h4361, i4362, j4363, k4364, l4365, m4366);
                              } else {
                                return f.call(null, a4354, b4355, c4356, d4357, e4358, f4359, g4360, h4361, i4362, j4363, k4364, l4365, m4366);
                              }
                            } else {
                              var n4367 = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4354, b4355, c4356, d4357, e4358, f4359, g4360, h4361, i4362, j4363, k4364, l4365, m4366, n4367);
                                } else {
                                  return f.call(null, a4354, b4355, c4356, d4357, e4358, f4359, g4360, h4361, i4362, j4363, k4364, l4365, m4366, n4367);
                                }
                              } else {
                                var o4368 = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4354, b4355, c4356, d4357, e4358, f4359, g4360, h4361, i4362, j4363, k4364, l4365, m4366, n4367, o4368);
                                  } else {
                                    return f.call(null, a4354, b4355, c4356, d4357, e4358, f4359, g4360, h4361, i4362, j4363, k4364, l4365, m4366, n4367, o4368);
                                  }
                                } else {
                                  var p4369 = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4354, b4355, c4356, d4357, e4358, f4359, g4360, h4361, i4362, j4363, k4364, l4365, m4366, n4367, o4368, p4369);
                                    } else {
                                      return f.call(null, a4354, b4355, c4356, d4357, e4358, f4359, g4360, h4361, i4362, j4363, k4364, l4365, m4366, n4367, o4368, p4369);
                                    }
                                  } else {
                                    var q4370 = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4354, b4355, c4356, d4357, e4358, f4359, g4360, h4361, i4362, j4363, k4364, l4365, m4366, n4367, o4368, p4369, q4370);
                                      } else {
                                        return f.call(null, a4354, b4355, c4356, d4357, e4358, f4359, g4360, h4361, i4362, j4363, k4364, l4365, m4366, n4367, o4368, p4369, q4370);
                                      }
                                    } else {
                                      var r4371 = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4354, b4355, c4356, d4357, e4358, f4359, g4360, h4361, i4362, j4363, k4364, l4365, m4366, n4367, o4368, p4369, q4370, r4371);
                                        } else {
                                          return f.call(null, a4354, b4355, c4356, d4357, e4358, f4359, g4360, h4361, i4362, j4363, k4364, l4365, m4366, n4367, o4368, p4369, q4370, r4371);
                                        }
                                      } else {
                                        var s4372 = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4354, b4355, c4356, d4357, e4358, f4359, g4360, h4361, i4362, j4363, k4364, l4365, m4366, n4367, o4368, p4369, q4370, r4371, s4372);
                                          } else {
                                            return f.call(null, a4354, b4355, c4356, d4357, e4358, f4359, g4360, h4361, i4362, j4363, k4364, l4365, m4366, n4367, o4368, p4369, q4370, r4371, s4372);
                                          }
                                        } else {
                                          var t4373 = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4354, b4355, c4356, d4357, e4358, f4359, g4360, h4361, i4362, j4363, k4364, l4365, m4366, n4367, o4368, p4369, q4370, r4371, s4372, t4373);
                                            } else {
                                              return f.call(null, a4354, b4355, c4356, d4357, e4358, f4359, g4360, h4361, i4362, j4363, k4364, l4365, m4366, n4367, o4368, p4369, q4370, r4371, s4372, t4373);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__6 = function() {
    var G__9822__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array.call(null, arglist));
      }
    };
    var G__9822 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__9822__delegate.call(this, f, a, b, c, d, args);
    };
    G__9822.cljs$lang$maxFixedArity = 5;
    G__9822.cljs$lang$applyTo = function(arglist__9823) {
      var f = cljs.core.first(arglist__9823);
      arglist__9823 = cljs.core.next(arglist__9823);
      var a = cljs.core.first(arglist__9823);
      arglist__9823 = cljs.core.next(arglist__9823);
      var b = cljs.core.first(arglist__9823);
      arglist__9823 = cljs.core.next(arglist__9823);
      var c = cljs.core.first(arglist__9823);
      arglist__9823 = cljs.core.next(arglist__9823);
      var d = cljs.core.first(arglist__9823);
      var args = cljs.core.rest(arglist__9823);
      return G__9822__delegate(f, a, b, c, d, args);
    };
    G__9822.cljs$core$IFn$_invoke$arity$variadic = G__9822__delegate;
    return G__9822;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj)));
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a));
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b));
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c));
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c, d));
  };
  var vary_meta__7 = function() {
    var G__9824__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), a, b, c, d, args));
    };
    var G__9824 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__9824__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__9824.cljs$lang$maxFixedArity = 6;
    G__9824.cljs$lang$applyTo = function(arglist__9825) {
      var obj = cljs.core.first(arglist__9825);
      arglist__9825 = cljs.core.next(arglist__9825);
      var f = cljs.core.first(arglist__9825);
      arglist__9825 = cljs.core.next(arglist__9825);
      var a = cljs.core.first(arglist__9825);
      arglist__9825 = cljs.core.next(arglist__9825);
      var b = cljs.core.first(arglist__9825);
      arglist__9825 = cljs.core.next(arglist__9825);
      var c = cljs.core.first(arglist__9825);
      arglist__9825 = cljs.core.next(arglist__9825);
      var d = cljs.core.first(arglist__9825);
      var args = cljs.core.rest(arglist__9825);
      return G__9824__delegate(obj, f, a, b, c, d, args);
    };
    G__9824.cljs$core$IFn$_invoke$arity$variadic = G__9824__delegate;
    return G__9824;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var not_EQ___3 = function() {
    var G__9826__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more));
    };
    var G__9826 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9826__delegate.call(this, x, y, more);
    };
    G__9826.cljs$lang$maxFixedArity = 2;
    G__9826.cljs$lang$applyTo = function(arglist__9827) {
      var x = cljs.core.first(arglist__9827);
      arglist__9827 = cljs.core.next(arglist__9827);
      var y = cljs.core.first(arglist__9827);
      var more = cljs.core.rest(arglist__9827);
      return G__9826__delegate(x, y, more);
    };
    G__9826.cljs$core$IFn$_invoke$arity$variadic = G__9826__delegate;
    return G__9826;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq.call(null, coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__9828 = pred;
        var G__9829 = cljs.core.next.call(null, coll);
        pred = G__9828;
        coll = G__9829;
        continue;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return false;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll)) {
      var or__3462__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if (cljs.core.truth_(or__3462__auto__)) {
        return or__3462__auto__;
      } else {
        var G__9830 = pred;
        var G__9831 = cljs.core.next.call(null, coll);
        pred = G__9830;
        coll = G__9831;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n);
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__9832 = null;
    var G__9832__0 = function() {
      return cljs.core.not.call(null, f.call(null));
    };
    var G__9832__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x));
    };
    var G__9832__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y));
    };
    var G__9832__3 = function() {
      var G__9833__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs));
      };
      var G__9833 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
        }
        return G__9833__delegate.call(this, x, y, zs);
      };
      G__9833.cljs$lang$maxFixedArity = 2;
      G__9833.cljs$lang$applyTo = function(arglist__9834) {
        var x = cljs.core.first(arglist__9834);
        arglist__9834 = cljs.core.next(arglist__9834);
        var y = cljs.core.first(arglist__9834);
        var zs = cljs.core.rest(arglist__9834);
        return G__9833__delegate(x, y, zs);
      };
      G__9833.cljs$core$IFn$_invoke$arity$variadic = G__9833__delegate;
      return G__9833;
    }();
    G__9832 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__9832__0.call(this);
        case 1:
          return G__9832__1.call(this, x);
        case 2:
          return G__9832__2.call(this, x, y);
        default:
          return G__9832__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__9832.cljs$lang$maxFixedArity = 2;
    G__9832.cljs$lang$applyTo = G__9832__3.cljs$lang$applyTo;
    return G__9832;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__9835__delegate = function(args) {
      return x;
    };
    var G__9835 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__9835__delegate.call(this, args);
    };
    G__9835.cljs$lang$maxFixedArity = 0;
    G__9835.cljs$lang$applyTo = function(arglist__9836) {
      var args = cljs.core.seq(arglist__9836);
      return G__9835__delegate(args);
    };
    G__9835.cljs$core$IFn$_invoke$arity$variadic = G__9835__delegate;
    return G__9835;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__9837 = null;
      var G__9837__0 = function() {
        return f.call(null, g.call(null));
      };
      var G__9837__1 = function(x) {
        return f.call(null, g.call(null, x));
      };
      var G__9837__2 = function(x, y) {
        return f.call(null, g.call(null, x, y));
      };
      var G__9837__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z));
      };
      var G__9837__4 = function() {
        var G__9838__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args));
        };
        var G__9838 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__9838__delegate.call(this, x, y, z, args);
        };
        G__9838.cljs$lang$maxFixedArity = 3;
        G__9838.cljs$lang$applyTo = function(arglist__9839) {
          var x = cljs.core.first(arglist__9839);
          arglist__9839 = cljs.core.next(arglist__9839);
          var y = cljs.core.first(arglist__9839);
          arglist__9839 = cljs.core.next(arglist__9839);
          var z = cljs.core.first(arglist__9839);
          var args = cljs.core.rest(arglist__9839);
          return G__9838__delegate(x, y, z, args);
        };
        G__9838.cljs$core$IFn$_invoke$arity$variadic = G__9838__delegate;
        return G__9838;
      }();
      G__9837 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__9837__0.call(this);
          case 1:
            return G__9837__1.call(this, x);
          case 2:
            return G__9837__2.call(this, x, y);
          case 3:
            return G__9837__3.call(this, x, y, z);
          default:
            return G__9837__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9837.cljs$lang$maxFixedArity = 3;
      G__9837.cljs$lang$applyTo = G__9837__4.cljs$lang$applyTo;
      return G__9837;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__9840 = null;
      var G__9840__0 = function() {
        return f.call(null, g.call(null, h.call(null)));
      };
      var G__9840__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)));
      };
      var G__9840__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)));
      };
      var G__9840__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)));
      };
      var G__9840__4 = function() {
        var G__9841__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)));
        };
        var G__9841 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__9841__delegate.call(this, x, y, z, args);
        };
        G__9841.cljs$lang$maxFixedArity = 3;
        G__9841.cljs$lang$applyTo = function(arglist__9842) {
          var x = cljs.core.first(arglist__9842);
          arglist__9842 = cljs.core.next(arglist__9842);
          var y = cljs.core.first(arglist__9842);
          arglist__9842 = cljs.core.next(arglist__9842);
          var z = cljs.core.first(arglist__9842);
          var args = cljs.core.rest(arglist__9842);
          return G__9841__delegate(x, y, z, args);
        };
        G__9841.cljs$core$IFn$_invoke$arity$variadic = G__9841__delegate;
        return G__9841;
      }();
      G__9840 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__9840__0.call(this);
          case 1:
            return G__9840__1.call(this, x);
          case 2:
            return G__9840__2.call(this, x, y);
          case 3:
            return G__9840__3.call(this, x, y, z);
          default:
            return G__9840__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9840.cljs$lang$maxFixedArity = 3;
      G__9840.cljs$lang$applyTo = G__9840__4.cljs$lang$applyTo;
      return G__9840;
    }();
  };
  var comp__4 = function() {
    var G__9843__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__9844__delegate = function(args) {
            var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
            var fs__$2 = cljs.core.next.call(null, fs__$1);
            while (true) {
              if (fs__$2) {
                var G__9845 = cljs.core.first.call(null, fs__$2).call(null, ret);
                var G__9846 = cljs.core.next.call(null, fs__$2);
                ret = G__9845;
                fs__$2 = G__9846;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__9844 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__9844__delegate.call(this, args);
          };
          G__9844.cljs$lang$maxFixedArity = 0;
          G__9844.cljs$lang$applyTo = function(arglist__9847) {
            var args = cljs.core.seq(arglist__9847);
            return G__9844__delegate(args);
          };
          G__9844.cljs$core$IFn$_invoke$arity$variadic = G__9844__delegate;
          return G__9844;
        }();
      }(fs__$1);
    };
    var G__9843 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__9843__delegate.call(this, f1, f2, f3, fs);
    };
    G__9843.cljs$lang$maxFixedArity = 3;
    G__9843.cljs$lang$applyTo = function(arglist__9848) {
      var f1 = cljs.core.first(arglist__9848);
      arglist__9848 = cljs.core.next(arglist__9848);
      var f2 = cljs.core.first(arglist__9848);
      arglist__9848 = cljs.core.next(arglist__9848);
      var f3 = cljs.core.first(arglist__9848);
      var fs = cljs.core.rest(arglist__9848);
      return G__9843__delegate(f1, f2, f3, fs);
    };
    G__9843.cljs$core$IFn$_invoke$arity$variadic = G__9843__delegate;
    return G__9843;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__9849__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args);
      };
      var G__9849 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__9849__delegate.call(this, args);
      };
      G__9849.cljs$lang$maxFixedArity = 0;
      G__9849.cljs$lang$applyTo = function(arglist__9850) {
        var args = cljs.core.seq(arglist__9850);
        return G__9849__delegate(args);
      };
      G__9849.cljs$core$IFn$_invoke$arity$variadic = G__9849__delegate;
      return G__9849;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__9851__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args);
      };
      var G__9851 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__9851__delegate.call(this, args);
      };
      G__9851.cljs$lang$maxFixedArity = 0;
      G__9851.cljs$lang$applyTo = function(arglist__9852) {
        var args = cljs.core.seq(arglist__9852);
        return G__9851__delegate(args);
      };
      G__9851.cljs$core$IFn$_invoke$arity$variadic = G__9851__delegate;
      return G__9851;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__9853__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args);
      };
      var G__9853 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__9853__delegate.call(this, args);
      };
      G__9853.cljs$lang$maxFixedArity = 0;
      G__9853.cljs$lang$applyTo = function(arglist__9854) {
        var args = cljs.core.seq(arglist__9854);
        return G__9853__delegate(args);
      };
      G__9853.cljs$core$IFn$_invoke$arity$variadic = G__9853__delegate;
      return G__9853;
    }();
  };
  var partial__5 = function() {
    var G__9855__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__9856__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args));
        };
        var G__9856 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__9856__delegate.call(this, args);
        };
        G__9856.cljs$lang$maxFixedArity = 0;
        G__9856.cljs$lang$applyTo = function(arglist__9857) {
          var args = cljs.core.seq(arglist__9857);
          return G__9856__delegate(args);
        };
        G__9856.cljs$core$IFn$_invoke$arity$variadic = G__9856__delegate;
        return G__9856;
      }();
    };
    var G__9855 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__9855__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__9855.cljs$lang$maxFixedArity = 4;
    G__9855.cljs$lang$applyTo = function(arglist__9858) {
      var f = cljs.core.first(arglist__9858);
      arglist__9858 = cljs.core.next(arglist__9858);
      var arg1 = cljs.core.first(arglist__9858);
      arglist__9858 = cljs.core.next(arglist__9858);
      var arg2 = cljs.core.first(arglist__9858);
      arglist__9858 = cljs.core.next(arglist__9858);
      var arg3 = cljs.core.first(arglist__9858);
      var more = cljs.core.rest(arglist__9858);
      return G__9855__delegate(f, arg1, arg2, arg3, more);
    };
    G__9855.cljs$core$IFn$_invoke$arity$variadic = G__9855__delegate;
    return G__9855;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__9859 = null;
      var G__9859__1 = function(a) {
        return f.call(null, a == null ? x : a);
      };
      var G__9859__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b);
      };
      var G__9859__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c);
      };
      var G__9859__4 = function() {
        var G__9860__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds);
        };
        var G__9860 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__9860__delegate.call(this, a, b, c, ds);
        };
        G__9860.cljs$lang$maxFixedArity = 3;
        G__9860.cljs$lang$applyTo = function(arglist__9861) {
          var a = cljs.core.first(arglist__9861);
          arglist__9861 = cljs.core.next(arglist__9861);
          var b = cljs.core.first(arglist__9861);
          arglist__9861 = cljs.core.next(arglist__9861);
          var c = cljs.core.first(arglist__9861);
          var ds = cljs.core.rest(arglist__9861);
          return G__9860__delegate(a, b, c, ds);
        };
        G__9860.cljs$core$IFn$_invoke$arity$variadic = G__9860__delegate;
        return G__9860;
      }();
      G__9859 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__9859__1.call(this, a);
          case 2:
            return G__9859__2.call(this, a, b);
          case 3:
            return G__9859__3.call(this, a, b, c);
          default:
            return G__9859__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9859.cljs$lang$maxFixedArity = 3;
      G__9859.cljs$lang$applyTo = G__9859__4.cljs$lang$applyTo;
      return G__9859;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__9862 = null;
      var G__9862__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__9862__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c);
      };
      var G__9862__4 = function() {
        var G__9863__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__9863 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__9863__delegate.call(this, a, b, c, ds);
        };
        G__9863.cljs$lang$maxFixedArity = 3;
        G__9863.cljs$lang$applyTo = function(arglist__9864) {
          var a = cljs.core.first(arglist__9864);
          arglist__9864 = cljs.core.next(arglist__9864);
          var b = cljs.core.first(arglist__9864);
          arglist__9864 = cljs.core.next(arglist__9864);
          var c = cljs.core.first(arglist__9864);
          var ds = cljs.core.rest(arglist__9864);
          return G__9863__delegate(a, b, c, ds);
        };
        G__9863.cljs$core$IFn$_invoke$arity$variadic = G__9863__delegate;
        return G__9863;
      }();
      G__9862 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__9862__2.call(this, a, b);
          case 3:
            return G__9862__3.call(this, a, b, c);
          default:
            return G__9862__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9862.cljs$lang$maxFixedArity = 3;
      G__9862.cljs$lang$applyTo = G__9862__4.cljs$lang$applyTo;
      return G__9862;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__9865 = null;
      var G__9865__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__9865__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c);
      };
      var G__9865__4 = function() {
        var G__9866__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__9866 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__9866__delegate.call(this, a, b, c, ds);
        };
        G__9866.cljs$lang$maxFixedArity = 3;
        G__9866.cljs$lang$applyTo = function(arglist__9867) {
          var a = cljs.core.first(arglist__9867);
          arglist__9867 = cljs.core.next(arglist__9867);
          var b = cljs.core.first(arglist__9867);
          arglist__9867 = cljs.core.next(arglist__9867);
          var c = cljs.core.first(arglist__9867);
          var ds = cljs.core.rest(arglist__9867);
          return G__9866__delegate(a, b, c, ds);
        };
        G__9866.cljs$core$IFn$_invoke$arity$variadic = G__9866__delegate;
        return G__9866;
      }();
      G__9865 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__9865__2.call(this, a, b);
          case 3:
            return G__9865__3.call(this, a, b, c);
          default:
            return G__9865__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9865.cljs$lang$maxFixedArity = 3;
      G__9865.cljs$lang$applyTo = G__9865__4.cljs$lang$applyTo;
      return G__9865;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4310__auto___9868 = size;
          var i_9869 = 0;
          while (true) {
            if (i_9869 < n__4310__auto___9868) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_9869, cljs.core._nth.call(null, c, i_9869)));
              var G__9870 = i_9869 + 1;
              i_9869 = G__9870;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi.call(null, 0, coll);
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__4310__auto___9871 = size;
        var i_9872 = 0;
        while (true) {
          if (i_9872 < n__4310__auto___9871) {
            var x_9873 = f.call(null, cljs.core._nth.call(null, c, i_9872));
            if (x_9873 == null) {
            } else {
              cljs.core.chunk_append.call(null, b, x_9873);
            }
            var G__9874 = i_9872 + 1;
            i_9872 = G__9874;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)));
      } else {
        var x = f.call(null, cljs.core.first.call(null, s));
        if (x == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s));
        } else {
          return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi = function keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4310__auto___9875 = size;
          var i_9876 = 0;
          while (true) {
            if (i_9876 < n__4310__auto___9875) {
              var x_9877 = f.call(null, idx + i_9876, cljs.core._nth.call(null, c, i_9876));
              if (x_9877 == null) {
              } else {
                cljs.core.chunk_append.call(null, b, x_9877);
              }
              var G__9878 = i_9876 + 1;
              i_9876 = G__9878;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          var x = f.call(null, idx, cljs.core.first.call(null, s));
          if (x == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s));
          } else {
            return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi.call(null, 0, coll);
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x));
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3450__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3450__auto__)) {
            return p.call(null, y);
          } else {
            return and__3450__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3450__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3450__auto__)) {
            var and__3450__auto____$1 = p.call(null, y);
            if (cljs.core.truth_(and__3450__auto____$1)) {
              return p.call(null, z);
            } else {
              return and__3450__auto____$1;
            }
          } else {
            return and__3450__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__9885__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep1.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, p, args));
        };
        var G__9885 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__9885__delegate.call(this, x, y, z, args);
        };
        G__9885.cljs$lang$maxFixedArity = 3;
        G__9885.cljs$lang$applyTo = function(arglist__9886) {
          var x = cljs.core.first(arglist__9886);
          arglist__9886 = cljs.core.next(arglist__9886);
          var y = cljs.core.first(arglist__9886);
          arglist__9886 = cljs.core.next(arglist__9886);
          var z = cljs.core.first(arglist__9886);
          var args = cljs.core.rest(arglist__9886);
          return G__9885__delegate(x, y, z, args);
        };
        G__9885.cljs$core$IFn$_invoke$arity$variadic = G__9885__delegate;
        return G__9885;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3450__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3450__auto__)) {
            return p2.call(null, x);
          } else {
            return and__3450__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3450__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3450__auto__)) {
            var and__3450__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3450__auto____$1)) {
              var and__3450__auto____$2 = p2.call(null, x);
              if (cljs.core.truth_(and__3450__auto____$2)) {
                return p2.call(null, y);
              } else {
                return and__3450__auto____$2;
              }
            } else {
              return and__3450__auto____$1;
            }
          } else {
            return and__3450__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3450__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3450__auto__)) {
            var and__3450__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3450__auto____$1)) {
              var and__3450__auto____$2 = p1.call(null, z);
              if (cljs.core.truth_(and__3450__auto____$2)) {
                var and__3450__auto____$3 = p2.call(null, x);
                if (cljs.core.truth_(and__3450__auto____$3)) {
                  var and__3450__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3450__auto____$4)) {
                    return p2.call(null, z);
                  } else {
                    return and__3450__auto____$4;
                  }
                } else {
                  return and__3450__auto____$3;
                }
              } else {
                return and__3450__auto____$2;
              }
            } else {
              return and__3450__auto____$1;
            }
          } else {
            return and__3450__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__9887__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep2.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__9879_SHARP_) {
            var and__3450__auto__ = p1.call(null, p1__9879_SHARP_);
            if (cljs.core.truth_(and__3450__auto__)) {
              return p2.call(null, p1__9879_SHARP_);
            } else {
              return and__3450__auto__;
            }
          }, args));
        };
        var G__9887 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__9887__delegate.call(this, x, y, z, args);
        };
        G__9887.cljs$lang$maxFixedArity = 3;
        G__9887.cljs$lang$applyTo = function(arglist__9888) {
          var x = cljs.core.first(arglist__9888);
          arglist__9888 = cljs.core.next(arglist__9888);
          var y = cljs.core.first(arglist__9888);
          arglist__9888 = cljs.core.next(arglist__9888);
          var z = cljs.core.first(arglist__9888);
          var args = cljs.core.rest(arglist__9888);
          return G__9887__delegate(x, y, z, args);
        };
        G__9887.cljs$core$IFn$_invoke$arity$variadic = G__9887__delegate;
        return G__9887;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3450__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3450__auto__)) {
            var and__3450__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3450__auto____$1)) {
              return p3.call(null, x);
            } else {
              return and__3450__auto____$1;
            }
          } else {
            return and__3450__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3450__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3450__auto__)) {
            var and__3450__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3450__auto____$1)) {
              var and__3450__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3450__auto____$2)) {
                var and__3450__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3450__auto____$3)) {
                  var and__3450__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3450__auto____$4)) {
                    return p3.call(null, y);
                  } else {
                    return and__3450__auto____$4;
                  }
                } else {
                  return and__3450__auto____$3;
                }
              } else {
                return and__3450__auto____$2;
              }
            } else {
              return and__3450__auto____$1;
            }
          } else {
            return and__3450__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3450__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3450__auto__)) {
            var and__3450__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3450__auto____$1)) {
              var and__3450__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3450__auto____$2)) {
                var and__3450__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3450__auto____$3)) {
                  var and__3450__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3450__auto____$4)) {
                    var and__3450__auto____$5 = p3.call(null, y);
                    if (cljs.core.truth_(and__3450__auto____$5)) {
                      var and__3450__auto____$6 = p1.call(null, z);
                      if (cljs.core.truth_(and__3450__auto____$6)) {
                        var and__3450__auto____$7 = p2.call(null, z);
                        if (cljs.core.truth_(and__3450__auto____$7)) {
                          return p3.call(null, z);
                        } else {
                          return and__3450__auto____$7;
                        }
                      } else {
                        return and__3450__auto____$6;
                      }
                    } else {
                      return and__3450__auto____$5;
                    }
                  } else {
                    return and__3450__auto____$4;
                  }
                } else {
                  return and__3450__auto____$3;
                }
              } else {
                return and__3450__auto____$2;
              }
            } else {
              return and__3450__auto____$1;
            }
          } else {
            return and__3450__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__9889__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep3.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__9880_SHARP_) {
            var and__3450__auto__ = p1.call(null, p1__9880_SHARP_);
            if (cljs.core.truth_(and__3450__auto__)) {
              var and__3450__auto____$1 = p2.call(null, p1__9880_SHARP_);
              if (cljs.core.truth_(and__3450__auto____$1)) {
                return p3.call(null, p1__9880_SHARP_);
              } else {
                return and__3450__auto____$1;
              }
            } else {
              return and__3450__auto__;
            }
          }, args));
        };
        var G__9889 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__9889__delegate.call(this, x, y, z, args);
        };
        G__9889.cljs$lang$maxFixedArity = 3;
        G__9889.cljs$lang$applyTo = function(arglist__9890) {
          var x = cljs.core.first(arglist__9890);
          arglist__9890 = cljs.core.next(arglist__9890);
          var y = cljs.core.first(arglist__9890);
          arglist__9890 = cljs.core.next(arglist__9890);
          var z = cljs.core.first(arglist__9890);
          var args = cljs.core.rest(arglist__9890);
          return G__9889__delegate(x, y, z, args);
        };
        G__9889.cljs$core$IFn$_invoke$arity$variadic = G__9889__delegate;
        return G__9889;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__9891__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__9881_SHARP_) {
                return p1__9881_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__9882_SHARP_) {
                var and__3450__auto__ = p1__9882_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3450__auto__)) {
                  return p1__9882_SHARP_.call(null, y);
                } else {
                  return and__3450__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__9883_SHARP_) {
                var and__3450__auto__ = p1__9883_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3450__auto__)) {
                  var and__3450__auto____$1 = p1__9883_SHARP_.call(null, y);
                  if (cljs.core.truth_(and__3450__auto____$1)) {
                    return p1__9883_SHARP_.call(null, z);
                  } else {
                    return and__3450__auto____$1;
                  }
                } else {
                  return and__3450__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__9892__delegate = function(x, y, z, args) {
              return cljs.core.boolean$.call(null, epn.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(ps__$1) {
                return function(p1__9884_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__9884_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__9892 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__9892__delegate.call(this, x, y, z, args);
            };
            G__9892.cljs$lang$maxFixedArity = 3;
            G__9892.cljs$lang$applyTo = function(arglist__9893) {
              var x = cljs.core.first(arglist__9893);
              arglist__9893 = cljs.core.next(arglist__9893);
              var y = cljs.core.first(arglist__9893);
              arglist__9893 = cljs.core.next(arglist__9893);
              var z = cljs.core.first(arglist__9893);
              var args = cljs.core.rest(arglist__9893);
              return G__9892__delegate(x, y, z, args);
            };
            G__9892.cljs$core$IFn$_invoke$arity$variadic = G__9892__delegate;
            return G__9892;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__9891 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__9891__delegate.call(this, p1, p2, p3, ps);
    };
    G__9891.cljs$lang$maxFixedArity = 3;
    G__9891.cljs$lang$applyTo = function(arglist__9894) {
      var p1 = cljs.core.first(arglist__9894);
      arglist__9894 = cljs.core.next(arglist__9894);
      var p2 = cljs.core.first(arglist__9894);
      arglist__9894 = cljs.core.next(arglist__9894);
      var p3 = cljs.core.first(arglist__9894);
      var ps = cljs.core.rest(arglist__9894);
      return G__9891__delegate(p1, p2, p3, ps);
    };
    G__9891.cljs$core$IFn$_invoke$arity$variadic = G__9891__delegate;
    return G__9891;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        return p.call(null, x);
      };
      var sp1__2 = function(x, y) {
        var or__3462__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3462__auto__)) {
          return or__3462__auto__;
        } else {
          return p.call(null, y);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3462__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3462__auto__)) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = p.call(null, y);
          if (cljs.core.truth_(or__3462__auto____$1)) {
            return or__3462__auto____$1;
          } else {
            return p.call(null, z);
          }
        }
      };
      var sp1__4 = function() {
        var G__9901__delegate = function(x, y, z, args) {
          var or__3462__auto__ = sp1.call(null, x, y, z);
          if (cljs.core.truth_(or__3462__auto__)) {
            return or__3462__auto__;
          } else {
            return cljs.core.some.call(null, p, args);
          }
        };
        var G__9901 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__9901__delegate.call(this, x, y, z, args);
        };
        G__9901.cljs$lang$maxFixedArity = 3;
        G__9901.cljs$lang$applyTo = function(arglist__9902) {
          var x = cljs.core.first(arglist__9902);
          arglist__9902 = cljs.core.next(arglist__9902);
          var y = cljs.core.first(arglist__9902);
          arglist__9902 = cljs.core.next(arglist__9902);
          var z = cljs.core.first(arglist__9902);
          var args = cljs.core.rest(arglist__9902);
          return G__9901__delegate(x, y, z, args);
        };
        G__9901.cljs$core$IFn$_invoke$arity$variadic = G__9901__delegate;
        return G__9901;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3462__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3462__auto__)) {
          return or__3462__auto__;
        } else {
          return p2.call(null, x);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3462__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3462__auto__)) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3462__auto____$1)) {
            return or__3462__auto____$1;
          } else {
            var or__3462__auto____$2 = p2.call(null, x);
            if (cljs.core.truth_(or__3462__auto____$2)) {
              return or__3462__auto____$2;
            } else {
              return p2.call(null, y);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3462__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3462__auto__)) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3462__auto____$1)) {
            return or__3462__auto____$1;
          } else {
            var or__3462__auto____$2 = p1.call(null, z);
            if (cljs.core.truth_(or__3462__auto____$2)) {
              return or__3462__auto____$2;
            } else {
              var or__3462__auto____$3 = p2.call(null, x);
              if (cljs.core.truth_(or__3462__auto____$3)) {
                return or__3462__auto____$3;
              } else {
                var or__3462__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3462__auto____$4)) {
                  return or__3462__auto____$4;
                } else {
                  return p2.call(null, z);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__9903__delegate = function(x, y, z, args) {
          var or__3462__auto__ = sp2.call(null, x, y, z);
          if (cljs.core.truth_(or__3462__auto__)) {
            return or__3462__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3462__auto__) {
              return function(p1__9895_SHARP_) {
                var or__3462__auto____$1 = p1.call(null, p1__9895_SHARP_);
                if (cljs.core.truth_(or__3462__auto____$1)) {
                  return or__3462__auto____$1;
                } else {
                  return p2.call(null, p1__9895_SHARP_);
                }
              };
            }(or__3462__auto__), args);
          }
        };
        var G__9903 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__9903__delegate.call(this, x, y, z, args);
        };
        G__9903.cljs$lang$maxFixedArity = 3;
        G__9903.cljs$lang$applyTo = function(arglist__9904) {
          var x = cljs.core.first(arglist__9904);
          arglist__9904 = cljs.core.next(arglist__9904);
          var y = cljs.core.first(arglist__9904);
          arglist__9904 = cljs.core.next(arglist__9904);
          var z = cljs.core.first(arglist__9904);
          var args = cljs.core.rest(arglist__9904);
          return G__9903__delegate(x, y, z, args);
        };
        G__9903.cljs$core$IFn$_invoke$arity$variadic = G__9903__delegate;
        return G__9903;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3462__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3462__auto__)) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3462__auto____$1)) {
            return or__3462__auto____$1;
          } else {
            return p3.call(null, x);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3462__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3462__auto__)) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3462__auto____$1)) {
            return or__3462__auto____$1;
          } else {
            var or__3462__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3462__auto____$2)) {
              return or__3462__auto____$2;
            } else {
              var or__3462__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3462__auto____$3)) {
                return or__3462__auto____$3;
              } else {
                var or__3462__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3462__auto____$4)) {
                  return or__3462__auto____$4;
                } else {
                  return p3.call(null, y);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3462__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3462__auto__)) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3462__auto____$1)) {
            return or__3462__auto____$1;
          } else {
            var or__3462__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3462__auto____$2)) {
              return or__3462__auto____$2;
            } else {
              var or__3462__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3462__auto____$3)) {
                return or__3462__auto____$3;
              } else {
                var or__3462__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3462__auto____$4)) {
                  return or__3462__auto____$4;
                } else {
                  var or__3462__auto____$5 = p3.call(null, y);
                  if (cljs.core.truth_(or__3462__auto____$5)) {
                    return or__3462__auto____$5;
                  } else {
                    var or__3462__auto____$6 = p1.call(null, z);
                    if (cljs.core.truth_(or__3462__auto____$6)) {
                      return or__3462__auto____$6;
                    } else {
                      var or__3462__auto____$7 = p2.call(null, z);
                      if (cljs.core.truth_(or__3462__auto____$7)) {
                        return or__3462__auto____$7;
                      } else {
                        return p3.call(null, z);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__9905__delegate = function(x, y, z, args) {
          var or__3462__auto__ = sp3.call(null, x, y, z);
          if (cljs.core.truth_(or__3462__auto__)) {
            return or__3462__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3462__auto__) {
              return function(p1__9896_SHARP_) {
                var or__3462__auto____$1 = p1.call(null, p1__9896_SHARP_);
                if (cljs.core.truth_(or__3462__auto____$1)) {
                  return or__3462__auto____$1;
                } else {
                  var or__3462__auto____$2 = p2.call(null, p1__9896_SHARP_);
                  if (cljs.core.truth_(or__3462__auto____$2)) {
                    return or__3462__auto____$2;
                  } else {
                    return p3.call(null, p1__9896_SHARP_);
                  }
                }
              };
            }(or__3462__auto__), args);
          }
        };
        var G__9905 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__9905__delegate.call(this, x, y, z, args);
        };
        G__9905.cljs$lang$maxFixedArity = 3;
        G__9905.cljs$lang$applyTo = function(arglist__9906) {
          var x = cljs.core.first(arglist__9906);
          arglist__9906 = cljs.core.next(arglist__9906);
          var y = cljs.core.first(arglist__9906);
          arglist__9906 = cljs.core.next(arglist__9906);
          var z = cljs.core.first(arglist__9906);
          var args = cljs.core.rest(arglist__9906);
          return G__9905__delegate(x, y, z, args);
        };
        G__9905.cljs$core$IFn$_invoke$arity$variadic = G__9905__delegate;
        return G__9905;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__9907__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__9897_SHARP_) {
                return p1__9897_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__9898_SHARP_) {
                var or__3462__auto__ = p1__9898_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3462__auto__)) {
                  return or__3462__auto__;
                } else {
                  return p1__9898_SHARP_.call(null, y);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__9899_SHARP_) {
                var or__3462__auto__ = p1__9899_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3462__auto__)) {
                  return or__3462__auto__;
                } else {
                  var or__3462__auto____$1 = p1__9899_SHARP_.call(null, y);
                  if (cljs.core.truth_(or__3462__auto____$1)) {
                    return or__3462__auto____$1;
                  } else {
                    return p1__9899_SHARP_.call(null, z);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__9908__delegate = function(x, y, z, args) {
              var or__3462__auto__ = spn.call(null, x, y, z);
              if (cljs.core.truth_(or__3462__auto__)) {
                return or__3462__auto__;
              } else {
                return cljs.core.some.call(null, function(or__3462__auto__, ps__$1) {
                  return function(p1__9900_SHARP_) {
                    return cljs.core.some.call(null, p1__9900_SHARP_, args);
                  };
                }(or__3462__auto__, ps__$1), ps__$1);
              }
            };
            var G__9908 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__9908__delegate.call(this, x, y, z, args);
            };
            G__9908.cljs$lang$maxFixedArity = 3;
            G__9908.cljs$lang$applyTo = function(arglist__9909) {
              var x = cljs.core.first(arglist__9909);
              arglist__9909 = cljs.core.next(arglist__9909);
              var y = cljs.core.first(arglist__9909);
              arglist__9909 = cljs.core.next(arglist__9909);
              var z = cljs.core.first(arglist__9909);
              var args = cljs.core.rest(arglist__9909);
              return G__9908__delegate(x, y, z, args);
            };
            G__9908.cljs$core$IFn$_invoke$arity$variadic = G__9908__delegate;
            return G__9908;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__9907 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__9907__delegate.call(this, p1, p2, p3, ps);
    };
    G__9907.cljs$lang$maxFixedArity = 3;
    G__9907.cljs$lang$applyTo = function(arglist__9910) {
      var p1 = cljs.core.first(arglist__9910);
      arglist__9910 = cljs.core.next(arglist__9910);
      var p2 = cljs.core.first(arglist__9910);
      arglist__9910 = cljs.core.next(arglist__9910);
      var p3 = cljs.core.first(arglist__9910);
      var ps = cljs.core.rest(arglist__9910);
      return G__9907__delegate(p1, p2, p3, ps);
    };
    G__9907.cljs$core$IFn$_invoke$arity$variadic = G__9907__delegate;
    return G__9907;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4310__auto___9912 = size;
          var i_9913 = 0;
          while (true) {
            if (i_9913 < n__4310__auto___9912) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_9913)));
              var G__9914 = i_9913 + 1;
              i_9913 = G__9914;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if (s1 && (s2 && s3)) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__9915__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.call(null, function(step) {
        return function(p1__9911_SHARP_) {
          return cljs.core.apply.call(null, f, p1__9911_SHARP_);
        };
      }(step), step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)));
    };
    var G__9915 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__9915__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__9915.cljs$lang$maxFixedArity = 4;
    G__9915.cljs$lang$applyTo = function(arglist__9916) {
      var f = cljs.core.first(arglist__9916);
      arglist__9916 = cljs.core.next(arglist__9916);
      var c1 = cljs.core.first(arglist__9916);
      arglist__9916 = cljs.core.next(arglist__9916);
      var c2 = cljs.core.first(arglist__9916);
      arglist__9916 = cljs.core.next(arglist__9916);
      var c3 = cljs.core.first(arglist__9916);
      var colls = cljs.core.rest(arglist__9916);
      return G__9915__delegate(f, c1, c2, c3, colls);
    };
    G__9915.cljs$core$IFn$_invoke$arity$variadic = G__9915__delegate;
    return G__9915;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.drop = function drop(n, coll) {
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if (n__$1 > 0 && s) {
        var G__9917 = n__$1 - 1;
        var G__9918 = cljs.core.rest.call(null, s);
        n__$1 = G__9917;
        coll__$1 = G__9918;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step.call(null, n, coll);
    };
  }(step), null, null);
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x;
    }, s, cljs.core.drop.call(null, n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while (true) {
    if (lead) {
      var G__9919 = cljs.core.next.call(null, s);
      var G__9920 = cljs.core.next.call(null, lead);
      s = G__9919;
      lead = G__9920;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if (cljs.core.truth_(function() {
        var and__3450__auto__ = s;
        if (and__3450__auto__) {
          return pred__$1.call(null, cljs.core.first.call(null, s));
        } else {
          return and__3450__auto__;
        }
      }())) {
        var G__9921 = pred__$1;
        var G__9922 = cljs.core.rest.call(null, s);
        pred__$1 = G__9921;
        coll__$1 = G__9922;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step.call(null, pred, coll);
    };
  }(step), null, null);
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__9923__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__9923 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9923__delegate.call(this, c1, c2, colls);
    };
    G__9923.cljs$lang$maxFixedArity = 2;
    G__9923.cljs$lang$applyTo = function(arglist__9924) {
      var c1 = cljs.core.first(arglist__9924);
      arglist__9924 = cljs.core.next(arglist__9924);
      var c2 = cljs.core.first(arglist__9924);
      var colls = cljs.core.rest(arglist__9924);
      return G__9923__delegate(c1, c2, colls);
    };
    G__9923.cljs$core$IFn$_invoke$arity$variadic = G__9923__delegate;
    return G__9923;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4090__auto__) {
        var coll__$1 = temp__4090__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1));
      } else {
        if (cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat.call(null, null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll));
  };
  var mapcat__3 = function() {
    var G__9925__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls));
    };
    var G__9925 = function(f, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__9925__delegate.call(this, f, coll, colls);
    };
    G__9925.cljs$lang$maxFixedArity = 2;
    G__9925.cljs$lang$applyTo = function(arglist__9926) {
      var f = cljs.core.first(arglist__9926);
      arglist__9926 = cljs.core.next(arglist__9926);
      var coll = cljs.core.first(arglist__9926);
      var colls = cljs.core.rest(arglist__9926);
      return G__9925__delegate(f, coll, colls);
    };
    G__9925.cljs$core$IFn$_invoke$arity$variadic = G__9925__delegate;
    return G__9925;
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__4310__auto___9927 = size;
        var i_9928 = 0;
        while (true) {
          if (i_9928 < n__4310__auto___9927) {
            if (cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_9928)))) {
              cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_9928));
            } else {
            }
            var G__9929 = i_9928 + 1;
            i_9928 = G__9929;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)));
      } else {
        var f = cljs.core.first.call(null, s);
        var r = cljs.core.rest.call(null, s);
        if (cljs.core.truth_(pred.call(null, f))) {
          return cljs.core.cons.call(null, f, filter.call(null, pred, r));
        } else {
          return filter.call(null, pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll);
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null);
    }, null, null);
  };
  return walk.call(null, root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__9930_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__9930_SHARP_);
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function into(to, from) {
  if (!(to == null)) {
    if (function() {
      var G__9932 = to;
      if (G__9932) {
        var bit__4105__auto__ = G__9932.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4105__auto__ || G__9932.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from));
    } else {
      return cljs.core.reduce.call(null, cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o));
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__9933__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls));
    };
    var G__9933 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__9933__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__9933.cljs$lang$maxFixedArity = 4;
    G__9933.cljs$lang$applyTo = function(arglist__9934) {
      var f = cljs.core.first(arglist__9934);
      arglist__9934 = cljs.core.next(arglist__9934);
      var c1 = cljs.core.first(arglist__9934);
      arglist__9934 = cljs.core.next(arglist__9934);
      var c2 = cljs.core.first(arglist__9934);
      arglist__9934 = cljs.core.next(arglist__9934);
      var c3 = cljs.core.first(arglist__9934);
      var colls = cljs.core.rest(arglist__9934);
      return G__9933__delegate(f, c1, c2, c3, colls);
    };
    G__9933.cljs$core$IFn$_invoke$arity$variadic = G__9933__delegate;
    return G__9933;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if (cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)));
        } else {
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__9936 = m__$1;
          if (G__9936) {
            var bit__4112__auto__ = G__9936.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4112__auto__ || G__9936.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__9936.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__9936);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__9936);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__9937 = sentinel;
            var G__9938 = m__$2;
            var G__9939 = cljs.core.next.call(null, ks__$1);
            sentinel = G__9937;
            m__$1 = G__9938;
            ks__$1 = G__9939;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__9940, v) {
  var vec__9942 = p__9940;
  var k = cljs.core.nth.call(null, vec__9942, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__9942, 1);
  if (ks) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v));
  } else {
    return cljs.core.assoc.call(null, m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__9943, f) {
    var vec__9953 = p__9943;
    var k = cljs.core.nth.call(null, vec__9953, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__9953, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
    }
  };
  var update_in__4 = function(m, p__9944, f, a) {
    var vec__9954 = p__9944;
    var k = cljs.core.nth.call(null, vec__9954, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__9954, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a));
    }
  };
  var update_in__5 = function(m, p__9945, f, a, b) {
    var vec__9955 = p__9945;
    var k = cljs.core.nth.call(null, vec__9955, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__9955, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b));
    }
  };
  var update_in__6 = function(m, p__9946, f, a, b, c) {
    var vec__9956 = p__9946;
    var k = cljs.core.nth.call(null, vec__9956, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__9956, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c));
    }
  };
  var update_in__7 = function() {
    var G__9958__delegate = function(m, p__9947, f, a, b, c, args) {
      var vec__9957 = p__9947;
      var k = cljs.core.nth.call(null, vec__9957, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__9957, 1);
      if (ks) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args));
      } else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args));
      }
    };
    var G__9958 = function(m, p__9947, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__9958__delegate.call(this, m, p__9947, f, a, b, c, args);
    };
    G__9958.cljs$lang$maxFixedArity = 6;
    G__9958.cljs$lang$applyTo = function(arglist__9959) {
      var m = cljs.core.first(arglist__9959);
      arglist__9959 = cljs.core.next(arglist__9959);
      var p__9947 = cljs.core.first(arglist__9959);
      arglist__9959 = cljs.core.next(arglist__9959);
      var f = cljs.core.first(arglist__9959);
      arglist__9959 = cljs.core.next(arglist__9959);
      var a = cljs.core.first(arglist__9959);
      arglist__9959 = cljs.core.next(arglist__9959);
      var b = cljs.core.first(arglist__9959);
      arglist__9959 = cljs.core.next(arglist__9959);
      var c = cljs.core.first(arglist__9959);
      var args = cljs.core.rest(arglist__9959);
      return G__9958__delegate(m, p__9947, f, a, b, c, args);
    };
    G__9958.cljs$core$IFn$_invoke$arity$variadic = G__9958__delegate;
    return G__9958;
  }();
  update_in = function(m, p__9947, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__9947, f);
      case 4:
        return update_in__4.call(this, m, p__9947, f, a);
      case 5:
        return update_in__5.call(this, m, p__9947, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__9947, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__9947, f, a, b, c, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4032__auto__, writer__4033__auto__, opts__4034__auto__) {
  return cljs.core._write.call(null, writer__4033__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__9960 = ll - 5;
      var G__9961 = r;
      ll = G__9960;
      ret = G__9961;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__9962 = cljs.core.pv_aget.call(null, node, 0);
      var G__9963 = level - 5;
      node = G__9962;
      level = G__9963;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off.call(null, pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__9964 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
        var G__9965 = level - 5;
        node = G__9964;
        level = G__9965;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for.call(null, pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if (level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var ret = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret, subidx, null);
        return ret;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/PersistentVector");
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3873__auto__ = self__.__hash;
  if (!(h__3873__auto__ == null)) {
    return h__3873__auto__;
  } else {
    var h__3873__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3873__auto____$1;
    return h__3873__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__9967 = null;
  var G__9967__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__9967__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__9967 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9967__2.call(this, self__, k);
      case 3:
        return G__9967__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9967;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args9966) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args9966)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var step_init = [0, init];
  var i = 0;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while (true) {
          if (j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2;
            } else {
              var G__9968 = j + 1;
              var G__9969 = init__$2;
              j = G__9968;
              init__$1 = G__9969;
              continue;
            }
          } else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1);
      } else {
        var G__9970 = i + step_init[0];
        i = G__9970;
        continue;
      }
    } else {
      return step_init[1];
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4310__auto___9971 = len;
    var i_9972 = 0;
    while (true) {
      if (i_9972 < n__4310__auto___9971) {
        new_tail[i_9972] = self__.tail[i_9972];
        var G__9973 = i_9972 + 1;
        i_9972 = G__9973;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1);
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f, start);
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.chunked_seq.call(null, coll__$1, cljs.core.first_array_for_longvec.call(null, coll__$1), 0, 0);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_tail = cljs.core.unchecked_array_for.call(null, coll__$1, self__.cnt - 2);
          var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
          var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
          var cnt_1 = self__.cnt - 1;
          if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null);
          } else {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off.call(null, coll__$1) <= n) {
      var new_tail = cljs.core.aclone.call(null, self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, val);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for.call(null, coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone.call(null, xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while (true) {
      if (i < l) {
        var G__9974 = i + 1;
        var G__9975 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__9974;
        out = G__9975;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray.call(null, args.arr, true);
    } else {
      return cljs.core.vec.call(null, args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__9976) {
    var args = cljs.core.seq(arglist__9976);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3873__auto__ = self__.__hash;
  if (!(h__3873__auto__ == null)) {
    return h__3873__auto__;
  } else {
    var h__3873__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3873__auto____$1;
    return h__3873__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/Subvec");
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3873__auto__ = self__.__hash;
  if (!(h__3873__auto__ == null)) {
    return h__3873__auto__;
  } else {
    var h__3873__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3873__auto____$1;
    return h__3873__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.call = function() {
  var G__9978 = null;
  var G__9978__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__9978__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__9978 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9978__2.call(this, self__, k);
      case 3:
        return G__9978__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9978;
}();
cljs.core.Subvec.prototype.apply = function(self__, args9977) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args9977)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq.call(null, i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq.call(null, self__.start);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3769__auto__ = self__.end;
    var y__3770__auto__ = v_pos + 1;
    return x__3769__auto__ > y__3770__auto__ ? x__3769__auto__ : y__3770__auto__;
  }(), null);
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start);
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__9979 = meta;
      var G__9980 = v.v;
      var G__9981 = v.start + start;
      var G__9982 = v.start + end;
      var G__9983 = __hash;
      meta = G__9979;
      v = G__9980;
      start = G__9981;
      end = G__9982;
      __hash = G__9983;
      continue;
    } else {
      var c = cljs.core.count.call(null, v);
      if (start < 0 || (end < 0 || (start > c || end > c))) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj9987 = {};
    return obj9987;
  }(), cljs.core.aclone.call(null, node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if (!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        cljs.core.pv_aset.call(null, node__$1, subidx, null);
        return node__$1;
      } else {
        return null;
      }
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off.call(null, tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__9988 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
        var G__9989 = level - 5;
        node = G__9988;
        level = G__9989;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/TransientVector");
};
cljs.core.TransientVector.prototype.call = function() {
  var G__9991 = null;
  var G__9991__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9991__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9991 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9991__2.call(this, self__, k);
      case 3:
        return G__9991__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9991;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args9990) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args9990)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset.call(null, node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
        } else {
          return null;
        }
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var new_tail = cljs.core.unchecked_editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
            var new_root = function() {
              var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
              if (!(nr == null)) {
                return nr;
              } else {
                return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
              }
            }();
            if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
              var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
              self__.root = new_root__$1;
              self__.shift = self__.shift - 5;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1;
            } else {
              self__.root = new_root;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1;
            }
          } else {
            return null;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3873__auto__ = self__.__hash;
  if (!(h__3873__auto__ == null)) {
    return h__3873__auto__;
  } else {
    var h__3873__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3873__auto____$1;
    return h__3873__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
  if (temp__4090__auto__) {
    var f1 = temp__4090__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/PersistentQueue");
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3873__auto__ = self__.__hash;
  if (!(h__3873__auto__ == null)) {
    return h__3873__auto__;
  } else {
    var h__3873__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3873__auto____$1;
    return h__3873__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3462__auto__ = self__.rear;
      if (cljs.core.truth_(or__3462__auto__)) {
        return or__3462__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if (cljs.core.truth_(function() {
    var or__3462__auto__ = self__.front;
    if (cljs.core.truth_(or__3462__auto__)) {
      return or__3462__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
    if (temp__4090__auto__) {
      var f1 = temp__4090__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY;
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/NeverEquiv");
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__9992 = i + incr;
        i = G__9992;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__9993 = i + 1;
      var G__9994 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__9993;
      out = G__9994;
      continue;
    } else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj9998 = {};
    return obj9998;
  }();
  var l = ks.length;
  var i_9999 = 0;
  while (true) {
    if (i_9999 < l) {
      var k_10000 = ks[i_9999];
      new_obj[k_10000] = obj[k_10000];
      var G__10001 = i_9999 + 1;
      i_9999 = G__10001;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/ObjMap");
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3873__auto__ = self__.__hash;
  if (!(h__3873__auto__ == null)) {
    return h__3873__auto__;
  } else {
    var h__3873__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3873__auto____$1;
    return h__3873__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone.call(null, self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__10004 = null;
  var G__10004__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10004__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10004 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10004__2.call(this, self__, k);
      case 3:
        return G__10004__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10004;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args10003) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10003)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__10005 = cljs.core.rest.call(null, keys__$1);
        var G__10006 = init__$2;
        keys__$1 = G__10005;
        init__$1 = G__10006;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.call(null, function(coll__$1) {
      return function(p1__10002_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__10002_SHARP_, self__.strobj[p1__10002_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone.call(null, self__.keys);
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj10008 = {};
  return obj10008;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__10009 = i + 2;
          i = G__10009;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__10010 = i + 2;
          i = G__10010;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__10011 = i + 2;
          i = G__10011;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__10012 = i + 2;
          i = G__10012;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.call(null, k, arr[i])) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__10013 = i + 2;
          i = G__10013;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_10014 = 0;
  while (true) {
    if (i_10014 < l) {
      narr[i_10014] = arr[i_10014];
      var G__10015 = i_10014 + 1;
      i_10014 = G__10015;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj10018 = {};
    return obj10018;
  }(), self__.arr.length, cljs.core.aclone.call(null, self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3873__auto__ = self__.__hash;
  if (!(h__3873__auto__ == null)) {
    return h__3873__auto__;
  } else {
    var h__3873__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3873__auto____$1;
    return h__3873__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var arr__$1 = function() {
          var G__10019 = cljs.core.aclone.call(null, self__.arr);
          G__10019[idx + 1] = v;
          return G__10019;
        }();
        return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__10020 = null;
  var G__10020__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10020__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10020 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10020__2.call(this, self__, k);
      case 3:
        return G__10020__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10020;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args10016) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10016)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__10021 = i + 2;
        var G__10022 = init__$2;
        i = G__10021;
        init__$1 = G__10022;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__10023 = s + 2;
            var G__10024 = d;
            s = G__10023;
            d = G__10024;
            continue;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              new_arr[d] = self__.arr[s];
              new_arr[d + 1] = self__.arr[s + 1];
              var G__10025 = s + 2;
              var G__10026 = d + 2;
              s = G__10025;
              d = G__10026;
              continue;
            } else {
              return null;
            }
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone.call(null, arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__10027 = i + 2;
        var G__10028 = cljs.core._assoc_BANG_.call(null, ret, arr__$1[i], arr__$1[i + 1]);
        i = G__10027;
        ret = G__10028;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, ret);
      }
      break;
    }
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__10029_10031 = self__.arr;
      G__10029_10031.pop();
      G__10029_10031.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__10030 = o;
      if (G__10030) {
        var bit__4112__auto__ = G__10030.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4112__auto__ || G__10030.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__10030.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__10030);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__10030);
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__10032 = cljs.core.next.call(null, es);
          var G__10033 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__10032;
          tcoll__$2 = G__10033;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__10034 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__10035 = i + 2;
      out = G__10034;
      i = G__10035;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4032__auto__, writer__4033__auto__, opts__4034__auto__) {
  return cljs.core._write.call(null, writer__4033__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core._EQ_.call(null, key, other);
      } else {
        return null;
      }
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__10038 = cljs.core.aclone.call(null, arr);
    G__10038[i] = a;
    return G__10038;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__10039 = cljs.core.aclone.call(null, arr);
    G__10039[i] = a;
    G__10039[j] = b;
    return G__10039;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1]);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__10040 = i + 2;
        var G__10041 = init__$2;
        i = G__10040;
        init__$1 = G__10041;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_10042 = 0;
        var j_10043 = 0;
        while (true) {
          if (i_10042 < 32) {
            if ((self__.bitmap >>> i_10042 & 1) === 0) {
              var G__10044 = i_10042 + 1;
              var G__10045 = j_10043;
              i_10042 = G__10044;
              j_10043 = G__10045;
              continue;
            } else {
              nodes[i_10042] = !(self__.arr[j_10043] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_10043]), self__.arr[j_10043], self__.arr[j_10043 + 1], added_leaf_QMARK_) : self__.arr[j_10043 + 1];
              var G__10046 = i_10042 + 1;
              var G__10047 = j_10043 + 2;
              i_10042 = G__10046;
              j_10043 = G__10047;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_arr = new Array(2 * (n + 4));
          cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
          new_arr[2 * idx] = key;
          new_arr[2 * idx + 1] = val;
          cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
          added_leaf_QMARK_.val = true;
          var editable = inode.ensure_editable(edit__$1);
          editable.arr = new_arr;
          editable.bitmap = editable.bitmap | bit;
          return editable;
        } else {
          return null;
        }
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return inode.edit_and_remove_pair(edit__$1, bit, idx);
            } else {
              return null;
            }
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
            } else {
              return null;
            }
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_10048 = 0;
      var j_10049 = 0;
      while (true) {
        if (i_10048 < 32) {
          if ((self__.bitmap >>> i_10048 & 1) === 0) {
            var G__10050 = i_10048 + 1;
            var G__10051 = j_10049;
            i_10048 = G__10050;
            j_10049 = G__10051;
            continue;
          } else {
            nodes[i_10048] = !(self__.arr[j_10049] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_10049]), self__.arr[j_10049], self__.arr[j_10049 + 1], added_leaf_QMARK_) : self__.arr[j_10049 + 1];
            var G__10052 = i_10048 + 1;
            var G__10053 = j_10049 + 2;
            i_10048 = G__10052;
            j_10049 = G__10053;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val));
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)));
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__10054 = i + 1;
        var G__10055 = j + 2;
        var G__10056 = bitmap | 1 << i;
        i = G__10054;
        j = G__10055;
        bitmap = G__10056;
        continue;
      } else {
        var G__10057 = i + 1;
        var G__10058 = j;
        var G__10059 = bitmap;
        i = G__10057;
        j = G__10058;
        bitmap = G__10059;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/ArrayNode");
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone.call(null, self__.arr));
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2);
        } else {
          var G__10060 = i + 1;
          var G__10061 = init__$2;
          i = G__10060;
          init__$1 = G__10061;
          continue;
        }
      } else {
        var G__10062 = i + 1;
        var G__10063 = init__$1;
        i = G__10062;
        init__$1 = G__10063;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        } else {
          return null;
        }
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test.call(null, key, arr[i])) {
        return i;
      } else {
        var G__10064 = i + 2;
        i = G__10064;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)));
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/NodeSeq");
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3873__auto__ = self__.__hash;
  if (!(h__3873__auto__ == null)) {
    return h__3873__auto__;
  } else {
    var h__3873__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3873__auto____$1;
    return h__3873__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4090__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4090__auto__)) {
              var node = temp__4090__auto__;
              var temp__4090__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4090__auto____$1)) {
                var node_seq = temp__4090__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__10065 = j + 2;
                j = G__10065;
                continue;
              }
            } else {
              var G__10066 = j + 2;
              j = G__10066;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3873__auto__ = self__.__hash;
  if (!(h__3873__auto__ == null)) {
    return h__3873__auto__;
  } else {
    var h__3873__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3873__auto____$1;
    return h__3873__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4090__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4090__auto__)) {
            var nj = temp__4090__auto__;
            var temp__4090__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4090__auto____$1)) {
              var ns = temp__4090__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__10067 = j + 1;
              j = G__10067;
              continue;
            }
          } else {
            var G__10068 = j + 1;
            j = G__10068;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj10071 = {};
    return obj10071;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3873__auto__ = self__.__hash;
  if (!(h__3873__auto__ == null)) {
    return h__3873__auto__;
  } else {
    var h__3873__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3873__auto____$1;
    return h__3873__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__10072 = null;
  var G__10072__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10072__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10072 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10072__2.call(this, self__, k);
      case 3:
        return G__10072__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10072;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args10069) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10069)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return init__$1;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if (new_root === self__.root) {
          return coll__$1;
        } else {
          return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__10073 = i + 1;
      var G__10074 = cljs.core._assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__10073;
      out = G__10074;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, out);
    }
    break;
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/TransientHashMap");
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__10075 = o;
      if (G__10075) {
        var bit__4112__auto__ = G__10075.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4112__auto__ || G__10075.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__10075.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__10075);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__10075);
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__10076 = cljs.core.next.call(null, es);
          var G__10077 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__10076;
          tcoll__$1 = G__10077;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__10078 = ascending_QMARK_ ? t.left : t.right;
      var G__10079 = cljs.core.conj.call(null, stack__$1, t);
      t = G__10078;
      stack__$1 = G__10079;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3873__auto__ = self__.__hash;
  if (!(h__3873__auto__ == null)) {
    return h__3873__auto__;
  } else {
    var h__3873__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3873__auto____$1;
    return h__3873__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, ins, right, null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, left, ins, null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/BlackNode");
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3873__auto__ = self__.__hash;
  if (!(h__3873__auto__ == null)) {
    return h__3873__auto__;
  } else {
    var h__3873__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3873__auto____$1;
    return h__3873__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__10081 = null;
  var G__10081__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10081__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10081 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10081__2.call(this, self__, k);
      case 3:
        return G__10081__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10081;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args10080) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10080)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/RedNode");
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3873__auto__ = self__.__hash;
  if (!(h__3873__auto__ == null)) {
    return h__3873__auto__;
  } else {
    var h__3873__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3873__auto____$1;
    return h__3873__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.call = function() {
  var G__10083 = null;
  var G__10083__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10083__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10083 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10083__2.call(this, self__, k);
      case 3:
        return G__10083__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10083;
}();
cljs.core.RedNode.prototype.apply = function(self__, args10082) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10082)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
          if (!(ins == null)) {
            return tree.add_right(ins);
          } else {
            return null;
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var app = tree_map_append.call(null, left.right, right.left);
            if (app instanceof cljs.core.RedNode) {
              return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
            } else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
            }
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var del = tree_map_remove.call(null, comp, tree.right, k, found);
          if (!(del == null) || !(found[0] == null)) {
            if (tree.right instanceof cljs.core.BlackNode) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del);
            } else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
            }
          } else {
            return null;
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v));
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3873__auto__ = self__.__hash;
  if (!(h__3873__auto__ == null)) {
    return h__3873__auto__;
  } else {
    var h__3873__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3873__auto____$1;
    return h__3873__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if (cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__10085 = null;
  var G__10085__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10085__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10085 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10085__2.call(this, self__, k);
      case 3:
        return G__10085__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10085;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args10084) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10084)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__10086 = t.left;
          t = G__10086;
          continue;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var G__10087 = t.right;
            t = G__10087;
            continue;
          } else {
            return null;
          }
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__10088 = cljs.core.conj.call(null, stack, t);
              var G__10089 = t.left;
              stack = G__10088;
              t = G__10089;
              continue;
            } else {
              var G__10090 = stack;
              var G__10091 = t.right;
              stack = G__10090;
              t = G__10091;
              continue;
            }
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              if (c > 0) {
                var G__10092 = cljs.core.conj.call(null, stack, t);
                var G__10093 = t.right;
                stack = G__10092;
                t = G__10093;
                continue;
              } else {
                var G__10094 = stack;
                var G__10095 = t.left;
                stack = G__10094;
                t = G__10095;
                continue;
              }
            } else {
              return null;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__10096 = cljs.core.nnext.call(null, in$);
        var G__10097 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__10096;
        out = G__10097;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__10098) {
    var keyvals = cljs.core.seq(arglist__10098);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__10099) {
    var keyvals = cljs.core.seq(arglist__10099);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj10103 = {};
      return obj10103;
    }();
    var kvs = cljs.core.seq.call(null, keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__10104 = cljs.core.nnext.call(null, kvs);
        kvs = G__10104;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject.call(null, ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__10105) {
    var keyvals = cljs.core.seq(arglist__10105);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__10106 = cljs.core.nnext.call(null, in$);
        var G__10107 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__10106;
        out = G__10107;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__10108) {
    var keyvals = cljs.core.seq(arglist__10108);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__10109 = cljs.core.nnext.call(null, in$);
        var G__10110 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__10109;
        out = G__10110;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__10111) {
    var comparator = cljs.core.first(arglist__10111);
    var keyvals = cljs.core.rest(arglist__10111);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/KeySeq");
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__10112 = self__.mseq;
    if (G__10112) {
      var bit__4112__auto__ = G__10112.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4112__auto__ || G__10112.cljs$core$INext$) {
        return true;
      } else {
        if (!G__10112.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__10112);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__10112);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__10113 = self__.mseq;
    if (G__10113) {
      var bit__4112__auto__ = G__10113.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4112__auto__ || G__10113.cljs$core$INext$) {
        return true;
      } else {
        if (!G__10113.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__10113);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__10113);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/ValSeq");
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__10114 = self__.mseq;
    if (G__10114) {
      var bit__4112__auto__ = G__10114.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4112__auto__ || G__10114.cljs$core$INext$) {
        return true;
      } else {
        if (!G__10114.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__10114);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__10114);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__10115 = self__.mseq;
    if (G__10115) {
      var bit__4112__auto__ = G__10115.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4112__auto__ || G__10115.cljs$core$INext$) {
        return true;
      } else {
        if (!G__10115.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__10115);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__10115);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__10116_SHARP_, p2__10117_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3462__auto__ = p1__10116_SHARP_;
          if (cljs.core.truth_(or__3462__auto__)) {
            return or__3462__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__10117_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__10118) {
    var maps = cljs.core.seq(arglist__10118);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if (cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v));
        } else {
          return cljs.core.assoc.call(null, m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3462__auto__ = m1;
            if (cljs.core.truth_(or__3462__auto__)) {
              return or__3462__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq.call(null, m2));
        };
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__10119) {
    var f = cljs.core.first(arglist__10119);
    var maps = cljs.core.rest(arglist__10119);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789));
      var G__10120 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__10121 = cljs.core.next.call(null, keys);
      ret = G__10120;
      keys = G__10121;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3873__auto__ = self__.__hash;
  if (!(h__3873__auto__ == null)) {
    return h__3873__auto__;
  } else {
    var h__3873__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3873__auto____$1;
    return h__3873__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__10124 = null;
  var G__10124__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10124__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10124 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10124__2.call(this, self__, k);
      case 3:
        return G__10124__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10124;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args10123) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10123)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && (cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__10122_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__10122_SHARP_);
    };
  }(coll__$1), other));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone.call(null, items);
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__10125 = i + 1;
        var G__10126 = cljs.core._assoc_BANG_.call(null, out, items[i], null);
        i = G__10125;
        out = G__10126;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_.call(null, out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__10127 = i + 1;
        var G__10128 = cljs.core._conj_BANG_.call(null, out, items[i]);
        i = G__10127;
        out = G__10128;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/TransientHashSet");
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__10130 = null;
  var G__10130__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__10130__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__10130 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10130__2.call(this, self__, k);
      case 3:
        return G__10130__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10130;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args10129) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10129)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null);
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3873__auto__ = self__.__hash;
  if (!(h__3873__auto__ == null)) {
    return h__3873__auto__;
  } else {
    var h__3873__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3873__auto____$1;
    return h__3873__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__10133 = null;
  var G__10133__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10133__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10133 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10133__2.call(this, self__, k);
      case 3:
        return G__10133__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10133;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args10132) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10132)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && (cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__10131_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__10131_SHARP_);
    };
  }(coll__$1), other));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4304__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4304__auto__.length) {
        var G__10134 = i + 1;
        var G__10135 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__10134;
        res = G__10135;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq.call(null, in$);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var in$__$1 = in$;
        var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
        while (true) {
          if (!(in$__$1 == null)) {
            var G__10136 = cljs.core._next.call(null, in$__$1);
            var G__10137 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
            in$__$1 = G__10136;
            out = G__10137;
            continue;
          } else {
            return cljs.core._persistent_BANG_.call(null, out);
          }
          break;
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__10138__delegate = function(keys) {
      return cljs.core.set.call(null, keys);
    };
    var G__10138 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__10138__delegate.call(this, keys);
    };
    G__10138.cljs$lang$maxFixedArity = 0;
    G__10138.cljs$lang$applyTo = function(arglist__10139) {
      var keys = cljs.core.seq(arglist__10139);
      return G__10138__delegate(keys);
    };
    G__10138.cljs$core$IFn$_invoke$arity$variadic = G__10138__delegate;
    return G__10138;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__10140) {
    var keys = cljs.core.seq(arglist__10140);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__10141) {
    var comparator = cljs.core.first(arglist__10141);
    var keys = cljs.core.rest(arglist__10141);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function replace(smap, coll) {
  if (cljs.core.vector_QMARK_.call(null, coll)) {
    var n = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(n) {
      return function(v, i) {
        var temp__4090__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
        if (cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)));
  } else {
    return cljs.core.map.call(null, function(p1__10142_SHARP_) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, p1__10142_SHARP_);
      if (cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.second.call(null, e);
      } else {
        return p1__10142_SHARP_;
      }
    }, coll);
  }
};
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__10149, seen__$1) {
        while (true) {
          var vec__10150 = p__10149;
          var f = cljs.core.nth.call(null, vec__10150, 0, null);
          var xs__$1 = vec__10150;
          var temp__4092__auto__ = cljs.core.seq.call(null, xs__$1);
          if (temp__4092__auto__) {
            var s = temp__4092__auto__;
            if (cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__10151 = cljs.core.rest.call(null, s);
              var G__10152 = seen__$1;
              p__10149 = G__10151;
              seen__$1 = G__10152;
              continue;
            } else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next.call(null, s__$1)) {
      var G__10153 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__10154 = cljs.core.next.call(null, s__$1);
      ret = G__10153;
      s__$1 = G__10154;
      continue;
    } else {
      return cljs.core.seq.call(null, ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__10156 = x;
    if (G__10156) {
      var bit__4105__auto__ = G__10156.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4105__auto__ || G__10156.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._name.call(null, x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while (true) {
    if (ks && vs) {
      var G__10157 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__10158 = cljs.core.next.call(null, ks);
      var G__10159 = cljs.core.next.call(null, vs);
      map = G__10157;
      ks = G__10158;
      vs = G__10159;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (k.call(null, x) > k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__10162__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__10160_SHARP_, p2__10161_SHARP_) {
        return max_key.call(null, k, p1__10160_SHARP_, p2__10161_SHARP_);
      }, max_key.call(null, k, x, y), more);
    };
    var G__10162 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__10162__delegate.call(this, k, x, y, more);
    };
    G__10162.cljs$lang$maxFixedArity = 3;
    G__10162.cljs$lang$applyTo = function(arglist__10163) {
      var k = cljs.core.first(arglist__10163);
      arglist__10163 = cljs.core.next(arglist__10163);
      var x = cljs.core.first(arglist__10163);
      arglist__10163 = cljs.core.next(arglist__10163);
      var y = cljs.core.first(arglist__10163);
      var more = cljs.core.rest(arglist__10163);
      return G__10162__delegate(k, x, y, more);
    };
    G__10162.cljs$core$IFn$_invoke$arity$variadic = G__10162__delegate;
    return G__10162;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (k.call(null, x) < k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__10166__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__10164_SHARP_, p2__10165_SHARP_) {
        return min_key.call(null, k, p1__10164_SHARP_, p2__10165_SHARP_);
      }, min_key.call(null, k, x, y), more);
    };
    var G__10166 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__10166__delegate.call(this, k, x, y, more);
    };
    G__10166.cljs$lang$maxFixedArity = 3;
    G__10166.cljs$lang$applyTo = function(arglist__10167) {
      var k = cljs.core.first(arglist__10167);
      arglist__10167 = cljs.core.next(arglist__10167);
      var x = cljs.core.first(arglist__10167);
      arglist__10167 = cljs.core.next(arglist__10167);
      var y = cljs.core.first(arglist__10167);
      var more = cljs.core.rest(arglist__10167);
      return G__10166__delegate(k, x, y, more);
    };
    G__10166.cljs$core$IFn$_invoke$arity$variadic = G__10166__delegate;
    return G__10166;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if (cljs.core.truth_(temp__4092__auto__)) {
        var vec__10170 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__10170, 0, null);
        var s = vec__10170;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var vec__10171 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__10171, 0, null);
      var s = vec__10171;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if (cljs.core.truth_(temp__4092__auto__)) {
        var vec__10174 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__10174, 0, null);
        var s = vec__10174;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var vec__10175 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__10175, 0, null);
      var s = vec__10175;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/Range");
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__3873__auto__ = self__.__hash;
  if (!(h__3873__auto__ == null)) {
    return h__3873__auto__;
  } else {
    var h__3873__auto____$1 = cljs.core.hash_coll.call(null, rng__$1);
    self__.__hash = h__3873__auto____$1;
    return h__3873__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1);
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f, s);
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0;
  } else {
    return Math.ceil((self__.end - self__.start) / self__.step);
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq.call(null, rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], null);
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      var fst = cljs.core.first.call(null, s);
      var fv = f.call(null, fst);
      var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv, s, temp__4092__auto__) {
        return function(p1__10176_SHARP_) {
          return cljs.core._EQ_.call(null, fv, f.call(null, p1__10176_SHARP_));
        };
      }(fst, fv, s, temp__4092__auto__), cljs.core.next.call(null, s)));
      return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1);
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4090__auto__) {
        var s = temp__4090__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s));
      } else {
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, f.call(null));
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__10187 = null;
      var G__10187__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null)], null);
      };
      var G__10187__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x)], null);
      };
      var G__10187__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y)], null);
      };
      var G__10187__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z)], null);
      };
      var G__10187__4 = function() {
        var G__10188__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args)], null);
        };
        var G__10188 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10188__delegate.call(this, x, y, z, args);
        };
        G__10188.cljs$lang$maxFixedArity = 3;
        G__10188.cljs$lang$applyTo = function(arglist__10189) {
          var x = cljs.core.first(arglist__10189);
          arglist__10189 = cljs.core.next(arglist__10189);
          var y = cljs.core.first(arglist__10189);
          arglist__10189 = cljs.core.next(arglist__10189);
          var z = cljs.core.first(arglist__10189);
          var args = cljs.core.rest(arglist__10189);
          return G__10188__delegate(x, y, z, args);
        };
        G__10188.cljs$core$IFn$_invoke$arity$variadic = G__10188__delegate;
        return G__10188;
      }();
      G__10187 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10187__0.call(this);
          case 1:
            return G__10187__1.call(this, x);
          case 2:
            return G__10187__2.call(this, x, y);
          case 3:
            return G__10187__3.call(this, x, y, z);
          default:
            return G__10187__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10187.cljs$lang$maxFixedArity = 3;
      G__10187.cljs$lang$applyTo = G__10187__4.cljs$lang$applyTo;
      return G__10187;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__10190 = null;
      var G__10190__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null)], null);
      };
      var G__10190__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x)], null);
      };
      var G__10190__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y)], null);
      };
      var G__10190__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z)], null);
      };
      var G__10190__4 = function() {
        var G__10191__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args)], null);
        };
        var G__10191 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10191__delegate.call(this, x, y, z, args);
        };
        G__10191.cljs$lang$maxFixedArity = 3;
        G__10191.cljs$lang$applyTo = function(arglist__10192) {
          var x = cljs.core.first(arglist__10192);
          arglist__10192 = cljs.core.next(arglist__10192);
          var y = cljs.core.first(arglist__10192);
          arglist__10192 = cljs.core.next(arglist__10192);
          var z = cljs.core.first(arglist__10192);
          var args = cljs.core.rest(arglist__10192);
          return G__10191__delegate(x, y, z, args);
        };
        G__10191.cljs$core$IFn$_invoke$arity$variadic = G__10191__delegate;
        return G__10191;
      }();
      G__10190 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10190__0.call(this);
          case 1:
            return G__10190__1.call(this, x);
          case 2:
            return G__10190__2.call(this, x, y);
          case 3:
            return G__10190__3.call(this, x, y, z);
          default:
            return G__10190__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10190.cljs$lang$maxFixedArity = 3;
      G__10190.cljs$lang$applyTo = G__10190__4.cljs$lang$applyTo;
      return G__10190;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__10193 = null;
      var G__10193__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null), h.call(null)], null);
      };
      var G__10193__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x), h.call(null, x)], null);
      };
      var G__10193__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y), h.call(null, x, y)], null);
      };
      var G__10193__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z)], null);
      };
      var G__10193__4 = function() {
        var G__10194__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args)], null);
        };
        var G__10194 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__10194__delegate.call(this, x, y, z, args);
        };
        G__10194.cljs$lang$maxFixedArity = 3;
        G__10194.cljs$lang$applyTo = function(arglist__10195) {
          var x = cljs.core.first(arglist__10195);
          arglist__10195 = cljs.core.next(arglist__10195);
          var y = cljs.core.first(arglist__10195);
          arglist__10195 = cljs.core.next(arglist__10195);
          var z = cljs.core.first(arglist__10195);
          var args = cljs.core.rest(arglist__10195);
          return G__10194__delegate(x, y, z, args);
        };
        G__10194.cljs$core$IFn$_invoke$arity$variadic = G__10194__delegate;
        return G__10194;
      }();
      G__10193 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10193__0.call(this);
          case 1:
            return G__10193__1.call(this, x);
          case 2:
            return G__10193__2.call(this, x, y);
          case 3:
            return G__10193__3.call(this, x, y, z);
          default:
            return G__10193__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10193.cljs$lang$maxFixedArity = 3;
      G__10193.cljs$lang$applyTo = G__10193__4.cljs$lang$applyTo;
      return G__10193;
    }();
  };
  var juxt__4 = function() {
    var G__10196__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__10197 = null;
          var G__10197__0 = function() {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__10177_SHARP_, p2__10178_SHARP_) {
                return cljs.core.conj.call(null, p1__10177_SHARP_, p2__10178_SHARP_.call(null));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__10197__1 = function(x) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__10179_SHARP_, p2__10180_SHARP_) {
                return cljs.core.conj.call(null, p1__10179_SHARP_, p2__10180_SHARP_.call(null, x));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__10197__2 = function(x, y) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__10181_SHARP_, p2__10182_SHARP_) {
                return cljs.core.conj.call(null, p1__10181_SHARP_, p2__10182_SHARP_.call(null, x, y));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__10197__3 = function(x, y, z) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__10183_SHARP_, p2__10184_SHARP_) {
                return cljs.core.conj.call(null, p1__10183_SHARP_, p2__10184_SHARP_.call(null, x, y, z));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__10197__4 = function() {
            var G__10198__delegate = function(x, y, z, args) {
              return cljs.core.reduce.call(null, function(fs__$1) {
                return function(p1__10185_SHARP_, p2__10186_SHARP_) {
                  return cljs.core.conj.call(null, p1__10185_SHARP_, cljs.core.apply.call(null, p2__10186_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__10198 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__10198__delegate.call(this, x, y, z, args);
            };
            G__10198.cljs$lang$maxFixedArity = 3;
            G__10198.cljs$lang$applyTo = function(arglist__10199) {
              var x = cljs.core.first(arglist__10199);
              arglist__10199 = cljs.core.next(arglist__10199);
              var y = cljs.core.first(arglist__10199);
              arglist__10199 = cljs.core.next(arglist__10199);
              var z = cljs.core.first(arglist__10199);
              var args = cljs.core.rest(arglist__10199);
              return G__10198__delegate(x, y, z, args);
            };
            G__10198.cljs$core$IFn$_invoke$arity$variadic = G__10198__delegate;
            return G__10198;
          }();
          G__10197 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__10197__0.call(this);
              case 1:
                return G__10197__1.call(this, x);
              case 2:
                return G__10197__2.call(this, x, y);
              case 3:
                return G__10197__3.call(this, x, y, z);
              default:
                return G__10197__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__10197.cljs$lang$maxFixedArity = 3;
          G__10197.cljs$lang$applyTo = G__10197__4.cljs$lang$applyTo;
          return G__10197;
        }();
      }(fs__$1);
    };
    var G__10196 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__10196__delegate.call(this, f, g, h, fs);
    };
    G__10196.cljs$lang$maxFixedArity = 3;
    G__10196.cljs$lang$applyTo = function(arglist__10200) {
      var f = cljs.core.first(arglist__10200);
      arglist__10200 = cljs.core.next(arglist__10200);
      var g = cljs.core.first(arglist__10200);
      arglist__10200 = cljs.core.next(arglist__10200);
      var h = cljs.core.first(arglist__10200);
      var fs = cljs.core.rest(arglist__10200);
      return G__10196__delegate(f, g, h, fs);
    };
    G__10196.cljs$core$IFn$_invoke$arity$variadic = G__10196__delegate;
    return G__10196;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll)) {
        var G__10201 = cljs.core.next.call(null, coll);
        coll = G__10201;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll) && n > 0) {
        var G__10202 = n - 1;
        var G__10203 = cljs.core.next.call(null, coll);
        n = G__10202;
        coll = G__10203;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches = re.exec(s);
  if (cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
    if (cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches);
    } else {
      return cljs.core.vec.call(null, matches);
    }
  } else {
    return null;
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches = re.exec(s);
  if (matches == null) {
    return null;
  } else {
    if (cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches);
    } else {
      return cljs.core.vec.call(null, matches);
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__10205 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__10205, 0, null);
  var flags = cljs.core.nth.call(null, vec__10205, 1, null);
  var pattern = cljs.core.nth.call(null, vec__10205, 2, null);
  return new RegExp(pattern, flags);
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_10207 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write.call(null, writer, "#");
    } else {
      cljs.core._write.call(null, writer, begin);
      if (cljs.core.seq.call(null, coll)) {
        print_one.call(null, cljs.core.first.call(null, coll), writer, opts);
      } else {
      }
      var coll_10208__$1 = cljs.core.next.call(null, coll);
      var n_10209 = (new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts);
      while (true) {
        if (coll_10208__$1 && (n_10209 == null || !(n_10209 === 0))) {
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, cljs.core.first.call(null, coll_10208__$1), writer, opts);
          var G__10210 = cljs.core.next.call(null, coll_10208__$1);
          var G__10211 = n_10209 - 1;
          coll_10208__$1 = G__10210;
          n_10209 = G__10211;
          continue;
        } else {
        }
        break;
      }
      if (cljs.core.truth_((new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts))) {
        cljs.core._write.call(null, writer, sep);
        print_one.call(null, "...", writer, opts);
      } else {
      }
      return cljs.core._write.call(null, writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_10207;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__10216 = cljs.core.seq.call(null, ss);
    var chunk__10217 = null;
    var count__10218 = 0;
    var i__10219 = 0;
    while (true) {
      if (i__10219 < count__10218) {
        var s = cljs.core._nth.call(null, chunk__10217, i__10219);
        cljs.core._write.call(null, writer, s);
        var G__10220 = seq__10216;
        var G__10221 = chunk__10217;
        var G__10222 = count__10218;
        var G__10223 = i__10219 + 1;
        seq__10216 = G__10220;
        chunk__10217 = G__10221;
        count__10218 = G__10222;
        i__10219 = G__10223;
        continue;
      } else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__10216);
        if (temp__4092__auto__) {
          var seq__10216__$1 = temp__4092__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__10216__$1)) {
            var c__4210__auto__ = cljs.core.chunk_first.call(null, seq__10216__$1);
            var G__10224 = cljs.core.chunk_rest.call(null, seq__10216__$1);
            var G__10225 = c__4210__auto__;
            var G__10226 = cljs.core.count.call(null, c__4210__auto__);
            var G__10227 = 0;
            seq__10216 = G__10224;
            chunk__10217 = G__10225;
            count__10218 = G__10226;
            i__10219 = G__10227;
            continue;
          } else {
            var s = cljs.core.first.call(null, seq__10216__$1);
            cljs.core._write.call(null, writer, s);
            var G__10228 = cljs.core.next.call(null, seq__10216__$1);
            var G__10229 = null;
            var G__10230 = 0;
            var G__10231 = 0;
            seq__10216 = G__10228;
            chunk__10217 = G__10229;
            count__10218 = G__10230;
            i__10219 = G__10231;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__10232) {
    var writer = cljs.core.first(arglist__10232);
    var ss = cljs.core.rest(arglist__10232);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj10234 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj10234;
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write.call(null, writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e");
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        if (cljs.core.truth_(function() {
          var and__3450__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
          if (cljs.core.truth_(and__3450__auto__)) {
            var and__3450__auto____$1 = function() {
              var G__10240 = obj;
              if (G__10240) {
                var bit__4112__auto__ = G__10240.cljs$lang$protocol_mask$partition0$ & 131072;
                if (bit__4112__auto__ || G__10240.cljs$core$IMeta$) {
                  return true;
                } else {
                  if (!G__10240.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__10240);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__10240);
              }
            }();
            if (and__3450__auto____$1) {
              return cljs.core.meta.call(null, obj);
            } else {
              return and__3450__auto____$1;
            }
          } else {
            return and__3450__auto__;
          }
        }())) {
          cljs.core._write.call(null, writer, "^");
          pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
          cljs.core._write.call(null, writer, " ");
        } else {
        }
        if (obj == null) {
          return cljs.core._write.call(null, writer, "nil");
        } else {
          if (obj.cljs$lang$type) {
            return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
          } else {
            if (function() {
              var G__10241 = obj;
              if (G__10241) {
                var bit__4105__auto__ = G__10241.cljs$lang$protocol_mask$partition0$ & 2147483648;
                if (bit__4105__auto__ || G__10241.cljs$core$IPrintWithWriter$) {
                  return true;
                } else {
                  return false;
                }
              } else {
                return false;
              }
            }()) {
              return cljs.core._pr_writer.call(null, obj, writer, opts);
            } else {
              if (cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
                return cljs.core._write.call(null, writer, [cljs.core.str(obj)].join(""));
              } else {
                if (cljs.core.object_QMARK_.call(null, obj)) {
                  cljs.core._write.call(null, writer, "#js ");
                  return cljs.core.print_map.call(null, cljs.core.map.call(null, function(k) {
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), obj[k]], null);
                  }, cljs.core.js_keys.call(null, obj)), pr_writer, writer, opts);
                } else {
                  if (obj instanceof Array) {
                    return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#js [", " ", "]", opts, obj);
                  } else {
                    if (goog.isString(obj)) {
                      if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 4441712502)).cljs$core$IFn$_invoke$arity$1(opts))) {
                        return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj));
                      } else {
                        return cljs.core._write.call(null, writer, obj);
                      }
                    } else {
                      if (cljs.core.fn_QMARK_.call(null, obj)) {
                        return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e");
                      } else {
                        if (obj instanceof Date) {
                          var normalize = function(n, len) {
                            var ns = [cljs.core.str(n)].join("");
                            while (true) {
                              if (cljs.core.count.call(null, ns) < len) {
                                var G__10243 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                                ns = G__10243;
                                continue;
                              } else {
                                return ns;
                              }
                              break;
                            }
                          };
                          return cljs.core.write_all.call(null, writer, '#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"');
                        } else {
                          if (cljs.core.regexp_QMARK_.call(null, obj)) {
                            return cljs.core.write_all.call(null, writer, '#"', obj.source, '"');
                          } else {
                            if (function() {
                              var G__10242 = obj;
                              if (G__10242) {
                                var bit__4112__auto__ = G__10242.cljs$lang$protocol_mask$partition0$ & 2147483648;
                                if (bit__4112__auto__ || G__10242.cljs$core$IPrintWithWriter$) {
                                  return true;
                                } else {
                                  if (!G__10242.cljs$lang$protocol_mask$partition0$) {
                                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__10242);
                                  } else {
                                    return false;
                                  }
                                }
                              } else {
                                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__10242);
                              }
                            }()) {
                              return cljs.core._pr_writer.call(null, obj, writer, opts);
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e");
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__10248 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__10249 = null;
  var count__10250 = 0;
  var i__10251 = 0;
  while (true) {
    if (i__10251 < count__10250) {
      var obj = cljs.core._nth.call(null, chunk__10249, i__10251);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__10252 = seq__10248;
      var G__10253 = chunk__10249;
      var G__10254 = count__10250;
      var G__10255 = i__10251 + 1;
      seq__10248 = G__10252;
      chunk__10249 = G__10253;
      count__10250 = G__10254;
      i__10251 = G__10255;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__10248);
      if (temp__4092__auto__) {
        var seq__10248__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__10248__$1)) {
          var c__4210__auto__ = cljs.core.chunk_first.call(null, seq__10248__$1);
          var G__10256 = cljs.core.chunk_rest.call(null, seq__10248__$1);
          var G__10257 = c__4210__auto__;
          var G__10258 = cljs.core.count.call(null, c__4210__auto__);
          var G__10259 = 0;
          seq__10248 = G__10256;
          chunk__10249 = G__10257;
          count__10250 = G__10258;
          i__10251 = G__10259;
          continue;
        } else {
          var obj = cljs.core.first.call(null, seq__10248__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__10260 = cljs.core.next.call(null, seq__10248__$1);
          var G__10261 = null;
          var G__10262 = 0;
          var G__10263 = 0;
          seq__10248 = G__10260;
          chunk__10249 = G__10261;
          count__10250 = G__10262;
          i__10251 = G__10263;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts.call(null, objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if (cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857)))) {
    return cljs.core.flush.call(null);
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__10264) {
    var objs = cljs.core.seq(arglist__10264);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__10265) {
    var objs = cljs.core.seq(arglist__10265);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__10266) {
    var objs = cljs.core.seq(arglist__10266);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__10267) {
    var objs = cljs.core.seq(arglist__10267);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__10268) {
    var objs = cljs.core.seq(arglist__10268);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__10269) {
    var objs = cljs.core.seq(arglist__10269);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__10270) {
    var objs = cljs.core.seq(arglist__10270);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__10271) {
    var objs = cljs.core.seq(arglist__10271);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, function(e, w, opts__$1) {
    print_one.call(null, cljs.core.key.call(null, e), w, opts__$1);
    cljs.core._write.call(null, w, " ");
    return print_one.call(null, cljs.core.val.call(null, e), w, opts__$1);
  }, "{", ", ", "}", opts, cljs.core.seq.call(null, m));
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1));
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()");
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.IAtom = function() {
  var obj10273 = {};
  return obj10273;
}();
cljs.core.IReset = function() {
  var obj10275 = {};
  return obj10275;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3450__auto__ = o;
    if (and__3450__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4089__auto__ = o == null ? null : o;
    return function() {
      var or__3462__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj10277 = {};
  return obj10277;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3450__auto__ = o;
      if (and__3450__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4089__auto__ = o == null ? null : o;
      return function() {
        var or__3462__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3450__auto__ = o;
      if (and__3450__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4089__auto__ = o == null ? null : o;
      return function() {
        var or__3462__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3450__auto__ = o;
      if (and__3450__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4089__auto__ = o == null ? null : o;
      return function() {
        var or__3462__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3450__auto__ = o;
      if (and__3450__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4089__auto__ = o == null ? null : o;
      return function() {
        var or__3462__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/Atom");
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__10278 = cljs.core.seq.call(null, self__.watches);
  var chunk__10279 = null;
  var count__10280 = 0;
  var i__10281 = 0;
  while (true) {
    if (i__10281 < count__10280) {
      var vec__10282 = cljs.core._nth.call(null, chunk__10279, i__10281);
      var key = cljs.core.nth.call(null, vec__10282, 0, null);
      var f = cljs.core.nth.call(null, vec__10282, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__10284 = seq__10278;
      var G__10285 = chunk__10279;
      var G__10286 = count__10280;
      var G__10287 = i__10281 + 1;
      seq__10278 = G__10284;
      chunk__10279 = G__10285;
      count__10280 = G__10286;
      i__10281 = G__10287;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__10278);
      if (temp__4092__auto__) {
        var seq__10278__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__10278__$1)) {
          var c__4210__auto__ = cljs.core.chunk_first.call(null, seq__10278__$1);
          var G__10288 = cljs.core.chunk_rest.call(null, seq__10278__$1);
          var G__10289 = c__4210__auto__;
          var G__10290 = cljs.core.count.call(null, c__4210__auto__);
          var G__10291 = 0;
          seq__10278 = G__10288;
          chunk__10279 = G__10289;
          count__10280 = G__10290;
          i__10281 = G__10291;
          continue;
        } else {
          var vec__10283 = cljs.core.first.call(null, seq__10278__$1);
          var key = cljs.core.nth.call(null, vec__10283, 0, null);
          var f = cljs.core.nth.call(null, vec__10283, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__10292 = cljs.core.next.call(null, seq__10278__$1);
          var G__10293 = null;
          var G__10294 = 0;
          var G__10295 = 0;
          seq__10278 = G__10292;
          chunk__10279 = G__10293;
          count__10280 = G__10294;
          i__10281 = G__10295;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__10299__delegate = function(x, p__10296) {
      var map__10298 = p__10296;
      var map__10298__$1 = cljs.core.seq_QMARK_.call(null, map__10298) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10298) : map__10298;
      var validator = cljs.core.get.call(null, map__10298__$1, new cljs.core.Keyword(null, "validator", "validator", 4199087812));
      var meta = cljs.core.get.call(null, map__10298__$1, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__10299 = function(x, var_args) {
      var p__10296 = null;
      if (arguments.length > 1) {
        p__10296 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__10299__delegate.call(this, x, p__10296);
    };
    G__10299.cljs$lang$maxFixedArity = 1;
    G__10299.cljs$lang$applyTo = function(arglist__10300) {
      var x = cljs.core.first(arglist__10300);
      var p__10296 = cljs.core.rest(arglist__10300);
      return G__10299__delegate(x, p__10296);
    };
    G__10299.cljs$core$IFn$_invoke$arity$variadic = G__10299__delegate;
    return G__10299;
  }();
  atom = function(x, var_args) {
    var p__10296 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.call(null, new_value))) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1233162959, null), new cljs.core.Symbol(null, "new-value", "new-value", 972165309, null))))].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches.call(null, a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_.call(null, a, new_value);
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o);
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__10301__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.call(null, a, f, x, y, more);
      }
    };
    var G__10301 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__10301__delegate.call(this, a, f, x, y, more);
    };
    G__10301.cljs$lang$maxFixedArity = 4;
    G__10301.cljs$lang$applyTo = function(arglist__10302) {
      var a = cljs.core.first(arglist__10302);
      arglist__10302 = cljs.core.next(arglist__10302);
      var f = cljs.core.first(arglist__10302);
      arglist__10302 = cljs.core.next(arglist__10302);
      var x = cljs.core.first(arglist__10302);
      arglist__10302 = cljs.core.next(arglist__10302);
      var y = cljs.core.first(arglist__10302);
      var more = cljs.core.rest(arglist__10302);
      return G__10301__delegate(a, f, x, y, more);
    };
    G__10301.cljs$core$IFn$_invoke$arity$variadic = G__10301__delegate;
    return G__10301;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__10303) {
    var iref = cljs.core.first(arglist__10303);
    arglist__10303 = cljs.core.next(arglist__10303);
    var f = cljs.core.first(arglist__10303);
    var args = cljs.core.rest(arglist__10303);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f);
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key);
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0);
    } else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/Delay");
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return(new cljs.core.Keyword(null, "done", "done", 1016993524)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.state));
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return(new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null, self__.state, function(___$1) {
    return function(p__10304) {
      var map__10305 = p__10304;
      var map__10305__$1 = cljs.core.seq_QMARK_.call(null, map__10305) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10305) : map__10305;
      var curr_state = map__10305__$1;
      var done = cljs.core.get.call(null, map__10305__$1, new cljs.core.Keyword(null, "done", "done", 1016993524));
      if (cljs.core.truth_(done)) {
        return curr_state;
      } else {
        return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "done", "done", 1016993524), true, new cljs.core.Keyword(null, "value", "value", 1125876963), self__.f.call(null)], null);
      }
    };
  }(___$1)));
};
cljs.core.__GT_Delay = function __GT_Delay(state, f) {
  return new cljs.core.Delay(state, f);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d);
};
cljs.core.IEncodeJS = function() {
  var obj10307 = {};
  return obj10307;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3450__auto__ = x;
    if (and__3450__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4089__auto__ = x == null ? null : x;
    return function() {
      var or__3462__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3450__auto__ = x;
    if (and__3450__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4089__auto__ = x == null ? null : x;
    return function() {
      var or__3462__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__10309 = k;
    if (G__10309) {
      var bit__4112__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3462__auto__ = bit__4112__auto__;
        if (cljs.core.truth_(or__3462__auto__)) {
          return or__3462__auto__;
        } else {
          return G__10309.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__10309.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__10309);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__10309);
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k);
  } else {
    if (typeof k === "string" || (typeof k === "number" || (k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol))) {
      return cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.call(null, k);
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__10323 = x;
      if (G__10323) {
        var bit__4112__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3462__auto__ = bit__4112__auto__;
          if (cljs.core.truth_(or__3462__auto__)) {
            return or__3462__auto__;
          } else {
            return G__10323.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__10323.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__10323);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__10323);
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_.call(null, x)) {
            var m = function() {
              var obj10325 = {};
              return obj10325;
            }();
            var seq__10326_10336 = cljs.core.seq.call(null, x);
            var chunk__10327_10337 = null;
            var count__10328_10338 = 0;
            var i__10329_10339 = 0;
            while (true) {
              if (i__10329_10339 < count__10328_10338) {
                var vec__10330_10340 = cljs.core._nth.call(null, chunk__10327_10337, i__10329_10339);
                var k_10341 = cljs.core.nth.call(null, vec__10330_10340, 0, null);
                var v_10342 = cljs.core.nth.call(null, vec__10330_10340, 1, null);
                m[cljs.core.key__GT_js.call(null, k_10341)] = clj__GT_js.call(null, v_10342);
                var G__10343 = seq__10326_10336;
                var G__10344 = chunk__10327_10337;
                var G__10345 = count__10328_10338;
                var G__10346 = i__10329_10339 + 1;
                seq__10326_10336 = G__10343;
                chunk__10327_10337 = G__10344;
                count__10328_10338 = G__10345;
                i__10329_10339 = G__10346;
                continue;
              } else {
                var temp__4092__auto___10347 = cljs.core.seq.call(null, seq__10326_10336);
                if (temp__4092__auto___10347) {
                  var seq__10326_10348__$1 = temp__4092__auto___10347;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__10326_10348__$1)) {
                    var c__4210__auto___10349 = cljs.core.chunk_first.call(null, seq__10326_10348__$1);
                    var G__10350 = cljs.core.chunk_rest.call(null, seq__10326_10348__$1);
                    var G__10351 = c__4210__auto___10349;
                    var G__10352 = cljs.core.count.call(null, c__4210__auto___10349);
                    var G__10353 = 0;
                    seq__10326_10336 = G__10350;
                    chunk__10327_10337 = G__10351;
                    count__10328_10338 = G__10352;
                    i__10329_10339 = G__10353;
                    continue;
                  } else {
                    var vec__10331_10354 = cljs.core.first.call(null, seq__10326_10348__$1);
                    var k_10355 = cljs.core.nth.call(null, vec__10331_10354, 0, null);
                    var v_10356 = cljs.core.nth.call(null, vec__10331_10354, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_10355)] = clj__GT_js.call(null, v_10356);
                    var G__10357 = cljs.core.next.call(null, seq__10326_10348__$1);
                    var G__10358 = null;
                    var G__10359 = 0;
                    var G__10360 = 0;
                    seq__10326_10336 = G__10357;
                    chunk__10327_10337 = G__10358;
                    count__10328_10338 = G__10359;
                    i__10329_10339 = G__10360;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_.call(null, x)) {
              var arr = [];
              var seq__10332_10361 = cljs.core.seq.call(null, cljs.core.map.call(null, clj__GT_js, x));
              var chunk__10333_10362 = null;
              var count__10334_10363 = 0;
              var i__10335_10364 = 0;
              while (true) {
                if (i__10335_10364 < count__10334_10363) {
                  var x_10365__$1 = cljs.core._nth.call(null, chunk__10333_10362, i__10335_10364);
                  arr.push(x_10365__$1);
                  var G__10366 = seq__10332_10361;
                  var G__10367 = chunk__10333_10362;
                  var G__10368 = count__10334_10363;
                  var G__10369 = i__10335_10364 + 1;
                  seq__10332_10361 = G__10366;
                  chunk__10333_10362 = G__10367;
                  count__10334_10363 = G__10368;
                  i__10335_10364 = G__10369;
                  continue;
                } else {
                  var temp__4092__auto___10370 = cljs.core.seq.call(null, seq__10332_10361);
                  if (temp__4092__auto___10370) {
                    var seq__10332_10371__$1 = temp__4092__auto___10370;
                    if (cljs.core.chunked_seq_QMARK_.call(null, seq__10332_10371__$1)) {
                      var c__4210__auto___10372 = cljs.core.chunk_first.call(null, seq__10332_10371__$1);
                      var G__10373 = cljs.core.chunk_rest.call(null, seq__10332_10371__$1);
                      var G__10374 = c__4210__auto___10372;
                      var G__10375 = cljs.core.count.call(null, c__4210__auto___10372);
                      var G__10376 = 0;
                      seq__10332_10361 = G__10373;
                      chunk__10333_10362 = G__10374;
                      count__10334_10363 = G__10375;
                      i__10335_10364 = G__10376;
                      continue;
                    } else {
                      var x_10377__$1 = cljs.core.first.call(null, seq__10332_10371__$1);
                      arr.push(x_10377__$1);
                      var G__10378 = cljs.core.next.call(null, seq__10332_10371__$1);
                      var G__10379 = null;
                      var G__10380 = 0;
                      var G__10381 = 0;
                      seq__10332_10361 = G__10378;
                      chunk__10333_10362 = G__10379;
                      count__10334_10363 = G__10380;
                      i__10335_10364 = G__10381;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return x;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj10383 = {};
  return obj10383;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3450__auto__ = x;
    if (and__3450__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4089__auto__ = x == null ? null : x;
    return function() {
      var or__3462__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), false], null));
  };
  var js__GT_clj__2 = function() {
    var G__10404__delegate = function(x, opts) {
      if (function() {
        var G__10394 = x;
        if (G__10394) {
          var bit__4112__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3462__auto__ = bit__4112__auto__;
            if (cljs.core.truth_(or__3462__auto__)) {
              return or__3462__auto__;
            } else {
              return G__10394.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__10394.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__10394);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__10394);
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq.call(null, opts)) {
          var map__10395 = opts;
          var map__10395__$1 = cljs.core.seq_QMARK_.call(null, map__10395) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10395) : map__10395;
          var keywordize_keys = cljs.core.get.call(null, map__10395__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__10395, map__10395__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if (cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1));
              } else {
                if (cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1));
                } else {
                  if (x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1));
                  } else {
                    if (cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__4179__auto__ = function(map__10395, map__10395__$1, keywordize_keys, keyfn) {
                          return function iter__10400(s__10401) {
                            return new cljs.core.LazySeq(null, function(map__10395, map__10395__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__10401__$1 = s__10401;
                                while (true) {
                                  var temp__4092__auto__ = cljs.core.seq.call(null, s__10401__$1);
                                  if (temp__4092__auto__) {
                                    var s__10401__$2 = temp__4092__auto__;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__10401__$2)) {
                                      var c__4177__auto__ = cljs.core.chunk_first.call(null, s__10401__$2);
                                      var size__4178__auto__ = cljs.core.count.call(null, c__4177__auto__);
                                      var b__10403 = cljs.core.chunk_buffer.call(null, size__4178__auto__);
                                      if (function() {
                                        var i__10402 = 0;
                                        while (true) {
                                          if (i__10402 < size__4178__auto__) {
                                            var k = cljs.core._nth.call(null, c__4177__auto__, i__10402);
                                            cljs.core.chunk_append.call(null, b__10403, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null));
                                            var G__10405 = i__10402 + 1;
                                            i__10402 = G__10405;
                                            continue;
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10403), iter__10400.call(null, cljs.core.chunk_rest.call(null, s__10401__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10403), null);
                                      }
                                    } else {
                                      var k = cljs.core.first.call(null, s__10401__$2);
                                      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null), iter__10400.call(null, cljs.core.rest.call(null, s__10401__$2)));
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(map__10395, map__10395__$1, keywordize_keys, keyfn), null, null);
                          };
                        }(map__10395, map__10395__$1, keywordize_keys, keyfn);
                        return iter__4179__auto__.call(null, cljs.core.js_keys.call(null, x__$1));
                      }());
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        return x__$1;
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }
            };
          }(map__10395, map__10395__$1, keywordize_keys, keyfn);
          return f.call(null, x);
        } else {
          return null;
        }
      }
    };
    var G__10404 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__10404__delegate.call(this, x, opts);
    };
    G__10404.cljs$lang$maxFixedArity = 1;
    G__10404.cljs$lang$applyTo = function(arglist__10406) {
      var x = cljs.core.first(arglist__10406);
      var opts = cljs.core.rest(arglist__10406);
      return G__10404__delegate(x, opts);
    };
    G__10404.cljs$core$IFn$_invoke$arity$variadic = G__10404__delegate;
    return G__10404;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(mem) {
    return function() {
      var G__10407__delegate = function(args) {
        var temp__4090__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args);
        if (cljs.core.truth_(temp__4090__auto__)) {
          var v = temp__4090__auto__;
          return v;
        } else {
          var ret = cljs.core.apply.call(null, f, args);
          cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
          return ret;
        }
      };
      var G__10407 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__10407__delegate.call(this, args);
      };
      G__10407.cljs$lang$maxFixedArity = 0;
      G__10407.cljs$lang$applyTo = function(arglist__10408) {
        var args = cljs.core.seq(arglist__10408);
        return G__10407__delegate(args);
      };
      G__10407.cljs$core$IFn$_invoke$arity$variadic = G__10407__delegate;
      return G__10407;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = f.call(null);
      if (cljs.core.fn_QMARK_.call(null, ret)) {
        var G__10409 = ret;
        f = G__10409;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__10410__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args);
      });
    };
    var G__10410 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__10410__delegate.call(this, f, args);
    };
    G__10410.cljs$lang$maxFixedArity = 1;
    G__10410.cljs$lang$applyTo = function(arglist__10411) {
      var f = cljs.core.first(arglist__10411);
      var args = cljs.core.rest(arglist__10411);
      return G__10410__delegate(f, args);
    };
    G__10410.cljs$core$IFn$_invoke$arity$variadic = G__10410__delegate;
    return G__10410;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1);
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, coll);
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 768214664), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__10412) {
    var f = cljs.core.first(arglist__10412);
    var args = cljs.core.rest(arglist__10412);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3462__auto__ = cljs.core._EQ_.call(null, child, parent);
    if (or__3462__auto__) {
      return or__3462__auto__;
    } else {
      var or__3462__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3462__auto____$1) {
        return or__3462__auto____$1;
      } else {
        var and__3450__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if (and__3450__auto__) {
          var and__3450__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if (and__3450__auto____$1) {
            var and__3450__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if (and__3450__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count.call(null, parent)) {
                  return ret;
                } else {
                  var G__10413 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__10414 = i + 1;
                  ret = G__10413;
                  i = G__10414;
                  continue;
                }
                break;
              }
            } else {
              return and__3450__auto____$2;
            }
          } else {
            return and__3450__auto____$1;
          }
        } else {
          return and__3450__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", -388313324, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.call(null, tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", -1637144189, null), new cljs.core.Symbol(null, "tag", "tag", -1640416941, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))));
          };
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)));
      };
    }(tp, td, ta);
    var or__3462__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 768214664), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3462__auto__)) {
      return or__3462__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__10415_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__10415_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__10415_SHARP_), cljs.core.second.call(null, p1__10415_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if (cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__10416_SHARP_, p2__10417_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.derive, p1__10416_SHARP_, p2__10417_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3462__auto__ = cljs.core.truth_(function() {
    var and__3450__auto__ = xprefs;
    if (cljs.core.truth_(and__3450__auto__)) {
      return xprefs.call(null, y);
    } else {
      return and__3450__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3462__auto__)) {
    return or__3462__auto__;
  } else {
    var or__3462__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while (true) {
        if (cljs.core.count.call(null, ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          } else {
          }
          var G__10418 = cljs.core.rest.call(null, ps);
          ps = G__10418;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3462__auto____$1)) {
      return or__3462__auto____$1;
    } else {
      var or__3462__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while (true) {
          if (cljs.core.count.call(null, ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            } else {
            }
            var G__10419 = cljs.core.rest.call(null, ps);
            ps = G__10419;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3462__auto____$2)) {
        return or__3462__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3462__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if (cljs.core.truth_(or__3462__auto__)) {
    return or__3462__auto__;
  } else {
    return cljs.core.isa_QMARK_.call(null, x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__10422) {
    var vec__10423 = p__10422;
    var k = cljs.core.nth.call(null, vec__10423, 0, null);
    var _ = cljs.core.nth.call(null, vec__10423, 1, null);
    var e = vec__10423;
    if (cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3462__auto__ = be == null;
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry);
    } else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj10425 = {};
  return obj10425;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3450__auto__ = mf;
    if (and__3450__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4089__auto__ = mf == null ? null : mf;
    return function() {
      var or__3462__auto__ = cljs.core._reset[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._reset["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3450__auto__ = mf;
    if (and__3450__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4089__auto__ = mf == null ? null : mf;
    return function() {
      var or__3462__auto__ = cljs.core._add_method[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._add_method["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3450__auto__ = mf;
    if (and__3450__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4089__auto__ = mf == null ? null : mf;
    return function() {
      var or__3462__auto__ = cljs.core._remove_method[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._remove_method["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3450__auto__ = mf;
    if (and__3450__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4089__auto__ = mf == null ? null : mf;
    return function() {
      var or__3462__auto__ = cljs.core._prefer_method[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3450__auto__ = mf;
    if (and__3450__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4089__auto__ = mf == null ? null : mf;
    return function() {
      var or__3462__auto__ = cljs.core._get_method[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._get_method["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3450__auto__ = mf;
    if (and__3450__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4089__auto__ = mf == null ? null : mf;
    return function() {
      var or__3462__auto__ = cljs.core._methods[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._methods["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3450__auto__ = mf;
    if (and__3450__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4089__auto__ = mf == null ? null : mf;
    return function() {
      var or__3462__auto__ = cljs.core._prefers[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._prefers["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if (function() {
    var and__3450__auto__ = mf;
    if (and__3450__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args);
  } else {
    var x__4089__auto__ = mf == null ? null : mf;
    return function() {
      var or__3462__auto__ = cljs.core._dispatch[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core._dispatch["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args);
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, name, dispatch_fn, args) {
  var dispatch_val = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
  }
  return cljs.core.apply.call(null, target_fn, args);
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 256;
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/MultiFn");
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4090__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4090__auto__)) {
    var target_fn = temp__4090__auto__;
    return target_fn;
  } else {
    var temp__4090__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4090__auto____$1)) {
      var target_fn = temp__4090__auto____$1;
      return target_fn;
    } else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.do_dispatch.call(null, mf__$1, self__.name, self__.dispatch_fn, args);
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__10426__delegate = function(_, args) {
    var self = this;
    return cljs.core._dispatch.call(null, self, args);
  };
  var G__10426 = function(_, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return G__10426__delegate.call(this, _, args);
  };
  G__10426.cljs$lang$maxFixedArity = 1;
  G__10426.cljs$lang$applyTo = function(arglist__10427) {
    var _ = cljs.core.first(arglist__10427);
    var args = cljs.core.rest(arglist__10427);
    return G__10426__delegate(_, args);
  };
  G__10426.cljs$core$IFn$_invoke$arity$variadic = G__10426__delegate;
  return G__10426;
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self = this;
  return cljs.core._dispatch.call(null, self, args);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core/UUID");
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1));
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4032__auto__, writer__4033__auto__, opts__4034__auto__) {
  return cljs.core._write.call(null, writer__4033__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.call(null, x, y))) {
      return-1;
    } else {
      if (cljs.core.truth_(pred.call(null, y, x))) {
        return 1;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return 0;
        } else {
          return null;
        }
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "deftype*", "deftype*", -978581244, null), null, new cljs.core.Symbol(null, "new", "new", -1640422567, null), null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), null, new cljs.core.Symbol(null, "\x26", "\x26", -1640531489, null), null, new cljs.core.Symbol(null, "set!", "set!", -1637004872, null), null, new cljs.core.Symbol(null, 
  "recur", "recur", -1532142362, null), null, new cljs.core.Symbol(null, ".", ".", -1640531481, null), null, new cljs.core.Symbol(null, "ns", "ns", -1640528002, null), null, new cljs.core.Symbol(null, "do", "do", -1640528316, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -1640430053, null), null, new cljs.core.Symbol(null, "throw", "throw", -1530191713, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", 1548249632, null), null, new cljs.core.Symbol(null, "js*", "js*", -1640426054, 
  null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", 774272013, null), null, new cljs.core.Symbol(null, "let*", "let*", -1637213400, null), null, new cljs.core.Symbol(null, "loop*", "loop*", -1537374273, null), null, new cljs.core.Symbol(null, "try", "try", -1640416396, null), null, new cljs.core.Symbol(null, "if", "if", -1640528170, null), null, new cljs.core.Symbol(null, "def", "def", -1640432194, null), null], null), null), x);
};
goog.provide("om.dom");
goog.require("cljs.core");
om.dom.a = function() {
  var a__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.a.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var a = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return a__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  a.cljs$lang$maxFixedArity = 1;
  a.cljs$lang$applyTo = function(arglist__10570) {
    var opts__4984__auto__ = cljs.core.first(arglist__10570);
    var children__4985__auto__ = cljs.core.rest(arglist__10570);
    return a__delegate(opts__4984__auto__, children__4985__auto__);
  };
  a.cljs$core$IFn$_invoke$arity$variadic = a__delegate;
  return a;
}();
om.dom.abbr = function() {
  var abbr__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.abbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var abbr = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return abbr__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  abbr.cljs$lang$maxFixedArity = 1;
  abbr.cljs$lang$applyTo = function(arglist__10571) {
    var opts__4984__auto__ = cljs.core.first(arglist__10571);
    var children__4985__auto__ = cljs.core.rest(arglist__10571);
    return abbr__delegate(opts__4984__auto__, children__4985__auto__);
  };
  abbr.cljs$core$IFn$_invoke$arity$variadic = abbr__delegate;
  return abbr;
}();
om.dom.address = function() {
  var address__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.address.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var address = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return address__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  address.cljs$lang$maxFixedArity = 1;
  address.cljs$lang$applyTo = function(arglist__10572) {
    var opts__4984__auto__ = cljs.core.first(arglist__10572);
    var children__4985__auto__ = cljs.core.rest(arglist__10572);
    return address__delegate(opts__4984__auto__, children__4985__auto__);
  };
  address.cljs$core$IFn$_invoke$arity$variadic = address__delegate;
  return address;
}();
om.dom.area = function() {
  var area__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.area.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var area = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return area__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  area.cljs$lang$maxFixedArity = 1;
  area.cljs$lang$applyTo = function(arglist__10573) {
    var opts__4984__auto__ = cljs.core.first(arglist__10573);
    var children__4985__auto__ = cljs.core.rest(arglist__10573);
    return area__delegate(opts__4984__auto__, children__4985__auto__);
  };
  area.cljs$core$IFn$_invoke$arity$variadic = area__delegate;
  return area;
}();
om.dom.article = function() {
  var article__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.article.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var article = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return article__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  article.cljs$lang$maxFixedArity = 1;
  article.cljs$lang$applyTo = function(arglist__10574) {
    var opts__4984__auto__ = cljs.core.first(arglist__10574);
    var children__4985__auto__ = cljs.core.rest(arglist__10574);
    return article__delegate(opts__4984__auto__, children__4985__auto__);
  };
  article.cljs$core$IFn$_invoke$arity$variadic = article__delegate;
  return article;
}();
om.dom.aside = function() {
  var aside__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.aside.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var aside = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return aside__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  aside.cljs$lang$maxFixedArity = 1;
  aside.cljs$lang$applyTo = function(arglist__10575) {
    var opts__4984__auto__ = cljs.core.first(arglist__10575);
    var children__4985__auto__ = cljs.core.rest(arglist__10575);
    return aside__delegate(opts__4984__auto__, children__4985__auto__);
  };
  aside.cljs$core$IFn$_invoke$arity$variadic = aside__delegate;
  return aside;
}();
om.dom.audio = function() {
  var audio__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.audio.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var audio = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return audio__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  audio.cljs$lang$maxFixedArity = 1;
  audio.cljs$lang$applyTo = function(arglist__10576) {
    var opts__4984__auto__ = cljs.core.first(arglist__10576);
    var children__4985__auto__ = cljs.core.rest(arglist__10576);
    return audio__delegate(opts__4984__auto__, children__4985__auto__);
  };
  audio.cljs$core$IFn$_invoke$arity$variadic = audio__delegate;
  return audio;
}();
om.dom.b = function() {
  var b__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.b.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var b = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return b__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  b.cljs$lang$maxFixedArity = 1;
  b.cljs$lang$applyTo = function(arglist__10577) {
    var opts__4984__auto__ = cljs.core.first(arglist__10577);
    var children__4985__auto__ = cljs.core.rest(arglist__10577);
    return b__delegate(opts__4984__auto__, children__4985__auto__);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = b__delegate;
  return b;
}();
om.dom.base = function() {
  var base__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.base.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var base = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return base__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  base.cljs$lang$maxFixedArity = 1;
  base.cljs$lang$applyTo = function(arglist__10578) {
    var opts__4984__auto__ = cljs.core.first(arglist__10578);
    var children__4985__auto__ = cljs.core.rest(arglist__10578);
    return base__delegate(opts__4984__auto__, children__4985__auto__);
  };
  base.cljs$core$IFn$_invoke$arity$variadic = base__delegate;
  return base;
}();
om.dom.bdi = function() {
  var bdi__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.bdi.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var bdi = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdi__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  bdi.cljs$lang$maxFixedArity = 1;
  bdi.cljs$lang$applyTo = function(arglist__10579) {
    var opts__4984__auto__ = cljs.core.first(arglist__10579);
    var children__4985__auto__ = cljs.core.rest(arglist__10579);
    return bdi__delegate(opts__4984__auto__, children__4985__auto__);
  };
  bdi.cljs$core$IFn$_invoke$arity$variadic = bdi__delegate;
  return bdi;
}();
om.dom.bdo = function() {
  var bdo__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.bdo.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var bdo = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdo__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  bdo.cljs$lang$maxFixedArity = 1;
  bdo.cljs$lang$applyTo = function(arglist__10580) {
    var opts__4984__auto__ = cljs.core.first(arglist__10580);
    var children__4985__auto__ = cljs.core.rest(arglist__10580);
    return bdo__delegate(opts__4984__auto__, children__4985__auto__);
  };
  bdo.cljs$core$IFn$_invoke$arity$variadic = bdo__delegate;
  return bdo;
}();
om.dom.big = function() {
  var big__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.big.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var big = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return big__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  big.cljs$lang$maxFixedArity = 1;
  big.cljs$lang$applyTo = function(arglist__10581) {
    var opts__4984__auto__ = cljs.core.first(arglist__10581);
    var children__4985__auto__ = cljs.core.rest(arglist__10581);
    return big__delegate(opts__4984__auto__, children__4985__auto__);
  };
  big.cljs$core$IFn$_invoke$arity$variadic = big__delegate;
  return big;
}();
om.dom.blockquote = function() {
  var blockquote__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.blockquote.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var blockquote = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return blockquote__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  blockquote.cljs$lang$maxFixedArity = 1;
  blockquote.cljs$lang$applyTo = function(arglist__10582) {
    var opts__4984__auto__ = cljs.core.first(arglist__10582);
    var children__4985__auto__ = cljs.core.rest(arglist__10582);
    return blockquote__delegate(opts__4984__auto__, children__4985__auto__);
  };
  blockquote.cljs$core$IFn$_invoke$arity$variadic = blockquote__delegate;
  return blockquote;
}();
om.dom.body = function() {
  var body__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.body.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var body = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return body__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  body.cljs$lang$maxFixedArity = 1;
  body.cljs$lang$applyTo = function(arglist__10583) {
    var opts__4984__auto__ = cljs.core.first(arglist__10583);
    var children__4985__auto__ = cljs.core.rest(arglist__10583);
    return body__delegate(opts__4984__auto__, children__4985__auto__);
  };
  body.cljs$core$IFn$_invoke$arity$variadic = body__delegate;
  return body;
}();
om.dom.br = function() {
  var br__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.br.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var br = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return br__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  br.cljs$lang$maxFixedArity = 1;
  br.cljs$lang$applyTo = function(arglist__10584) {
    var opts__4984__auto__ = cljs.core.first(arglist__10584);
    var children__4985__auto__ = cljs.core.rest(arglist__10584);
    return br__delegate(opts__4984__auto__, children__4985__auto__);
  };
  br.cljs$core$IFn$_invoke$arity$variadic = br__delegate;
  return br;
}();
om.dom.button = function() {
  var button__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.button.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var button = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return button__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  button.cljs$lang$maxFixedArity = 1;
  button.cljs$lang$applyTo = function(arglist__10585) {
    var opts__4984__auto__ = cljs.core.first(arglist__10585);
    var children__4985__auto__ = cljs.core.rest(arglist__10585);
    return button__delegate(opts__4984__auto__, children__4985__auto__);
  };
  button.cljs$core$IFn$_invoke$arity$variadic = button__delegate;
  return button;
}();
om.dom.canvas = function() {
  var canvas__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.canvas.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var canvas = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return canvas__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  canvas.cljs$lang$maxFixedArity = 1;
  canvas.cljs$lang$applyTo = function(arglist__10586) {
    var opts__4984__auto__ = cljs.core.first(arglist__10586);
    var children__4985__auto__ = cljs.core.rest(arglist__10586);
    return canvas__delegate(opts__4984__auto__, children__4985__auto__);
  };
  canvas.cljs$core$IFn$_invoke$arity$variadic = canvas__delegate;
  return canvas;
}();
om.dom.caption = function() {
  var caption__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.caption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var caption = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return caption__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  caption.cljs$lang$maxFixedArity = 1;
  caption.cljs$lang$applyTo = function(arglist__10587) {
    var opts__4984__auto__ = cljs.core.first(arglist__10587);
    var children__4985__auto__ = cljs.core.rest(arglist__10587);
    return caption__delegate(opts__4984__auto__, children__4985__auto__);
  };
  caption.cljs$core$IFn$_invoke$arity$variadic = caption__delegate;
  return caption;
}();
om.dom.cite = function() {
  var cite__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.cite.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var cite = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return cite__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  cite.cljs$lang$maxFixedArity = 1;
  cite.cljs$lang$applyTo = function(arglist__10588) {
    var opts__4984__auto__ = cljs.core.first(arglist__10588);
    var children__4985__auto__ = cljs.core.rest(arglist__10588);
    return cite__delegate(opts__4984__auto__, children__4985__auto__);
  };
  cite.cljs$core$IFn$_invoke$arity$variadic = cite__delegate;
  return cite;
}();
om.dom.code = function() {
  var code__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.code.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var code = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return code__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  code.cljs$lang$maxFixedArity = 1;
  code.cljs$lang$applyTo = function(arglist__10589) {
    var opts__4984__auto__ = cljs.core.first(arglist__10589);
    var children__4985__auto__ = cljs.core.rest(arglist__10589);
    return code__delegate(opts__4984__auto__, children__4985__auto__);
  };
  code.cljs$core$IFn$_invoke$arity$variadic = code__delegate;
  return code;
}();
om.dom.col = function() {
  var col__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.col.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var col = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return col__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  col.cljs$lang$maxFixedArity = 1;
  col.cljs$lang$applyTo = function(arglist__10590) {
    var opts__4984__auto__ = cljs.core.first(arglist__10590);
    var children__4985__auto__ = cljs.core.rest(arglist__10590);
    return col__delegate(opts__4984__auto__, children__4985__auto__);
  };
  col.cljs$core$IFn$_invoke$arity$variadic = col__delegate;
  return col;
}();
om.dom.colgroup = function() {
  var colgroup__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.colgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var colgroup = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return colgroup__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  colgroup.cljs$lang$maxFixedArity = 1;
  colgroup.cljs$lang$applyTo = function(arglist__10591) {
    var opts__4984__auto__ = cljs.core.first(arglist__10591);
    var children__4985__auto__ = cljs.core.rest(arglist__10591);
    return colgroup__delegate(opts__4984__auto__, children__4985__auto__);
  };
  colgroup.cljs$core$IFn$_invoke$arity$variadic = colgroup__delegate;
  return colgroup;
}();
om.dom.data = function() {
  var data__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.data.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var data = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return data__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  data.cljs$lang$maxFixedArity = 1;
  data.cljs$lang$applyTo = function(arglist__10592) {
    var opts__4984__auto__ = cljs.core.first(arglist__10592);
    var children__4985__auto__ = cljs.core.rest(arglist__10592);
    return data__delegate(opts__4984__auto__, children__4985__auto__);
  };
  data.cljs$core$IFn$_invoke$arity$variadic = data__delegate;
  return data;
}();
om.dom.datalist = function() {
  var datalist__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.datalist.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var datalist = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return datalist__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  datalist.cljs$lang$maxFixedArity = 1;
  datalist.cljs$lang$applyTo = function(arglist__10593) {
    var opts__4984__auto__ = cljs.core.first(arglist__10593);
    var children__4985__auto__ = cljs.core.rest(arglist__10593);
    return datalist__delegate(opts__4984__auto__, children__4985__auto__);
  };
  datalist.cljs$core$IFn$_invoke$arity$variadic = datalist__delegate;
  return datalist;
}();
om.dom.dd = function() {
  var dd__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.dd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var dd = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dd__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  dd.cljs$lang$maxFixedArity = 1;
  dd.cljs$lang$applyTo = function(arglist__10594) {
    var opts__4984__auto__ = cljs.core.first(arglist__10594);
    var children__4985__auto__ = cljs.core.rest(arglist__10594);
    return dd__delegate(opts__4984__auto__, children__4985__auto__);
  };
  dd.cljs$core$IFn$_invoke$arity$variadic = dd__delegate;
  return dd;
}();
om.dom.del = function() {
  var del__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.del.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var del = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return del__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  del.cljs$lang$maxFixedArity = 1;
  del.cljs$lang$applyTo = function(arglist__10595) {
    var opts__4984__auto__ = cljs.core.first(arglist__10595);
    var children__4985__auto__ = cljs.core.rest(arglist__10595);
    return del__delegate(opts__4984__auto__, children__4985__auto__);
  };
  del.cljs$core$IFn$_invoke$arity$variadic = del__delegate;
  return del;
}();
om.dom.dfn = function() {
  var dfn__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.dfn.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var dfn = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dfn__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  dfn.cljs$lang$maxFixedArity = 1;
  dfn.cljs$lang$applyTo = function(arglist__10596) {
    var opts__4984__auto__ = cljs.core.first(arglist__10596);
    var children__4985__auto__ = cljs.core.rest(arglist__10596);
    return dfn__delegate(opts__4984__auto__, children__4985__auto__);
  };
  dfn.cljs$core$IFn$_invoke$arity$variadic = dfn__delegate;
  return dfn;
}();
om.dom.div = function() {
  var div__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.div.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var div = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return div__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  div.cljs$lang$maxFixedArity = 1;
  div.cljs$lang$applyTo = function(arglist__10597) {
    var opts__4984__auto__ = cljs.core.first(arglist__10597);
    var children__4985__auto__ = cljs.core.rest(arglist__10597);
    return div__delegate(opts__4984__auto__, children__4985__auto__);
  };
  div.cljs$core$IFn$_invoke$arity$variadic = div__delegate;
  return div;
}();
om.dom.dl = function() {
  var dl__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.dl.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var dl = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dl__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  dl.cljs$lang$maxFixedArity = 1;
  dl.cljs$lang$applyTo = function(arglist__10598) {
    var opts__4984__auto__ = cljs.core.first(arglist__10598);
    var children__4985__auto__ = cljs.core.rest(arglist__10598);
    return dl__delegate(opts__4984__auto__, children__4985__auto__);
  };
  dl.cljs$core$IFn$_invoke$arity$variadic = dl__delegate;
  return dl;
}();
om.dom.dt = function() {
  var dt__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.dt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var dt = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dt__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  dt.cljs$lang$maxFixedArity = 1;
  dt.cljs$lang$applyTo = function(arglist__10599) {
    var opts__4984__auto__ = cljs.core.first(arglist__10599);
    var children__4985__auto__ = cljs.core.rest(arglist__10599);
    return dt__delegate(opts__4984__auto__, children__4985__auto__);
  };
  dt.cljs$core$IFn$_invoke$arity$variadic = dt__delegate;
  return dt;
}();
om.dom.em = function() {
  var em__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.em.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var em = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return em__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  em.cljs$lang$maxFixedArity = 1;
  em.cljs$lang$applyTo = function(arglist__10600) {
    var opts__4984__auto__ = cljs.core.first(arglist__10600);
    var children__4985__auto__ = cljs.core.rest(arglist__10600);
    return em__delegate(opts__4984__auto__, children__4985__auto__);
  };
  em.cljs$core$IFn$_invoke$arity$variadic = em__delegate;
  return em;
}();
om.dom.embed = function() {
  var embed__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.embed.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var embed = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return embed__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  embed.cljs$lang$maxFixedArity = 1;
  embed.cljs$lang$applyTo = function(arglist__10601) {
    var opts__4984__auto__ = cljs.core.first(arglist__10601);
    var children__4985__auto__ = cljs.core.rest(arglist__10601);
    return embed__delegate(opts__4984__auto__, children__4985__auto__);
  };
  embed.cljs$core$IFn$_invoke$arity$variadic = embed__delegate;
  return embed;
}();
om.dom.fieldset = function() {
  var fieldset__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.fieldset.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var fieldset = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fieldset__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  fieldset.cljs$lang$maxFixedArity = 1;
  fieldset.cljs$lang$applyTo = function(arglist__10602) {
    var opts__4984__auto__ = cljs.core.first(arglist__10602);
    var children__4985__auto__ = cljs.core.rest(arglist__10602);
    return fieldset__delegate(opts__4984__auto__, children__4985__auto__);
  };
  fieldset.cljs$core$IFn$_invoke$arity$variadic = fieldset__delegate;
  return fieldset;
}();
om.dom.figcaption = function() {
  var figcaption__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.figcaption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var figcaption = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figcaption__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  figcaption.cljs$lang$maxFixedArity = 1;
  figcaption.cljs$lang$applyTo = function(arglist__10603) {
    var opts__4984__auto__ = cljs.core.first(arglist__10603);
    var children__4985__auto__ = cljs.core.rest(arglist__10603);
    return figcaption__delegate(opts__4984__auto__, children__4985__auto__);
  };
  figcaption.cljs$core$IFn$_invoke$arity$variadic = figcaption__delegate;
  return figcaption;
}();
om.dom.figure = function() {
  var figure__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.figure.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var figure = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figure__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  figure.cljs$lang$maxFixedArity = 1;
  figure.cljs$lang$applyTo = function(arglist__10604) {
    var opts__4984__auto__ = cljs.core.first(arglist__10604);
    var children__4985__auto__ = cljs.core.rest(arglist__10604);
    return figure__delegate(opts__4984__auto__, children__4985__auto__);
  };
  figure.cljs$core$IFn$_invoke$arity$variadic = figure__delegate;
  return figure;
}();
om.dom.footer = function() {
  var footer__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.footer.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var footer = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return footer__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  footer.cljs$lang$maxFixedArity = 1;
  footer.cljs$lang$applyTo = function(arglist__10605) {
    var opts__4984__auto__ = cljs.core.first(arglist__10605);
    var children__4985__auto__ = cljs.core.rest(arglist__10605);
    return footer__delegate(opts__4984__auto__, children__4985__auto__);
  };
  footer.cljs$core$IFn$_invoke$arity$variadic = footer__delegate;
  return footer;
}();
om.dom.form = function() {
  var form__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.form.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var form = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return form__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  form.cljs$lang$maxFixedArity = 1;
  form.cljs$lang$applyTo = function(arglist__10606) {
    var opts__4984__auto__ = cljs.core.first(arglist__10606);
    var children__4985__auto__ = cljs.core.rest(arglist__10606);
    return form__delegate(opts__4984__auto__, children__4985__auto__);
  };
  form.cljs$core$IFn$_invoke$arity$variadic = form__delegate;
  return form;
}();
om.dom.h1 = function() {
  var h1__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.h1.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var h1 = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h1__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  h1.cljs$lang$maxFixedArity = 1;
  h1.cljs$lang$applyTo = function(arglist__10607) {
    var opts__4984__auto__ = cljs.core.first(arglist__10607);
    var children__4985__auto__ = cljs.core.rest(arglist__10607);
    return h1__delegate(opts__4984__auto__, children__4985__auto__);
  };
  h1.cljs$core$IFn$_invoke$arity$variadic = h1__delegate;
  return h1;
}();
om.dom.h2 = function() {
  var h2__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.h2.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var h2 = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h2__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  h2.cljs$lang$maxFixedArity = 1;
  h2.cljs$lang$applyTo = function(arglist__10608) {
    var opts__4984__auto__ = cljs.core.first(arglist__10608);
    var children__4985__auto__ = cljs.core.rest(arglist__10608);
    return h2__delegate(opts__4984__auto__, children__4985__auto__);
  };
  h2.cljs$core$IFn$_invoke$arity$variadic = h2__delegate;
  return h2;
}();
om.dom.h3 = function() {
  var h3__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.h3.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var h3 = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h3__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  h3.cljs$lang$maxFixedArity = 1;
  h3.cljs$lang$applyTo = function(arglist__10609) {
    var opts__4984__auto__ = cljs.core.first(arglist__10609);
    var children__4985__auto__ = cljs.core.rest(arglist__10609);
    return h3__delegate(opts__4984__auto__, children__4985__auto__);
  };
  h3.cljs$core$IFn$_invoke$arity$variadic = h3__delegate;
  return h3;
}();
om.dom.h4 = function() {
  var h4__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.h4.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var h4 = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h4__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  h4.cljs$lang$maxFixedArity = 1;
  h4.cljs$lang$applyTo = function(arglist__10610) {
    var opts__4984__auto__ = cljs.core.first(arglist__10610);
    var children__4985__auto__ = cljs.core.rest(arglist__10610);
    return h4__delegate(opts__4984__auto__, children__4985__auto__);
  };
  h4.cljs$core$IFn$_invoke$arity$variadic = h4__delegate;
  return h4;
}();
om.dom.h5 = function() {
  var h5__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.h5.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var h5 = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h5__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  h5.cljs$lang$maxFixedArity = 1;
  h5.cljs$lang$applyTo = function(arglist__10611) {
    var opts__4984__auto__ = cljs.core.first(arglist__10611);
    var children__4985__auto__ = cljs.core.rest(arglist__10611);
    return h5__delegate(opts__4984__auto__, children__4985__auto__);
  };
  h5.cljs$core$IFn$_invoke$arity$variadic = h5__delegate;
  return h5;
}();
om.dom.h6 = function() {
  var h6__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.h6.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var h6 = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h6__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  h6.cljs$lang$maxFixedArity = 1;
  h6.cljs$lang$applyTo = function(arglist__10612) {
    var opts__4984__auto__ = cljs.core.first(arglist__10612);
    var children__4985__auto__ = cljs.core.rest(arglist__10612);
    return h6__delegate(opts__4984__auto__, children__4985__auto__);
  };
  h6.cljs$core$IFn$_invoke$arity$variadic = h6__delegate;
  return h6;
}();
om.dom.head = function() {
  var head__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.head.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var head = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return head__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  head.cljs$lang$maxFixedArity = 1;
  head.cljs$lang$applyTo = function(arglist__10613) {
    var opts__4984__auto__ = cljs.core.first(arglist__10613);
    var children__4985__auto__ = cljs.core.rest(arglist__10613);
    return head__delegate(opts__4984__auto__, children__4985__auto__);
  };
  head.cljs$core$IFn$_invoke$arity$variadic = head__delegate;
  return head;
}();
om.dom.header = function() {
  var header__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.header.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var header = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return header__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  header.cljs$lang$maxFixedArity = 1;
  header.cljs$lang$applyTo = function(arglist__10614) {
    var opts__4984__auto__ = cljs.core.first(arglist__10614);
    var children__4985__auto__ = cljs.core.rest(arglist__10614);
    return header__delegate(opts__4984__auto__, children__4985__auto__);
  };
  header.cljs$core$IFn$_invoke$arity$variadic = header__delegate;
  return header;
}();
om.dom.hr = function() {
  var hr__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.hr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var hr = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return hr__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  hr.cljs$lang$maxFixedArity = 1;
  hr.cljs$lang$applyTo = function(arglist__10615) {
    var opts__4984__auto__ = cljs.core.first(arglist__10615);
    var children__4985__auto__ = cljs.core.rest(arglist__10615);
    return hr__delegate(opts__4984__auto__, children__4985__auto__);
  };
  hr.cljs$core$IFn$_invoke$arity$variadic = hr__delegate;
  return hr;
}();
om.dom.html = function() {
  var html__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.html.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var html = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return html__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  html.cljs$lang$maxFixedArity = 1;
  html.cljs$lang$applyTo = function(arglist__10616) {
    var opts__4984__auto__ = cljs.core.first(arglist__10616);
    var children__4985__auto__ = cljs.core.rest(arglist__10616);
    return html__delegate(opts__4984__auto__, children__4985__auto__);
  };
  html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
  return html;
}();
om.dom.i = function() {
  var i__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.i.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var i = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return i__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  i.cljs$lang$maxFixedArity = 1;
  i.cljs$lang$applyTo = function(arglist__10617) {
    var opts__4984__auto__ = cljs.core.first(arglist__10617);
    var children__4985__auto__ = cljs.core.rest(arglist__10617);
    return i__delegate(opts__4984__auto__, children__4985__auto__);
  };
  i.cljs$core$IFn$_invoke$arity$variadic = i__delegate;
  return i;
}();
om.dom.iframe = function() {
  var iframe__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.iframe.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var iframe = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return iframe__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  iframe.cljs$lang$maxFixedArity = 1;
  iframe.cljs$lang$applyTo = function(arglist__10618) {
    var opts__4984__auto__ = cljs.core.first(arglist__10618);
    var children__4985__auto__ = cljs.core.rest(arglist__10618);
    return iframe__delegate(opts__4984__auto__, children__4985__auto__);
  };
  iframe.cljs$core$IFn$_invoke$arity$variadic = iframe__delegate;
  return iframe;
}();
om.dom.img = function() {
  var img__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.img.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var img = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return img__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  img.cljs$lang$maxFixedArity = 1;
  img.cljs$lang$applyTo = function(arglist__10619) {
    var opts__4984__auto__ = cljs.core.first(arglist__10619);
    var children__4985__auto__ = cljs.core.rest(arglist__10619);
    return img__delegate(opts__4984__auto__, children__4985__auto__);
  };
  img.cljs$core$IFn$_invoke$arity$variadic = img__delegate;
  return img;
}();
om.dom.ins = function() {
  var ins__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.ins.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var ins = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ins__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  ins.cljs$lang$maxFixedArity = 1;
  ins.cljs$lang$applyTo = function(arglist__10620) {
    var opts__4984__auto__ = cljs.core.first(arglist__10620);
    var children__4985__auto__ = cljs.core.rest(arglist__10620);
    return ins__delegate(opts__4984__auto__, children__4985__auto__);
  };
  ins.cljs$core$IFn$_invoke$arity$variadic = ins__delegate;
  return ins;
}();
om.dom.kbd = function() {
  var kbd__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.kbd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var kbd = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return kbd__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  kbd.cljs$lang$maxFixedArity = 1;
  kbd.cljs$lang$applyTo = function(arglist__10621) {
    var opts__4984__auto__ = cljs.core.first(arglist__10621);
    var children__4985__auto__ = cljs.core.rest(arglist__10621);
    return kbd__delegate(opts__4984__auto__, children__4985__auto__);
  };
  kbd.cljs$core$IFn$_invoke$arity$variadic = kbd__delegate;
  return kbd;
}();
om.dom.keygen = function() {
  var keygen__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.keygen.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var keygen = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return keygen__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  keygen.cljs$lang$maxFixedArity = 1;
  keygen.cljs$lang$applyTo = function(arglist__10622) {
    var opts__4984__auto__ = cljs.core.first(arglist__10622);
    var children__4985__auto__ = cljs.core.rest(arglist__10622);
    return keygen__delegate(opts__4984__auto__, children__4985__auto__);
  };
  keygen.cljs$core$IFn$_invoke$arity$variadic = keygen__delegate;
  return keygen;
}();
om.dom.label = function() {
  var label__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.label.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var label = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return label__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  label.cljs$lang$maxFixedArity = 1;
  label.cljs$lang$applyTo = function(arglist__10623) {
    var opts__4984__auto__ = cljs.core.first(arglist__10623);
    var children__4985__auto__ = cljs.core.rest(arglist__10623);
    return label__delegate(opts__4984__auto__, children__4985__auto__);
  };
  label.cljs$core$IFn$_invoke$arity$variadic = label__delegate;
  return label;
}();
om.dom.legend = function() {
  var legend__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.legend.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var legend = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return legend__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  legend.cljs$lang$maxFixedArity = 1;
  legend.cljs$lang$applyTo = function(arglist__10624) {
    var opts__4984__auto__ = cljs.core.first(arglist__10624);
    var children__4985__auto__ = cljs.core.rest(arglist__10624);
    return legend__delegate(opts__4984__auto__, children__4985__auto__);
  };
  legend.cljs$core$IFn$_invoke$arity$variadic = legend__delegate;
  return legend;
}();
om.dom.li = function() {
  var li__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.li.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var li = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return li__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  li.cljs$lang$maxFixedArity = 1;
  li.cljs$lang$applyTo = function(arglist__10625) {
    var opts__4984__auto__ = cljs.core.first(arglist__10625);
    var children__4985__auto__ = cljs.core.rest(arglist__10625);
    return li__delegate(opts__4984__auto__, children__4985__auto__);
  };
  li.cljs$core$IFn$_invoke$arity$variadic = li__delegate;
  return li;
}();
om.dom.link = function() {
  var link__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.link.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var link = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return link__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  link.cljs$lang$maxFixedArity = 1;
  link.cljs$lang$applyTo = function(arglist__10626) {
    var opts__4984__auto__ = cljs.core.first(arglist__10626);
    var children__4985__auto__ = cljs.core.rest(arglist__10626);
    return link__delegate(opts__4984__auto__, children__4985__auto__);
  };
  link.cljs$core$IFn$_invoke$arity$variadic = link__delegate;
  return link;
}();
om.dom.main = function() {
  var main__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.main.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var main = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return main__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  main.cljs$lang$maxFixedArity = 1;
  main.cljs$lang$applyTo = function(arglist__10627) {
    var opts__4984__auto__ = cljs.core.first(arglist__10627);
    var children__4985__auto__ = cljs.core.rest(arglist__10627);
    return main__delegate(opts__4984__auto__, children__4985__auto__);
  };
  main.cljs$core$IFn$_invoke$arity$variadic = main__delegate;
  return main;
}();
om.dom.map = function() {
  var map__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.map.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var map = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return map__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  map.cljs$lang$maxFixedArity = 1;
  map.cljs$lang$applyTo = function(arglist__10628) {
    var opts__4984__auto__ = cljs.core.first(arglist__10628);
    var children__4985__auto__ = cljs.core.rest(arglist__10628);
    return map__delegate(opts__4984__auto__, children__4985__auto__);
  };
  map.cljs$core$IFn$_invoke$arity$variadic = map__delegate;
  return map;
}();
om.dom.mark = function() {
  var mark__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.mark.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var mark = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mark__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  mark.cljs$lang$maxFixedArity = 1;
  mark.cljs$lang$applyTo = function(arglist__10629) {
    var opts__4984__auto__ = cljs.core.first(arglist__10629);
    var children__4985__auto__ = cljs.core.rest(arglist__10629);
    return mark__delegate(opts__4984__auto__, children__4985__auto__);
  };
  mark.cljs$core$IFn$_invoke$arity$variadic = mark__delegate;
  return mark;
}();
om.dom.menu = function() {
  var menu__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.menu.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var menu = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menu__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  menu.cljs$lang$maxFixedArity = 1;
  menu.cljs$lang$applyTo = function(arglist__10630) {
    var opts__4984__auto__ = cljs.core.first(arglist__10630);
    var children__4985__auto__ = cljs.core.rest(arglist__10630);
    return menu__delegate(opts__4984__auto__, children__4985__auto__);
  };
  menu.cljs$core$IFn$_invoke$arity$variadic = menu__delegate;
  return menu;
}();
om.dom.menuitem = function() {
  var menuitem__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.menuitem.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var menuitem = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menuitem__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  menuitem.cljs$lang$maxFixedArity = 1;
  menuitem.cljs$lang$applyTo = function(arglist__10631) {
    var opts__4984__auto__ = cljs.core.first(arglist__10631);
    var children__4985__auto__ = cljs.core.rest(arglist__10631);
    return menuitem__delegate(opts__4984__auto__, children__4985__auto__);
  };
  menuitem.cljs$core$IFn$_invoke$arity$variadic = menuitem__delegate;
  return menuitem;
}();
om.dom.meta = function() {
  var meta__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.meta.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var meta = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meta__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  meta.cljs$lang$maxFixedArity = 1;
  meta.cljs$lang$applyTo = function(arglist__10632) {
    var opts__4984__auto__ = cljs.core.first(arglist__10632);
    var children__4985__auto__ = cljs.core.rest(arglist__10632);
    return meta__delegate(opts__4984__auto__, children__4985__auto__);
  };
  meta.cljs$core$IFn$_invoke$arity$variadic = meta__delegate;
  return meta;
}();
om.dom.meter = function() {
  var meter__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.meter.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var meter = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meter__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  meter.cljs$lang$maxFixedArity = 1;
  meter.cljs$lang$applyTo = function(arglist__10633) {
    var opts__4984__auto__ = cljs.core.first(arglist__10633);
    var children__4985__auto__ = cljs.core.rest(arglist__10633);
    return meter__delegate(opts__4984__auto__, children__4985__auto__);
  };
  meter.cljs$core$IFn$_invoke$arity$variadic = meter__delegate;
  return meter;
}();
om.dom.nav = function() {
  var nav__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.nav.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var nav = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return nav__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  nav.cljs$lang$maxFixedArity = 1;
  nav.cljs$lang$applyTo = function(arglist__10634) {
    var opts__4984__auto__ = cljs.core.first(arglist__10634);
    var children__4985__auto__ = cljs.core.rest(arglist__10634);
    return nav__delegate(opts__4984__auto__, children__4985__auto__);
  };
  nav.cljs$core$IFn$_invoke$arity$variadic = nav__delegate;
  return nav;
}();
om.dom.noscript = function() {
  var noscript__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.noscript.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var noscript = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return noscript__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  noscript.cljs$lang$maxFixedArity = 1;
  noscript.cljs$lang$applyTo = function(arglist__10635) {
    var opts__4984__auto__ = cljs.core.first(arglist__10635);
    var children__4985__auto__ = cljs.core.rest(arglist__10635);
    return noscript__delegate(opts__4984__auto__, children__4985__auto__);
  };
  noscript.cljs$core$IFn$_invoke$arity$variadic = noscript__delegate;
  return noscript;
}();
om.dom.object = function() {
  var object__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.object.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var object = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return object__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  object.cljs$lang$maxFixedArity = 1;
  object.cljs$lang$applyTo = function(arglist__10636) {
    var opts__4984__auto__ = cljs.core.first(arglist__10636);
    var children__4985__auto__ = cljs.core.rest(arglist__10636);
    return object__delegate(opts__4984__auto__, children__4985__auto__);
  };
  object.cljs$core$IFn$_invoke$arity$variadic = object__delegate;
  return object;
}();
om.dom.ol = function() {
  var ol__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.ol.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var ol = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ol__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  ol.cljs$lang$maxFixedArity = 1;
  ol.cljs$lang$applyTo = function(arglist__10637) {
    var opts__4984__auto__ = cljs.core.first(arglist__10637);
    var children__4985__auto__ = cljs.core.rest(arglist__10637);
    return ol__delegate(opts__4984__auto__, children__4985__auto__);
  };
  ol.cljs$core$IFn$_invoke$arity$variadic = ol__delegate;
  return ol;
}();
om.dom.optgroup = function() {
  var optgroup__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.optgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var optgroup = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return optgroup__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  optgroup.cljs$lang$maxFixedArity = 1;
  optgroup.cljs$lang$applyTo = function(arglist__10638) {
    var opts__4984__auto__ = cljs.core.first(arglist__10638);
    var children__4985__auto__ = cljs.core.rest(arglist__10638);
    return optgroup__delegate(opts__4984__auto__, children__4985__auto__);
  };
  optgroup.cljs$core$IFn$_invoke$arity$variadic = optgroup__delegate;
  return optgroup;
}();
om.dom.output = function() {
  var output__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.output.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var output = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return output__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  output.cljs$lang$maxFixedArity = 1;
  output.cljs$lang$applyTo = function(arglist__10639) {
    var opts__4984__auto__ = cljs.core.first(arglist__10639);
    var children__4985__auto__ = cljs.core.rest(arglist__10639);
    return output__delegate(opts__4984__auto__, children__4985__auto__);
  };
  output.cljs$core$IFn$_invoke$arity$variadic = output__delegate;
  return output;
}();
om.dom.p = function() {
  var p__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.p.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var p = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return p__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  p.cljs$lang$maxFixedArity = 1;
  p.cljs$lang$applyTo = function(arglist__10640) {
    var opts__4984__auto__ = cljs.core.first(arglist__10640);
    var children__4985__auto__ = cljs.core.rest(arglist__10640);
    return p__delegate(opts__4984__auto__, children__4985__auto__);
  };
  p.cljs$core$IFn$_invoke$arity$variadic = p__delegate;
  return p;
}();
om.dom.param = function() {
  var param__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.param.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var param = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return param__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  param.cljs$lang$maxFixedArity = 1;
  param.cljs$lang$applyTo = function(arglist__10641) {
    var opts__4984__auto__ = cljs.core.first(arglist__10641);
    var children__4985__auto__ = cljs.core.rest(arglist__10641);
    return param__delegate(opts__4984__auto__, children__4985__auto__);
  };
  param.cljs$core$IFn$_invoke$arity$variadic = param__delegate;
  return param;
}();
om.dom.pre = function() {
  var pre__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.pre.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var pre = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return pre__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  pre.cljs$lang$maxFixedArity = 1;
  pre.cljs$lang$applyTo = function(arglist__10642) {
    var opts__4984__auto__ = cljs.core.first(arglist__10642);
    var children__4985__auto__ = cljs.core.rest(arglist__10642);
    return pre__delegate(opts__4984__auto__, children__4985__auto__);
  };
  pre.cljs$core$IFn$_invoke$arity$variadic = pre__delegate;
  return pre;
}();
om.dom.progress = function() {
  var progress__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.progress.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var progress = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return progress__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  progress.cljs$lang$maxFixedArity = 1;
  progress.cljs$lang$applyTo = function(arglist__10643) {
    var opts__4984__auto__ = cljs.core.first(arglist__10643);
    var children__4985__auto__ = cljs.core.rest(arglist__10643);
    return progress__delegate(opts__4984__auto__, children__4985__auto__);
  };
  progress.cljs$core$IFn$_invoke$arity$variadic = progress__delegate;
  return progress;
}();
om.dom.q = function() {
  var q__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.q.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var q = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return q__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  q.cljs$lang$maxFixedArity = 1;
  q.cljs$lang$applyTo = function(arglist__10644) {
    var opts__4984__auto__ = cljs.core.first(arglist__10644);
    var children__4985__auto__ = cljs.core.rest(arglist__10644);
    return q__delegate(opts__4984__auto__, children__4985__auto__);
  };
  q.cljs$core$IFn$_invoke$arity$variadic = q__delegate;
  return q;
}();
om.dom.rp = function() {
  var rp__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.rp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var rp = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rp__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  rp.cljs$lang$maxFixedArity = 1;
  rp.cljs$lang$applyTo = function(arglist__10645) {
    var opts__4984__auto__ = cljs.core.first(arglist__10645);
    var children__4985__auto__ = cljs.core.rest(arglist__10645);
    return rp__delegate(opts__4984__auto__, children__4985__auto__);
  };
  rp.cljs$core$IFn$_invoke$arity$variadic = rp__delegate;
  return rp;
}();
om.dom.rt = function() {
  var rt__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.rt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var rt = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rt__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  rt.cljs$lang$maxFixedArity = 1;
  rt.cljs$lang$applyTo = function(arglist__10646) {
    var opts__4984__auto__ = cljs.core.first(arglist__10646);
    var children__4985__auto__ = cljs.core.rest(arglist__10646);
    return rt__delegate(opts__4984__auto__, children__4985__auto__);
  };
  rt.cljs$core$IFn$_invoke$arity$variadic = rt__delegate;
  return rt;
}();
om.dom.ruby = function() {
  var ruby__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.ruby.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var ruby = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ruby__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  ruby.cljs$lang$maxFixedArity = 1;
  ruby.cljs$lang$applyTo = function(arglist__10647) {
    var opts__4984__auto__ = cljs.core.first(arglist__10647);
    var children__4985__auto__ = cljs.core.rest(arglist__10647);
    return ruby__delegate(opts__4984__auto__, children__4985__auto__);
  };
  ruby.cljs$core$IFn$_invoke$arity$variadic = ruby__delegate;
  return ruby;
}();
om.dom.s = function() {
  var s__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.s.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var s = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return s__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  s.cljs$lang$maxFixedArity = 1;
  s.cljs$lang$applyTo = function(arglist__10648) {
    var opts__4984__auto__ = cljs.core.first(arglist__10648);
    var children__4985__auto__ = cljs.core.rest(arglist__10648);
    return s__delegate(opts__4984__auto__, children__4985__auto__);
  };
  s.cljs$core$IFn$_invoke$arity$variadic = s__delegate;
  return s;
}();
om.dom.samp = function() {
  var samp__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.samp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var samp = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return samp__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  samp.cljs$lang$maxFixedArity = 1;
  samp.cljs$lang$applyTo = function(arglist__10649) {
    var opts__4984__auto__ = cljs.core.first(arglist__10649);
    var children__4985__auto__ = cljs.core.rest(arglist__10649);
    return samp__delegate(opts__4984__auto__, children__4985__auto__);
  };
  samp.cljs$core$IFn$_invoke$arity$variadic = samp__delegate;
  return samp;
}();
om.dom.script = function() {
  var script__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.script.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var script = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return script__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  script.cljs$lang$maxFixedArity = 1;
  script.cljs$lang$applyTo = function(arglist__10650) {
    var opts__4984__auto__ = cljs.core.first(arglist__10650);
    var children__4985__auto__ = cljs.core.rest(arglist__10650);
    return script__delegate(opts__4984__auto__, children__4985__auto__);
  };
  script.cljs$core$IFn$_invoke$arity$variadic = script__delegate;
  return script;
}();
om.dom.section = function() {
  var section__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.section.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var section = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return section__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  section.cljs$lang$maxFixedArity = 1;
  section.cljs$lang$applyTo = function(arglist__10651) {
    var opts__4984__auto__ = cljs.core.first(arglist__10651);
    var children__4985__auto__ = cljs.core.rest(arglist__10651);
    return section__delegate(opts__4984__auto__, children__4985__auto__);
  };
  section.cljs$core$IFn$_invoke$arity$variadic = section__delegate;
  return section;
}();
om.dom.select = function() {
  var select__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.select.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var select = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return select__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  select.cljs$lang$maxFixedArity = 1;
  select.cljs$lang$applyTo = function(arglist__10652) {
    var opts__4984__auto__ = cljs.core.first(arglist__10652);
    var children__4985__auto__ = cljs.core.rest(arglist__10652);
    return select__delegate(opts__4984__auto__, children__4985__auto__);
  };
  select.cljs$core$IFn$_invoke$arity$variadic = select__delegate;
  return select;
}();
om.dom.small = function() {
  var small__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.small.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var small = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return small__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  small.cljs$lang$maxFixedArity = 1;
  small.cljs$lang$applyTo = function(arglist__10653) {
    var opts__4984__auto__ = cljs.core.first(arglist__10653);
    var children__4985__auto__ = cljs.core.rest(arglist__10653);
    return small__delegate(opts__4984__auto__, children__4985__auto__);
  };
  small.cljs$core$IFn$_invoke$arity$variadic = small__delegate;
  return small;
}();
om.dom.source = function() {
  var source__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.source.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var source = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return source__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  source.cljs$lang$maxFixedArity = 1;
  source.cljs$lang$applyTo = function(arglist__10654) {
    var opts__4984__auto__ = cljs.core.first(arglist__10654);
    var children__4985__auto__ = cljs.core.rest(arglist__10654);
    return source__delegate(opts__4984__auto__, children__4985__auto__);
  };
  source.cljs$core$IFn$_invoke$arity$variadic = source__delegate;
  return source;
}();
om.dom.span = function() {
  var span__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.span.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var span = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return span__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  span.cljs$lang$maxFixedArity = 1;
  span.cljs$lang$applyTo = function(arglist__10655) {
    var opts__4984__auto__ = cljs.core.first(arglist__10655);
    var children__4985__auto__ = cljs.core.rest(arglist__10655);
    return span__delegate(opts__4984__auto__, children__4985__auto__);
  };
  span.cljs$core$IFn$_invoke$arity$variadic = span__delegate;
  return span;
}();
om.dom.strong = function() {
  var strong__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.strong.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var strong = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return strong__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  strong.cljs$lang$maxFixedArity = 1;
  strong.cljs$lang$applyTo = function(arglist__10656) {
    var opts__4984__auto__ = cljs.core.first(arglist__10656);
    var children__4985__auto__ = cljs.core.rest(arglist__10656);
    return strong__delegate(opts__4984__auto__, children__4985__auto__);
  };
  strong.cljs$core$IFn$_invoke$arity$variadic = strong__delegate;
  return strong;
}();
om.dom.style = function() {
  var style__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.style.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var style = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return style__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  style.cljs$lang$maxFixedArity = 1;
  style.cljs$lang$applyTo = function(arglist__10657) {
    var opts__4984__auto__ = cljs.core.first(arglist__10657);
    var children__4985__auto__ = cljs.core.rest(arglist__10657);
    return style__delegate(opts__4984__auto__, children__4985__auto__);
  };
  style.cljs$core$IFn$_invoke$arity$variadic = style__delegate;
  return style;
}();
om.dom.sub = function() {
  var sub__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.sub.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var sub = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sub__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  sub.cljs$lang$maxFixedArity = 1;
  sub.cljs$lang$applyTo = function(arglist__10658) {
    var opts__4984__auto__ = cljs.core.first(arglist__10658);
    var children__4985__auto__ = cljs.core.rest(arglist__10658);
    return sub__delegate(opts__4984__auto__, children__4985__auto__);
  };
  sub.cljs$core$IFn$_invoke$arity$variadic = sub__delegate;
  return sub;
}();
om.dom.summary = function() {
  var summary__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.summary.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var summary = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return summary__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  summary.cljs$lang$maxFixedArity = 1;
  summary.cljs$lang$applyTo = function(arglist__10659) {
    var opts__4984__auto__ = cljs.core.first(arglist__10659);
    var children__4985__auto__ = cljs.core.rest(arglist__10659);
    return summary__delegate(opts__4984__auto__, children__4985__auto__);
  };
  summary.cljs$core$IFn$_invoke$arity$variadic = summary__delegate;
  return summary;
}();
om.dom.sup = function() {
  var sup__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.sup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var sup = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sup__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  sup.cljs$lang$maxFixedArity = 1;
  sup.cljs$lang$applyTo = function(arglist__10660) {
    var opts__4984__auto__ = cljs.core.first(arglist__10660);
    var children__4985__auto__ = cljs.core.rest(arglist__10660);
    return sup__delegate(opts__4984__auto__, children__4985__auto__);
  };
  sup.cljs$core$IFn$_invoke$arity$variadic = sup__delegate;
  return sup;
}();
om.dom.table = function() {
  var table__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.table.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var table = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return table__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  table.cljs$lang$maxFixedArity = 1;
  table.cljs$lang$applyTo = function(arglist__10661) {
    var opts__4984__auto__ = cljs.core.first(arglist__10661);
    var children__4985__auto__ = cljs.core.rest(arglist__10661);
    return table__delegate(opts__4984__auto__, children__4985__auto__);
  };
  table.cljs$core$IFn$_invoke$arity$variadic = table__delegate;
  return table;
}();
om.dom.tbody = function() {
  var tbody__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.tbody.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var tbody = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tbody__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  tbody.cljs$lang$maxFixedArity = 1;
  tbody.cljs$lang$applyTo = function(arglist__10662) {
    var opts__4984__auto__ = cljs.core.first(arglist__10662);
    var children__4985__auto__ = cljs.core.rest(arglist__10662);
    return tbody__delegate(opts__4984__auto__, children__4985__auto__);
  };
  tbody.cljs$core$IFn$_invoke$arity$variadic = tbody__delegate;
  return tbody;
}();
om.dom.td = function() {
  var td__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.td.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var td = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return td__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  td.cljs$lang$maxFixedArity = 1;
  td.cljs$lang$applyTo = function(arglist__10663) {
    var opts__4984__auto__ = cljs.core.first(arglist__10663);
    var children__4985__auto__ = cljs.core.rest(arglist__10663);
    return td__delegate(opts__4984__auto__, children__4985__auto__);
  };
  td.cljs$core$IFn$_invoke$arity$variadic = td__delegate;
  return td;
}();
om.dom.tfoot = function() {
  var tfoot__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.tfoot.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var tfoot = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tfoot__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  tfoot.cljs$lang$maxFixedArity = 1;
  tfoot.cljs$lang$applyTo = function(arglist__10664) {
    var opts__4984__auto__ = cljs.core.first(arglist__10664);
    var children__4985__auto__ = cljs.core.rest(arglist__10664);
    return tfoot__delegate(opts__4984__auto__, children__4985__auto__);
  };
  tfoot.cljs$core$IFn$_invoke$arity$variadic = tfoot__delegate;
  return tfoot;
}();
om.dom.th = function() {
  var th__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.th.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var th = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return th__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  th.cljs$lang$maxFixedArity = 1;
  th.cljs$lang$applyTo = function(arglist__10665) {
    var opts__4984__auto__ = cljs.core.first(arglist__10665);
    var children__4985__auto__ = cljs.core.rest(arglist__10665);
    return th__delegate(opts__4984__auto__, children__4985__auto__);
  };
  th.cljs$core$IFn$_invoke$arity$variadic = th__delegate;
  return th;
}();
om.dom.thead = function() {
  var thead__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.thead.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var thead = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return thead__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  thead.cljs$lang$maxFixedArity = 1;
  thead.cljs$lang$applyTo = function(arglist__10666) {
    var opts__4984__auto__ = cljs.core.first(arglist__10666);
    var children__4985__auto__ = cljs.core.rest(arglist__10666);
    return thead__delegate(opts__4984__auto__, children__4985__auto__);
  };
  thead.cljs$core$IFn$_invoke$arity$variadic = thead__delegate;
  return thead;
}();
om.dom.time = function() {
  var time__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.time.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var time = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return time__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  time.cljs$lang$maxFixedArity = 1;
  time.cljs$lang$applyTo = function(arglist__10667) {
    var opts__4984__auto__ = cljs.core.first(arglist__10667);
    var children__4985__auto__ = cljs.core.rest(arglist__10667);
    return time__delegate(opts__4984__auto__, children__4985__auto__);
  };
  time.cljs$core$IFn$_invoke$arity$variadic = time__delegate;
  return time;
}();
om.dom.title = function() {
  var title__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.title.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var title = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return title__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  title.cljs$lang$maxFixedArity = 1;
  title.cljs$lang$applyTo = function(arglist__10668) {
    var opts__4984__auto__ = cljs.core.first(arglist__10668);
    var children__4985__auto__ = cljs.core.rest(arglist__10668);
    return title__delegate(opts__4984__auto__, children__4985__auto__);
  };
  title.cljs$core$IFn$_invoke$arity$variadic = title__delegate;
  return title;
}();
om.dom.tr = function() {
  var tr__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.tr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var tr = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tr__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  tr.cljs$lang$maxFixedArity = 1;
  tr.cljs$lang$applyTo = function(arglist__10669) {
    var opts__4984__auto__ = cljs.core.first(arglist__10669);
    var children__4985__auto__ = cljs.core.rest(arglist__10669);
    return tr__delegate(opts__4984__auto__, children__4985__auto__);
  };
  tr.cljs$core$IFn$_invoke$arity$variadic = tr__delegate;
  return tr;
}();
om.dom.track = function() {
  var track__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.track.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var track = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return track__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  track.cljs$lang$maxFixedArity = 1;
  track.cljs$lang$applyTo = function(arglist__10670) {
    var opts__4984__auto__ = cljs.core.first(arglist__10670);
    var children__4985__auto__ = cljs.core.rest(arglist__10670);
    return track__delegate(opts__4984__auto__, children__4985__auto__);
  };
  track.cljs$core$IFn$_invoke$arity$variadic = track__delegate;
  return track;
}();
om.dom.u = function() {
  var u__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.u.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var u = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return u__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  u.cljs$lang$maxFixedArity = 1;
  u.cljs$lang$applyTo = function(arglist__10671) {
    var opts__4984__auto__ = cljs.core.first(arglist__10671);
    var children__4985__auto__ = cljs.core.rest(arglist__10671);
    return u__delegate(opts__4984__auto__, children__4985__auto__);
  };
  u.cljs$core$IFn$_invoke$arity$variadic = u__delegate;
  return u;
}();
om.dom.ul = function() {
  var ul__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.ul.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var ul = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ul__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  ul.cljs$lang$maxFixedArity = 1;
  ul.cljs$lang$applyTo = function(arglist__10672) {
    var opts__4984__auto__ = cljs.core.first(arglist__10672);
    var children__4985__auto__ = cljs.core.rest(arglist__10672);
    return ul__delegate(opts__4984__auto__, children__4985__auto__);
  };
  ul.cljs$core$IFn$_invoke$arity$variadic = ul__delegate;
  return ul;
}();
om.dom.var$ = function() {
  var var$__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.var$.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var var$ = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return var$__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  var$.cljs$lang$maxFixedArity = 1;
  var$.cljs$lang$applyTo = function(arglist__10673) {
    var opts__4984__auto__ = cljs.core.first(arglist__10673);
    var children__4985__auto__ = cljs.core.rest(arglist__10673);
    return var$__delegate(opts__4984__auto__, children__4985__auto__);
  };
  var$.cljs$core$IFn$_invoke$arity$variadic = var$__delegate;
  return var$;
}();
om.dom.video = function() {
  var video__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.video.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var video = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return video__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  video.cljs$lang$maxFixedArity = 1;
  video.cljs$lang$applyTo = function(arglist__10674) {
    var opts__4984__auto__ = cljs.core.first(arglist__10674);
    var children__4985__auto__ = cljs.core.rest(arglist__10674);
    return video__delegate(opts__4984__auto__, children__4985__auto__);
  };
  video.cljs$core$IFn$_invoke$arity$variadic = video__delegate;
  return video;
}();
om.dom.wbr = function() {
  var wbr__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.wbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var wbr = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return wbr__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  wbr.cljs$lang$maxFixedArity = 1;
  wbr.cljs$lang$applyTo = function(arglist__10675) {
    var opts__4984__auto__ = cljs.core.first(arglist__10675);
    var children__4985__auto__ = cljs.core.rest(arglist__10675);
    return wbr__delegate(opts__4984__auto__, children__4985__auto__);
  };
  wbr.cljs$core$IFn$_invoke$arity$variadic = wbr__delegate;
  return wbr;
}();
om.dom.circle = function() {
  var circle__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.circle.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var circle = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return circle__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  circle.cljs$lang$maxFixedArity = 1;
  circle.cljs$lang$applyTo = function(arglist__10676) {
    var opts__4984__auto__ = cljs.core.first(arglist__10676);
    var children__4985__auto__ = cljs.core.rest(arglist__10676);
    return circle__delegate(opts__4984__auto__, children__4985__auto__);
  };
  circle.cljs$core$IFn$_invoke$arity$variadic = circle__delegate;
  return circle;
}();
om.dom.g = function() {
  var g__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.g.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var g = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return g__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  g.cljs$lang$maxFixedArity = 1;
  g.cljs$lang$applyTo = function(arglist__10677) {
    var opts__4984__auto__ = cljs.core.first(arglist__10677);
    var children__4985__auto__ = cljs.core.rest(arglist__10677);
    return g__delegate(opts__4984__auto__, children__4985__auto__);
  };
  g.cljs$core$IFn$_invoke$arity$variadic = g__delegate;
  return g;
}();
om.dom.line = function() {
  var line__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.line.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var line = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return line__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  line.cljs$lang$maxFixedArity = 1;
  line.cljs$lang$applyTo = function(arglist__10678) {
    var opts__4984__auto__ = cljs.core.first(arglist__10678);
    var children__4985__auto__ = cljs.core.rest(arglist__10678);
    return line__delegate(opts__4984__auto__, children__4985__auto__);
  };
  line.cljs$core$IFn$_invoke$arity$variadic = line__delegate;
  return line;
}();
om.dom.path = function() {
  var path__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.path.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var path = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return path__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  path.cljs$lang$maxFixedArity = 1;
  path.cljs$lang$applyTo = function(arglist__10679) {
    var opts__4984__auto__ = cljs.core.first(arglist__10679);
    var children__4985__auto__ = cljs.core.rest(arglist__10679);
    return path__delegate(opts__4984__auto__, children__4985__auto__);
  };
  path.cljs$core$IFn$_invoke$arity$variadic = path__delegate;
  return path;
}();
om.dom.polyline = function() {
  var polyline__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.polyline.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var polyline = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polyline__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  polyline.cljs$lang$maxFixedArity = 1;
  polyline.cljs$lang$applyTo = function(arglist__10680) {
    var opts__4984__auto__ = cljs.core.first(arglist__10680);
    var children__4985__auto__ = cljs.core.rest(arglist__10680);
    return polyline__delegate(opts__4984__auto__, children__4985__auto__);
  };
  polyline.cljs$core$IFn$_invoke$arity$variadic = polyline__delegate;
  return polyline;
}();
om.dom.rect = function() {
  var rect__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.rect.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var rect = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rect__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  rect.cljs$lang$maxFixedArity = 1;
  rect.cljs$lang$applyTo = function(arglist__10681) {
    var opts__4984__auto__ = cljs.core.first(arglist__10681);
    var children__4985__auto__ = cljs.core.rest(arglist__10681);
    return rect__delegate(opts__4984__auto__, children__4985__auto__);
  };
  rect.cljs$core$IFn$_invoke$arity$variadic = rect__delegate;
  return rect;
}();
om.dom.svg = function() {
  var svg__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.svg.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var svg = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return svg__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  svg.cljs$lang$maxFixedArity = 1;
  svg.cljs$lang$applyTo = function(arglist__10682) {
    var opts__4984__auto__ = cljs.core.first(arglist__10682);
    var children__4985__auto__ = cljs.core.rest(arglist__10682);
    return svg__delegate(opts__4984__auto__, children__4985__auto__);
  };
  svg.cljs$core$IFn$_invoke$arity$variadic = svg__delegate;
  return svg;
}();
om.dom.text = function() {
  var text__delegate = function(opts__4984__auto__, children__4985__auto__) {
    return React.DOM.text.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__4984__auto__, children__4985__auto__)));
  };
  var text = function(opts__4984__auto__, var_args) {
    var children__4985__auto__ = null;
    if (arguments.length > 1) {
      children__4985__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return text__delegate.call(this, opts__4984__auto__, children__4985__auto__);
  };
  text.cljs$lang$maxFixedArity = 1;
  text.cljs$lang$applyTo = function(arglist__10683) {
    var opts__4984__auto__ = cljs.core.first(arglist__10683);
    var children__4985__auto__ = cljs.core.rest(arglist__10683);
    return text__delegate(opts__4984__auto__, children__4985__auto__);
  };
  text.cljs$core$IFn$_invoke$arity$variadic = text__delegate;
  return text;
}();
om.dom.wrap_form_element = function wrap_form_element(ctor, display_name) {
  return React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }, "getDisplayName":function() {
    return display_name;
  }});
};
om.dom.input = om.dom.wrap_form_element.call(null, React.DOM.input, "input");
om.dom.textarea = om.dom.wrap_form_element.call(null, React.DOM.textarea, "textarea");
om.dom.option = om.dom.wrap_form_element.call(null, React.DOM.option, "option");
om.dom.render = function render(component, el) {
  return React.renderComponent(component, el);
};
om.dom.render_to_str = function render_to_str(c) {
  return React.renderComponentToString(c);
};
goog.provide("goog.ui.IdGenerator");
goog.ui.IdGenerator = function() {
};
goog.addSingletonGetter(goog.ui.IdGenerator);
goog.ui.IdGenerator.prototype.nextId_ = 0;
goog.ui.IdGenerator.prototype.getNextUniqueId = function() {
  return ":" + (this.nextId_++).toString(36);
};
goog.provide("om.core");
goog.require("cljs.core");
goog.require("goog.ui.IdGenerator");
goog.require("om.dom");
goog.require("om.dom");
om.core._STAR_read_enabled_STAR_ = false;
om.core._STAR_parent_STAR_ = null;
om.core._STAR_instrument_STAR_ = null;
om.core.IDisplayName = function() {
  var obj10429 = {};
  return obj10429;
}();
om.core.display_name = function display_name(this$) {
  if (function() {
    var and__3450__auto__ = this$;
    if (and__3450__auto__) {
      return this$.om$core$IDisplayName$display_name$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return this$.om$core$IDisplayName$display_name$arity$1(this$);
  } else {
    var x__4089__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3462__auto__ = om.core.display_name[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = om.core.display_name["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDisplayName.display-name", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IInitState = function() {
  var obj10431 = {};
  return obj10431;
}();
om.core.init_state = function init_state(this$) {
  if (function() {
    var and__3450__auto__ = this$;
    if (and__3450__auto__) {
      return this$.om$core$IInitState$init_state$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return this$.om$core$IInitState$init_state$arity$1(this$);
  } else {
    var x__4089__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3462__auto__ = om.core.init_state[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = om.core.init_state["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInitState.init-state", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IShouldUpdate = function() {
  var obj10433 = {};
  return obj10433;
}();
om.core.should_update = function should_update(this$, next_props, next_state) {
  if (function() {
    var and__3450__auto__ = this$;
    if (and__3450__auto__) {
      return this$.om$core$IShouldUpdate$should_update$arity$3;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return this$.om$core$IShouldUpdate$should_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4089__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3462__auto__ = om.core.should_update[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = om.core.should_update["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IShouldUpdate.should-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IWillMount = function() {
  var obj10435 = {};
  return obj10435;
}();
om.core.will_mount = function will_mount(this$) {
  if (function() {
    var and__3450__auto__ = this$;
    if (and__3450__auto__) {
      return this$.om$core$IWillMount$will_mount$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return this$.om$core$IWillMount$will_mount$arity$1(this$);
  } else {
    var x__4089__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3462__auto__ = om.core.will_mount[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = om.core.will_mount["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillMount.will-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IDidMount = function() {
  var obj10437 = {};
  return obj10437;
}();
om.core.did_mount = function did_mount(this$) {
  if (function() {
    var and__3450__auto__ = this$;
    if (and__3450__auto__) {
      return this$.om$core$IDidMount$did_mount$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return this$.om$core$IDidMount$did_mount$arity$1(this$);
  } else {
    var x__4089__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3462__auto__ = om.core.did_mount[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = om.core.did_mount["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidMount.did-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUnmount = function() {
  var obj10439 = {};
  return obj10439;
}();
om.core.will_unmount = function will_unmount(this$) {
  if (function() {
    var and__3450__auto__ = this$;
    if (and__3450__auto__) {
      return this$.om$core$IWillUnmount$will_unmount$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return this$.om$core$IWillUnmount$will_unmount$arity$1(this$);
  } else {
    var x__4089__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3462__auto__ = om.core.will_unmount[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = om.core.will_unmount["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUnmount.will-unmount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUpdate = function() {
  var obj10441 = {};
  return obj10441;
}();
om.core.will_update = function will_update(this$, next_props, next_state) {
  if (function() {
    var and__3450__auto__ = this$;
    if (and__3450__auto__) {
      return this$.om$core$IWillUpdate$will_update$arity$3;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return this$.om$core$IWillUpdate$will_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4089__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3462__auto__ = om.core.will_update[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = om.core.will_update["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUpdate.will-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IDidUpdate = function() {
  var obj10443 = {};
  return obj10443;
}();
om.core.did_update = function did_update(this$, prev_props, prev_state) {
  if (function() {
    var and__3450__auto__ = this$;
    if (and__3450__auto__) {
      return this$.om$core$IDidUpdate$did_update$arity$3;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return this$.om$core$IDidUpdate$did_update$arity$3(this$, prev_props, prev_state);
  } else {
    var x__4089__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3462__auto__ = om.core.did_update[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = om.core.did_update["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidUpdate.did-update", this$);
        }
      }
    }().call(null, this$, prev_props, prev_state);
  }
};
om.core.IWillReceiveProps = function() {
  var obj10445 = {};
  return obj10445;
}();
om.core.will_receive_props = function will_receive_props(this$, next_props) {
  if (function() {
    var and__3450__auto__ = this$;
    if (and__3450__auto__) {
      return this$.om$core$IWillReceiveProps$will_receive_props$arity$2;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return this$.om$core$IWillReceiveProps$will_receive_props$arity$2(this$, next_props);
  } else {
    var x__4089__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3462__auto__ = om.core.will_receive_props[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = om.core.will_receive_props["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillReceiveProps.will-receive-props", this$);
        }
      }
    }().call(null, this$, next_props);
  }
};
om.core.IRender = function() {
  var obj10447 = {};
  return obj10447;
}();
om.core.render = function render(this$) {
  if (function() {
    var and__3450__auto__ = this$;
    if (and__3450__auto__) {
      return this$.om$core$IRender$render$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return this$.om$core$IRender$render$arity$1(this$);
  } else {
    var x__4089__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3462__auto__ = om.core.render[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = om.core.render["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRender.render", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IRenderState = function() {
  var obj10449 = {};
  return obj10449;
}();
om.core.render_state = function render_state(this$, state) {
  if (function() {
    var and__3450__auto__ = this$;
    if (and__3450__auto__) {
      return this$.om$core$IRenderState$render_state$arity$2;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return this$.om$core$IRenderState$render_state$arity$2(this$, state);
  } else {
    var x__4089__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3462__auto__ = om.core.render_state[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = om.core.render_state["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderState.render-state", this$);
        }
      }
    }().call(null, this$, state);
  }
};
om.core.IOmSwap = function() {
  var obj10451 = {};
  return obj10451;
}();
om.core._om_swap_BANG_ = function _om_swap_BANG_(this$, cursor, korks, f, tag) {
  if (function() {
    var and__3450__auto__ = this$;
    if (and__3450__auto__) {
      return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5(this$, cursor, korks, f, tag);
  } else {
    var x__4089__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3462__auto__ = om.core._om_swap_BANG_[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = om.core._om_swap_BANG_["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmSwap.-om-swap!", this$);
        }
      }
    }().call(null, this$, cursor, korks, f, tag);
  }
};
om.core.IGetState = function() {
  var obj10453 = {};
  return obj10453;
}();
om.core._get_state = function() {
  var _get_state = null;
  var _get_state__1 = function(this$) {
    if (function() {
      var and__3450__auto__ = this$;
      if (and__3450__auto__) {
        return this$.om$core$IGetState$_get_state$arity$1;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$1(this$);
    } else {
      var x__4089__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3462__auto__ = om.core._get_state[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = om.core._get_state["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_state__2 = function(this$, ks) {
    if (function() {
      var and__3450__auto__ = this$;
      if (and__3450__auto__) {
        return this$.om$core$IGetState$_get_state$arity$2;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$2(this$, ks);
    } else {
      var x__4089__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3462__auto__ = om.core._get_state[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = om.core._get_state["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_state__1.call(this, this$);
      case 2:
        return _get_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_state.cljs$core$IFn$_invoke$arity$1 = _get_state__1;
  _get_state.cljs$core$IFn$_invoke$arity$2 = _get_state__2;
  return _get_state;
}();
om.core.IGetRenderState = function() {
  var obj10455 = {};
  return obj10455;
}();
om.core._get_render_state = function() {
  var _get_render_state = null;
  var _get_render_state__1 = function(this$) {
    if (function() {
      var and__3450__auto__ = this$;
      if (and__3450__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$1;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$1(this$);
    } else {
      var x__4089__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3462__auto__ = om.core._get_render_state[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = om.core._get_render_state["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_render_state__2 = function(this$, ks) {
    if (function() {
      var and__3450__auto__ = this$;
      if (and__3450__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$2;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$2(this$, ks);
    } else {
      var x__4089__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3462__auto__ = om.core._get_render_state[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = om.core._get_render_state["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_render_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_render_state__1.call(this, this$);
      case 2:
        return _get_render_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_render_state.cljs$core$IFn$_invoke$arity$1 = _get_render_state__1;
  _get_render_state.cljs$core$IFn$_invoke$arity$2 = _get_render_state__2;
  return _get_render_state;
}();
om.core.ISetState = function() {
  var obj10457 = {};
  return obj10457;
}();
om.core._set_state_BANG_ = function() {
  var _set_state_BANG_ = null;
  var _set_state_BANG___2 = function(this$, val) {
    if (function() {
      var and__3450__auto__ = this$;
      if (and__3450__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$2;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$2(this$, val);
    } else {
      var x__4089__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3462__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, val);
    }
  };
  var _set_state_BANG___3 = function(this$, ks, val) {
    if (function() {
      var and__3450__auto__ = this$;
      if (and__3450__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$3;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$3(this$, ks, val);
    } else {
      var x__4089__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3462__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, ks, val);
    }
  };
  _set_state_BANG_ = function(this$, ks, val) {
    switch(arguments.length) {
      case 2:
        return _set_state_BANG___2.call(this, this$, ks);
      case 3:
        return _set_state_BANG___3.call(this, this$, ks, val);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$2 = _set_state_BANG___2;
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = _set_state_BANG___3;
  return _set_state_BANG_;
}();
om.core.IValue = function() {
  var obj10459 = {};
  return obj10459;
}();
om.core._value = function _value(x) {
  if (function() {
    var and__3450__auto__ = x;
    if (and__3450__auto__) {
      return x.om$core$IValue$_value$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return x.om$core$IValue$_value$arity$1(x);
  } else {
    var x__4089__auto__ = x == null ? null : x;
    return function() {
      var or__3462__auto__ = om.core._value[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = om.core._value["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IValue.-value", x);
        }
      }
    }().call(null, x);
  }
};
om.core.IValue["_"] = true;
om.core._value["_"] = function(x) {
  return x;
};
om.core.ICursor = function() {
  var obj10461 = {};
  return obj10461;
}();
om.core._path = function _path(cursor) {
  if (function() {
    var and__3450__auto__ = cursor;
    if (and__3450__auto__) {
      return cursor.om$core$ICursor$_path$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_path$arity$1(cursor);
  } else {
    var x__4089__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3462__auto__ = om.core._path[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = om.core._path["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-path", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core._state = function _state(cursor) {
  if (function() {
    var and__3450__auto__ = cursor;
    if (and__3450__auto__) {
      return cursor.om$core$ICursor$_state$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_state$arity$1(cursor);
  } else {
    var x__4089__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3462__auto__ = om.core._state[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = om.core._state["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-state", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core.IToCursor = function() {
  var obj10463 = {};
  return obj10463;
}();
om.core._to_cursor = function() {
  var _to_cursor = null;
  var _to_cursor__2 = function(value, state) {
    if (function() {
      var and__3450__auto__ = value;
      if (and__3450__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$2;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$2(value, state);
    } else {
      var x__4089__auto__ = value == null ? null : value;
      return function() {
        var or__3462__auto__ = om.core._to_cursor[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = om.core._to_cursor["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state);
    }
  };
  var _to_cursor__3 = function(value, state, path) {
    if (function() {
      var and__3450__auto__ = value;
      if (and__3450__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$3;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$3(value, state, path);
    } else {
      var x__4089__auto__ = value == null ? null : value;
      return function() {
        var or__3462__auto__ = om.core._to_cursor[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = om.core._to_cursor["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state, path);
    }
  };
  _to_cursor = function(value, state, path) {
    switch(arguments.length) {
      case 2:
        return _to_cursor__2.call(this, value, state);
      case 3:
        return _to_cursor__3.call(this, value, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _to_cursor.cljs$core$IFn$_invoke$arity$2 = _to_cursor__2;
  _to_cursor.cljs$core$IFn$_invoke$arity$3 = _to_cursor__3;
  return _to_cursor;
}();
om.core.path = function path(cursor) {
  return om.core._path.call(null, cursor);
};
om.core.value = function value(cursor) {
  return om.core._value.call(null, cursor);
};
om.core.state = function state(cursor) {
  return om.core._state.call(null, cursor);
};
om.core.ITransact = function() {
  var obj10465 = {};
  return obj10465;
}();
om.core._transact_BANG_ = function _transact_BANG_(cursor, korks, f, tag) {
  if (function() {
    var and__3450__auto__ = cursor;
    if (and__3450__auto__) {
      return cursor.om$core$ITransact$_transact_BANG_$arity$4;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return cursor.om$core$ITransact$_transact_BANG_$arity$4(cursor, korks, f, tag);
  } else {
    var x__4089__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3462__auto__ = om.core._transact_BANG_[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = om.core._transact_BANG_["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransact.-transact!", cursor);
        }
      }
    }().call(null, cursor, korks, f, tag);
  }
};
om.core.INotify = function() {
  var obj10467 = {};
  return obj10467;
}();
om.core._notify = function _notify(x, tx_data, root_cursor) {
  if (function() {
    var and__3450__auto__ = x;
    if (and__3450__auto__) {
      return x.om$core$INotify$_notify$arity$3;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return x.om$core$INotify$_notify$arity$3(x, tx_data, root_cursor);
  } else {
    var x__4089__auto__ = x == null ? null : x;
    return function() {
      var or__3462__auto__ = om.core._notify[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = om.core._notify["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-notify", x);
        }
      }
    }().call(null, x, tx_data, root_cursor);
  }
};
om.core.transact_STAR_ = function transact_STAR_(state, cursor, korks, f, tag) {
  var old_state = cljs.core.deref.call(null, state);
  var path = cljs.core.into.call(null, om.core.path.call(null, cursor), korks);
  var ret = function() {
    var G__10469 = state;
    if (G__10469) {
      var bit__4112__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3462__auto__ = bit__4112__auto__;
        if (cljs.core.truth_(or__3462__auto__)) {
          return or__3462__auto__;
        } else {
          return G__10469.om$core$IOmSwap$;
        }
      }())) {
        return true;
      } else {
        if (!G__10469.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__10469);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__10469);
    }
  }() ? om.core._om_swap_BANG_.call(null, state, cursor, korks, f, tag) : cljs.core.empty_QMARK_.call(null, path) ? cljs.core.swap_BANG_.call(null, state, f) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, path, f) : null;
  if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "defer", "om.core/defer", 3145885106))) {
    return null;
  } else {
    var tx_data = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", 1017337751), path, new cljs.core.Keyword(null, "old-value", "old-value", 1451216317), cljs.core.get_in.call(null, old_state, path), new cljs.core.Keyword(null, "new-value", "new-value", 3626601078), cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path), new cljs.core.Keyword(null, "old-state", "old-state", 1449001181), old_state, new cljs.core.Keyword(null, "new-state", "new-state", 
    3624385942), cljs.core.deref.call(null, state)], null);
    if (!(tag == null)) {
      return om.core.notify_STAR_.call(null, cursor, cljs.core.assoc.call(null, tx_data, new cljs.core.Keyword(null, "tag", "tag", 1014018828), tag));
    } else {
      return om.core.notify_STAR_.call(null, cursor, tx_data);
    }
  }
};
om.core.children = function children(node) {
  var c = node.props.children;
  if (cljs.core.fn_QMARK_.call(null, c)) {
    return node.props.children = function() {
      var _STAR_read_enabled_STAR_10471 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        return c.call(null, node);
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10471;
      }
    }();
  } else {
    return c;
  }
};
om.core.get_props = function get_props(x) {
  return x.props["__om_cursor"];
};
om.core.get_state = function() {
  var get_state = null;
  var get_state__1 = function(owner) {
    return om.core._get_state.call(null, owner);
  };
  var get_state__2 = function(owner, korks) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_state.call(null, owner, ks);
  };
  get_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_state__1.call(this, owner);
      case 2:
        return get_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_state.cljs$core$IFn$_invoke$arity$1 = get_state__1;
  get_state.cljs$core$IFn$_invoke$arity$2 = get_state__2;
  return get_state;
}();
om.core.get_shared = function() {
  var get_shared = null;
  var get_shared__1 = function(owner) {
    if (owner == null) {
      return null;
    } else {
      return owner.props["__om_shared"];
    }
  };
  var get_shared__2 = function(owner, korks) {
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      return cljs.core.get.call(null, get_shared.call(null, owner), korks);
    } else {
      if (cljs.core.empty_QMARK_.call(null, korks)) {
        return get_shared.call(null, owner);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.get_in.call(null, get_shared.call(null, owner), korks);
        } else {
          return null;
        }
      }
    }
  };
  get_shared = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_shared__1.call(this, owner);
      case 2:
        return get_shared__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_shared.cljs$core$IFn$_invoke$arity$1 = get_shared__1;
  get_shared.cljs$core$IFn$_invoke$arity$2 = get_shared__2;
  return get_shared;
}();
om.core.merge_pending_state = function merge_pending_state(owner) {
  var state = owner.state;
  var temp__4092__auto__ = state["__om_pending_state"];
  if (cljs.core.truth_(temp__4092__auto__)) {
    var pending_state = temp__4092__auto__;
    var G__10473 = state;
    G__10473["__om_prev_state"] = state["__om_state"];
    G__10473["__om_state"] = pending_state;
    G__10473["__om_pending_state"] = null;
    return G__10473;
  } else {
    return null;
  }
};
om.core.merge_props_state = function() {
  var merge_props_state = null;
  var merge_props_state__1 = function(owner) {
    return merge_props_state.call(null, owner, null);
  };
  var merge_props_state__2 = function(owner, props) {
    var props__$1 = function() {
      var or__3462__auto__ = props;
      if (cljs.core.truth_(or__3462__auto__)) {
        return or__3462__auto__;
      } else {
        return owner.props;
      }
    }();
    var temp__4092__auto__ = props__$1["__om_state"];
    if (cljs.core.truth_(temp__4092__auto__)) {
      var props_state = temp__4092__auto__;
      var state = owner.state;
      state["__om_pending_state"] = cljs.core.merge.call(null, function() {
        var or__3462__auto__ = state["__om_pending_state"];
        if (cljs.core.truth_(or__3462__auto__)) {
          return or__3462__auto__;
        } else {
          return state["__om_state"];
        }
      }(), props_state);
      return props__$1["__om_state"] = null;
    } else {
      return null;
    }
  };
  merge_props_state = function(owner, props) {
    switch(arguments.length) {
      case 1:
        return merge_props_state__1.call(this, owner);
      case 2:
        return merge_props_state__2.call(this, owner, props);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge_props_state.cljs$core$IFn$_invoke$arity$1 = merge_props_state__1;
  merge_props_state.cljs$core$IFn$_invoke$arity$2 = merge_props_state__2;
  return merge_props_state;
}();
om.core.pure_methods = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "componentWillUpdate", "componentWillUpdate", 2086388618), new cljs.core.Keyword(null, "componentDidUpdate", "componentDidUpdate", 4103164189), new cljs.core.Keyword(null, "render", "render", 4374279432), new cljs.core.Keyword(null, "componentWillReceiveProps", "componentWillReceiveProps", 2122862542), new cljs.core.Keyword(null, "getDisplayName", "getDisplayName", 2087784617), new cljs.core.Keyword(null, "componentWillUnmount", 
"componentWillUnmount", 4147620643), new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", 3257856604), new cljs.core.Keyword(null, "componentDidMount", "componentDidMount", 3877103209), new cljs.core.Keyword(null, "getInitialState", "getInitialState", 2219830677), new cljs.core.Keyword(null, "shouldComponentUpdate", "shouldComponentUpdate", 3193956709)], [function(next_props, next_state) {
  var this$ = this;
  var c_10499 = om.core.children.call(null, this$);
  if (function() {
    var G__10474 = c_10499;
    if (G__10474) {
      var bit__4112__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3462__auto__ = bit__4112__auto__;
        if (cljs.core.truth_(or__3462__auto__)) {
          return or__3462__auto__;
        } else {
          return G__10474.om$core$IWillUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__10474.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__10474);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__10474);
    }
  }()) {
    var state_10500 = this$.state;
    var _STAR_read_enabled_STAR_10475_10501 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_update.call(null, c_10499, om.core.get_props.call(null, {"props":next_props}), om.core._get_state.call(null, this$));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10475_10501;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}, function(prev_props, prev_state) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__10476 = c;
    if (G__10476) {
      var bit__4112__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3462__auto__ = bit__4112__auto__;
        if (cljs.core.truth_(or__3462__auto__)) {
          return or__3462__auto__;
        } else {
          return G__10476.om$core$IDidUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__10476.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__10476);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__10476);
    }
  }()) {
    var state_10502 = this$.state;
    var _STAR_read_enabled_STAR_10477_10503 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.did_update.call(null, c, om.core.get_props.call(null, {"props":prev_props}), function() {
        var or__3462__auto__ = state_10502["__om_prev_state"];
        if (cljs.core.truth_(or__3462__auto__)) {
          return or__3462__auto__;
        } else {
          return state_10502["__om_state"];
        }
      }());
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10477_10503;
    }
  } else {
  }
  return this$.state["__om_prev_state"] = null;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var _STAR_read_enabled_STAR_10478 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    if (function() {
      var G__10479 = c;
      if (G__10479) {
        var bit__4112__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3462__auto__ = bit__4112__auto__;
          if (cljs.core.truth_(or__3462__auto__)) {
            return or__3462__auto__;
          } else {
            return G__10479.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__10479.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__10479);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__10479);
      }
    }()) {
      var _STAR_parent_STAR_10480 = om.core._STAR_parent_STAR_;
      var _STAR_instrument_STAR_10481 = om.core._STAR_instrument_STAR_;
      try {
        om.core._STAR_parent_STAR_ = this$;
        om.core._STAR_instrument_STAR_ = props["__om_instrument"];
        return om.core.render.call(null, c);
      } finally {
        om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_10481;
        om.core._STAR_parent_STAR_ = _STAR_parent_STAR_10480;
      }
    } else {
      if (function() {
        var G__10482 = c;
        if (G__10482) {
          var bit__4112__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3462__auto__ = bit__4112__auto__;
            if (cljs.core.truth_(or__3462__auto__)) {
              return or__3462__auto__;
            } else {
              return G__10482.om$core$IRenderState$;
            }
          }())) {
            return true;
          } else {
            if (!G__10482.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__10482);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__10482);
        }
      }()) {
        var _STAR_parent_STAR_10483 = om.core._STAR_parent_STAR_;
        var _STAR_instrument_STAR_10484 = om.core._STAR_instrument_STAR_;
        try {
          om.core._STAR_parent_STAR_ = this$;
          om.core._STAR_instrument_STAR_ = props["__om_instrument"];
          return om.core.render_state.call(null, c, om.core.get_state.call(null, this$));
        } finally {
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_10484;
          om.core._STAR_parent_STAR_ = _STAR_parent_STAR_10483;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return c;
        } else {
          return null;
        }
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10478;
  }
}, function(next_props) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__10485 = c;
    if (G__10485) {
      var bit__4112__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3462__auto__ = bit__4112__auto__;
        if (cljs.core.truth_(or__3462__auto__)) {
          return or__3462__auto__;
        } else {
          return G__10485.om$core$IWillReceiveProps$;
        }
      }())) {
        return true;
      } else {
        if (!G__10485.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__10485);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__10485);
    }
  }()) {
    var _STAR_read_enabled_STAR_10486 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_receive_props.call(null, c, om.core.get_props.call(null, {"props":next_props}));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10486;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__10487 = c;
    if (G__10487) {
      var bit__4112__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3462__auto__ = bit__4112__auto__;
        if (cljs.core.truth_(or__3462__auto__)) {
          return or__3462__auto__;
        } else {
          return G__10487.om$core$IDisplayName$;
        }
      }())) {
        return true;
      } else {
        if (!G__10487.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__10487);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__10487);
    }
  }()) {
    var _STAR_read_enabled_STAR_10488 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.display_name.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10488;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__10489 = c;
    if (G__10489) {
      var bit__4112__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3462__auto__ = bit__4112__auto__;
        if (cljs.core.truth_(or__3462__auto__)) {
          return or__3462__auto__;
        } else {
          return G__10489.om$core$IWillUnmount$;
        }
      }())) {
        return true;
      } else {
        if (!G__10489.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__10489);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__10489);
    }
  }()) {
    var _STAR_read_enabled_STAR_10490 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_unmount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10490;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  om.core.merge_props_state.call(null, this$);
  var c_10504 = om.core.children.call(null, this$);
  if (function() {
    var G__10491 = c_10504;
    if (G__10491) {
      var bit__4112__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3462__auto__ = bit__4112__auto__;
        if (cljs.core.truth_(or__3462__auto__)) {
          return or__3462__auto__;
        } else {
          return G__10491.om$core$IWillMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__10491.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__10491);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__10491);
    }
  }()) {
    var _STAR_read_enabled_STAR_10492_10505 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_mount.call(null, c_10504);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10492_10505;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__10493 = c;
    if (G__10493) {
      var bit__4112__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3462__auto__ = bit__4112__auto__;
        if (cljs.core.truth_(or__3462__auto__)) {
          return or__3462__auto__;
        } else {
          return G__10493.om$core$IDidMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__10493.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__10493);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__10493);
    }
  }()) {
    var _STAR_read_enabled_STAR_10494 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.did_mount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10494;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var istate = function() {
    var or__3462__auto__ = props["__om_init_state"];
    if (cljs.core.truth_(or__3462__auto__)) {
      return or__3462__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  var id = (new cljs.core.Keyword("om.core", "id", "om.core/id", 2663181321)).cljs$core$IFn$_invoke$arity$1(istate);
  var ret = {"__om_state":cljs.core.merge.call(null, cljs.core.dissoc.call(null, istate, new cljs.core.Keyword("om.core", "id", "om.core/id", 2663181321)), function() {
    var G__10495 = c;
    if (G__10495) {
      var bit__4112__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3462__auto__ = bit__4112__auto__;
        if (cljs.core.truth_(or__3462__auto__)) {
          return or__3462__auto__;
        } else {
          return G__10495.om$core$IInitState$;
        }
      }())) {
        return true;
      } else {
        if (!G__10495.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__10495);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__10495);
    }
  }() ? function() {
    var _STAR_read_enabled_STAR_10496 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.init_state.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10496;
    }
  }() : null), "__om_id":function() {
    var or__3462__auto__ = id;
    if (cljs.core.truth_(or__3462__auto__)) {
      return or__3462__auto__;
    } else {
      return goog.ui.IdGenerator.getInstance().getNextUniqueId();
    }
  }()};
  props["__om_init_state"] = null;
  return ret;
}, function(next_props, next_state) {
  var this$ = this;
  var _STAR_read_enabled_STAR_10497 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    var props = this$.props;
    var state = this$.state;
    var c = om.core.children.call(null, this$);
    om.core.merge_props_state.call(null, this$, next_props);
    if (function() {
      var G__10498 = c;
      if (G__10498) {
        var bit__4112__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3462__auto__ = bit__4112__auto__;
          if (cljs.core.truth_(or__3462__auto__)) {
            return or__3462__auto__;
          } else {
            return G__10498.om$core$IShouldUpdate$;
          }
        }())) {
          return true;
        } else {
          if (!G__10498.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__10498);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__10498);
      }
    }()) {
      return om.core.should_update.call(null, c, om.core.get_props.call(null, {"props":next_props}), om.core._get_state.call(null, this$));
    } else {
      if (!(om.core._value.call(null, props["__om_cursor"]) === om.core._value.call(null, next_props["__om_cursor"]))) {
        return true;
      } else {
        if (!(state["__om_pending_state"] == null)) {
          return true;
        } else {
          if (!(props["__om_index"] === next_props["__om_index"])) {
            return true;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false;
            } else {
              return null;
            }
          }
        }
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10497;
  }
}]);
om.core.specify_state_methods_BANG_ = function specify_state_methods_BANG_(obj) {
  var x10509 = obj;
  x10509.om$core$IGetState$ = true;
  x10509.om$core$IGetState$_get_state$arity$1 = function(x10509) {
    return function(this$) {
      var this$__$1 = this;
      var state = this$__$1.state;
      var or__3462__auto__ = state["__om_pending_state"];
      if (cljs.core.truth_(or__3462__auto__)) {
        return or__3462__auto__;
      } else {
        return state["__om_state"];
      }
    };
  }(x10509);
  x10509.om$core$IGetState$_get_state$arity$2 = function(x10509) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_state.call(null, this$__$1), ks);
    };
  }(x10509);
  x10509.om$core$IGetRenderState$ = true;
  x10509.om$core$IGetRenderState$_get_render_state$arity$1 = function(x10509) {
    return function(this$) {
      var this$__$1 = this;
      return this$__$1.state["__om_state"];
    };
  }(x10509);
  x10509.om$core$IGetRenderState$_get_render_state$arity$2 = function(x10509) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_render_state.call(null, this$__$1), ks);
    };
  }(x10509);
  x10509.om$core$ISetState$ = true;
  x10509.om$core$ISetState$_set_state_BANG_$arity$2 = function(x10509) {
    return function(this$, val) {
      var this$__$1 = this;
      var _STAR_read_enabled_STAR_10510 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        var cursor = this$__$1.props["__om_cursor"];
        var path = om.core._path.call(null, cursor);
        this$__$1.state["__om_pending_state"] = val;
        if (cljs.core.empty_QMARK_.call(null, path)) {
          return cljs.core.swap_BANG_.call(null, om.core._state.call(null, cursor), cljs.core.clone);
        } else {
          return cljs.core.swap_BANG_.call(null, om.core._state.call(null, cursor), cljs.core.update_in, path, cljs.core.clone);
        }
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10510;
      }
    };
  }(x10509);
  x10509.om$core$ISetState$_set_state_BANG_$arity$3 = function(x10509) {
    return function(this$, ks, val) {
      var this$__$1 = this;
      var _STAR_read_enabled_STAR_10511 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        var props = this$__$1.props;
        var state = this$__$1.state;
        var cursor = props["__om_cursor"];
        var path = om.core._path.call(null, cursor);
        var pstate = om.core._get_state.call(null, this$__$1);
        state["__om_pending_state"] = cljs.core.assoc_in.call(null, pstate, ks, val);
        if (cljs.core.empty_QMARK_.call(null, path)) {
          return cljs.core.swap_BANG_.call(null, om.core._state.call(null, cursor), cljs.core.clone);
        } else {
          return cljs.core.swap_BANG_.call(null, om.core._state.call(null, cursor), cljs.core.update_in, path, cljs.core.clone);
        }
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10511;
      }
    };
  }(x10509);
  return x10509;
};
om.core.Pure = React.createClass(om.core.specify_state_methods_BANG_.call(null, cljs.core.clj__GT_js.call(null, om.core.pure_methods)));
om.core.pure = function pure(obj) {
  return new om.core.Pure(obj);
};
om.core.cursor_QMARK_ = function cursor_QMARK_(x) {
  var G__10513 = x;
  if (G__10513) {
    var bit__4112__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3462__auto__ = bit__4112__auto__;
      if (cljs.core.truth_(or__3462__auto__)) {
        return or__3462__auto__;
      } else {
        return G__10513.om$core$ICursor$;
      }
    }())) {
      return true;
    } else {
      if (!G__10513.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__10513);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__10513);
  }
};
om.core.MapCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2158397195;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.MapCursor.cljs$lang$type = true;
om.core.MapCursor.cljs$lang$ctorStr = "om.core/MapCursor";
om.core.MapCursor.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "om.core/MapCursor");
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null);
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(_, k, not_found) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    var v = cljs.core._lookup.call(null, self__.value, k, not_found);
    if (!cljs.core._EQ_.call(null, v, not_found)) {
      return om.core.to_cursor.call(null, v, self__.state, cljs.core.conj.call(null, self__.path, k));
    } else {
      return not_found;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, k, v) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._assoc.call(null, self__.value, k, v), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.call = function() {
  var G__10517 = null;
  var G__10517__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10517__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10517 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10517__2.call(this, self__, k);
      case 3:
        return G__10517__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10517;
}();
om.core.MapCursor.prototype.apply = function(self__, args10514) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10514)));
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.MapCursor.prototype.om$core$ICursor$ = true;
om.core.MapCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.MapCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.MapCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot deref cursor during render phase: "), cljs.core.str(this$__$1)].join(""));
  }
};
om.core.MapCursor.prototype.om$core$IValue$ = true;
om.core.MapCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.MapCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(this$__$1) {
        return function(p__10515) {
          var vec__10516 = p__10515;
          var k = cljs.core.nth.call(null, vec__10516, 0, null);
          var v = cljs.core.nth.call(null, vec__10516, 1, null);
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, om.core.to_cursor.call(null, v, self__.state, cljs.core.conj.call(null, self__.path, k))], null);
        };
      }(this$__$1), self__.value);
    } else {
      return null;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(self__.value, self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IMap$_dissoc$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._dissoc.call(null, self__.value, k), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.om$core$ITransact$ = true;
om.core.MapCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.__GT_MapCursor = function __GT_MapCursor(value, state, path) {
  return new om.core.MapCursor(value, state, path);
};
om.core.IndexedCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2175181595;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.IndexedCursor.cljs$lang$type = true;
om.core.IndexedCursor.cljs$lang$ctorStr = "om.core/IndexedCursor";
om.core.IndexedCursor.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "om.core/IndexedCursor");
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, null);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, not_found);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, n, v) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core.to_cursor.call(null, cljs.core._assoc_n.call(null, self__.value, n, v), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.call = function() {
  var G__10519 = null;
  var G__10519__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10519__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10519 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10519__2.call(this, self__, k);
      case 3:
        return G__10519__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10519;
}();
om.core.IndexedCursor.prototype.apply = function(self__, args10518) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10518)));
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.IndexedCursor.prototype.om$core$ICursor$ = true;
om.core.IndexedCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.IndexedCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.IndexedCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot deref cursor during render phase: "), cljs.core.str(this$__$1)].join(""));
  }
};
om.core.IndexedCursor.prototype.om$core$IValue$ = true;
om.core.IndexedCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.IndexedCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(this$__$1) {
        return function(v, i) {
          return om.core.to_cursor.call(null, v, self__.state, cljs.core.conj.call(null, self__.path, i));
        };
      }(this$__$1), self__.value, cljs.core.range.call(null));
    } else {
      return null;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_peek$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core.to_cursor.call(null, cljs.core._peek.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_pop$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core.to_cursor.call(null, cljs.core._pop.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(self__.value, self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$2 = function(_, n) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core.to_cursor.call(null, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$3 = function(_, n, not_found) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (n < cljs.core._count.call(null, self__.value)) {
      return om.core.to_cursor.call(null, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
    } else {
      return not_found;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.om$core$ITransact$ = true;
om.core.IndexedCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.__GT_IndexedCursor = function __GT_IndexedCursor(value, state, path) {
  return new om.core.IndexedCursor(value, state, path);
};
om.core.to_cursor_STAR_ = function to_cursor_STAR_(val, state, path) {
  var x10521 = cljs.core.clone.call(null, val);
  x10521.cljs$core$IEquiv$ = true;
  x10521.cljs$core$IEquiv$_equiv$arity$2 = function(x10521) {
    return function(_, other) {
      var ___$1 = this;
      if (om.core._STAR_read_enabled_STAR_) {
        if (om.core.cursor_QMARK_.call(null, other)) {
          return cljs.core._EQ_.call(null, val, om.core._value.call(null, other));
        } else {
          return cljs.core._EQ_.call(null, val, other);
        }
      } else {
        throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
      }
    };
  }(x10521);
  x10521.om$core$ITransact$ = true;
  x10521.om$core$ITransact$_transact_BANG_$arity$4 = function(x10521) {
    return function(this$, korks, f, tag) {
      var this$__$1 = this;
      return om.core.transact_STAR_.call(null, state, this$__$1, korks, f, tag);
    };
  }(x10521);
  x10521.om$core$ICursor$ = true;
  x10521.om$core$ICursor$_path$arity$1 = function(x10521) {
    return function(_) {
      var ___$1 = this;
      return path;
    };
  }(x10521);
  x10521.om$core$ICursor$_state$arity$1 = function(x10521) {
    return function(_) {
      var ___$1 = this;
      return state;
    };
  }(x10521);
  x10521.cljs$core$IDeref$ = true;
  x10521.cljs$core$IDeref$_deref$arity$1 = function(x10521) {
    return function(this$) {
      var this$__$1 = this;
      if (!om.core._STAR_read_enabled_STAR_) {
        return cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path);
      } else {
        throw new Error([cljs.core.str("Cannot deref cursor during render phase: "), cljs.core.str(this$__$1)].join(""));
      }
    };
  }(x10521);
  return x10521;
};
om.core.to_cursor = function() {
  var to_cursor = null;
  var to_cursor__1 = function(val) {
    return to_cursor.call(null, val, null, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__2 = function(val, state) {
    return to_cursor.call(null, val, state, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__3 = function(val, state, path) {
    if (om.core.cursor_QMARK_.call(null, val)) {
      return val;
    } else {
      if (function() {
        var G__10524 = val;
        if (G__10524) {
          var bit__4112__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3462__auto__ = bit__4112__auto__;
            if (cljs.core.truth_(or__3462__auto__)) {
              return or__3462__auto__;
            } else {
              return G__10524.om$core$IToCursor$;
            }
          }())) {
            return true;
          } else {
            if (!G__10524.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__10524);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__10524);
        }
      }()) {
        return om.core._to_cursor.call(null, val, state, path);
      } else {
        if (cljs.core.indexed_QMARK_.call(null, val)) {
          return new om.core.IndexedCursor(val, state, path);
        } else {
          if (cljs.core.map_QMARK_.call(null, val)) {
            return new om.core.MapCursor(val, state, path);
          } else {
            if (function() {
              var G__10525 = val;
              if (G__10525) {
                var bit__4112__auto__ = G__10525.cljs$lang$protocol_mask$partition1$ & 8192;
                if (bit__4112__auto__ || G__10525.cljs$core$ICloneable$) {
                  return true;
                } else {
                  if (!G__10525.cljs$lang$protocol_mask$partition1$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__10525);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__10525);
              }
            }()) {
              return om.core.to_cursor_STAR_.call(null, val, state, path);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return val;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  to_cursor = function(val, state, path) {
    switch(arguments.length) {
      case 1:
        return to_cursor__1.call(this, val);
      case 2:
        return to_cursor__2.call(this, val, state);
      case 3:
        return to_cursor__3.call(this, val, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  to_cursor.cljs$core$IFn$_invoke$arity$1 = to_cursor__1;
  to_cursor.cljs$core$IFn$_invoke$arity$2 = to_cursor__2;
  to_cursor.cljs$core$IFn$_invoke$arity$3 = to_cursor__3;
  return to_cursor;
}();
om.core.notify_STAR_ = function notify_STAR_(cursor, tx_data) {
  var state = om.core._state.call(null, cursor);
  return om.core._notify.call(null, state, tx_data, om.core.to_cursor.call(null, cljs.core.deref.call(null, state), state));
};
om.core.refresh_queued = false;
om.core.refresh_set = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
om.core.render_all = function render_all() {
  om.core.refresh_queued = false;
  var seq__10530 = cljs.core.seq.call(null, cljs.core.deref.call(null, om.core.refresh_set));
  var chunk__10531 = null;
  var count__10532 = 0;
  var i__10533 = 0;
  while (true) {
    if (i__10533 < count__10532) {
      var f = cljs.core._nth.call(null, chunk__10531, i__10533);
      f.call(null);
      var G__10534 = seq__10530;
      var G__10535 = chunk__10531;
      var G__10536 = count__10532;
      var G__10537 = i__10533 + 1;
      seq__10530 = G__10534;
      chunk__10531 = G__10535;
      count__10532 = G__10536;
      i__10533 = G__10537;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__10530);
      if (temp__4092__auto__) {
        var seq__10530__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__10530__$1)) {
          var c__4210__auto__ = cljs.core.chunk_first.call(null, seq__10530__$1);
          var G__10538 = cljs.core.chunk_rest.call(null, seq__10530__$1);
          var G__10539 = c__4210__auto__;
          var G__10540 = cljs.core.count.call(null, c__4210__auto__);
          var G__10541 = 0;
          seq__10530 = G__10538;
          chunk__10531 = G__10539;
          count__10532 = G__10540;
          i__10533 = G__10541;
          continue;
        } else {
          var f = cljs.core.first.call(null, seq__10530__$1);
          f.call(null);
          var G__10542 = cljs.core.next.call(null, seq__10530__$1);
          var G__10543 = null;
          var G__10544 = 0;
          var G__10545 = 0;
          seq__10530 = G__10542;
          chunk__10531 = G__10543;
          count__10532 = G__10544;
          i__10533 = G__10545;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
om.core.roots = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
om.core.valid_QMARK_ = function valid_QMARK_(m) {
  return cljs.core.every_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "init-state", "init-state", 4479067398), null, new cljs.core.Keyword(null, "ctor", "ctor", 1016968582), null, new cljs.core.Keyword(null, "state", "state", 1123661827), null, new cljs.core.Keyword(null, "react-key", "react-key", 4184082563), null, new cljs.core.Keyword("om.core", "index", "om.core/index", 3166146514), null, new cljs.core.Keyword(null, 
  "key", "key", 1014010321), null, new cljs.core.Keyword(null, "instrument", "instrument", 2409387865), null, new cljs.core.Keyword(null, "shared", "shared", 4405305303), null, new cljs.core.Keyword(null, "opts", "opts", 1017322386), null, new cljs.core.Keyword(null, "fn", "fn", 1013907514), null], null), null), cljs.core.keys.call(null, m));
};
om.core.id = function id(owner) {
  return owner.state["__om_id"];
};
om.core.build_STAR_ = function() {
  var build_STAR_ = null;
  var build_STAR___2 = function(f, cursor) {
    return build_STAR_.call(null, f, cursor, null);
  };
  var build_STAR___3 = function(f, cursor, m) {
    if (om.core.valid_QMARK_.call(null, m)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, "build options contains invalid keys, only :key, :react-key, ", ":fn, :init-state, :state, and :opts allowed, given ", cljs.core.interpose.call(null, ", ", cljs.core.keys.call(null, m)))), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "valid?", "valid?", 1830611324, null), new cljs.core.Symbol(null, "m", "m", -1640531418, null))))].join(""));
    }
    if (m == null) {
      var shared = function() {
        var or__3462__auto__ = (new cljs.core.Keyword(null, "shared", "shared", 4405305303)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3462__auto__)) {
          return or__3462__auto__;
        } else {
          return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
        }
      }();
      var ctor = function() {
        var or__3462__auto__ = (new cljs.core.Keyword(null, "ctor", "ctor", 1016968582)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3462__auto__)) {
          return or__3462__auto__;
        } else {
          return om.core.pure;
        }
      }();
      var pure__5018__auto__ = ctor.call(null, {"children":function(shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_10550 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            return f.call(null, cursor, this$);
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10550;
          }
        };
      }(shared, ctor), "__om_instrument":om.core._STAR_instrument_STAR_, "__om_shared":shared, "__om_cursor":cursor});
      pure__5018__auto__.constructor = goog.getUid(f);
      return pure__5018__auto__;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var map__10551 = m;
        var map__10551__$1 = cljs.core.seq_QMARK_.call(null, map__10551) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10551) : map__10551;
        var opts = cljs.core.get.call(null, map__10551__$1, new cljs.core.Keyword(null, "opts", "opts", 1017322386));
        var init_state = cljs.core.get.call(null, map__10551__$1, new cljs.core.Keyword(null, "init-state", "init-state", 4479067398));
        var state = cljs.core.get.call(null, map__10551__$1, new cljs.core.Keyword(null, "state", "state", 1123661827));
        var key = cljs.core.get.call(null, map__10551__$1, new cljs.core.Keyword(null, "key", "key", 1014010321));
        var dataf = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "fn", "fn", 1013907514));
        var cursor_SINGLEQUOTE_ = !(dataf == null) ? dataf.call(null, cursor) : cursor;
        var rkey = !(key == null) ? cljs.core.get.call(null, cursor_SINGLEQUOTE_, key) : cljs.core.get.call(null, m, new cljs.core.Keyword(null, "react-key", "react-key", 4184082563));
        var shared = function() {
          var or__3462__auto__ = (new cljs.core.Keyword(null, "shared", "shared", 4405305303)).cljs$core$IFn$_invoke$arity$1(m);
          if (cljs.core.truth_(or__3462__auto__)) {
            return or__3462__auto__;
          } else {
            return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
          }
        }();
        var ctor = function() {
          var or__3462__auto__ = (new cljs.core.Keyword(null, "ctor", "ctor", 1016968582)).cljs$core$IFn$_invoke$arity$1(m);
          if (cljs.core.truth_(or__3462__auto__)) {
            return or__3462__auto__;
          } else {
            return om.core.pure;
          }
        }();
        var pure__5018__auto__ = ctor.call(null, {"children":opts == null ? function(map__10551, map__10551__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
          return function(this$) {
            var _STAR_read_enabled_STAR_10552 = om.core._STAR_read_enabled_STAR_;
            try {
              om.core._STAR_read_enabled_STAR_ = true;
              return f.call(null, cursor_SINGLEQUOTE_, this$);
            } finally {
              om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10552;
            }
          };
        }(map__10551, map__10551__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) : function(map__10551, map__10551__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
          return function(this$) {
            var _STAR_read_enabled_STAR_10553 = om.core._STAR_read_enabled_STAR_;
            try {
              om.core._STAR_read_enabled_STAR_ = true;
              return f.call(null, cursor_SINGLEQUOTE_, this$, opts);
            } finally {
              om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10553;
            }
          };
        }(map__10551, map__10551__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor), "key":rkey, "__om_instrument":om.core._STAR_instrument_STAR_, "__om_shared":shared, "__om_state":state, "__om_init_state":init_state, "__om_index":(new cljs.core.Keyword("om.core", "index", "om.core/index", 3166146514)).cljs$core$IFn$_invoke$arity$1(m), "__om_cursor":cursor_SINGLEQUOTE_});
        pure__5018__auto__.constructor = goog.getUid(f);
        return pure__5018__auto__;
      } else {
        return null;
      }
    }
  };
  build_STAR_ = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build_STAR___2.call(this, f, cursor);
      case 3:
        return build_STAR___3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_STAR_.cljs$core$IFn$_invoke$arity$2 = build_STAR___2;
  build_STAR_.cljs$core$IFn$_invoke$arity$3 = build_STAR___3;
  return build_STAR_;
}();
om.core.build = function() {
  var build = null;
  var build__2 = function(f, cursor) {
    return build.call(null, f, cursor, null);
  };
  var build__3 = function(f, cursor, m) {
    if (!(om.core._STAR_instrument_STAR_ == null)) {
      var ret = function() {
        var _STAR_read_enabled_STAR_10555 = om.core._STAR_read_enabled_STAR_;
        try {
          om.core._STAR_read_enabled_STAR_ = true;
          return om.core._STAR_instrument_STAR_.call(null, f, cursor, m);
        } finally {
          om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_10555;
        }
      }();
      if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "pass", "om.core/pass", 2667619603))) {
        return om.core.build_STAR_.call(null, f, cursor, m);
      } else {
        return ret;
      }
    } else {
      return om.core.build_STAR_.call(null, f, cursor, m);
    }
  };
  build = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build__2.call(this, f, cursor);
      case 3:
        return build__3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build.cljs$core$IFn$_invoke$arity$2 = build__2;
  build.cljs$core$IFn$_invoke$arity$3 = build__3;
  return build;
}();
om.core.build_all = function() {
  var build_all = null;
  var build_all__2 = function(f, xs) {
    return build_all.call(null, f, xs, null);
  };
  var build_all__3 = function(f, xs, m) {
    return cljs.core.map.call(null, function(x, i) {
      return om.core.build.call(null, f, x, cljs.core.assoc.call(null, m, new cljs.core.Keyword("om.core", "index", "om.core/index", 3166146514), i));
    }, xs, cljs.core.range.call(null));
  };
  build_all = function(f, xs, m) {
    switch(arguments.length) {
      case 2:
        return build_all__2.call(this, f, xs);
      case 3:
        return build_all__3.call(this, f, xs, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_all.cljs$core$IFn$_invoke$arity$2 = build_all__2;
  build_all.cljs$core$IFn$_invoke$arity$3 = build_all__3;
  return build_all;
}();
om.core.root = function root(f, value, p__10556) {
  var map__10562 = p__10556;
  var map__10562__$1 = cljs.core.seq_QMARK_.call(null, map__10562) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10562) : map__10562;
  var options = map__10562__$1;
  var instrument = cljs.core.get.call(null, map__10562__$1, new cljs.core.Keyword(null, "instrument", "instrument", 2409387865));
  var path = cljs.core.get.call(null, map__10562__$1, new cljs.core.Keyword(null, "path", "path", 1017337751));
  var tx_listen = cljs.core.get.call(null, map__10562__$1, new cljs.core.Keyword(null, "tx-listen", "tx-listen", 666878114));
  var shared = cljs.core.get.call(null, map__10562__$1, new cljs.core.Keyword(null, "shared", "shared", 4405305303));
  var target = cljs.core.get.call(null, map__10562__$1, new cljs.core.Keyword(null, "target", "target", 4427965699));
  if (!(target == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("No target specified to om.core/root"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "target", "target", 1773529930, null)))))].join(""));
  }
  var roots_SINGLEQUOTE__10567 = cljs.core.deref.call(null, om.core.roots);
  if (cljs.core.contains_QMARK_.call(null, roots_SINGLEQUOTE__10567, target)) {
    cljs.core.get.call(null, roots_SINGLEQUOTE__10567, target).call(null);
  } else {
  }
  var state = function() {
    var G__10563 = value;
    if (G__10563) {
      var bit__4112__auto__ = G__10563.cljs$lang$protocol_mask$partition1$ & 16384;
      if (bit__4112__auto__ || G__10563.cljs$core$IAtom$) {
        return true;
      } else {
        if (!G__10563.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__10563);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__10563);
    }
  }() ? value : cljs.core.atom.call(null, value);
  var state__$1 = function() {
    var x10564 = state;
    x10564.om$core$INotify$ = true;
    x10564.om$core$INotify$_notify$arity$3 = function(x10564, state, map__10562, map__10562__$1, options, instrument, path, tx_listen, shared, target) {
      return function(_, tx_data, root_cursor) {
        var ___$1 = this;
        if (tx_listen == null) {
          return null;
        } else {
          return tx_listen.call(null, tx_data, root_cursor);
        }
      };
    }(x10564, state, map__10562, map__10562__$1, options, instrument, path, tx_listen, shared, target);
    return x10564;
  }();
  var m = cljs.core.dissoc.call(null, options, new cljs.core.Keyword(null, "target", "target", 4427965699), new cljs.core.Keyword(null, "tx-listen", "tx-listen", 666878114), new cljs.core.Keyword(null, "path", "path", 1017337751));
  var rootf = function(state, state__$1, m, map__10562, map__10562__$1, options, instrument, path, tx_listen, shared, target) {
    return function rootf() {
      cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.disj, rootf);
      var value__$1 = cljs.core.deref.call(null, state__$1);
      var cursor = path == null ? om.core.to_cursor.call(null, value__$1, state__$1, cljs.core.PersistentVector.EMPTY) : om.core.to_cursor.call(null, cljs.core.get_in.call(null, value__$1, path), state__$1, path);
      return om.dom.render.call(null, function() {
        var _STAR_instrument_STAR_10566 = om.core._STAR_instrument_STAR_;
        try {
          om.core._STAR_instrument_STAR_ = instrument;
          return om.core.build.call(null, f, cursor, m);
        } finally {
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_10566;
        }
      }(), target);
    };
  }(state, state__$1, m, map__10562, map__10562__$1, options, instrument, path, tx_listen, shared, target);
  var watch_key = cljs.core.gensym.call(null);
  cljs.core.add_watch.call(null, state__$1, watch_key, function(state, state__$1, m, rootf, watch_key, map__10562, map__10562__$1, options, instrument, path, tx_listen, shared, target) {
    return function(_, ___$1, ___$2, ___$3) {
      if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, om.core.refresh_set), rootf)) {
      } else {
        cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.conj, rootf);
      }
      if (cljs.core.truth_(om.core.refresh_queued)) {
        return null;
      } else {
        om.core.refresh_queued = true;
        if (typeof requestAnimationFrame !== "undefined") {
          return requestAnimationFrame(om.core.render_all);
        } else {
          return setTimeout(om.core.render_all, 16);
        }
      }
    };
  }(state, state__$1, m, rootf, watch_key, map__10562, map__10562__$1, options, instrument, path, tx_listen, shared, target));
  cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.assoc, target, function(state, state__$1, m, rootf, watch_key, map__10562, map__10562__$1, options, instrument, path, tx_listen, shared, target) {
    return function() {
      cljs.core.remove_watch.call(null, state__$1, watch_key);
      cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.dissoc, target);
      return React.unmountComponentAtNode(target);
    };
  }(state, state__$1, m, rootf, watch_key, map__10562, map__10562__$1, options, instrument, path, tx_listen, shared, target));
  return rootf.call(null);
};
om.core.transact_BANG_ = function() {
  var transact_BANG_ = null;
  var transact_BANG___2 = function(cursor, f) {
    return transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, f, null);
  };
  var transact_BANG___3 = function(cursor, korks, f) {
    return transact_BANG_.call(null, cursor, korks, f, null);
  };
  var transact_BANG___4 = function(cursor, korks, f, tag) {
    var korks__$1 = korks == null ? cljs.core.PersistentVector.EMPTY : cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.Keyword(null, "else", "else", 1017020587) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null) : null;
    return om.core._transact_BANG_.call(null, cursor, korks__$1, f, tag);
  };
  transact_BANG_ = function(cursor, korks, f, tag) {
    switch(arguments.length) {
      case 2:
        return transact_BANG___2.call(this, cursor, korks);
      case 3:
        return transact_BANG___3.call(this, cursor, korks, f);
      case 4:
        return transact_BANG___4.call(this, cursor, korks, f, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transact_BANG_.cljs$core$IFn$_invoke$arity$2 = transact_BANG___2;
  transact_BANG_.cljs$core$IFn$_invoke$arity$3 = transact_BANG___3;
  transact_BANG_.cljs$core$IFn$_invoke$arity$4 = transact_BANG___4;
  return transact_BANG_;
}();
om.core.update_BANG_ = function() {
  var update_BANG_ = null;
  var update_BANG___2 = function(cursor, v) {
    return om.core.transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, function(_) {
      return v;
    }, null);
  };
  var update_BANG___3 = function(cursor, korks, v) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, null);
  };
  var update_BANG___4 = function(cursor, korks, v, tag) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, tag);
  };
  update_BANG_ = function(cursor, korks, v, tag) {
    switch(arguments.length) {
      case 2:
        return update_BANG___2.call(this, cursor, korks);
      case 3:
        return update_BANG___3.call(this, cursor, korks, v);
      case 4:
        return update_BANG___4.call(this, cursor, korks, v, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_BANG_.cljs$core$IFn$_invoke$arity$2 = update_BANG___2;
  update_BANG_.cljs$core$IFn$_invoke$arity$3 = update_BANG___3;
  update_BANG_.cljs$core$IFn$_invoke$arity$4 = update_BANG___4;
  return update_BANG_;
}();
om.core.get_node = function() {
  var get_node = null;
  var get_node__1 = function(owner) {
    return owner.getDOMNode();
  };
  var get_node__2 = function(owner, name) {
    var temp__4092__auto__ = owner.refs;
    if (cljs.core.truth_(temp__4092__auto__)) {
      var refs = temp__4092__auto__;
      return refs[name].getDOMNode();
    } else {
      return null;
    }
  };
  get_node = function(owner, name) {
    switch(arguments.length) {
      case 1:
        return get_node__1.call(this, owner);
      case 2:
        return get_node__2.call(this, owner, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_node.cljs$core$IFn$_invoke$arity$1 = get_node__1;
  get_node.cljs$core$IFn$_invoke$arity$2 = get_node__2;
  return get_node;
}();
om.core.set_state_BANG_ = function() {
  var set_state_BANG_ = null;
  var set_state_BANG___2 = function(owner, v) {
    return om.core._set_state_BANG_.call(null, owner, v);
  };
  var set_state_BANG___3 = function(owner, korks, v) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v);
  };
  set_state_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_BANG___2;
  set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_BANG___3;
  return set_state_BANG_;
}();
om.core.update_state_BANG_ = function() {
  var update_state_BANG_ = null;
  var update_state_BANG___2 = function(owner, f) {
    return om.core.set_state_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_BANG___3 = function(owner, korks, f) {
    return om.core.set_state_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_BANG___2;
  update_state_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_BANG___3;
  return update_state_BANG_;
}();
om.core.refresh_BANG_ = function refresh_BANG_(owner) {
  return om.core.update_state_BANG_.call(null, owner, cljs.core.identity);
};
om.core.get_render_state = function() {
  var get_render_state = null;
  var get_render_state__1 = function(owner) {
    return om.core._get_render_state.call(null, owner);
  };
  var get_render_state__2 = function(owner, korks) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_render_state.call(null, owner, ks);
  };
  get_render_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_render_state__1.call(this, owner);
      case 2:
        return get_render_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_render_state.cljs$core$IFn$_invoke$arity$1 = get_render_state__1;
  get_render_state.cljs$core$IFn$_invoke$arity$2 = get_render_state__2;
  return get_render_state;
}();
om.core.graft = function graft(value, cursor) {
  var state = om.core._state.call(null, cursor);
  var path = om.core._path.call(null, cursor);
  if (om.core.cursor_QMARK_.call(null, value)) {
    throw new Error([cljs.core.str(value), cljs.core.str(" is already a cursor.")].join(""));
  } else {
    var x10569 = cljs.core.clone.call(null, value);
    x10569.om$core$ICursor$ = true;
    x10569.om$core$ICursor$_state$arity$1 = function(x10569, state, path) {
      return function(_) {
        var ___$1 = this;
        return state;
      };
    }(x10569, state, path);
    x10569.om$core$ICursor$_path$arity$1 = function(x10569, state, path) {
      return function(_) {
        var ___$1 = this;
        return path;
      };
    }(x10569, state, path);
    x10569.om$core$ITransact$ = true;
    x10569.om$core$ITransact$_transact_BANG_$arity$4 = function(x10569, state, path) {
      return function(_, ___$1, ___$2, ___$3) {
        var ___$4 = this;
        throw new Error("Cannot transact on graft");
      };
    }(x10569, state, path);
    return x10569;
  }
};
goog.provide("yantra.datatypes");
goog.require("cljs.core");
yantra.datatypes.Slider = function(value, range, __meta, __extmap) {
  this.value = value;
  this.range = range;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
yantra.datatypes.Slider.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4043__auto__) {
  var self__ = this;
  var this__4043__auto____$1 = this;
  var h__3873__auto__ = self__.__hash;
  if (!(h__3873__auto__ == null)) {
    return h__3873__auto__;
  } else {
    var h__3873__auto____$1 = cljs.core.hash_imap.call(null, this__4043__auto____$1);
    self__.__hash = h__3873__auto____$1;
    return h__3873__auto____$1;
  }
};
yantra.datatypes.Slider.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4048__auto__, k__4049__auto__) {
  var self__ = this;
  var this__4048__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4048__auto____$1, k__4049__auto__, null);
};
yantra.datatypes.Slider.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4050__auto__, k9221, else__4051__auto__) {
  var self__ = this;
  var this__4050__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k9221, new cljs.core.Keyword(null, "value", "value", 1125876963))) {
    return self__.value;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k9221, new cljs.core.Keyword(null, "range", "range", 1122184367))) {
      return self__.range;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.get.call(null, self__.__extmap, k9221, else__4051__auto__);
      } else {
        return null;
      }
    }
  }
};
yantra.datatypes.Slider.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4055__auto__, k__4056__auto__, G__9220) {
  var self__ = this;
  var this__4055__auto____$1 = this;
  var pred__9223 = cljs.core.keyword_identical_QMARK_;
  var expr__9224 = k__4056__auto__;
  if (cljs.core.truth_(pred__9223.call(null, new cljs.core.Keyword(null, "value", "value", 1125876963), expr__9224))) {
    return new yantra.datatypes.Slider(G__9220, self__.range, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__9223.call(null, new cljs.core.Keyword(null, "range", "range", 1122184367), expr__9224))) {
      return new yantra.datatypes.Slider(self__.value, G__9220, self__.__meta, self__.__extmap, null);
    } else {
      return new yantra.datatypes.Slider(self__.value, self__.range, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4056__auto__, G__9220), null);
    }
  }
};
yantra.datatypes.Slider.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4062__auto__, writer__4063__auto__, opts__4064__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var pr_pair__4065__auto__ = function(this__4062__auto____$1) {
    return function(keyval__4066__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4063__auto__, cljs.core.pr_writer, "", " ", "", opts__4064__auto__, keyval__4066__auto__);
    };
  }(this__4062__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4063__auto__, pr_pair__4065__auto__, "#yantra.datatypes.Slider{", ", ", "}", opts__4064__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 1125876963), self__.value], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "range", "range", 1122184367), self__.range], null)], null), self__.__extmap));
};
yantra.datatypes.Slider.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4053__auto__, entry__4054__auto__) {
  var self__ = this;
  var this__4053__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4054__auto__)) {
    return cljs.core._assoc.call(null, this__4053__auto____$1, cljs.core._nth.call(null, entry__4054__auto__, 0), cljs.core._nth.call(null, entry__4054__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4053__auto____$1, entry__4054__auto__);
  }
};
yantra.datatypes.Slider.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4060__auto__) {
  var self__ = this;
  var this__4060__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 1125876963), self__.value], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "range", "range", 1122184367), self__.range], null)], null), self__.__extmap));
};
yantra.datatypes.Slider.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4052__auto__) {
  var self__ = this;
  var this__4052__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
yantra.datatypes.Slider.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4044__auto__, other__4045__auto__) {
  var self__ = this;
  var this__4044__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3450__auto__ = other__4045__auto__;
    if (cljs.core.truth_(and__3450__auto__)) {
      return this__4044__auto____$1.constructor === other__4045__auto__.constructor && cljs.core.equiv_map.call(null, this__4044__auto____$1, other__4045__auto__);
    } else {
      return and__3450__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
yantra.datatypes.Slider.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4047__auto__, G__9220) {
  var self__ = this;
  var this__4047__auto____$1 = this;
  return new yantra.datatypes.Slider(self__.value, self__.range, G__9220, self__.__extmap, self__.__hash);
};
yantra.datatypes.Slider.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4042__auto__) {
  var self__ = this;
  var this__4042__auto____$1 = this;
  return new yantra.datatypes.Slider(self__.value, self__.range, self__.__meta, self__.__extmap, self__.__hash);
};
yantra.datatypes.Slider.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4046__auto__) {
  var self__ = this;
  var this__4046__auto____$1 = this;
  return self__.__meta;
};
yantra.datatypes.Slider.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4057__auto__, k__4058__auto__) {
  var self__ = this;
  var this__4057__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "range", "range", 1122184367), null, new cljs.core.Keyword(null, "value", "value", 1125876963), null], null), null), k__4058__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4057__auto____$1), self__.__meta), k__4058__auto__);
  } else {
    return new yantra.datatypes.Slider(self__.value, self__.range, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4058__auto__)), null);
  }
};
yantra.datatypes.Slider.cljs$lang$type = true;
yantra.datatypes.Slider.cljs$lang$ctorPrSeq = function(this__4082__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "yantra.datatypes/Slider");
};
yantra.datatypes.Slider.cljs$lang$ctorPrWriter = function(this__4082__auto__, writer__4083__auto__) {
  return cljs.core._write.call(null, writer__4083__auto__, "yantra.datatypes/Slider");
};
yantra.datatypes.__GT_Slider = function __GT_Slider(value, range) {
  return new yantra.datatypes.Slider(value, range);
};
yantra.datatypes.map__GT_Slider = function map__GT_Slider(G__9222) {
  return new yantra.datatypes.Slider((new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(G__9222), (new cljs.core.Keyword(null, "range", "range", 1122184367)).cljs$core$IFn$_invoke$arity$1(G__9222), null, cljs.core.dissoc.call(null, G__9222, new cljs.core.Keyword(null, "value", "value", 1125876963), new cljs.core.Keyword(null, "range", "range", 1122184367)));
};
yantra.datatypes.Column = function(contents, __meta, __extmap) {
  this.contents = contents;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
yantra.datatypes.Column.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4043__auto__) {
  var self__ = this;
  var this__4043__auto____$1 = this;
  var h__3873__auto__ = self__.__hash;
  if (!(h__3873__auto__ == null)) {
    return h__3873__auto__;
  } else {
    var h__3873__auto____$1 = cljs.core.hash_imap.call(null, this__4043__auto____$1);
    self__.__hash = h__3873__auto____$1;
    return h__3873__auto____$1;
  }
};
yantra.datatypes.Column.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4048__auto__, k__4049__auto__) {
  var self__ = this;
  var this__4048__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4048__auto____$1, k__4049__auto__, null);
};
yantra.datatypes.Column.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4050__auto__, k9227, else__4051__auto__) {
  var self__ = this;
  var this__4050__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k9227, new cljs.core.Keyword(null, "contents", "contents", 4741549708))) {
    return self__.contents;
  } else {
    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return cljs.core.get.call(null, self__.__extmap, k9227, else__4051__auto__);
    } else {
      return null;
    }
  }
};
yantra.datatypes.Column.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4055__auto__, k__4056__auto__, G__9226) {
  var self__ = this;
  var this__4055__auto____$1 = this;
  var pred__9229 = cljs.core.keyword_identical_QMARK_;
  var expr__9230 = k__4056__auto__;
  if (cljs.core.truth_(pred__9229.call(null, new cljs.core.Keyword(null, "contents", "contents", 4741549708), expr__9230))) {
    return new yantra.datatypes.Column(G__9226, self__.__meta, self__.__extmap, null);
  } else {
    return new yantra.datatypes.Column(self__.contents, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4056__auto__, G__9226), null);
  }
};
yantra.datatypes.Column.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4062__auto__, writer__4063__auto__, opts__4064__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var pr_pair__4065__auto__ = function(this__4062__auto____$1) {
    return function(keyval__4066__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4063__auto__, cljs.core.pr_writer, "", " ", "", opts__4064__auto__, keyval__4066__auto__);
    };
  }(this__4062__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4063__auto__, pr_pair__4065__auto__, "#yantra.datatypes.Column{", ", ", "}", opts__4064__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "contents", "contents", 4741549708), self__.contents], null)], null), self__.__extmap));
};
yantra.datatypes.Column.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4053__auto__, entry__4054__auto__) {
  var self__ = this;
  var this__4053__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4054__auto__)) {
    return cljs.core._assoc.call(null, this__4053__auto____$1, cljs.core._nth.call(null, entry__4054__auto__, 0), cljs.core._nth.call(null, entry__4054__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4053__auto____$1, entry__4054__auto__);
  }
};
yantra.datatypes.Column.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4060__auto__) {
  var self__ = this;
  var this__4060__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "contents", "contents", 4741549708), self__.contents], null)], null), self__.__extmap));
};
yantra.datatypes.Column.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4052__auto__) {
  var self__ = this;
  var this__4052__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
yantra.datatypes.Column.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4044__auto__, other__4045__auto__) {
  var self__ = this;
  var this__4044__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3450__auto__ = other__4045__auto__;
    if (cljs.core.truth_(and__3450__auto__)) {
      return this__4044__auto____$1.constructor === other__4045__auto__.constructor && cljs.core.equiv_map.call(null, this__4044__auto____$1, other__4045__auto__);
    } else {
      return and__3450__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
yantra.datatypes.Column.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4047__auto__, G__9226) {
  var self__ = this;
  var this__4047__auto____$1 = this;
  return new yantra.datatypes.Column(self__.contents, G__9226, self__.__extmap, self__.__hash);
};
yantra.datatypes.Column.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4042__auto__) {
  var self__ = this;
  var this__4042__auto____$1 = this;
  return new yantra.datatypes.Column(self__.contents, self__.__meta, self__.__extmap, self__.__hash);
};
yantra.datatypes.Column.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4046__auto__) {
  var self__ = this;
  var this__4046__auto____$1 = this;
  return self__.__meta;
};
yantra.datatypes.Column.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4057__auto__, k__4058__auto__) {
  var self__ = this;
  var this__4057__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "contents", "contents", 4741549708), null], null), null), k__4058__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4057__auto____$1), self__.__meta), k__4058__auto__);
  } else {
    return new yantra.datatypes.Column(self__.contents, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4058__auto__)), null);
  }
};
yantra.datatypes.Column.cljs$lang$type = true;
yantra.datatypes.Column.cljs$lang$ctorPrSeq = function(this__4082__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "yantra.datatypes/Column");
};
yantra.datatypes.Column.cljs$lang$ctorPrWriter = function(this__4082__auto__, writer__4083__auto__) {
  return cljs.core._write.call(null, writer__4083__auto__, "yantra.datatypes/Column");
};
yantra.datatypes.__GT_Column = function __GT_Column(contents) {
  return new yantra.datatypes.Column(contents);
};
yantra.datatypes.map__GT_Column = function map__GT_Column(G__9228) {
  return new yantra.datatypes.Column((new cljs.core.Keyword(null, "contents", "contents", 4741549708)).cljs$core$IFn$_invoke$arity$1(G__9228), null, cljs.core.dissoc.call(null, G__9228, new cljs.core.Keyword(null, "contents", "contents", 4741549708)));
};
yantra.datatypes.Graphics = function(contents, __meta, __extmap) {
  this.contents = contents;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
yantra.datatypes.Graphics.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4043__auto__) {
  var self__ = this;
  var this__4043__auto____$1 = this;
  var h__3873__auto__ = self__.__hash;
  if (!(h__3873__auto__ == null)) {
    return h__3873__auto__;
  } else {
    var h__3873__auto____$1 = cljs.core.hash_imap.call(null, this__4043__auto____$1);
    self__.__hash = h__3873__auto____$1;
    return h__3873__auto____$1;
  }
};
yantra.datatypes.Graphics.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4048__auto__, k__4049__auto__) {
  var self__ = this;
  var this__4048__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4048__auto____$1, k__4049__auto__, null);
};
yantra.datatypes.Graphics.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4050__auto__, k9233, else__4051__auto__) {
  var self__ = this;
  var this__4050__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k9233, new cljs.core.Keyword(null, "contents", "contents", 4741549708))) {
    return self__.contents;
  } else {
    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return cljs.core.get.call(null, self__.__extmap, k9233, else__4051__auto__);
    } else {
      return null;
    }
  }
};
yantra.datatypes.Graphics.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4055__auto__, k__4056__auto__, G__9232) {
  var self__ = this;
  var this__4055__auto____$1 = this;
  var pred__9235 = cljs.core.keyword_identical_QMARK_;
  var expr__9236 = k__4056__auto__;
  if (cljs.core.truth_(pred__9235.call(null, new cljs.core.Keyword(null, "contents", "contents", 4741549708), expr__9236))) {
    return new yantra.datatypes.Graphics(G__9232, self__.__meta, self__.__extmap, null);
  } else {
    return new yantra.datatypes.Graphics(self__.contents, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4056__auto__, G__9232), null);
  }
};
yantra.datatypes.Graphics.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4062__auto__, writer__4063__auto__, opts__4064__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var pr_pair__4065__auto__ = function(this__4062__auto____$1) {
    return function(keyval__4066__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4063__auto__, cljs.core.pr_writer, "", " ", "", opts__4064__auto__, keyval__4066__auto__);
    };
  }(this__4062__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4063__auto__, pr_pair__4065__auto__, "#yantra.datatypes.Graphics{", ", ", "}", opts__4064__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "contents", "contents", 4741549708), self__.contents], null)], null), self__.__extmap));
};
yantra.datatypes.Graphics.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4053__auto__, entry__4054__auto__) {
  var self__ = this;
  var this__4053__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4054__auto__)) {
    return cljs.core._assoc.call(null, this__4053__auto____$1, cljs.core._nth.call(null, entry__4054__auto__, 0), cljs.core._nth.call(null, entry__4054__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4053__auto____$1, entry__4054__auto__);
  }
};
yantra.datatypes.Graphics.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4060__auto__) {
  var self__ = this;
  var this__4060__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "contents", "contents", 4741549708), self__.contents], null)], null), self__.__extmap));
};
yantra.datatypes.Graphics.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4052__auto__) {
  var self__ = this;
  var this__4052__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
yantra.datatypes.Graphics.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4044__auto__, other__4045__auto__) {
  var self__ = this;
  var this__4044__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3450__auto__ = other__4045__auto__;
    if (cljs.core.truth_(and__3450__auto__)) {
      return this__4044__auto____$1.constructor === other__4045__auto__.constructor && cljs.core.equiv_map.call(null, this__4044__auto____$1, other__4045__auto__);
    } else {
      return and__3450__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
yantra.datatypes.Graphics.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4047__auto__, G__9232) {
  var self__ = this;
  var this__4047__auto____$1 = this;
  return new yantra.datatypes.Graphics(self__.contents, G__9232, self__.__extmap, self__.__hash);
};
yantra.datatypes.Graphics.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4042__auto__) {
  var self__ = this;
  var this__4042__auto____$1 = this;
  return new yantra.datatypes.Graphics(self__.contents, self__.__meta, self__.__extmap, self__.__hash);
};
yantra.datatypes.Graphics.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4046__auto__) {
  var self__ = this;
  var this__4046__auto____$1 = this;
  return self__.__meta;
};
yantra.datatypes.Graphics.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4057__auto__, k__4058__auto__) {
  var self__ = this;
  var this__4057__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "contents", "contents", 4741549708), null], null), null), k__4058__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4057__auto____$1), self__.__meta), k__4058__auto__);
  } else {
    return new yantra.datatypes.Graphics(self__.contents, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4058__auto__)), null);
  }
};
yantra.datatypes.Graphics.cljs$lang$type = true;
yantra.datatypes.Graphics.cljs$lang$ctorPrSeq = function(this__4082__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "yantra.datatypes/Graphics");
};
yantra.datatypes.Graphics.cljs$lang$ctorPrWriter = function(this__4082__auto__, writer__4083__auto__) {
  return cljs.core._write.call(null, writer__4083__auto__, "yantra.datatypes/Graphics");
};
yantra.datatypes.__GT_Graphics = function __GT_Graphics(contents) {
  return new yantra.datatypes.Graphics(contents);
};
yantra.datatypes.map__GT_Graphics = function map__GT_Graphics(G__9234) {
  return new yantra.datatypes.Graphics((new cljs.core.Keyword(null, "contents", "contents", 4741549708)).cljs$core$IFn$_invoke$arity$1(G__9234), null, cljs.core.dissoc.call(null, G__9234, new cljs.core.Keyword(null, "contents", "contents", 4741549708)));
};
yantra.datatypes.Point = function(point, __meta, __extmap) {
  this.point = point;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
yantra.datatypes.Point.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4043__auto__) {
  var self__ = this;
  var this__4043__auto____$1 = this;
  var h__3873__auto__ = self__.__hash;
  if (!(h__3873__auto__ == null)) {
    return h__3873__auto__;
  } else {
    var h__3873__auto____$1 = cljs.core.hash_imap.call(null, this__4043__auto____$1);
    self__.__hash = h__3873__auto____$1;
    return h__3873__auto____$1;
  }
};
yantra.datatypes.Point.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4048__auto__, k__4049__auto__) {
  var self__ = this;
  var this__4048__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4048__auto____$1, k__4049__auto__, null);
};
yantra.datatypes.Point.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4050__auto__, k9239, else__4051__auto__) {
  var self__ = this;
  var this__4050__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k9239, new cljs.core.Keyword(null, "point", "point", 1120749826))) {
    return self__.point;
  } else {
    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return cljs.core.get.call(null, self__.__extmap, k9239, else__4051__auto__);
    } else {
      return null;
    }
  }
};
yantra.datatypes.Point.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4055__auto__, k__4056__auto__, G__9238) {
  var self__ = this;
  var this__4055__auto____$1 = this;
  var pred__9241 = cljs.core.keyword_identical_QMARK_;
  var expr__9242 = k__4056__auto__;
  if (cljs.core.truth_(pred__9241.call(null, new cljs.core.Keyword(null, "point", "point", 1120749826), expr__9242))) {
    return new yantra.datatypes.Point(G__9238, self__.__meta, self__.__extmap, null);
  } else {
    return new yantra.datatypes.Point(self__.point, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4056__auto__, G__9238), null);
  }
};
yantra.datatypes.Point.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4062__auto__, writer__4063__auto__, opts__4064__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var pr_pair__4065__auto__ = function(this__4062__auto____$1) {
    return function(keyval__4066__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4063__auto__, cljs.core.pr_writer, "", " ", "", opts__4064__auto__, keyval__4066__auto__);
    };
  }(this__4062__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4063__auto__, pr_pair__4065__auto__, "#yantra.datatypes.Point{", ", ", "}", opts__4064__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "point", "point", 1120749826), self__.point], null)], null), self__.__extmap));
};
yantra.datatypes.Point.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4053__auto__, entry__4054__auto__) {
  var self__ = this;
  var this__4053__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4054__auto__)) {
    return cljs.core._assoc.call(null, this__4053__auto____$1, cljs.core._nth.call(null, entry__4054__auto__, 0), cljs.core._nth.call(null, entry__4054__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4053__auto____$1, entry__4054__auto__);
  }
};
yantra.datatypes.Point.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4060__auto__) {
  var self__ = this;
  var this__4060__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "point", "point", 1120749826), self__.point], null)], null), self__.__extmap));
};
yantra.datatypes.Point.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4052__auto__) {
  var self__ = this;
  var this__4052__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
yantra.datatypes.Point.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4044__auto__, other__4045__auto__) {
  var self__ = this;
  var this__4044__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3450__auto__ = other__4045__auto__;
    if (cljs.core.truth_(and__3450__auto__)) {
      return this__4044__auto____$1.constructor === other__4045__auto__.constructor && cljs.core.equiv_map.call(null, this__4044__auto____$1, other__4045__auto__);
    } else {
      return and__3450__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
yantra.datatypes.Point.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4047__auto__, G__9238) {
  var self__ = this;
  var this__4047__auto____$1 = this;
  return new yantra.datatypes.Point(self__.point, G__9238, self__.__extmap, self__.__hash);
};
yantra.datatypes.Point.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4042__auto__) {
  var self__ = this;
  var this__4042__auto____$1 = this;
  return new yantra.datatypes.Point(self__.point, self__.__meta, self__.__extmap, self__.__hash);
};
yantra.datatypes.Point.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4046__auto__) {
  var self__ = this;
  var this__4046__auto____$1 = this;
  return self__.__meta;
};
yantra.datatypes.Point.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4057__auto__, k__4058__auto__) {
  var self__ = this;
  var this__4057__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "point", "point", 1120749826), null], null), null), k__4058__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4057__auto____$1), self__.__meta), k__4058__auto__);
  } else {
    return new yantra.datatypes.Point(self__.point, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4058__auto__)), null);
  }
};
yantra.datatypes.Point.cljs$lang$type = true;
yantra.datatypes.Point.cljs$lang$ctorPrSeq = function(this__4082__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "yantra.datatypes/Point");
};
yantra.datatypes.Point.cljs$lang$ctorPrWriter = function(this__4082__auto__, writer__4083__auto__) {
  return cljs.core._write.call(null, writer__4083__auto__, "yantra.datatypes/Point");
};
yantra.datatypes.__GT_Point = function __GT_Point(point) {
  return new yantra.datatypes.Point(point);
};
yantra.datatypes.map__GT_Point = function map__GT_Point(G__9240) {
  return new yantra.datatypes.Point((new cljs.core.Keyword(null, "point", "point", 1120749826)).cljs$core$IFn$_invoke$arity$1(G__9240), null, cljs.core.dissoc.call(null, G__9240, new cljs.core.Keyword(null, "point", "point", 1120749826)));
};
yantra.datatypes.Line = function(points, __meta, __extmap) {
  this.points = points;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
yantra.datatypes.Line.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4043__auto__) {
  var self__ = this;
  var this__4043__auto____$1 = this;
  var h__3873__auto__ = self__.__hash;
  if (!(h__3873__auto__ == null)) {
    return h__3873__auto__;
  } else {
    var h__3873__auto____$1 = cljs.core.hash_imap.call(null, this__4043__auto____$1);
    self__.__hash = h__3873__auto____$1;
    return h__3873__auto____$1;
  }
};
yantra.datatypes.Line.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4048__auto__, k__4049__auto__) {
  var self__ = this;
  var this__4048__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4048__auto____$1, k__4049__auto__, null);
};
yantra.datatypes.Line.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4050__auto__, k9245, else__4051__auto__) {
  var self__ = this;
  var this__4050__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k9245, new cljs.core.Keyword(null, "points", "points", 4326117461))) {
    return self__.points;
  } else {
    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return cljs.core.get.call(null, self__.__extmap, k9245, else__4051__auto__);
    } else {
      return null;
    }
  }
};
yantra.datatypes.Line.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4055__auto__, k__4056__auto__, G__9244) {
  var self__ = this;
  var this__4055__auto____$1 = this;
  var pred__9247 = cljs.core.keyword_identical_QMARK_;
  var expr__9248 = k__4056__auto__;
  if (cljs.core.truth_(pred__9247.call(null, new cljs.core.Keyword(null, "points", "points", 4326117461), expr__9248))) {
    return new yantra.datatypes.Line(G__9244, self__.__meta, self__.__extmap, null);
  } else {
    return new yantra.datatypes.Line(self__.points, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4056__auto__, G__9244), null);
  }
};
yantra.datatypes.Line.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4062__auto__, writer__4063__auto__, opts__4064__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var pr_pair__4065__auto__ = function(this__4062__auto____$1) {
    return function(keyval__4066__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4063__auto__, cljs.core.pr_writer, "", " ", "", opts__4064__auto__, keyval__4066__auto__);
    };
  }(this__4062__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4063__auto__, pr_pair__4065__auto__, "#yantra.datatypes.Line{", ", ", "}", opts__4064__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "points", "points", 4326117461), self__.points], null)], null), self__.__extmap));
};
yantra.datatypes.Line.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4053__auto__, entry__4054__auto__) {
  var self__ = this;
  var this__4053__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4054__auto__)) {
    return cljs.core._assoc.call(null, this__4053__auto____$1, cljs.core._nth.call(null, entry__4054__auto__, 0), cljs.core._nth.call(null, entry__4054__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4053__auto____$1, entry__4054__auto__);
  }
};
yantra.datatypes.Line.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4060__auto__) {
  var self__ = this;
  var this__4060__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "points", "points", 4326117461), self__.points], null)], null), self__.__extmap));
};
yantra.datatypes.Line.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4052__auto__) {
  var self__ = this;
  var this__4052__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
yantra.datatypes.Line.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4044__auto__, other__4045__auto__) {
  var self__ = this;
  var this__4044__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3450__auto__ = other__4045__auto__;
    if (cljs.core.truth_(and__3450__auto__)) {
      return this__4044__auto____$1.constructor === other__4045__auto__.constructor && cljs.core.equiv_map.call(null, this__4044__auto____$1, other__4045__auto__);
    } else {
      return and__3450__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
yantra.datatypes.Line.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4047__auto__, G__9244) {
  var self__ = this;
  var this__4047__auto____$1 = this;
  return new yantra.datatypes.Line(self__.points, G__9244, self__.__extmap, self__.__hash);
};
yantra.datatypes.Line.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4042__auto__) {
  var self__ = this;
  var this__4042__auto____$1 = this;
  return new yantra.datatypes.Line(self__.points, self__.__meta, self__.__extmap, self__.__hash);
};
yantra.datatypes.Line.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4046__auto__) {
  var self__ = this;
  var this__4046__auto____$1 = this;
  return self__.__meta;
};
yantra.datatypes.Line.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4057__auto__, k__4058__auto__) {
  var self__ = this;
  var this__4057__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "points", "points", 4326117461), null], null), null), k__4058__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4057__auto____$1), self__.__meta), k__4058__auto__);
  } else {
    return new yantra.datatypes.Line(self__.points, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4058__auto__)), null);
  }
};
yantra.datatypes.Line.cljs$lang$type = true;
yantra.datatypes.Line.cljs$lang$ctorPrSeq = function(this__4082__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "yantra.datatypes/Line");
};
yantra.datatypes.Line.cljs$lang$ctorPrWriter = function(this__4082__auto__, writer__4083__auto__) {
  return cljs.core._write.call(null, writer__4083__auto__, "yantra.datatypes/Line");
};
yantra.datatypes.__GT_Line = function __GT_Line(points) {
  return new yantra.datatypes.Line(points);
};
yantra.datatypes.map__GT_Line = function map__GT_Line(G__9246) {
  return new yantra.datatypes.Line((new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(G__9246), null, cljs.core.dissoc.call(null, G__9246, new cljs.core.Keyword(null, "points", "points", 4326117461)));
};
yantra.datatypes.Disk = function(point, radius, __meta, __extmap) {
  this.point = point;
  this.radius = radius;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
yantra.datatypes.Disk.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4043__auto__) {
  var self__ = this;
  var this__4043__auto____$1 = this;
  var h__3873__auto__ = self__.__hash;
  if (!(h__3873__auto__ == null)) {
    return h__3873__auto__;
  } else {
    var h__3873__auto____$1 = cljs.core.hash_imap.call(null, this__4043__auto____$1);
    self__.__hash = h__3873__auto____$1;
    return h__3873__auto____$1;
  }
};
yantra.datatypes.Disk.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4048__auto__, k__4049__auto__) {
  var self__ = this;
  var this__4048__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4048__auto____$1, k__4049__auto__, null);
};
yantra.datatypes.Disk.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4050__auto__, k9251, else__4051__auto__) {
  var self__ = this;
  var this__4050__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k9251, new cljs.core.Keyword(null, "point", "point", 1120749826))) {
    return self__.point;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k9251, new cljs.core.Keyword(null, "radius", "radius", 4370292740))) {
      return self__.radius;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.get.call(null, self__.__extmap, k9251, else__4051__auto__);
      } else {
        return null;
      }
    }
  }
};
yantra.datatypes.Disk.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4055__auto__, k__4056__auto__, G__9250) {
  var self__ = this;
  var this__4055__auto____$1 = this;
  var pred__9253 = cljs.core.keyword_identical_QMARK_;
  var expr__9254 = k__4056__auto__;
  if (cljs.core.truth_(pred__9253.call(null, new cljs.core.Keyword(null, "point", "point", 1120749826), expr__9254))) {
    return new yantra.datatypes.Disk(G__9250, self__.radius, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__9253.call(null, new cljs.core.Keyword(null, "radius", "radius", 4370292740), expr__9254))) {
      return new yantra.datatypes.Disk(self__.point, G__9250, self__.__meta, self__.__extmap, null);
    } else {
      return new yantra.datatypes.Disk(self__.point, self__.radius, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4056__auto__, G__9250), null);
    }
  }
};
yantra.datatypes.Disk.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4062__auto__, writer__4063__auto__, opts__4064__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var pr_pair__4065__auto__ = function(this__4062__auto____$1) {
    return function(keyval__4066__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4063__auto__, cljs.core.pr_writer, "", " ", "", opts__4064__auto__, keyval__4066__auto__);
    };
  }(this__4062__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4063__auto__, pr_pair__4065__auto__, "#yantra.datatypes.Disk{", ", ", "}", opts__4064__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "point", "point", 1120749826), self__.point], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "radius", "radius", 4370292740), self__.radius], null)], null), self__.__extmap));
};
yantra.datatypes.Disk.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4053__auto__, entry__4054__auto__) {
  var self__ = this;
  var this__4053__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4054__auto__)) {
    return cljs.core._assoc.call(null, this__4053__auto____$1, cljs.core._nth.call(null, entry__4054__auto__, 0), cljs.core._nth.call(null, entry__4054__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4053__auto____$1, entry__4054__auto__);
  }
};
yantra.datatypes.Disk.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4060__auto__) {
  var self__ = this;
  var this__4060__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "point", "point", 1120749826), self__.point], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "radius", "radius", 4370292740), self__.radius], null)], null), self__.__extmap));
};
yantra.datatypes.Disk.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4052__auto__) {
  var self__ = this;
  var this__4052__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
yantra.datatypes.Disk.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4044__auto__, other__4045__auto__) {
  var self__ = this;
  var this__4044__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3450__auto__ = other__4045__auto__;
    if (cljs.core.truth_(and__3450__auto__)) {
      return this__4044__auto____$1.constructor === other__4045__auto__.constructor && cljs.core.equiv_map.call(null, this__4044__auto____$1, other__4045__auto__);
    } else {
      return and__3450__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
yantra.datatypes.Disk.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4047__auto__, G__9250) {
  var self__ = this;
  var this__4047__auto____$1 = this;
  return new yantra.datatypes.Disk(self__.point, self__.radius, G__9250, self__.__extmap, self__.__hash);
};
yantra.datatypes.Disk.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4042__auto__) {
  var self__ = this;
  var this__4042__auto____$1 = this;
  return new yantra.datatypes.Disk(self__.point, self__.radius, self__.__meta, self__.__extmap, self__.__hash);
};
yantra.datatypes.Disk.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4046__auto__) {
  var self__ = this;
  var this__4046__auto____$1 = this;
  return self__.__meta;
};
yantra.datatypes.Disk.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4057__auto__, k__4058__auto__) {
  var self__ = this;
  var this__4057__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "point", "point", 1120749826), null, new cljs.core.Keyword(null, "radius", "radius", 4370292740), null], null), null), k__4058__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4057__auto____$1), self__.__meta), k__4058__auto__);
  } else {
    return new yantra.datatypes.Disk(self__.point, self__.radius, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4058__auto__)), null);
  }
};
yantra.datatypes.Disk.cljs$lang$type = true;
yantra.datatypes.Disk.cljs$lang$ctorPrSeq = function(this__4082__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "yantra.datatypes/Disk");
};
yantra.datatypes.Disk.cljs$lang$ctorPrWriter = function(this__4082__auto__, writer__4083__auto__) {
  return cljs.core._write.call(null, writer__4083__auto__, "yantra.datatypes/Disk");
};
yantra.datatypes.__GT_Disk = function __GT_Disk(point, radius) {
  return new yantra.datatypes.Disk(point, radius);
};
yantra.datatypes.map__GT_Disk = function map__GT_Disk(G__9252) {
  return new yantra.datatypes.Disk((new cljs.core.Keyword(null, "point", "point", 1120749826)).cljs$core$IFn$_invoke$arity$1(G__9252), (new cljs.core.Keyword(null, "radius", "radius", 4370292740)).cljs$core$IFn$_invoke$arity$1(G__9252), null, cljs.core.dissoc.call(null, G__9252, new cljs.core.Keyword(null, "point", "point", 1120749826), new cljs.core.Keyword(null, "radius", "radius", 4370292740)));
};
yantra.datatypes.Rectangle = function(p1, p2, __meta, __extmap) {
  this.p1 = p1;
  this.p2 = p2;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
yantra.datatypes.Rectangle.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4043__auto__) {
  var self__ = this;
  var this__4043__auto____$1 = this;
  var h__3873__auto__ = self__.__hash;
  if (!(h__3873__auto__ == null)) {
    return h__3873__auto__;
  } else {
    var h__3873__auto____$1 = cljs.core.hash_imap.call(null, this__4043__auto____$1);
    self__.__hash = h__3873__auto____$1;
    return h__3873__auto____$1;
  }
};
yantra.datatypes.Rectangle.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4048__auto__, k__4049__auto__) {
  var self__ = this;
  var this__4048__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4048__auto____$1, k__4049__auto__, null);
};
yantra.datatypes.Rectangle.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4050__auto__, k9257, else__4051__auto__) {
  var self__ = this;
  var this__4050__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k9257, new cljs.core.Keyword(null, "p1", "p1", 1013907763))) {
    return self__.p1;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k9257, new cljs.core.Keyword(null, "p2", "p2", 1013907764))) {
      return self__.p2;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.get.call(null, self__.__extmap, k9257, else__4051__auto__);
      } else {
        return null;
      }
    }
  }
};
yantra.datatypes.Rectangle.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4055__auto__, k__4056__auto__, G__9256) {
  var self__ = this;
  var this__4055__auto____$1 = this;
  var pred__9259 = cljs.core.keyword_identical_QMARK_;
  var expr__9260 = k__4056__auto__;
  if (cljs.core.truth_(pred__9259.call(null, new cljs.core.Keyword(null, "p1", "p1", 1013907763), expr__9260))) {
    return new yantra.datatypes.Rectangle(G__9256, self__.p2, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__9259.call(null, new cljs.core.Keyword(null, "p2", "p2", 1013907764), expr__9260))) {
      return new yantra.datatypes.Rectangle(self__.p1, G__9256, self__.__meta, self__.__extmap, null);
    } else {
      return new yantra.datatypes.Rectangle(self__.p1, self__.p2, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4056__auto__, G__9256), null);
    }
  }
};
yantra.datatypes.Rectangle.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4062__auto__, writer__4063__auto__, opts__4064__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var pr_pair__4065__auto__ = function(this__4062__auto____$1) {
    return function(keyval__4066__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4063__auto__, cljs.core.pr_writer, "", " ", "", opts__4064__auto__, keyval__4066__auto__);
    };
  }(this__4062__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4063__auto__, pr_pair__4065__auto__, "#yantra.datatypes.Rectangle{", ", ", "}", opts__4064__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p1", "p1", 1013907763), self__.p1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "p2", "p2", 1013907764), self__.p2], null)], null), self__.__extmap));
};
yantra.datatypes.Rectangle.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4053__auto__, entry__4054__auto__) {
  var self__ = this;
  var this__4053__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4054__auto__)) {
    return cljs.core._assoc.call(null, this__4053__auto____$1, cljs.core._nth.call(null, entry__4054__auto__, 0), cljs.core._nth.call(null, entry__4054__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4053__auto____$1, entry__4054__auto__);
  }
};
yantra.datatypes.Rectangle.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4060__auto__) {
  var self__ = this;
  var this__4060__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p1", "p1", 1013907763), self__.p1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p2", "p2", 1013907764), self__.p2], null)], null), self__.__extmap));
};
yantra.datatypes.Rectangle.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4052__auto__) {
  var self__ = this;
  var this__4052__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
yantra.datatypes.Rectangle.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4044__auto__, other__4045__auto__) {
  var self__ = this;
  var this__4044__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3450__auto__ = other__4045__auto__;
    if (cljs.core.truth_(and__3450__auto__)) {
      return this__4044__auto____$1.constructor === other__4045__auto__.constructor && cljs.core.equiv_map.call(null, this__4044__auto____$1, other__4045__auto__);
    } else {
      return and__3450__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
yantra.datatypes.Rectangle.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4047__auto__, G__9256) {
  var self__ = this;
  var this__4047__auto____$1 = this;
  return new yantra.datatypes.Rectangle(self__.p1, self__.p2, G__9256, self__.__extmap, self__.__hash);
};
yantra.datatypes.Rectangle.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4042__auto__) {
  var self__ = this;
  var this__4042__auto____$1 = this;
  return new yantra.datatypes.Rectangle(self__.p1, self__.p2, self__.__meta, self__.__extmap, self__.__hash);
};
yantra.datatypes.Rectangle.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4046__auto__) {
  var self__ = this;
  var this__4046__auto____$1 = this;
  return self__.__meta;
};
yantra.datatypes.Rectangle.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4057__auto__, k__4058__auto__) {
  var self__ = this;
  var this__4057__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "p1", "p1", 1013907763), null, new cljs.core.Keyword(null, "p2", "p2", 1013907764), null], null), null), k__4058__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4057__auto____$1), self__.__meta), k__4058__auto__);
  } else {
    return new yantra.datatypes.Rectangle(self__.p1, self__.p2, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4058__auto__)), null);
  }
};
yantra.datatypes.Rectangle.cljs$lang$type = true;
yantra.datatypes.Rectangle.cljs$lang$ctorPrSeq = function(this__4082__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "yantra.datatypes/Rectangle");
};
yantra.datatypes.Rectangle.cljs$lang$ctorPrWriter = function(this__4082__auto__, writer__4083__auto__) {
  return cljs.core._write.call(null, writer__4083__auto__, "yantra.datatypes/Rectangle");
};
yantra.datatypes.__GT_Rectangle = function __GT_Rectangle(p1, p2) {
  return new yantra.datatypes.Rectangle(p1, p2);
};
yantra.datatypes.map__GT_Rectangle = function map__GT_Rectangle(G__9258) {
  return new yantra.datatypes.Rectangle((new cljs.core.Keyword(null, "p1", "p1", 1013907763)).cljs$core$IFn$_invoke$arity$1(G__9258), (new cljs.core.Keyword(null, "p2", "p2", 1013907764)).cljs$core$IFn$_invoke$arity$1(G__9258), null, cljs.core.dissoc.call(null, G__9258, new cljs.core.Keyword(null, "p1", "p1", 1013907763), new cljs.core.Keyword(null, "p2", "p2", 1013907764)));
};
yantra.datatypes.Style = function(style, prims, __meta, __extmap) {
  this.style = style;
  this.prims = prims;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
yantra.datatypes.Style.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4043__auto__) {
  var self__ = this;
  var this__4043__auto____$1 = this;
  var h__3873__auto__ = self__.__hash;
  if (!(h__3873__auto__ == null)) {
    return h__3873__auto__;
  } else {
    var h__3873__auto____$1 = cljs.core.hash_imap.call(null, this__4043__auto____$1);
    self__.__hash = h__3873__auto____$1;
    return h__3873__auto____$1;
  }
};
yantra.datatypes.Style.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4048__auto__, k__4049__auto__) {
  var self__ = this;
  var this__4048__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4048__auto____$1, k__4049__auto__, null);
};
yantra.datatypes.Style.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4050__auto__, k9263, else__4051__auto__) {
  var self__ = this;
  var this__4050__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k9263, new cljs.core.Keyword(null, "style", "style", 1123684643))) {
    return self__.style;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k9263, new cljs.core.Keyword(null, "prims", "prims", 1120839167))) {
      return self__.prims;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.get.call(null, self__.__extmap, k9263, else__4051__auto__);
      } else {
        return null;
      }
    }
  }
};
yantra.datatypes.Style.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4055__auto__, k__4056__auto__, G__9262) {
  var self__ = this;
  var this__4055__auto____$1 = this;
  var pred__9265 = cljs.core.keyword_identical_QMARK_;
  var expr__9266 = k__4056__auto__;
  if (cljs.core.truth_(pred__9265.call(null, new cljs.core.Keyword(null, "style", "style", 1123684643), expr__9266))) {
    return new yantra.datatypes.Style(G__9262, self__.prims, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__9265.call(null, new cljs.core.Keyword(null, "prims", "prims", 1120839167), expr__9266))) {
      return new yantra.datatypes.Style(self__.style, G__9262, self__.__meta, self__.__extmap, null);
    } else {
      return new yantra.datatypes.Style(self__.style, self__.prims, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4056__auto__, G__9262), null);
    }
  }
};
yantra.datatypes.Style.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4062__auto__, writer__4063__auto__, opts__4064__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var pr_pair__4065__auto__ = function(this__4062__auto____$1) {
    return function(keyval__4066__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4063__auto__, cljs.core.pr_writer, "", " ", "", opts__4064__auto__, keyval__4066__auto__);
    };
  }(this__4062__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4063__auto__, pr_pair__4065__auto__, "#yantra.datatypes.Style{", ", ", "}", opts__4064__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "style", "style", 1123684643), self__.style], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "prims", "prims", 1120839167), self__.prims], null)], null), self__.__extmap));
};
yantra.datatypes.Style.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4053__auto__, entry__4054__auto__) {
  var self__ = this;
  var this__4053__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4054__auto__)) {
    return cljs.core._assoc.call(null, this__4053__auto____$1, cljs.core._nth.call(null, entry__4054__auto__, 0), cljs.core._nth.call(null, entry__4054__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4053__auto____$1, entry__4054__auto__);
  }
};
yantra.datatypes.Style.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4060__auto__) {
  var self__ = this;
  var this__4060__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "style", "style", 1123684643), self__.style], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prims", "prims", 1120839167), self__.prims], null)], null), self__.__extmap));
};
yantra.datatypes.Style.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4052__auto__) {
  var self__ = this;
  var this__4052__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
yantra.datatypes.Style.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4044__auto__, other__4045__auto__) {
  var self__ = this;
  var this__4044__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3450__auto__ = other__4045__auto__;
    if (cljs.core.truth_(and__3450__auto__)) {
      return this__4044__auto____$1.constructor === other__4045__auto__.constructor && cljs.core.equiv_map.call(null, this__4044__auto____$1, other__4045__auto__);
    } else {
      return and__3450__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
yantra.datatypes.Style.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4047__auto__, G__9262) {
  var self__ = this;
  var this__4047__auto____$1 = this;
  return new yantra.datatypes.Style(self__.style, self__.prims, G__9262, self__.__extmap, self__.__hash);
};
yantra.datatypes.Style.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4042__auto__) {
  var self__ = this;
  var this__4042__auto____$1 = this;
  return new yantra.datatypes.Style(self__.style, self__.prims, self__.__meta, self__.__extmap, self__.__hash);
};
yantra.datatypes.Style.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4046__auto__) {
  var self__ = this;
  var this__4046__auto____$1 = this;
  return self__.__meta;
};
yantra.datatypes.Style.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4057__auto__, k__4058__auto__) {
  var self__ = this;
  var this__4057__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "prims", "prims", 1120839167), null, new cljs.core.Keyword(null, "style", "style", 1123684643), null], null), null), k__4058__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4057__auto____$1), self__.__meta), k__4058__auto__);
  } else {
    return new yantra.datatypes.Style(self__.style, self__.prims, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4058__auto__)), null);
  }
};
yantra.datatypes.Style.cljs$lang$type = true;
yantra.datatypes.Style.cljs$lang$ctorPrSeq = function(this__4082__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "yantra.datatypes/Style");
};
yantra.datatypes.Style.cljs$lang$ctorPrWriter = function(this__4082__auto__, writer__4083__auto__) {
  return cljs.core._write.call(null, writer__4083__auto__, "yantra.datatypes/Style");
};
yantra.datatypes.__GT_Style = function __GT_Style(style, prims) {
  return new yantra.datatypes.Style(style, prims);
};
yantra.datatypes.map__GT_Style = function map__GT_Style(G__9264) {
  return new yantra.datatypes.Style((new cljs.core.Keyword(null, "style", "style", 1123684643)).cljs$core$IFn$_invoke$arity$1(G__9264), (new cljs.core.Keyword(null, "prims", "prims", 1120839167)).cljs$core$IFn$_invoke$arity$1(G__9264), null, cljs.core.dissoc.call(null, G__9264, new cljs.core.Keyword(null, "style", "style", 1123684643), new cljs.core.Keyword(null, "prims", "prims", 1120839167)));
};
yantra.datatypes.ListLinePlot = function(data, opts, __meta, __extmap) {
  this.data = data;
  this.opts = opts;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
yantra.datatypes.ListLinePlot.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4043__auto__) {
  var self__ = this;
  var this__4043__auto____$1 = this;
  var h__3873__auto__ = self__.__hash;
  if (!(h__3873__auto__ == null)) {
    return h__3873__auto__;
  } else {
    var h__3873__auto____$1 = cljs.core.hash_imap.call(null, this__4043__auto____$1);
    self__.__hash = h__3873__auto____$1;
    return h__3873__auto____$1;
  }
};
yantra.datatypes.ListLinePlot.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4048__auto__, k__4049__auto__) {
  var self__ = this;
  var this__4048__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4048__auto____$1, k__4049__auto__, null);
};
yantra.datatypes.ListLinePlot.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4050__auto__, k9269, else__4051__auto__) {
  var self__ = this;
  var this__4050__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k9269, new cljs.core.Keyword(null, "data", "data", 1016980252))) {
    return self__.data;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k9269, new cljs.core.Keyword(null, "opts", "opts", 1017322386))) {
      return self__.opts;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.get.call(null, self__.__extmap, k9269, else__4051__auto__);
      } else {
        return null;
      }
    }
  }
};
yantra.datatypes.ListLinePlot.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4055__auto__, k__4056__auto__, G__9268) {
  var self__ = this;
  var this__4055__auto____$1 = this;
  var pred__9271 = cljs.core.keyword_identical_QMARK_;
  var expr__9272 = k__4056__auto__;
  if (cljs.core.truth_(pred__9271.call(null, new cljs.core.Keyword(null, "data", "data", 1016980252), expr__9272))) {
    return new yantra.datatypes.ListLinePlot(G__9268, self__.opts, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__9271.call(null, new cljs.core.Keyword(null, "opts", "opts", 1017322386), expr__9272))) {
      return new yantra.datatypes.ListLinePlot(self__.data, G__9268, self__.__meta, self__.__extmap, null);
    } else {
      return new yantra.datatypes.ListLinePlot(self__.data, self__.opts, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4056__auto__, G__9268), null);
    }
  }
};
yantra.datatypes.ListLinePlot.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4062__auto__, writer__4063__auto__, opts__4064__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var pr_pair__4065__auto__ = function(this__4062__auto____$1) {
    return function(keyval__4066__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4063__auto__, cljs.core.pr_writer, "", " ", "", opts__4064__auto__, keyval__4066__auto__);
    };
  }(this__4062__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4063__auto__, pr_pair__4065__auto__, "#yantra.datatypes.ListLinePlot{", ", ", "}", opts__4064__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", 1016980252), self__.data], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "opts", "opts", 1017322386), self__.opts], null)], null), self__.__extmap));
};
yantra.datatypes.ListLinePlot.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4053__auto__, entry__4054__auto__) {
  var self__ = this;
  var this__4053__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4054__auto__)) {
    return cljs.core._assoc.call(null, this__4053__auto____$1, cljs.core._nth.call(null, entry__4054__auto__, 0), cljs.core._nth.call(null, entry__4054__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4053__auto____$1, entry__4054__auto__);
  }
};
yantra.datatypes.ListLinePlot.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4060__auto__) {
  var self__ = this;
  var this__4060__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", 1016980252), self__.data], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), self__.opts], null)], null), self__.__extmap));
};
yantra.datatypes.ListLinePlot.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4052__auto__) {
  var self__ = this;
  var this__4052__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
yantra.datatypes.ListLinePlot.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4044__auto__, other__4045__auto__) {
  var self__ = this;
  var this__4044__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3450__auto__ = other__4045__auto__;
    if (cljs.core.truth_(and__3450__auto__)) {
      return this__4044__auto____$1.constructor === other__4045__auto__.constructor && cljs.core.equiv_map.call(null, this__4044__auto____$1, other__4045__auto__);
    } else {
      return and__3450__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
yantra.datatypes.ListLinePlot.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4047__auto__, G__9268) {
  var self__ = this;
  var this__4047__auto____$1 = this;
  return new yantra.datatypes.ListLinePlot(self__.data, self__.opts, G__9268, self__.__extmap, self__.__hash);
};
yantra.datatypes.ListLinePlot.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4042__auto__) {
  var self__ = this;
  var this__4042__auto____$1 = this;
  return new yantra.datatypes.ListLinePlot(self__.data, self__.opts, self__.__meta, self__.__extmap, self__.__hash);
};
yantra.datatypes.ListLinePlot.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4046__auto__) {
  var self__ = this;
  var this__4046__auto____$1 = this;
  return self__.__meta;
};
yantra.datatypes.ListLinePlot.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4057__auto__, k__4058__auto__) {
  var self__ = this;
  var this__4057__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "data", "data", 1016980252), null, new cljs.core.Keyword(null, "opts", "opts", 1017322386), null], null), null), k__4058__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4057__auto____$1), self__.__meta), k__4058__auto__);
  } else {
    return new yantra.datatypes.ListLinePlot(self__.data, self__.opts, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4058__auto__)), null);
  }
};
yantra.datatypes.ListLinePlot.cljs$lang$type = true;
yantra.datatypes.ListLinePlot.cljs$lang$ctorPrSeq = function(this__4082__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "yantra.datatypes/ListLinePlot");
};
yantra.datatypes.ListLinePlot.cljs$lang$ctorPrWriter = function(this__4082__auto__, writer__4083__auto__) {
  return cljs.core._write.call(null, writer__4083__auto__, "yantra.datatypes/ListLinePlot");
};
yantra.datatypes.__GT_ListLinePlot = function __GT_ListLinePlot(data, opts) {
  return new yantra.datatypes.ListLinePlot(data, opts);
};
yantra.datatypes.map__GT_ListLinePlot = function map__GT_ListLinePlot(G__9270) {
  return new yantra.datatypes.ListLinePlot((new cljs.core.Keyword(null, "data", "data", 1016980252)).cljs$core$IFn$_invoke$arity$1(G__9270), (new cljs.core.Keyword(null, "opts", "opts", 1017322386)).cljs$core$IFn$_invoke$arity$1(G__9270), null, cljs.core.dissoc.call(null, G__9270, new cljs.core.Keyword(null, "data", "data", 1016980252), new cljs.core.Keyword(null, "opts", "opts", 1017322386)));
};
yantra.datatypes.BarChart = function(data, opts, __meta, __extmap) {
  this.data = data;
  this.opts = opts;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
yantra.datatypes.BarChart.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4043__auto__) {
  var self__ = this;
  var this__4043__auto____$1 = this;
  var h__3873__auto__ = self__.__hash;
  if (!(h__3873__auto__ == null)) {
    return h__3873__auto__;
  } else {
    var h__3873__auto____$1 = cljs.core.hash_imap.call(null, this__4043__auto____$1);
    self__.__hash = h__3873__auto____$1;
    return h__3873__auto____$1;
  }
};
yantra.datatypes.BarChart.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4048__auto__, k__4049__auto__) {
  var self__ = this;
  var this__4048__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4048__auto____$1, k__4049__auto__, null);
};
yantra.datatypes.BarChart.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4050__auto__, k9275, else__4051__auto__) {
  var self__ = this;
  var this__4050__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k9275, new cljs.core.Keyword(null, "data", "data", 1016980252))) {
    return self__.data;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k9275, new cljs.core.Keyword(null, "opts", "opts", 1017322386))) {
      return self__.opts;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.get.call(null, self__.__extmap, k9275, else__4051__auto__);
      } else {
        return null;
      }
    }
  }
};
yantra.datatypes.BarChart.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4055__auto__, k__4056__auto__, G__9274) {
  var self__ = this;
  var this__4055__auto____$1 = this;
  var pred__9277 = cljs.core.keyword_identical_QMARK_;
  var expr__9278 = k__4056__auto__;
  if (cljs.core.truth_(pred__9277.call(null, new cljs.core.Keyword(null, "data", "data", 1016980252), expr__9278))) {
    return new yantra.datatypes.BarChart(G__9274, self__.opts, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__9277.call(null, new cljs.core.Keyword(null, "opts", "opts", 1017322386), expr__9278))) {
      return new yantra.datatypes.BarChart(self__.data, G__9274, self__.__meta, self__.__extmap, null);
    } else {
      return new yantra.datatypes.BarChart(self__.data, self__.opts, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4056__auto__, G__9274), null);
    }
  }
};
yantra.datatypes.BarChart.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4062__auto__, writer__4063__auto__, opts__4064__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var pr_pair__4065__auto__ = function(this__4062__auto____$1) {
    return function(keyval__4066__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4063__auto__, cljs.core.pr_writer, "", " ", "", opts__4064__auto__, keyval__4066__auto__);
    };
  }(this__4062__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4063__auto__, pr_pair__4065__auto__, "#yantra.datatypes.BarChart{", ", ", "}", opts__4064__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", 1016980252), self__.data], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "opts", "opts", 1017322386), self__.opts], null)], null), self__.__extmap));
};
yantra.datatypes.BarChart.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4053__auto__, entry__4054__auto__) {
  var self__ = this;
  var this__4053__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4054__auto__)) {
    return cljs.core._assoc.call(null, this__4053__auto____$1, cljs.core._nth.call(null, entry__4054__auto__, 0), cljs.core._nth.call(null, entry__4054__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4053__auto____$1, entry__4054__auto__);
  }
};
yantra.datatypes.BarChart.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4060__auto__) {
  var self__ = this;
  var this__4060__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", 1016980252), self__.data], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), self__.opts], null)], null), self__.__extmap));
};
yantra.datatypes.BarChart.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4052__auto__) {
  var self__ = this;
  var this__4052__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
yantra.datatypes.BarChart.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4044__auto__, other__4045__auto__) {
  var self__ = this;
  var this__4044__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3450__auto__ = other__4045__auto__;
    if (cljs.core.truth_(and__3450__auto__)) {
      return this__4044__auto____$1.constructor === other__4045__auto__.constructor && cljs.core.equiv_map.call(null, this__4044__auto____$1, other__4045__auto__);
    } else {
      return and__3450__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
yantra.datatypes.BarChart.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4047__auto__, G__9274) {
  var self__ = this;
  var this__4047__auto____$1 = this;
  return new yantra.datatypes.BarChart(self__.data, self__.opts, G__9274, self__.__extmap, self__.__hash);
};
yantra.datatypes.BarChart.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4042__auto__) {
  var self__ = this;
  var this__4042__auto____$1 = this;
  return new yantra.datatypes.BarChart(self__.data, self__.opts, self__.__meta, self__.__extmap, self__.__hash);
};
yantra.datatypes.BarChart.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4046__auto__) {
  var self__ = this;
  var this__4046__auto____$1 = this;
  return self__.__meta;
};
yantra.datatypes.BarChart.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4057__auto__, k__4058__auto__) {
  var self__ = this;
  var this__4057__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "data", "data", 1016980252), null, new cljs.core.Keyword(null, "opts", "opts", 1017322386), null], null), null), k__4058__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4057__auto____$1), self__.__meta), k__4058__auto__);
  } else {
    return new yantra.datatypes.BarChart(self__.data, self__.opts, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4058__auto__)), null);
  }
};
yantra.datatypes.BarChart.cljs$lang$type = true;
yantra.datatypes.BarChart.cljs$lang$ctorPrSeq = function(this__4082__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "yantra.datatypes/BarChart");
};
yantra.datatypes.BarChart.cljs$lang$ctorPrWriter = function(this__4082__auto__, writer__4083__auto__) {
  return cljs.core._write.call(null, writer__4083__auto__, "yantra.datatypes/BarChart");
};
yantra.datatypes.__GT_BarChart = function __GT_BarChart(data, opts) {
  return new yantra.datatypes.BarChart(data, opts);
};
yantra.datatypes.map__GT_BarChart = function map__GT_BarChart(G__9276) {
  return new yantra.datatypes.BarChart((new cljs.core.Keyword(null, "data", "data", 1016980252)).cljs$core$IFn$_invoke$arity$1(G__9276), (new cljs.core.Keyword(null, "opts", "opts", 1017322386)).cljs$core$IFn$_invoke$arity$1(G__9276), null, cljs.core.dissoc.call(null, G__9276, new cljs.core.Keyword(null, "data", "data", 1016980252), new cljs.core.Keyword(null, "opts", "opts", 1017322386)));
};
yantra.datatypes.HTMLElement = function(tag, attributes, children, __meta, __extmap) {
  this.tag = tag;
  this.attributes = attributes;
  this.children = children;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 3) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
yantra.datatypes.HTMLElement.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4043__auto__) {
  var self__ = this;
  var this__4043__auto____$1 = this;
  var h__3873__auto__ = self__.__hash;
  if (!(h__3873__auto__ == null)) {
    return h__3873__auto__;
  } else {
    var h__3873__auto____$1 = cljs.core.hash_imap.call(null, this__4043__auto____$1);
    self__.__hash = h__3873__auto____$1;
    return h__3873__auto____$1;
  }
};
yantra.datatypes.HTMLElement.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4048__auto__, k__4049__auto__) {
  var self__ = this;
  var this__4048__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4048__auto____$1, k__4049__auto__, null);
};
yantra.datatypes.HTMLElement.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4050__auto__, k9281, else__4051__auto__) {
  var self__ = this;
  var this__4050__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k9281, new cljs.core.Keyword(null, "tag", "tag", 1014018828))) {
    return self__.tag;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k9281, new cljs.core.Keyword(null, "attributes", "attributes", 1419549897))) {
      return self__.attributes;
    } else {
      if (cljs.core.keyword_identical_QMARK_.call(null, k9281, new cljs.core.Keyword(null, "children", "children", 2673430897))) {
        return self__.children;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.get.call(null, self__.__extmap, k9281, else__4051__auto__);
        } else {
          return null;
        }
      }
    }
  }
};
yantra.datatypes.HTMLElement.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4055__auto__, k__4056__auto__, G__9280) {
  var self__ = this;
  var this__4055__auto____$1 = this;
  var pred__9283 = cljs.core.keyword_identical_QMARK_;
  var expr__9284 = k__4056__auto__;
  if (cljs.core.truth_(pred__9283.call(null, new cljs.core.Keyword(null, "tag", "tag", 1014018828), expr__9284))) {
    return new yantra.datatypes.HTMLElement(G__9280, self__.attributes, self__.children, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__9283.call(null, new cljs.core.Keyword(null, "attributes", "attributes", 1419549897), expr__9284))) {
      return new yantra.datatypes.HTMLElement(self__.tag, G__9280, self__.children, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__9283.call(null, new cljs.core.Keyword(null, "children", "children", 2673430897), expr__9284))) {
        return new yantra.datatypes.HTMLElement(self__.tag, self__.attributes, G__9280, self__.__meta, self__.__extmap, null);
      } else {
        return new yantra.datatypes.HTMLElement(self__.tag, self__.attributes, self__.children, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4056__auto__, G__9280), null);
      }
    }
  }
};
yantra.datatypes.HTMLElement.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4062__auto__, writer__4063__auto__, opts__4064__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var pr_pair__4065__auto__ = function(this__4062__auto____$1) {
    return function(keyval__4066__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4063__auto__, cljs.core.pr_writer, "", " ", "", opts__4064__auto__, keyval__4066__auto__);
    };
  }(this__4062__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4063__auto__, pr_pair__4065__auto__, "#yantra.datatypes.HTMLElement{", ", ", "}", opts__4064__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), self__.tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "attributes", "attributes", 1419549897), self__.attributes], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "children", "children", 2673430897), self__.children], null)], null), self__.__extmap));
};
yantra.datatypes.HTMLElement.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4053__auto__, entry__4054__auto__) {
  var self__ = this;
  var this__4053__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4054__auto__)) {
    return cljs.core._assoc.call(null, this__4053__auto____$1, cljs.core._nth.call(null, entry__4054__auto__, 0), cljs.core._nth.call(null, entry__4054__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4053__auto____$1, entry__4054__auto__);
  }
};
yantra.datatypes.HTMLElement.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4060__auto__) {
  var self__ = this;
  var this__4060__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), self__.tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attributes", "attributes", 1419549897), self__.attributes], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "children", "children", 2673430897), self__.children], null)], null), self__.__extmap));
};
yantra.datatypes.HTMLElement.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4052__auto__) {
  var self__ = this;
  var this__4052__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap);
};
yantra.datatypes.HTMLElement.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4044__auto__, other__4045__auto__) {
  var self__ = this;
  var this__4044__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3450__auto__ = other__4045__auto__;
    if (cljs.core.truth_(and__3450__auto__)) {
      return this__4044__auto____$1.constructor === other__4045__auto__.constructor && cljs.core.equiv_map.call(null, this__4044__auto____$1, other__4045__auto__);
    } else {
      return and__3450__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
yantra.datatypes.HTMLElement.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4047__auto__, G__9280) {
  var self__ = this;
  var this__4047__auto____$1 = this;
  return new yantra.datatypes.HTMLElement(self__.tag, self__.attributes, self__.children, G__9280, self__.__extmap, self__.__hash);
};
yantra.datatypes.HTMLElement.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4042__auto__) {
  var self__ = this;
  var this__4042__auto____$1 = this;
  return new yantra.datatypes.HTMLElement(self__.tag, self__.attributes, self__.children, self__.__meta, self__.__extmap, self__.__hash);
};
yantra.datatypes.HTMLElement.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4046__auto__) {
  var self__ = this;
  var this__4046__auto____$1 = this;
  return self__.__meta;
};
yantra.datatypes.HTMLElement.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4057__auto__, k__4058__auto__) {
  var self__ = this;
  var this__4057__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "children", "children", 2673430897), null, new cljs.core.Keyword(null, "attributes", "attributes", 1419549897), null, new cljs.core.Keyword(null, "tag", "tag", 1014018828), null], null), null), k__4058__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4057__auto____$1), self__.__meta), k__4058__auto__);
  } else {
    return new yantra.datatypes.HTMLElement(self__.tag, self__.attributes, self__.children, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4058__auto__)), null);
  }
};
yantra.datatypes.HTMLElement.cljs$lang$type = true;
yantra.datatypes.HTMLElement.cljs$lang$ctorPrSeq = function(this__4082__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "yantra.datatypes/HTMLElement");
};
yantra.datatypes.HTMLElement.cljs$lang$ctorPrWriter = function(this__4082__auto__, writer__4083__auto__) {
  return cljs.core._write.call(null, writer__4083__auto__, "yantra.datatypes/HTMLElement");
};
yantra.datatypes.__GT_HTMLElement = function __GT_HTMLElement(tag, attributes, children) {
  return new yantra.datatypes.HTMLElement(tag, attributes, children);
};
yantra.datatypes.map__GT_HTMLElement = function map__GT_HTMLElement(G__9282) {
  return new yantra.datatypes.HTMLElement((new cljs.core.Keyword(null, "tag", "tag", 1014018828)).cljs$core$IFn$_invoke$arity$1(G__9282), (new cljs.core.Keyword(null, "attributes", "attributes", 1419549897)).cljs$core$IFn$_invoke$arity$1(G__9282), (new cljs.core.Keyword(null, "children", "children", 2673430897)).cljs$core$IFn$_invoke$arity$1(G__9282), null, cljs.core.dissoc.call(null, G__9282, new cljs.core.Keyword(null, "tag", "tag", 1014018828), new cljs.core.Keyword(null, "attributes", "attributes", 
  1419549897), new cljs.core.Keyword(null, "children", "children", 2673430897)));
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj13263 = {};
  return obj13263;
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if (function() {
    var and__3450__auto__ = port;
    if (and__3450__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4089__auto__ = port == null ? null : port;
    return function() {
      var or__3462__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj13265 = {};
  return obj13265;
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn0_handler) {
  if (function() {
    var and__3450__auto__ = port;
    if (and__3450__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn0_handler);
  } else {
    var x__4089__auto__ = port == null ? null : port;
    return function() {
      var or__3462__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn0_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj13267 = {};
  return obj13267;
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if (function() {
    var and__3450__auto__ = chan;
    if (and__3450__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4089__auto__ = chan == null ? null : chan;
    return function() {
      var or__3462__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj13269 = {};
  return obj13269;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if (function() {
    var and__3450__auto__ = h;
    if (and__3450__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4089__auto__ = h == null ? null : h;
    return function() {
      var or__3462__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if (function() {
    var and__3450__auto__ = h;
    if (and__3450__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4089__auto__ = h == null ? null : h;
    return function() {
      var or__3462__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj13271 = {};
  return obj13271;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if (function() {
    var and__3450__auto__ = b;
    if (and__3450__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4089__auto__ = b == null ? null : b;
    return function() {
      var or__3462__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if (function() {
    var and__3450__auto__ = b;
    if (and__3450__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4089__auto__ = b == null ? null : b;
    return function() {
      var or__3462__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function add_BANG_(b, itm) {
  if (function() {
    var and__3450__auto__ = b;
    if (and__3450__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(b, itm);
  } else {
    var x__4089__auto__ = b == null ? null : b;
    return function() {
      var or__3462__auto__ = cljs.core.async.impl.protocols.add_BANG_[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core.async.impl.protocols.add_BANG_["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!", b);
        }
      }
    }().call(null, b, itm);
  }
};
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
  var obj13273 = {};
  return obj13273;
}();
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", 4635210724));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t13291 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t13291 = function(f, fn_handler, meta13292) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta13292 = meta13292;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t13291.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t13291.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t13291";
    cljs.core.async.impl.ioc_helpers.t13291.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
      return cljs.core._write.call(null, writer__4030__auto__, "cljs.core.async.impl.ioc-helpers/t13291");
    };
    cljs.core.async.impl.ioc_helpers.t13291.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t13291.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t13291.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t13291.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13293) {
      var self__ = this;
      var _13293__$1 = this;
      return self__.meta13292;
    };
    cljs.core.async.impl.ioc_helpers.t13291.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13293, meta13292__$1) {
      var self__ = this;
      var _13293__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t13291(self__.f, self__.fn_handler, meta13292__$1);
    };
    cljs.core.async.impl.ioc_helpers.__GT_t13291 = function __GT_t13291(f__$1, fn_handler__$1, meta13292) {
      return new cljs.core.async.impl.ioc_helpers.t13291(f__$1, fn_handler__$1, meta13292);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t13291(f, fn_handler, null);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e13295) {
    if (e13295 instanceof Object) {
      var ex = e13295;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e13295;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_13298_13300 = state;
    statearr_13298_13300[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_13298_13300[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_13299_13301 = state;
    statearr_13299_13301[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_13299_13301[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
    var statearr_13304_13306 = state;
    statearr_13304_13306[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = null;
    statearr_13304_13306[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_13305_13307 = state;
    statearr_13305_13307[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_13305_13307[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__13308) {
    var map__13313 = p__13308;
    var map__13313__$1 = cljs.core.seq_QMARK_.call(null, map__13313) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13313) : map__13313;
    var opts = map__13313__$1;
    var statearr_13314_13317 = state;
    statearr_13314_13317[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4092__auto__ = cljs.core.async.do_alts.call(null, function(map__13313, map__13313__$1, opts) {
      return function(val) {
        var statearr_13315_13318 = state;
        statearr_13315_13318[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
      };
    }(map__13313, map__13313__$1, opts), ports, opts);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var cb = temp__4092__auto__;
      var statearr_13316_13319 = state;
      statearr_13316_13319[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
    } else {
      return null;
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__13308 = null;
    if (arguments.length > 3) {
      p__13308 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__13308);
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__13320) {
    var state = cljs.core.first(arglist__13320);
    arglist__13320 = cljs.core.next(arglist__13320);
    var cont_block = cljs.core.first(arglist__13320);
    arglist__13320 = cljs.core.next(arglist__13320);
    var ports = cljs.core.first(arglist__13320);
    var p__13308 = cljs.core.rest(arglist__13320);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__13308);
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_;
}();
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 5) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4043__auto__) {
  var self__ = this;
  var this__4043__auto____$1 = this;
  var h__3873__auto__ = self__.__hash;
  if (!(h__3873__auto__ == null)) {
    return h__3873__auto__;
  } else {
    var h__3873__auto____$1 = cljs.core.hash_imap.call(null, this__4043__auto____$1);
    self__.__hash = h__3873__auto____$1;
    return h__3873__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4048__auto__, k__4049__auto__) {
  var self__ = this;
  var this__4048__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4048__auto____$1, k__4049__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4050__auto__, k13322, else__4051__auto__) {
  var self__ = this;
  var this__4050__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k13322, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893))) {
    return self__.catch_block;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k13322, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687))) {
      return self__.catch_exception;
    } else {
      if (cljs.core.keyword_identical_QMARK_.call(null, k13322, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429))) {
        return self__.finally_block;
      } else {
        if (cljs.core.keyword_identical_QMARK_.call(null, k13322, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097))) {
          return self__.continue_block;
        } else {
          if (cljs.core.keyword_identical_QMARK_.call(null, k13322, new cljs.core.Keyword(null, "prev", "prev", 1017353637))) {
            return self__.prev;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.get.call(null, self__.__extmap, k13322, else__4051__auto__);
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4055__auto__, k__4056__auto__, G__13321) {
  var self__ = this;
  var this__4055__auto____$1 = this;
  var pred__13324 = cljs.core.keyword_identical_QMARK_;
  var expr__13325 = k__4056__auto__;
  if (cljs.core.truth_(pred__13324.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), expr__13325))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__13321, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__13324.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), expr__13325))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__13321, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__13324.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), expr__13325))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__13321, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__13324.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), expr__13325))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__13321, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__13324.call(null, new cljs.core.Keyword(null, "prev", "prev", 1017353637), expr__13325))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__13321, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4056__auto__, G__13321), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4062__auto__, writer__4063__auto__, opts__4064__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var pr_pair__4065__auto__ = function(this__4062__auto____$1) {
    return function(keyval__4066__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4063__auto__, cljs.core.pr_writer, "", " ", "", opts__4064__auto__, keyval__4066__auto__);
    };
  }(this__4062__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4063__auto__, pr_pair__4065__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4064__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", 1017353637), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4053__auto__, entry__4054__auto__) {
  var self__ = this;
  var this__4053__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4054__auto__)) {
    return cljs.core._assoc.call(null, this__4053__auto____$1, cljs.core._nth.call(null, entry__4054__auto__, 0), cljs.core._nth.call(null, entry__4054__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4053__auto____$1, entry__4054__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4060__auto__) {
  var self__ = this;
  var this__4060__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", 1017353637), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4052__auto__) {
  var self__ = this;
  var this__4052__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4044__auto__, other__4045__auto__) {
  var self__ = this;
  var this__4044__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3450__auto__ = other__4045__auto__;
    if (cljs.core.truth_(and__3450__auto__)) {
      return this__4044__auto____$1.constructor === other__4045__auto__.constructor && cljs.core.equiv_map.call(null, this__4044__auto____$1, other__4045__auto__);
    } else {
      return and__3450__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4047__auto__, G__13321) {
  var self__ = this;
  var this__4047__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__13321, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4042__auto__) {
  var self__ = this;
  var this__4042__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4046__auto__) {
  var self__ = this;
  var this__4046__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4057__auto__, k__4058__auto__) {
  var self__ = this;
  var this__4057__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), null, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), null, new cljs.core.Keyword(null, "prev", "prev", 1017353637), 
  null], null), null), k__4058__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4057__auto____$1), self__.__meta), k__4058__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4058__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4082__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4082__auto__, writer__4083__auto__) {
  return cljs.core._write.call(null, writer__4083__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function __GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function map__GT_ExceptionFrame(G__13323) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893)).cljs$core$IFn$_invoke$arity$1(G__13323), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687)).cljs$core$IFn$_invoke$arity$1(G__13323), (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(G__13323), (new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097)).cljs$core$IFn$_invoke$arity$1(G__13323), 
  (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(G__13323), null, cljs.core.dissoc.call(null, G__13323, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), new cljs.core.Keyword(null, "prev", "prev", 1017353637)));
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_13328 = state;
  statearr_13328[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_13328;
};
cljs.core.async.impl.ioc_helpers.process_exception = function process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__3450__auto__ = exception;
      if (cljs.core.truth_(and__3450__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__3450__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__3450__auto__ = exception;
        if (cljs.core.truth_(and__3450__auto__)) {
          var and__3450__auto____$1 = catch_block;
          if (cljs.core.truth_(and__3450__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__3450__auto____$1;
          }
        } else {
          return and__3450__auto__;
        }
      }())) {
        var statearr_13334 = state;
        statearr_13334[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_13334[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_13334[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_13334[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), null);
        return statearr_13334;
      } else {
        if (cljs.core.truth_(function() {
          var and__3450__auto__ = exception;
          if (cljs.core.truth_(and__3450__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__3450__auto__;
          }
        }())) {
          var statearr_13335_13339 = state;
          statearr_13335_13339[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__13340 = state;
          state = G__13340;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__3450__auto__ = exception;
            if (cljs.core.truth_(and__3450__auto__)) {
              var and__3450__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__3450__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3450__auto____$1;
              }
            } else {
              return and__3450__auto__;
            }
          }())) {
            var statearr_13336 = state;
            statearr_13336[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_13336[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null);
            return statearr_13336;
          } else {
            if (cljs.core.truth_(function() {
              var and__3450__auto__ = cljs.core.not.call(null, exception);
              if (and__3450__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3450__auto__;
              }
            }())) {
              var statearr_13337 = state;
              statearr_13337[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_13337[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null);
              return statearr_13337;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_13338 = state;
                statearr_13338[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_13338[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_13338;
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  if (false) {
                    return null;
                  } else {
                    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("No matching clause"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, false))].join(""));
                  }
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__13285 = cnt + 1;
      cnt = G__13285;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4310__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4310__auto__) {
      var v_13286 = this$.pop();
      if (keep_QMARK_.call(null, v_13286)) {
        this$.unshift(v_13286);
      } else {
      }
      var G__13287 = x + 1;
      x = G__13287;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", -1640531465, null), new cljs.core.Symbol(null, "n", "n", -1640531417, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, this$__$1))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't add to a full buffer"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol("impl", "full?", "impl/full?", -1337857039, null), new cljs.core.Symbol(null, "this", "this", -1636972457, null)))))].join(""));
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    return null;
  } else {
    return self__.buf.unshift(itm);
  }
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.message_channel = null;
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_13274 = 0;
  while (true) {
    var m_13275 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_13275 == null) {
    } else {
      m_13275.call(null);
      if (count_13274 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__13276 = count_13274 + 1;
        count_13274 = G__13276;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
if (typeof MessageChannel !== "undefined") {
  cljs.core.async.impl.dispatch.message_channel = new MessageChannel;
  cljs.core.async.impl.dispatch.message_channel.port1.onmessage = function(msg) {
    return cljs.core.async.impl.dispatch.process_messages.call(null);
  };
} else {
}
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__3450__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (and__3450__auto__) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__3450__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    if (typeof MessageChannel !== "undefined") {
      return cljs.core.async.impl.dispatch.message_channel.port2.postMessage(0);
    } else {
      if (typeof setImmediate !== "undefined") {
        return setImmediate(cljs.core.async.impl.dispatch.process_messages);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return setTimeout(cljs.core.async.impl.dispatch.process_messages, 0);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if (typeof cljs.core.async.impl.channels.t13280 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t13280 = function(val, box, meta13281) {
      this.val = val;
      this.box = box;
      this.meta13281 = meta13281;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t13280.cljs$lang$type = true;
    cljs.core.async.impl.channels.t13280.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t13280";
    cljs.core.async.impl.channels.t13280.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
      return cljs.core._write.call(null, writer__4030__auto__, "cljs.core.async.impl.channels/t13280");
    };
    cljs.core.async.impl.channels.t13280.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t13280.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13282) {
      var self__ = this;
      var _13282__$1 = this;
      return self__.meta13281;
    };
    cljs.core.async.impl.channels.t13280.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13282, meta13281__$1) {
      var self__ = this;
      var _13282__$1 = this;
      return new cljs.core.async.impl.channels.t13280(self__.val, self__.box, meta13281__$1);
    };
    cljs.core.async.impl.channels.__GT_t13280 = function __GT_t13280(val__$1, box__$1, meta13281) {
      return new cljs.core.async.impl.channels.t13280(val__$1, box__$1, meta13281);
    };
  }
  return new cljs.core.async.impl.channels.t13280(val, box, null);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__4032__auto__, writer__4033__auto__, opts__4034__auto__) {
  return cljs.core._write.call(null, writer__4033__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    while (true) {
      var taker_13283 = self__.takes.pop();
      if (taker_13283 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_13283)) {
          var take_cb_13284 = cljs.core.async.impl.protocols.commit.call(null, taker_13283);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_13284, taker_13283, this$__$1) {
            return function() {
              return take_cb_13284.call(null, null);
            };
          }(take_cb_13284, taker_13283, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      return cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
    } else {
      while (true) {
        var putter = self__.puts.pop();
        if (!(putter == null)) {
          var put_handler = putter.handler;
          var val = putter.val;
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler)) {
            var put_cb = cljs.core.async.impl.protocols.commit.call(null, put_handler);
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, put_cb);
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            continue;
          }
        } else {
          if (self__.closed) {
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            return cljs.core.async.impl.channels.box.call(null, null);
          } else {
            if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
              self__.dirty_takes = 0;
              self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
            } else {
              self__.dirty_takes = self__.dirty_takes + 1;
            }
            if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            } else {
              throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 1395928862, null), new cljs.core.Symbol(null, 
              "takes", "takes", -1530407291, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
            }
            self__.takes.unbounded_unshift(handler);
            return null;
          }
        }
        break;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "val", "val", -1640415014, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, null);
  } else {
    while (true) {
      var taker = self__.takes.pop();
      if (!(taker == null)) {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker)) {
          var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb, _, taker, closed__$1, this$__$1) {
            return function() {
              return take_cb.call(null, val);
            };
          }(take_cb, _, taker, closed__$1, this$__$1));
          return cljs.core.async.impl.channels.box.call(null, null);
        } else {
          continue;
        }
      } else {
        if (!(self__.buf == null || cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val);
          return cljs.core.async.impl.channels.box.call(null, null);
        } else {
          if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_puts = 0;
            self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
          } else {
            self__.dirty_puts = self__.dirty_puts + 1;
          }
          if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
            1395928862, null), new cljs.core.Symbol(null, "puts", "puts", -1637078787, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
          return null;
        }
      }
      break;
    }
  }
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed);
};
cljs.core.async.impl.channels.chan = function chan(buf) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, null);
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0);
  };
  var random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__13238 = level + 1;
        level = G__13238;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level);
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_13239 = 0;
    while (true) {
      if (i_13239 < arr.length) {
        arr[i_13239] = null;
        var G__13240 = i_13239 + 1;
        i_13239 = G__13240;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null);
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4090__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4090__auto__)) {
              var x_SINGLEQUOTE_ = temp__4090__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__13241 = x_SINGLEQUOTE_;
                x__$1 = G__13241;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__13242 = x__$1;
        var G__13243 = k;
        var G__13244 = level - 1;
        var G__13245 = update;
        x = G__13242;
        k = G__13243;
        level = G__13244;
        update = G__13245;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_13246 = self__.level + 1;
      while (true) {
        if (i_13246 <= new_level + 1) {
          update[i_13246] = self__.header;
          var G__13247 = i_13246 + 1;
          i_13246 = G__13247;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_13248 = 0;
    while (true) {
      if (i_13248 <= self__.level) {
        var links_13249 = update[i_13248].forward;
        if (links_13249[i_13248] === x__$1) {
          links_13249[i_13248] = x__$1.forward[i_13248];
          var G__13250 = i_13248 + 1;
          i_13248 = G__13250;
          continue;
        } else {
          var G__13251 = i_13248 + 1;
          i_13248 = G__13251;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__13252 = x_SINGLEQUOTE_;
              x__$1 = G__13252;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__13253 = nx;
        var G__13254 = level__$1 - 1;
        x = G__13253;
        level__$1 = G__13254;
        continue;
      } else {
        var G__13255 = x;
        var G__13256 = level__$1 - 1;
        x = G__13255;
        level__$1 = G__13256;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__13257 = x_SINGLEQUOTE_;
              x__$1 = G__13257;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__13258 = nx;
        var G__13259 = level__$1 - 1;
        x = G__13258;
        level__$1 = G__13259;
        continue;
      } else {
        var G__13260 = x;
        var G__13261 = level__$1 - 1;
        x = G__13260;
        level__$1 = G__13261;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3462__auto__ = cljs.core.truth_(function() {
    var and__3450__auto__ = me;
    if (cljs.core.truth_(and__3450__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__3450__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__3462__auto__)) {
    return or__3462__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__3462__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__3462__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.ioc_helpers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.t10687 !== "undefined") {
  } else {
    cljs.core.async.t10687 = function(f, fn_handler, meta10688) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta10688 = meta10688;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t10687.cljs$lang$type = true;
    cljs.core.async.t10687.cljs$lang$ctorStr = "cljs.core.async/t10687";
    cljs.core.async.t10687.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
      return cljs.core._write.call(null, writer__4030__auto__, "cljs.core.async/t10687");
    };
    cljs.core.async.t10687.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t10687.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t10687.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t10687.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10689) {
      var self__ = this;
      var _10689__$1 = this;
      return self__.meta10688;
    };
    cljs.core.async.t10687.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10689, meta10688__$1) {
      var self__ = this;
      var _10689__$1 = this;
      return new cljs.core.async.t10687(self__.f, self__.fn_handler, meta10688__$1);
    };
    cljs.core.async.__GT_t10687 = function __GT_t10687(f__$1, fn_handler__$1, meta10688) {
      return new cljs.core.async.t10687(f__$1, fn_handler__$1, meta10688);
    };
  }
  return new cljs.core.async.t10687(f, fn_handler, null);
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function unblocking_buffer_QMARK_(buff) {
  var G__10691 = buff;
  if (G__10691) {
    var bit__4112__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3462__auto__ = bit__4112__auto__;
      if (cljs.core.truth_(or__3462__auto__)) {
        return or__3462__auto__;
      } else {
        return G__10691.cljs$core$async$impl$protocols$UnblockingBuffer$;
      }
    }())) {
      return true;
    } else {
      if (!G__10691.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__10691);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__10691);
  }
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null);
  };
  var chan__1 = function(buf_or_n) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1);
  };
  chan = function(buf_or_n) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  return chan;
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  if (null) {
    return null;
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3c! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true);
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(ret)) {
      var val_10692 = cljs.core.deref.call(null, ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_10692);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(val_10692, ret) {
          return function() {
            return fn1.call(null, val_10692);
          };
        }(val_10692, ret));
      }
    } else {
    }
    return null;
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_;
}();
cljs.core.async.nop = function nop() {
  return null;
};
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  if (null) {
    return null;
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3e! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    return put_BANG_.call(null, port, val, cljs.core.async.nop);
  };
  var put_BANG___3 = function(port, val, fn0) {
    return put_BANG_.call(null, port, val, fn0, true);
  };
  var put_BANG___4 = function(port, val, fn0, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn0));
    if (cljs.core.truth_(function() {
      var and__3450__auto__ = ret;
      if (cljs.core.truth_(and__3450__auto__)) {
        return cljs.core.not_EQ_.call(null, fn0, cljs.core.async.nop);
      } else {
        return and__3450__auto__;
      }
    }())) {
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn0.call(null);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, fn0);
      }
    } else {
    }
    return null;
  };
  put_BANG_ = function(port, val, fn0, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn0);
      case 4:
        return put_BANG___4.call(this, port, val, fn0, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_;
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4310__auto___10693 = n;
  var x_10694 = 0;
  while (true) {
    if (x_10694 < n__4310__auto___10693) {
      a[x_10694] = 0;
      var G__10695 = x_10694 + 1;
      x_10694 = G__10695;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__10696 = i + 1;
      i = G__10696;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t10700 !== "undefined") {
  } else {
    cljs.core.async.t10700 = function(flag, alt_flag, meta10701) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta10701 = meta10701;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t10700.cljs$lang$type = true;
    cljs.core.async.t10700.cljs$lang$ctorStr = "cljs.core.async/t10700";
    cljs.core.async.t10700.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
        return cljs.core._write.call(null, writer__4030__auto__, "cljs.core.async/t10700");
      };
    }(flag);
    cljs.core.async.t10700.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t10700.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t10700.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t10700.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_10702) {
        var self__ = this;
        var _10702__$1 = this;
        return self__.meta10701;
      };
    }(flag);
    cljs.core.async.t10700.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_10702, meta10701__$1) {
        var self__ = this;
        var _10702__$1 = this;
        return new cljs.core.async.t10700(self__.flag, self__.alt_flag, meta10701__$1);
      };
    }(flag);
    cljs.core.async.__GT_t10700 = function(flag) {
      return function __GT_t10700(flag__$1, alt_flag__$1, meta10701) {
        return new cljs.core.async.t10700(flag__$1, alt_flag__$1, meta10701);
      };
    }(flag);
  }
  return new cljs.core.async.t10700(flag, alt_flag, null);
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if (typeof cljs.core.async.t10706 !== "undefined") {
  } else {
    cljs.core.async.t10706 = function(cb, flag, alt_handler, meta10707) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta10707 = meta10707;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t10706.cljs$lang$type = true;
    cljs.core.async.t10706.cljs$lang$ctorStr = "cljs.core.async/t10706";
    cljs.core.async.t10706.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
      return cljs.core._write.call(null, writer__4030__auto__, "cljs.core.async/t10706");
    };
    cljs.core.async.t10706.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t10706.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t10706.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t10706.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10708) {
      var self__ = this;
      var _10708__$1 = this;
      return self__.meta10707;
    };
    cljs.core.async.t10706.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10708, meta10707__$1) {
      var self__ = this;
      var _10708__$1 = this;
      return new cljs.core.async.t10706(self__.cb, self__.flag, self__.alt_handler, meta10707__$1);
    };
    cljs.core.async.__GT_t10706 = function __GT_t10706(cb__$1, flag__$1, alt_handler__$1, meta10707) {
      return new cljs.core.async.t10706(cb__$1, flag__$1, alt_handler__$1, meta10707);
    };
  }
  return new cljs.core.async.t10706(cb, flag, alt_handler, null);
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 4143410454)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function() {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__10709_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__10709_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__3462__auto__ = wport;
            if (cljs.core.truth_(or__3462__auto__)) {
              return or__3462__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__10710 = i + 1;
          i = G__10710;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__3462__auto__ = ret;
  if (cljs.core.truth_(or__3462__auto__)) {
    return or__3462__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
      var temp__4092__auto__ = function() {
        var and__3450__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__3450__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__3450__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4092__auto__)) {
        var got = temp__4092__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", 2558708147)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", 2558708147)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__10711) {
    var map__10713 = p__10711;
    var map__10713__$1 = cljs.core.seq_QMARK_.call(null, map__10713) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10713) : map__10713;
    var opts = map__10713__$1;
    if (null) {
      return null;
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("alts! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
    }
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__10711 = null;
    if (arguments.length > 1) {
      p__10711 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return alts_BANG___delegate.call(this, ports, p__10711);
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__10714) {
    var ports = cljs.core.first(arglist__10714);
    var p__10711 = cljs.core.rest(arglist__10714);
    return alts_BANG___delegate(ports, p__10711);
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_;
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if (typeof cljs.core.async.t10722 !== "undefined") {
  } else {
    cljs.core.async.t10722 = function(ch, f, map_LT_, meta10723) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta10723 = meta10723;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t10722.cljs$lang$type = true;
    cljs.core.async.t10722.cljs$lang$ctorStr = "cljs.core.async/t10722";
    cljs.core.async.t10722.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
      return cljs.core._write.call(null, writer__4030__auto__, "cljs.core.async/t10722");
    };
    cljs.core.async.t10722.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t10722.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0);
    };
    cljs.core.async.t10722.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t10722.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t10725 !== "undefined") {
        } else {
          cljs.core.async.t10725 = function(fn1, _, meta10723, ch, f, map_LT_, meta10726) {
            this.fn1 = fn1;
            this._ = _;
            this.meta10723 = meta10723;
            this.ch = ch;
            this.f = f;
            this.map_LT_ = map_LT_;
            this.meta10726 = meta10726;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t10725.cljs$lang$type = true;
          cljs.core.async.t10725.cljs$lang$ctorStr = "cljs.core.async/t10725";
          cljs.core.async.t10725.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
              return cljs.core._write.call(null, writer__4030__auto__, "cljs.core.async/t10725");
            };
          }(___$1);
          cljs.core.async.t10725.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t10725.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t10725.prototype.cljs$core$async$impl$protocols$Handler$lock_id$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              return cljs.core.async.impl.protocols.lock_id.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t10725.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$4, ___$1) {
                return function(p1__10715_SHARP_) {
                  return f1.call(null, p1__10715_SHARP_ == null ? null : self__.f.call(null, p1__10715_SHARP_));
                };
              }(f1, ___$4, ___$1);
            };
          }(___$1);
          cljs.core.async.t10725.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_10727) {
              var self__ = this;
              var _10727__$1 = this;
              return self__.meta10726;
            };
          }(___$1);
          cljs.core.async.t10725.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_10727, meta10726__$1) {
              var self__ = this;
              var _10727__$1 = this;
              return new cljs.core.async.t10725(self__.fn1, self__._, self__.meta10723, self__.ch, self__.f, self__.map_LT_, meta10726__$1);
            };
          }(___$1);
          cljs.core.async.__GT_t10725 = function(___$1) {
            return function __GT_t10725(fn1__$1, ___$2, meta10723__$1, ch__$2, f__$2, map_LT___$2, meta10726) {
              return new cljs.core.async.t10725(fn1__$1, ___$2, meta10723__$1, ch__$2, f__$2, map_LT___$2, meta10726);
            };
          }(___$1);
        }
        return new cljs.core.async.t10725(fn1, ___$1, self__.meta10723, self__.ch, self__.f, self__.map_LT_, null);
      }());
      if (cljs.core.truth_(function() {
        var and__3450__auto__ = ret;
        if (cljs.core.truth_(and__3450__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__3450__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t10722.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t10722.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t10722.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10724) {
      var self__ = this;
      var _10724__$1 = this;
      return self__.meta10723;
    };
    cljs.core.async.t10722.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10724, meta10723__$1) {
      var self__ = this;
      var _10724__$1 = this;
      return new cljs.core.async.t10722(self__.ch, self__.f, self__.map_LT_, meta10723__$1);
    };
    cljs.core.async.__GT_t10722 = function __GT_t10722(ch__$1, f__$1, map_LT___$1, meta10723) {
      return new cljs.core.async.t10722(ch__$1, f__$1, map_LT___$1, meta10723);
    };
  }
  return new cljs.core.async.t10722(ch, f, map_LT_, null);
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if (typeof cljs.core.async.t10731 !== "undefined") {
  } else {
    cljs.core.async.t10731 = function(ch, f, map_GT_, meta10732) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta10732 = meta10732;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t10731.cljs$lang$type = true;
    cljs.core.async.t10731.cljs$lang$ctorStr = "cljs.core.async/t10731";
    cljs.core.async.t10731.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
      return cljs.core._write.call(null, writer__4030__auto__, "cljs.core.async/t10731");
    };
    cljs.core.async.t10731.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t10731.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn0);
    };
    cljs.core.async.t10731.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t10731.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t10731.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t10731.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t10731.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10733) {
      var self__ = this;
      var _10733__$1 = this;
      return self__.meta10732;
    };
    cljs.core.async.t10731.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10733, meta10732__$1) {
      var self__ = this;
      var _10733__$1 = this;
      return new cljs.core.async.t10731(self__.ch, self__.f, self__.map_GT_, meta10732__$1);
    };
    cljs.core.async.__GT_t10731 = function __GT_t10731(ch__$1, f__$1, map_GT___$1, meta10732) {
      return new cljs.core.async.t10731(ch__$1, f__$1, map_GT___$1, meta10732);
    };
  }
  return new cljs.core.async.t10731(ch, f, map_GT_, null);
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if (typeof cljs.core.async.t10737 !== "undefined") {
  } else {
    cljs.core.async.t10737 = function(ch, p, filter_GT_, meta10738) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta10738 = meta10738;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t10737.cljs$lang$type = true;
    cljs.core.async.t10737.cljs$lang$ctorStr = "cljs.core.async/t10737";
    cljs.core.async.t10737.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
      return cljs.core._write.call(null, writer__4030__auto__, "cljs.core.async/t10737");
    };
    cljs.core.async.t10737.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t10737.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0);
      } else {
        return cljs.core.async.impl.channels.box.call(null, null);
      }
    };
    cljs.core.async.t10737.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t10737.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t10737.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t10737.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t10737.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10739) {
      var self__ = this;
      var _10739__$1 = this;
      return self__.meta10738;
    };
    cljs.core.async.t10737.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10739, meta10738__$1) {
      var self__ = this;
      var _10739__$1 = this;
      return new cljs.core.async.t10737(self__.ch, self__.p, self__.filter_GT_, meta10738__$1);
    };
    cljs.core.async.__GT_t10737 = function __GT_t10737(ch__$1, p__$1, filter_GT___$1, meta10738) {
      return new cljs.core.async.t10737(ch__$1, p__$1, filter_GT___$1, meta10738);
    };
  }
  return new cljs.core.async.t10737(ch, p, filter_GT_, null);
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null);
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6232__auto___10822 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6232__auto___10822, out) {
      return function() {
        var f__6233__auto__ = function() {
          var switch__6217__auto__ = function(c__6232__auto___10822, out) {
            return function(state_10801) {
              var state_val_10802 = state_10801[1];
              if (state_val_10802 === 1) {
                var state_10801__$1 = state_10801;
                var statearr_10803_10823 = state_10801__$1;
                statearr_10803_10823[2] = null;
                statearr_10803_10823[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_10802 === 2) {
                  var state_10801__$1 = state_10801;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10801__$1, 4, ch);
                } else {
                  if (state_val_10802 === 3) {
                    var inst_10799 = state_10801[2];
                    var state_10801__$1 = state_10801;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10801__$1, inst_10799);
                  } else {
                    if (state_val_10802 === 4) {
                      var inst_10783 = state_10801[7];
                      var inst_10783__$1 = state_10801[2];
                      var inst_10784 = inst_10783__$1 == null;
                      var state_10801__$1 = function() {
                        var statearr_10804 = state_10801;
                        statearr_10804[7] = inst_10783__$1;
                        return statearr_10804;
                      }();
                      if (cljs.core.truth_(inst_10784)) {
                        var statearr_10805_10824 = state_10801__$1;
                        statearr_10805_10824[1] = 5;
                      } else {
                        var statearr_10806_10825 = state_10801__$1;
                        statearr_10806_10825[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_10802 === 5) {
                        var inst_10786 = cljs.core.async.close_BANG_.call(null, out);
                        var state_10801__$1 = state_10801;
                        var statearr_10807_10826 = state_10801__$1;
                        statearr_10807_10826[2] = inst_10786;
                        statearr_10807_10826[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_10802 === 6) {
                          var inst_10783 = state_10801[7];
                          var inst_10788 = p.call(null, inst_10783);
                          var state_10801__$1 = state_10801;
                          if (cljs.core.truth_(inst_10788)) {
                            var statearr_10808_10827 = state_10801__$1;
                            statearr_10808_10827[1] = 8;
                          } else {
                            var statearr_10809_10828 = state_10801__$1;
                            statearr_10809_10828[1] = 9;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_10802 === 7) {
                            var inst_10797 = state_10801[2];
                            var state_10801__$1 = state_10801;
                            var statearr_10810_10829 = state_10801__$1;
                            statearr_10810_10829[2] = inst_10797;
                            statearr_10810_10829[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_10802 === 8) {
                              var inst_10783 = state_10801[7];
                              var state_10801__$1 = state_10801;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_10801__$1, 11, out, inst_10783);
                            } else {
                              if (state_val_10802 === 9) {
                                var state_10801__$1 = state_10801;
                                var statearr_10811_10830 = state_10801__$1;
                                statearr_10811_10830[2] = null;
                                statearr_10811_10830[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_10802 === 10) {
                                  var inst_10794 = state_10801[2];
                                  var state_10801__$1 = function() {
                                    var statearr_10812 = state_10801;
                                    statearr_10812[8] = inst_10794;
                                    return statearr_10812;
                                  }();
                                  var statearr_10813_10831 = state_10801__$1;
                                  statearr_10813_10831[2] = null;
                                  statearr_10813_10831[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_10802 === 11) {
                                    var inst_10791 = state_10801[2];
                                    var state_10801__$1 = state_10801;
                                    var statearr_10814_10832 = state_10801__$1;
                                    statearr_10814_10832[2] = inst_10791;
                                    statearr_10814_10832[1] = 10;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6232__auto___10822, out);
          return function(switch__6217__auto__, c__6232__auto___10822, out) {
            return function() {
              var state_machine__6218__auto__ = null;
              var state_machine__6218__auto____0 = function() {
                var statearr_10818 = [null, null, null, null, null, null, null, null, null];
                statearr_10818[0] = state_machine__6218__auto__;
                statearr_10818[1] = 1;
                return statearr_10818;
              };
              var state_machine__6218__auto____1 = function(state_10801) {
                while (true) {
                  var ret_value__6219__auto__ = function() {
                    try {
                      while (true) {
                        var result__6220__auto__ = switch__6217__auto__.call(null, state_10801);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6220__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6220__auto__;
                        }
                        break;
                      }
                    } catch (e10819) {
                      if (e10819 instanceof Object) {
                        var ex__6221__auto__ = e10819;
                        var statearr_10820_10833 = state_10801;
                        statearr_10820_10833[5] = ex__6221__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10801);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e10819;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6219__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__10834 = state_10801;
                    state_10801 = G__10834;
                    continue;
                  } else {
                    return ret_value__6219__auto__;
                  }
                  break;
                }
              };
              state_machine__6218__auto__ = function(state_10801) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6218__auto____0.call(this);
                  case 1:
                    return state_machine__6218__auto____1.call(this, state_10801);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6218__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6218__auto____0;
              state_machine__6218__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6218__auto____1;
              return state_machine__6218__auto__;
            }();
          }(switch__6217__auto__, c__6232__auto___10822, out);
        }();
        var state__6234__auto__ = function() {
          var statearr_10821 = f__6233__auto__.call(null);
          statearr_10821[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6232__auto___10822;
          return statearr_10821;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6234__auto__);
      };
    }(c__6232__auto___10822, out));
    return out;
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null);
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__6232__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6232__auto__) {
    return function() {
      var f__6233__auto__ = function() {
        var switch__6217__auto__ = function(c__6232__auto__) {
          return function(state_10986) {
            var state_val_10987 = state_10986[1];
            if (state_val_10987 === 1) {
              var state_10986__$1 = state_10986;
              var statearr_10988_11025 = state_10986__$1;
              statearr_10988_11025[2] = null;
              statearr_10988_11025[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_10987 === 2) {
                var state_10986__$1 = state_10986;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10986__$1, 4, in$);
              } else {
                if (state_val_10987 === 3) {
                  var inst_10984 = state_10986[2];
                  var state_10986__$1 = state_10986;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10986__$1, inst_10984);
                } else {
                  if (state_val_10987 === 4) {
                    var inst_10932 = state_10986[7];
                    var inst_10932__$1 = state_10986[2];
                    var inst_10933 = inst_10932__$1 == null;
                    var state_10986__$1 = function() {
                      var statearr_10989 = state_10986;
                      statearr_10989[7] = inst_10932__$1;
                      return statearr_10989;
                    }();
                    if (cljs.core.truth_(inst_10933)) {
                      var statearr_10990_11026 = state_10986__$1;
                      statearr_10990_11026[1] = 5;
                    } else {
                      var statearr_10991_11027 = state_10986__$1;
                      statearr_10991_11027[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_10987 === 5) {
                      var inst_10935 = cljs.core.async.close_BANG_.call(null, out);
                      var state_10986__$1 = state_10986;
                      var statearr_10992_11028 = state_10986__$1;
                      statearr_10992_11028[2] = inst_10935;
                      statearr_10992_11028[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_10987 === 6) {
                        var inst_10932 = state_10986[7];
                        var inst_10937 = f.call(null, inst_10932);
                        var inst_10942 = cljs.core.seq.call(null, inst_10937);
                        var inst_10943 = inst_10942;
                        var inst_10944 = null;
                        var inst_10945 = 0;
                        var inst_10946 = 0;
                        var state_10986__$1 = function() {
                          var statearr_10993 = state_10986;
                          statearr_10993[8] = inst_10944;
                          statearr_10993[9] = inst_10943;
                          statearr_10993[10] = inst_10946;
                          statearr_10993[11] = inst_10945;
                          return statearr_10993;
                        }();
                        var statearr_10994_11029 = state_10986__$1;
                        statearr_10994_11029[2] = null;
                        statearr_10994_11029[1] = 8;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_10987 === 7) {
                          var inst_10982 = state_10986[2];
                          var state_10986__$1 = state_10986;
                          var statearr_10995_11030 = state_10986__$1;
                          statearr_10995_11030[2] = inst_10982;
                          statearr_10995_11030[1] = 3;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_10987 === 8) {
                            var inst_10946 = state_10986[10];
                            var inst_10945 = state_10986[11];
                            var inst_10948 = inst_10946 < inst_10945;
                            var inst_10949 = inst_10948;
                            var state_10986__$1 = state_10986;
                            if (cljs.core.truth_(inst_10949)) {
                              var statearr_10996_11031 = state_10986__$1;
                              statearr_10996_11031[1] = 10;
                            } else {
                              var statearr_10997_11032 = state_10986__$1;
                              statearr_10997_11032[1] = 11;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_10987 === 9) {
                              var inst_10979 = state_10986[2];
                              var state_10986__$1 = function() {
                                var statearr_10998 = state_10986;
                                statearr_10998[12] = inst_10979;
                                return statearr_10998;
                              }();
                              var statearr_10999_11033 = state_10986__$1;
                              statearr_10999_11033[2] = null;
                              statearr_10999_11033[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_10987 === 10) {
                                var inst_10944 = state_10986[8];
                                var inst_10946 = state_10986[10];
                                var inst_10951 = cljs.core._nth.call(null, inst_10944, inst_10946);
                                var state_10986__$1 = state_10986;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_10986__$1, 13, out, inst_10951);
                              } else {
                                if (state_val_10987 === 11) {
                                  var inst_10943 = state_10986[9];
                                  var inst_10957 = state_10986[13];
                                  var inst_10957__$1 = cljs.core.seq.call(null, inst_10943);
                                  var state_10986__$1 = function() {
                                    var statearr_11003 = state_10986;
                                    statearr_11003[13] = inst_10957__$1;
                                    return statearr_11003;
                                  }();
                                  if (inst_10957__$1) {
                                    var statearr_11004_11034 = state_10986__$1;
                                    statearr_11004_11034[1] = 14;
                                  } else {
                                    var statearr_11005_11035 = state_10986__$1;
                                    statearr_11005_11035[1] = 15;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_10987 === 12) {
                                    var inst_10977 = state_10986[2];
                                    var state_10986__$1 = state_10986;
                                    var statearr_11006_11036 = state_10986__$1;
                                    statearr_11006_11036[2] = inst_10977;
                                    statearr_11006_11036[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_10987 === 13) {
                                      var inst_10944 = state_10986[8];
                                      var inst_10943 = state_10986[9];
                                      var inst_10946 = state_10986[10];
                                      var inst_10945 = state_10986[11];
                                      var inst_10953 = state_10986[2];
                                      var inst_10954 = inst_10946 + 1;
                                      var tmp11000 = inst_10944;
                                      var tmp11001 = inst_10943;
                                      var tmp11002 = inst_10945;
                                      var inst_10943__$1 = tmp11001;
                                      var inst_10944__$1 = tmp11000;
                                      var inst_10945__$1 = tmp11002;
                                      var inst_10946__$1 = inst_10954;
                                      var state_10986__$1 = function() {
                                        var statearr_11007 = state_10986;
                                        statearr_11007[8] = inst_10944__$1;
                                        statearr_11007[9] = inst_10943__$1;
                                        statearr_11007[10] = inst_10946__$1;
                                        statearr_11007[11] = inst_10945__$1;
                                        statearr_11007[14] = inst_10953;
                                        return statearr_11007;
                                      }();
                                      var statearr_11008_11037 = state_10986__$1;
                                      statearr_11008_11037[2] = null;
                                      statearr_11008_11037[1] = 8;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_10987 === 14) {
                                        var inst_10957 = state_10986[13];
                                        var inst_10959 = cljs.core.chunked_seq_QMARK_.call(null, inst_10957);
                                        var state_10986__$1 = state_10986;
                                        if (inst_10959) {
                                          var statearr_11009_11038 = state_10986__$1;
                                          statearr_11009_11038[1] = 17;
                                        } else {
                                          var statearr_11010_11039 = state_10986__$1;
                                          statearr_11010_11039[1] = 18;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_10987 === 15) {
                                          var state_10986__$1 = state_10986;
                                          var statearr_11011_11040 = state_10986__$1;
                                          statearr_11011_11040[2] = null;
                                          statearr_11011_11040[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_10987 === 16) {
                                            var inst_10975 = state_10986[2];
                                            var state_10986__$1 = state_10986;
                                            var statearr_11012_11041 = state_10986__$1;
                                            statearr_11012_11041[2] = inst_10975;
                                            statearr_11012_11041[1] = 12;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_10987 === 17) {
                                              var inst_10957 = state_10986[13];
                                              var inst_10961 = cljs.core.chunk_first.call(null, inst_10957);
                                              var inst_10962 = cljs.core.chunk_rest.call(null, inst_10957);
                                              var inst_10963 = cljs.core.count.call(null, inst_10961);
                                              var inst_10943 = inst_10962;
                                              var inst_10944 = inst_10961;
                                              var inst_10945 = inst_10963;
                                              var inst_10946 = 0;
                                              var state_10986__$1 = function() {
                                                var statearr_11013 = state_10986;
                                                statearr_11013[8] = inst_10944;
                                                statearr_11013[9] = inst_10943;
                                                statearr_11013[10] = inst_10946;
                                                statearr_11013[11] = inst_10945;
                                                return statearr_11013;
                                              }();
                                              var statearr_11014_11042 = state_10986__$1;
                                              statearr_11014_11042[2] = null;
                                              statearr_11014_11042[1] = 8;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_10987 === 18) {
                                                var inst_10957 = state_10986[13];
                                                var inst_10966 = cljs.core.first.call(null, inst_10957);
                                                var state_10986__$1 = state_10986;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_10986__$1, 20, out, inst_10966);
                                              } else {
                                                if (state_val_10987 === 19) {
                                                  var inst_10972 = state_10986[2];
                                                  var state_10986__$1 = state_10986;
                                                  var statearr_11015_11043 = state_10986__$1;
                                                  statearr_11015_11043[2] = inst_10972;
                                                  statearr_11015_11043[1] = 16;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_10987 === 20) {
                                                    var inst_10957 = state_10986[13];
                                                    var inst_10968 = state_10986[2];
                                                    var inst_10969 = cljs.core.next.call(null, inst_10957);
                                                    var inst_10943 = inst_10969;
                                                    var inst_10944 = null;
                                                    var inst_10945 = 0;
                                                    var inst_10946 = 0;
                                                    var state_10986__$1 = function() {
                                                      var statearr_11016 = state_10986;
                                                      statearr_11016[8] = inst_10944;
                                                      statearr_11016[9] = inst_10943;
                                                      statearr_11016[10] = inst_10946;
                                                      statearr_11016[11] = inst_10945;
                                                      statearr_11016[15] = inst_10968;
                                                      return statearr_11016;
                                                    }();
                                                    var statearr_11017_11044 = state_10986__$1;
                                                    statearr_11017_11044[2] = null;
                                                    statearr_11017_11044[1] = 8;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    return null;
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6232__auto__);
        return function(switch__6217__auto__, c__6232__auto__) {
          return function() {
            var state_machine__6218__auto__ = null;
            var state_machine__6218__auto____0 = function() {
              var statearr_11021 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_11021[0] = state_machine__6218__auto__;
              statearr_11021[1] = 1;
              return statearr_11021;
            };
            var state_machine__6218__auto____1 = function(state_10986) {
              while (true) {
                var ret_value__6219__auto__ = function() {
                  try {
                    while (true) {
                      var result__6220__auto__ = switch__6217__auto__.call(null, state_10986);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6220__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6220__auto__;
                      }
                      break;
                    }
                  } catch (e11022) {
                    if (e11022 instanceof Object) {
                      var ex__6221__auto__ = e11022;
                      var statearr_11023_11045 = state_10986;
                      statearr_11023_11045[5] = ex__6221__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10986);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e11022;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6219__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__11046 = state_10986;
                  state_10986 = G__11046;
                  continue;
                } else {
                  return ret_value__6219__auto__;
                }
                break;
              }
            };
            state_machine__6218__auto__ = function(state_10986) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6218__auto____0.call(this);
                case 1:
                  return state_machine__6218__auto____1.call(this, state_10986);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6218__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6218__auto____0;
            state_machine__6218__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6218__auto____1;
            return state_machine__6218__auto__;
          }();
        }(switch__6217__auto__, c__6232__auto__);
      }();
      var state__6234__auto__ = function() {
        var statearr_11024 = f__6233__auto__.call(null);
        statearr_11024[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6232__auto__;
        return statearr_11024;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6234__auto__);
    };
  }(c__6232__auto__));
  return c__6232__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null);
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out;
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null);
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$;
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_;
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true);
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__6232__auto___11127 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6232__auto___11127) {
      return function() {
        var f__6233__auto__ = function() {
          var switch__6217__auto__ = function(c__6232__auto___11127) {
            return function(state_11106) {
              var state_val_11107 = state_11106[1];
              if (state_val_11107 === 1) {
                var state_11106__$1 = state_11106;
                var statearr_11108_11128 = state_11106__$1;
                statearr_11108_11128[2] = null;
                statearr_11108_11128[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_11107 === 2) {
                  var state_11106__$1 = state_11106;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11106__$1, 4, from);
                } else {
                  if (state_val_11107 === 3) {
                    var inst_11104 = state_11106[2];
                    var state_11106__$1 = state_11106;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11106__$1, inst_11104);
                  } else {
                    if (state_val_11107 === 4) {
                      var inst_11089 = state_11106[7];
                      var inst_11089__$1 = state_11106[2];
                      var inst_11090 = inst_11089__$1 == null;
                      var state_11106__$1 = function() {
                        var statearr_11109 = state_11106;
                        statearr_11109[7] = inst_11089__$1;
                        return statearr_11109;
                      }();
                      if (cljs.core.truth_(inst_11090)) {
                        var statearr_11110_11129 = state_11106__$1;
                        statearr_11110_11129[1] = 5;
                      } else {
                        var statearr_11111_11130 = state_11106__$1;
                        statearr_11111_11130[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_11107 === 5) {
                        var state_11106__$1 = state_11106;
                        if (cljs.core.truth_(close_QMARK_)) {
                          var statearr_11112_11131 = state_11106__$1;
                          statearr_11112_11131[1] = 8;
                        } else {
                          var statearr_11113_11132 = state_11106__$1;
                          statearr_11113_11132[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_11107 === 6) {
                          var inst_11089 = state_11106[7];
                          var state_11106__$1 = state_11106;
                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11106__$1, 11, to, inst_11089);
                        } else {
                          if (state_val_11107 === 7) {
                            var inst_11102 = state_11106[2];
                            var state_11106__$1 = state_11106;
                            var statearr_11114_11133 = state_11106__$1;
                            statearr_11114_11133[2] = inst_11102;
                            statearr_11114_11133[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_11107 === 8) {
                              var inst_11093 = cljs.core.async.close_BANG_.call(null, to);
                              var state_11106__$1 = state_11106;
                              var statearr_11115_11134 = state_11106__$1;
                              statearr_11115_11134[2] = inst_11093;
                              statearr_11115_11134[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_11107 === 9) {
                                var state_11106__$1 = state_11106;
                                var statearr_11116_11135 = state_11106__$1;
                                statearr_11116_11135[2] = null;
                                statearr_11116_11135[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_11107 === 10) {
                                  var inst_11096 = state_11106[2];
                                  var state_11106__$1 = state_11106;
                                  var statearr_11117_11136 = state_11106__$1;
                                  statearr_11117_11136[2] = inst_11096;
                                  statearr_11117_11136[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_11107 === 11) {
                                    var inst_11099 = state_11106[2];
                                    var state_11106__$1 = function() {
                                      var statearr_11118 = state_11106;
                                      statearr_11118[8] = inst_11099;
                                      return statearr_11118;
                                    }();
                                    var statearr_11119_11137 = state_11106__$1;
                                    statearr_11119_11137[2] = null;
                                    statearr_11119_11137[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6232__auto___11127);
          return function(switch__6217__auto__, c__6232__auto___11127) {
            return function() {
              var state_machine__6218__auto__ = null;
              var state_machine__6218__auto____0 = function() {
                var statearr_11123 = [null, null, null, null, null, null, null, null, null];
                statearr_11123[0] = state_machine__6218__auto__;
                statearr_11123[1] = 1;
                return statearr_11123;
              };
              var state_machine__6218__auto____1 = function(state_11106) {
                while (true) {
                  var ret_value__6219__auto__ = function() {
                    try {
                      while (true) {
                        var result__6220__auto__ = switch__6217__auto__.call(null, state_11106);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6220__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6220__auto__;
                        }
                        break;
                      }
                    } catch (e11124) {
                      if (e11124 instanceof Object) {
                        var ex__6221__auto__ = e11124;
                        var statearr_11125_11138 = state_11106;
                        statearr_11125_11138[5] = ex__6221__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11106);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e11124;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6219__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__11139 = state_11106;
                    state_11106 = G__11139;
                    continue;
                  } else {
                    return ret_value__6219__auto__;
                  }
                  break;
                }
              };
              state_machine__6218__auto__ = function(state_11106) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6218__auto____0.call(this);
                  case 1:
                    return state_machine__6218__auto____1.call(this, state_11106);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6218__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6218__auto____0;
              state_machine__6218__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6218__auto____1;
              return state_machine__6218__auto__;
            }();
          }(switch__6217__auto__, c__6232__auto___11127);
        }();
        var state__6234__auto__ = function() {
          var statearr_11126 = f__6233__auto__.call(null);
          statearr_11126[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6232__auto___11127;
          return statearr_11126;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6234__auto__);
      };
    }(c__6232__auto___11127));
    return to;
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe;
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null);
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__6232__auto___11226 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6232__auto___11226, tc, fc) {
      return function() {
        var f__6233__auto__ = function() {
          var switch__6217__auto__ = function(c__6232__auto___11226, tc, fc) {
            return function(state_11204) {
              var state_val_11205 = state_11204[1];
              if (state_val_11205 === 1) {
                var state_11204__$1 = state_11204;
                var statearr_11206_11227 = state_11204__$1;
                statearr_11206_11227[2] = null;
                statearr_11206_11227[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_11205 === 2) {
                  var state_11204__$1 = state_11204;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11204__$1, 4, ch);
                } else {
                  if (state_val_11205 === 3) {
                    var inst_11202 = state_11204[2];
                    var state_11204__$1 = state_11204;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11204__$1, inst_11202);
                  } else {
                    if (state_val_11205 === 4) {
                      var inst_11185 = state_11204[7];
                      var inst_11185__$1 = state_11204[2];
                      var inst_11186 = inst_11185__$1 == null;
                      var state_11204__$1 = function() {
                        var statearr_11207 = state_11204;
                        statearr_11207[7] = inst_11185__$1;
                        return statearr_11207;
                      }();
                      if (cljs.core.truth_(inst_11186)) {
                        var statearr_11208_11228 = state_11204__$1;
                        statearr_11208_11228[1] = 5;
                      } else {
                        var statearr_11209_11229 = state_11204__$1;
                        statearr_11209_11229[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_11205 === 5) {
                        var inst_11188 = cljs.core.async.close_BANG_.call(null, tc);
                        var inst_11189 = cljs.core.async.close_BANG_.call(null, fc);
                        var state_11204__$1 = function() {
                          var statearr_11210 = state_11204;
                          statearr_11210[8] = inst_11188;
                          return statearr_11210;
                        }();
                        var statearr_11211_11230 = state_11204__$1;
                        statearr_11211_11230[2] = inst_11189;
                        statearr_11211_11230[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_11205 === 6) {
                          var inst_11185 = state_11204[7];
                          var inst_11191 = p.call(null, inst_11185);
                          var state_11204__$1 = state_11204;
                          if (cljs.core.truth_(inst_11191)) {
                            var statearr_11212_11231 = state_11204__$1;
                            statearr_11212_11231[1] = 9;
                          } else {
                            var statearr_11213_11232 = state_11204__$1;
                            statearr_11213_11232[1] = 10;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_11205 === 7) {
                            var inst_11200 = state_11204[2];
                            var state_11204__$1 = state_11204;
                            var statearr_11214_11233 = state_11204__$1;
                            statearr_11214_11233[2] = inst_11200;
                            statearr_11214_11233[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_11205 === 8) {
                              var inst_11197 = state_11204[2];
                              var state_11204__$1 = function() {
                                var statearr_11215 = state_11204;
                                statearr_11215[9] = inst_11197;
                                return statearr_11215;
                              }();
                              var statearr_11216_11234 = state_11204__$1;
                              statearr_11216_11234[2] = null;
                              statearr_11216_11234[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_11205 === 9) {
                                var state_11204__$1 = state_11204;
                                var statearr_11217_11235 = state_11204__$1;
                                statearr_11217_11235[2] = tc;
                                statearr_11217_11235[1] = 11;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_11205 === 10) {
                                  var state_11204__$1 = state_11204;
                                  var statearr_11218_11236 = state_11204__$1;
                                  statearr_11218_11236[2] = fc;
                                  statearr_11218_11236[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_11205 === 11) {
                                    var inst_11185 = state_11204[7];
                                    var inst_11195 = state_11204[2];
                                    var state_11204__$1 = state_11204;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11204__$1, 8, inst_11195, inst_11185);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6232__auto___11226, tc, fc);
          return function(switch__6217__auto__, c__6232__auto___11226, tc, fc) {
            return function() {
              var state_machine__6218__auto__ = null;
              var state_machine__6218__auto____0 = function() {
                var statearr_11222 = [null, null, null, null, null, null, null, null, null, null];
                statearr_11222[0] = state_machine__6218__auto__;
                statearr_11222[1] = 1;
                return statearr_11222;
              };
              var state_machine__6218__auto____1 = function(state_11204) {
                while (true) {
                  var ret_value__6219__auto__ = function() {
                    try {
                      while (true) {
                        var result__6220__auto__ = switch__6217__auto__.call(null, state_11204);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6220__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6220__auto__;
                        }
                        break;
                      }
                    } catch (e11223) {
                      if (e11223 instanceof Object) {
                        var ex__6221__auto__ = e11223;
                        var statearr_11224_11237 = state_11204;
                        statearr_11224_11237[5] = ex__6221__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11204);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e11223;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6219__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__11238 = state_11204;
                    state_11204 = G__11238;
                    continue;
                  } else {
                    return ret_value__6219__auto__;
                  }
                  break;
                }
              };
              state_machine__6218__auto__ = function(state_11204) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6218__auto____0.call(this);
                  case 1:
                    return state_machine__6218__auto____1.call(this, state_11204);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6218__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6218__auto____0;
              state_machine__6218__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6218__auto____1;
              return state_machine__6218__auto__;
            }();
          }(switch__6217__auto__, c__6232__auto___11226, tc, fc);
        }();
        var state__6234__auto__ = function() {
          var statearr_11225 = f__6233__auto__.call(null);
          statearr_11225[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6232__auto___11226;
          return statearr_11225;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6234__auto__);
      };
    }(c__6232__auto___11226, tc, fc));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split;
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__6232__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6232__auto__) {
    return function() {
      var f__6233__auto__ = function() {
        var switch__6217__auto__ = function(c__6232__auto__) {
          return function(state_11285) {
            var state_val_11286 = state_11285[1];
            if (state_val_11286 === 7) {
              var inst_11281 = state_11285[2];
              var state_11285__$1 = state_11285;
              var statearr_11287_11303 = state_11285__$1;
              statearr_11287_11303[2] = inst_11281;
              statearr_11287_11303[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_11286 === 6) {
                var inst_11274 = state_11285[7];
                var inst_11271 = state_11285[8];
                var inst_11278 = f.call(null, inst_11271, inst_11274);
                var inst_11271__$1 = inst_11278;
                var state_11285__$1 = function() {
                  var statearr_11288 = state_11285;
                  statearr_11288[8] = inst_11271__$1;
                  return statearr_11288;
                }();
                var statearr_11289_11304 = state_11285__$1;
                statearr_11289_11304[2] = null;
                statearr_11289_11304[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_11286 === 5) {
                  var inst_11271 = state_11285[8];
                  var state_11285__$1 = state_11285;
                  var statearr_11290_11305 = state_11285__$1;
                  statearr_11290_11305[2] = inst_11271;
                  statearr_11290_11305[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_11286 === 4) {
                    var inst_11274 = state_11285[7];
                    var inst_11274__$1 = state_11285[2];
                    var inst_11275 = inst_11274__$1 == null;
                    var state_11285__$1 = function() {
                      var statearr_11291 = state_11285;
                      statearr_11291[7] = inst_11274__$1;
                      return statearr_11291;
                    }();
                    if (cljs.core.truth_(inst_11275)) {
                      var statearr_11292_11306 = state_11285__$1;
                      statearr_11292_11306[1] = 5;
                    } else {
                      var statearr_11293_11307 = state_11285__$1;
                      statearr_11293_11307[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_11286 === 3) {
                      var inst_11283 = state_11285[2];
                      var state_11285__$1 = state_11285;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11285__$1, inst_11283);
                    } else {
                      if (state_val_11286 === 2) {
                        var state_11285__$1 = state_11285;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11285__$1, 4, ch);
                      } else {
                        if (state_val_11286 === 1) {
                          var inst_11271 = init;
                          var state_11285__$1 = function() {
                            var statearr_11294 = state_11285;
                            statearr_11294[8] = inst_11271;
                            return statearr_11294;
                          }();
                          var statearr_11295_11308 = state_11285__$1;
                          statearr_11295_11308[2] = null;
                          statearr_11295_11308[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6232__auto__);
        return function(switch__6217__auto__, c__6232__auto__) {
          return function() {
            var state_machine__6218__auto__ = null;
            var state_machine__6218__auto____0 = function() {
              var statearr_11299 = [null, null, null, null, null, null, null, null, null];
              statearr_11299[0] = state_machine__6218__auto__;
              statearr_11299[1] = 1;
              return statearr_11299;
            };
            var state_machine__6218__auto____1 = function(state_11285) {
              while (true) {
                var ret_value__6219__auto__ = function() {
                  try {
                    while (true) {
                      var result__6220__auto__ = switch__6217__auto__.call(null, state_11285);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6220__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6220__auto__;
                      }
                      break;
                    }
                  } catch (e11300) {
                    if (e11300 instanceof Object) {
                      var ex__6221__auto__ = e11300;
                      var statearr_11301_11309 = state_11285;
                      statearr_11301_11309[5] = ex__6221__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11285);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e11300;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6219__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__11310 = state_11285;
                  state_11285 = G__11310;
                  continue;
                } else {
                  return ret_value__6219__auto__;
                }
                break;
              }
            };
            state_machine__6218__auto__ = function(state_11285) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6218__auto____0.call(this);
                case 1:
                  return state_machine__6218__auto____1.call(this, state_11285);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6218__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6218__auto____0;
            state_machine__6218__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6218__auto____1;
            return state_machine__6218__auto__;
          }();
        }(switch__6217__auto__, c__6232__auto__);
      }();
      var state__6234__auto__ = function() {
        var statearr_11302 = f__6233__auto__.call(null);
        statearr_11302[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6232__auto__;
        return statearr_11302;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6234__auto__);
    };
  }(c__6232__auto__));
  return c__6232__auto__;
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true);
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__6232__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6232__auto__) {
      return function() {
        var f__6233__auto__ = function() {
          var switch__6217__auto__ = function(c__6232__auto__) {
            return function(state_11372) {
              var state_val_11373 = state_11372[1];
              if (state_val_11373 === 1) {
                var inst_11352 = cljs.core.seq.call(null, coll);
                var inst_11353 = inst_11352;
                var state_11372__$1 = function() {
                  var statearr_11374 = state_11372;
                  statearr_11374[7] = inst_11353;
                  return statearr_11374;
                }();
                var statearr_11375_11393 = state_11372__$1;
                statearr_11375_11393[2] = null;
                statearr_11375_11393[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_11373 === 2) {
                  var inst_11353 = state_11372[7];
                  var state_11372__$1 = state_11372;
                  if (cljs.core.truth_(inst_11353)) {
                    var statearr_11376_11394 = state_11372__$1;
                    statearr_11376_11394[1] = 4;
                  } else {
                    var statearr_11377_11395 = state_11372__$1;
                    statearr_11377_11395[1] = 5;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_11373 === 3) {
                    var inst_11370 = state_11372[2];
                    var state_11372__$1 = state_11372;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11372__$1, inst_11370);
                  } else {
                    if (state_val_11373 === 4) {
                      var inst_11353 = state_11372[7];
                      var inst_11356 = cljs.core.first.call(null, inst_11353);
                      var state_11372__$1 = state_11372;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11372__$1, 7, ch, inst_11356);
                    } else {
                      if (state_val_11373 === 5) {
                        var state_11372__$1 = state_11372;
                        if (cljs.core.truth_(close_QMARK_)) {
                          var statearr_11378_11396 = state_11372__$1;
                          statearr_11378_11396[1] = 8;
                        } else {
                          var statearr_11379_11397 = state_11372__$1;
                          statearr_11379_11397[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_11373 === 6) {
                          var inst_11368 = state_11372[2];
                          var state_11372__$1 = state_11372;
                          var statearr_11380_11398 = state_11372__$1;
                          statearr_11380_11398[2] = inst_11368;
                          statearr_11380_11398[1] = 3;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_11373 === 7) {
                            var inst_11353 = state_11372[7];
                            var inst_11358 = state_11372[2];
                            var inst_11359 = cljs.core.next.call(null, inst_11353);
                            var inst_11353__$1 = inst_11359;
                            var state_11372__$1 = function() {
                              var statearr_11381 = state_11372;
                              statearr_11381[8] = inst_11358;
                              statearr_11381[7] = inst_11353__$1;
                              return statearr_11381;
                            }();
                            var statearr_11382_11399 = state_11372__$1;
                            statearr_11382_11399[2] = null;
                            statearr_11382_11399[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_11373 === 8) {
                              var inst_11363 = cljs.core.async.close_BANG_.call(null, ch);
                              var state_11372__$1 = state_11372;
                              var statearr_11383_11400 = state_11372__$1;
                              statearr_11383_11400[2] = inst_11363;
                              statearr_11383_11400[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_11373 === 9) {
                                var state_11372__$1 = state_11372;
                                var statearr_11384_11401 = state_11372__$1;
                                statearr_11384_11401[2] = null;
                                statearr_11384_11401[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_11373 === 10) {
                                  var inst_11366 = state_11372[2];
                                  var state_11372__$1 = state_11372;
                                  var statearr_11385_11402 = state_11372__$1;
                                  statearr_11385_11402[2] = inst_11366;
                                  statearr_11385_11402[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6232__auto__);
          return function(switch__6217__auto__, c__6232__auto__) {
            return function() {
              var state_machine__6218__auto__ = null;
              var state_machine__6218__auto____0 = function() {
                var statearr_11389 = [null, null, null, null, null, null, null, null, null];
                statearr_11389[0] = state_machine__6218__auto__;
                statearr_11389[1] = 1;
                return statearr_11389;
              };
              var state_machine__6218__auto____1 = function(state_11372) {
                while (true) {
                  var ret_value__6219__auto__ = function() {
                    try {
                      while (true) {
                        var result__6220__auto__ = switch__6217__auto__.call(null, state_11372);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6220__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6220__auto__;
                        }
                        break;
                      }
                    } catch (e11390) {
                      if (e11390 instanceof Object) {
                        var ex__6221__auto__ = e11390;
                        var statearr_11391_11403 = state_11372;
                        statearr_11391_11403[5] = ex__6221__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11372);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e11390;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6219__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__11404 = state_11372;
                    state_11372 = G__11404;
                    continue;
                  } else {
                    return ret_value__6219__auto__;
                  }
                  break;
                }
              };
              state_machine__6218__auto__ = function(state_11372) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6218__auto____0.call(this);
                  case 1:
                    return state_machine__6218__auto____1.call(this, state_11372);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6218__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6218__auto____0;
              state_machine__6218__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6218__auto____1;
              return state_machine__6218__auto__;
            }();
          }(switch__6217__auto__, c__6232__auto__);
        }();
        var state__6234__auto__ = function() {
          var statearr_11392 = f__6233__auto__.call(null);
          statearr_11392[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6232__auto__;
          return statearr_11392;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6234__auto__);
      };
    }(c__6232__auto__));
    return c__6232__auto__;
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan;
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj11406 = {};
  return obj11406;
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if (function() {
    var and__3450__auto__ = _;
    if (and__3450__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4089__auto__ = _ == null ? null : _;
    return function() {
      var or__3462__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj11408 = {};
  return obj11408;
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__3450__auto__ = m;
    if (and__3450__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4089__auto__ = m == null ? null : m;
    return function() {
      var or__3462__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if (function() {
    var and__3450__auto__ = m;
    if (and__3450__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4089__auto__ = m == null ? null : m;
    return function() {
      var or__3462__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if (function() {
    var and__3450__auto__ = m;
    if (and__3450__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4089__auto__ = m == null ? null : m;
    return function() {
      var or__3462__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t11632 !== "undefined") {
    } else {
      cljs.core.async.t11632 = function(cs, ch, mult, meta11633) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta11633 = meta11633;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t11632.cljs$lang$type = true;
      cljs.core.async.t11632.cljs$lang$ctorStr = "cljs.core.async/t11632";
      cljs.core.async.t11632.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
          return cljs.core._write.call(null, writer__4030__auto__, "cljs.core.async/t11632");
        };
      }(cs);
      cljs.core.async.t11632.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t11632.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$2, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$2, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t11632.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$2) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$2);
          return null;
        };
      }(cs);
      cljs.core.async.t11632.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t11632.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t11632.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t11632.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_11634) {
          var self__ = this;
          var _11634__$1 = this;
          return self__.meta11633;
        };
      }(cs);
      cljs.core.async.t11632.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_11634, meta11633__$1) {
          var self__ = this;
          var _11634__$1 = this;
          return new cljs.core.async.t11632(self__.cs, self__.ch, self__.mult, meta11633__$1);
        };
      }(cs);
      cljs.core.async.__GT_t11632 = function(cs) {
        return function __GT_t11632(cs__$1, ch__$1, mult__$1, meta11633) {
          return new cljs.core.async.t11632(cs__$1, ch__$1, mult__$1, meta11633);
        };
      }(cs);
    }
    return new cljs.core.async.t11632(cs, ch, mult, null);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function() {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__6232__auto___11855 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6232__auto___11855, cs, m, dchan, dctr, done) {
    return function() {
      var f__6233__auto__ = function() {
        var switch__6217__auto__ = function(c__6232__auto___11855, cs, m, dchan, dctr, done) {
          return function(state_11769) {
            var state_val_11770 = state_11769[1];
            if (state_val_11770 === 32) {
              var inst_11637 = state_11769[7];
              var inst_11713 = state_11769[8];
              var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_11769, 31, Object, null, 30);
              var inst_11720 = cljs.core.async.put_BANG_.call(null, inst_11713, inst_11637, done);
              var state_11769__$1 = state_11769;
              var statearr_11771_11856 = state_11769__$1;
              statearr_11771_11856[2] = inst_11720;
              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11769__$1);
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_11770 === 1) {
                var state_11769__$1 = state_11769;
                var statearr_11772_11857 = state_11769__$1;
                statearr_11772_11857[2] = null;
                statearr_11772_11857[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_11770 === 33) {
                  var inst_11726 = state_11769[9];
                  var inst_11728 = cljs.core.chunked_seq_QMARK_.call(null, inst_11726);
                  var state_11769__$1 = state_11769;
                  if (inst_11728) {
                    var statearr_11773_11858 = state_11769__$1;
                    statearr_11773_11858[1] = 36;
                  } else {
                    var statearr_11774_11859 = state_11769__$1;
                    statearr_11774_11859[1] = 37;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_11770 === 2) {
                    var state_11769__$1 = state_11769;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11769__$1, 4, ch);
                  } else {
                    if (state_val_11770 === 34) {
                      var state_11769__$1 = state_11769;
                      var statearr_11775_11860 = state_11769__$1;
                      statearr_11775_11860[2] = null;
                      statearr_11775_11860[1] = 35;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_11770 === 3) {
                        var inst_11767 = state_11769[2];
                        var state_11769__$1 = state_11769;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11769__$1, inst_11767);
                      } else {
                        if (state_val_11770 === 35) {
                          var inst_11751 = state_11769[2];
                          var state_11769__$1 = state_11769;
                          var statearr_11776_11861 = state_11769__$1;
                          statearr_11776_11861[2] = inst_11751;
                          statearr_11776_11861[1] = 29;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_11770 === 4) {
                            var inst_11637 = state_11769[7];
                            var inst_11637__$1 = state_11769[2];
                            var inst_11638 = inst_11637__$1 == null;
                            var state_11769__$1 = function() {
                              var statearr_11777 = state_11769;
                              statearr_11777[7] = inst_11637__$1;
                              return statearr_11777;
                            }();
                            if (cljs.core.truth_(inst_11638)) {
                              var statearr_11778_11862 = state_11769__$1;
                              statearr_11778_11862[1] = 5;
                            } else {
                              var statearr_11779_11863 = state_11769__$1;
                              statearr_11779_11863[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_11770 === 36) {
                              var inst_11726 = state_11769[9];
                              var inst_11730 = cljs.core.chunk_first.call(null, inst_11726);
                              var inst_11731 = cljs.core.chunk_rest.call(null, inst_11726);
                              var inst_11732 = cljs.core.count.call(null, inst_11730);
                              var inst_11705 = inst_11731;
                              var inst_11706 = inst_11730;
                              var inst_11707 = inst_11732;
                              var inst_11708 = 0;
                              var state_11769__$1 = function() {
                                var statearr_11780 = state_11769;
                                statearr_11780[10] = inst_11705;
                                statearr_11780[11] = inst_11708;
                                statearr_11780[12] = inst_11706;
                                statearr_11780[13] = inst_11707;
                                return statearr_11780;
                              }();
                              var statearr_11781_11864 = state_11769__$1;
                              statearr_11781_11864[2] = null;
                              statearr_11781_11864[1] = 25;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_11770 === 5) {
                                var inst_11644 = cljs.core.deref.call(null, cs);
                                var inst_11645 = cljs.core.seq.call(null, inst_11644);
                                var inst_11646 = inst_11645;
                                var inst_11647 = null;
                                var inst_11648 = 0;
                                var inst_11649 = 0;
                                var state_11769__$1 = function() {
                                  var statearr_11782 = state_11769;
                                  statearr_11782[14] = inst_11646;
                                  statearr_11782[15] = inst_11648;
                                  statearr_11782[16] = inst_11647;
                                  statearr_11782[17] = inst_11649;
                                  return statearr_11782;
                                }();
                                var statearr_11783_11865 = state_11769__$1;
                                statearr_11783_11865[2] = null;
                                statearr_11783_11865[1] = 8;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_11770 === 37) {
                                  var inst_11726 = state_11769[9];
                                  var inst_11735 = cljs.core.first.call(null, inst_11726);
                                  var state_11769__$1 = function() {
                                    var statearr_11784 = state_11769;
                                    statearr_11784[18] = inst_11735;
                                    return statearr_11784;
                                  }();
                                  var statearr_11785_11866 = state_11769__$1;
                                  statearr_11785_11866[2] = null;
                                  statearr_11785_11866[1] = 41;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_11770 === 6) {
                                    var inst_11697 = state_11769[19];
                                    var inst_11696 = cljs.core.deref.call(null, cs);
                                    var inst_11697__$1 = cljs.core.keys.call(null, inst_11696);
                                    var inst_11698 = cljs.core.count.call(null, inst_11697__$1);
                                    var inst_11699 = cljs.core.reset_BANG_.call(null, dctr, inst_11698);
                                    var inst_11704 = cljs.core.seq.call(null, inst_11697__$1);
                                    var inst_11705 = inst_11704;
                                    var inst_11706 = null;
                                    var inst_11707 = 0;
                                    var inst_11708 = 0;
                                    var state_11769__$1 = function() {
                                      var statearr_11786 = state_11769;
                                      statearr_11786[10] = inst_11705;
                                      statearr_11786[11] = inst_11708;
                                      statearr_11786[20] = inst_11699;
                                      statearr_11786[12] = inst_11706;
                                      statearr_11786[13] = inst_11707;
                                      statearr_11786[19] = inst_11697__$1;
                                      return statearr_11786;
                                    }();
                                    var statearr_11787_11867 = state_11769__$1;
                                    statearr_11787_11867[2] = null;
                                    statearr_11787_11867[1] = 25;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_11770 === 38) {
                                      var inst_11748 = state_11769[2];
                                      var state_11769__$1 = state_11769;
                                      var statearr_11788_11868 = state_11769__$1;
                                      statearr_11788_11868[2] = inst_11748;
                                      statearr_11788_11868[1] = 35;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_11770 === 7) {
                                        var inst_11765 = state_11769[2];
                                        var state_11769__$1 = state_11769;
                                        var statearr_11789_11869 = state_11769__$1;
                                        statearr_11789_11869[2] = inst_11765;
                                        statearr_11789_11869[1] = 3;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_11770 === 39) {
                                          var inst_11726 = state_11769[9];
                                          var inst_11744 = state_11769[2];
                                          var inst_11745 = cljs.core.next.call(null, inst_11726);
                                          var inst_11705 = inst_11745;
                                          var inst_11706 = null;
                                          var inst_11707 = 0;
                                          var inst_11708 = 0;
                                          var state_11769__$1 = function() {
                                            var statearr_11790 = state_11769;
                                            statearr_11790[10] = inst_11705;
                                            statearr_11790[11] = inst_11708;
                                            statearr_11790[12] = inst_11706;
                                            statearr_11790[13] = inst_11707;
                                            statearr_11790[21] = inst_11744;
                                            return statearr_11790;
                                          }();
                                          var statearr_11791_11870 = state_11769__$1;
                                          statearr_11791_11870[2] = null;
                                          statearr_11791_11870[1] = 25;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_11770 === 8) {
                                            var inst_11648 = state_11769[15];
                                            var inst_11649 = state_11769[17];
                                            var inst_11651 = inst_11649 < inst_11648;
                                            var inst_11652 = inst_11651;
                                            var state_11769__$1 = state_11769;
                                            if (cljs.core.truth_(inst_11652)) {
                                              var statearr_11792_11871 = state_11769__$1;
                                              statearr_11792_11871[1] = 10;
                                            } else {
                                              var statearr_11793_11872 = state_11769__$1;
                                              statearr_11793_11872[1] = 11;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_11770 === 40) {
                                              var inst_11735 = state_11769[18];
                                              var inst_11736 = state_11769[2];
                                              var inst_11737 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                              var inst_11738 = cljs.core.async.untap_STAR_.call(null, m, inst_11735);
                                              var state_11769__$1 = function() {
                                                var statearr_11794 = state_11769;
                                                statearr_11794[22] = inst_11736;
                                                statearr_11794[23] = inst_11737;
                                                return statearr_11794;
                                              }();
                                              var statearr_11795_11873 = state_11769__$1;
                                              statearr_11795_11873[2] = inst_11738;
                                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11769__$1);
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_11770 === 9) {
                                                var inst_11694 = state_11769[2];
                                                var state_11769__$1 = state_11769;
                                                var statearr_11796_11874 = state_11769__$1;
                                                statearr_11796_11874[2] = inst_11694;
                                                statearr_11796_11874[1] = 7;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                if (state_val_11770 === 41) {
                                                  var inst_11637 = state_11769[7];
                                                  var inst_11735 = state_11769[18];
                                                  var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_11769, 40, Object, null, 39);
                                                  var inst_11742 = cljs.core.async.put_BANG_.call(null, inst_11735, inst_11637, done);
                                                  var state_11769__$1 = state_11769;
                                                  var statearr_11797_11875 = state_11769__$1;
                                                  statearr_11797_11875[2] = inst_11742;
                                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11769__$1);
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_11770 === 10) {
                                                    var inst_11647 = state_11769[16];
                                                    var inst_11649 = state_11769[17];
                                                    var inst_11655 = cljs.core._nth.call(null, inst_11647, inst_11649);
                                                    var inst_11656 = cljs.core.nth.call(null, inst_11655, 0, null);
                                                    var inst_11657 = cljs.core.nth.call(null, inst_11655, 1, null);
                                                    var state_11769__$1 = function() {
                                                      var statearr_11798 = state_11769;
                                                      statearr_11798[24] = inst_11656;
                                                      return statearr_11798;
                                                    }();
                                                    if (cljs.core.truth_(inst_11657)) {
                                                      var statearr_11799_11876 = state_11769__$1;
                                                      statearr_11799_11876[1] = 13;
                                                    } else {
                                                      var statearr_11800_11877 = state_11769__$1;
                                                      statearr_11800_11877[1] = 14;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_11770 === 42) {
                                                      var state_11769__$1 = state_11769;
                                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11769__$1, 45, dchan);
                                                    } else {
                                                      if (state_val_11770 === 11) {
                                                        var inst_11646 = state_11769[14];
                                                        var inst_11666 = state_11769[25];
                                                        var inst_11666__$1 = cljs.core.seq.call(null, inst_11646);
                                                        var state_11769__$1 = function() {
                                                          var statearr_11801 = state_11769;
                                                          statearr_11801[25] = inst_11666__$1;
                                                          return statearr_11801;
                                                        }();
                                                        if (inst_11666__$1) {
                                                          var statearr_11802_11878 = state_11769__$1;
                                                          statearr_11802_11878[1] = 16;
                                                        } else {
                                                          var statearr_11803_11879 = state_11769__$1;
                                                          statearr_11803_11879[1] = 17;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                      } else {
                                                        if (state_val_11770 === 43) {
                                                          var state_11769__$1 = state_11769;
                                                          var statearr_11804_11880 = state_11769__$1;
                                                          statearr_11804_11880[2] = null;
                                                          statearr_11804_11880[1] = 44;
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                        } else {
                                                          if (state_val_11770 === 12) {
                                                            var inst_11692 = state_11769[2];
                                                            var state_11769__$1 = state_11769;
                                                            var statearr_11805_11881 = state_11769__$1;
                                                            statearr_11805_11881[2] = inst_11692;
                                                            statearr_11805_11881[1] = 9;
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                          } else {
                                                            if (state_val_11770 === 44) {
                                                              var inst_11762 = state_11769[2];
                                                              var state_11769__$1 = function() {
                                                                var statearr_11806 = state_11769;
                                                                statearr_11806[26] = inst_11762;
                                                                return statearr_11806;
                                                              }();
                                                              var statearr_11807_11882 = state_11769__$1;
                                                              statearr_11807_11882[2] = null;
                                                              statearr_11807_11882[1] = 2;
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                            } else {
                                                              if (state_val_11770 === 13) {
                                                                var inst_11656 = state_11769[24];
                                                                var inst_11659 = cljs.core.async.close_BANG_.call(null, inst_11656);
                                                                var state_11769__$1 = state_11769;
                                                                var statearr_11808_11883 = state_11769__$1;
                                                                statearr_11808_11883[2] = inst_11659;
                                                                statearr_11808_11883[1] = 15;
                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                              } else {
                                                                if (state_val_11770 === 45) {
                                                                  var inst_11759 = state_11769[2];
                                                                  var state_11769__$1 = state_11769;
                                                                  var statearr_11812_11884 = state_11769__$1;
                                                                  statearr_11812_11884[2] = inst_11759;
                                                                  statearr_11812_11884[1] = 44;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                } else {
                                                                  if (state_val_11770 === 14) {
                                                                    var state_11769__$1 = state_11769;
                                                                    var statearr_11813_11885 = state_11769__$1;
                                                                    statearr_11813_11885[2] = null;
                                                                    statearr_11813_11885[1] = 15;
                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                  } else {
                                                                    if (state_val_11770 === 15) {
                                                                      var inst_11646 = state_11769[14];
                                                                      var inst_11648 = state_11769[15];
                                                                      var inst_11647 = state_11769[16];
                                                                      var inst_11649 = state_11769[17];
                                                                      var inst_11662 = state_11769[2];
                                                                      var inst_11663 = inst_11649 + 1;
                                                                      var tmp11809 = inst_11646;
                                                                      var tmp11810 = inst_11648;
                                                                      var tmp11811 = inst_11647;
                                                                      var inst_11646__$1 = tmp11809;
                                                                      var inst_11647__$1 = tmp11811;
                                                                      var inst_11648__$1 = tmp11810;
                                                                      var inst_11649__$1 = inst_11663;
                                                                      var state_11769__$1 = function() {
                                                                        var statearr_11814 = state_11769;
                                                                        statearr_11814[27] = inst_11662;
                                                                        statearr_11814[14] = inst_11646__$1;
                                                                        statearr_11814[15] = inst_11648__$1;
                                                                        statearr_11814[16] = inst_11647__$1;
                                                                        statearr_11814[17] = inst_11649__$1;
                                                                        return statearr_11814;
                                                                      }();
                                                                      var statearr_11815_11886 = state_11769__$1;
                                                                      statearr_11815_11886[2] = null;
                                                                      statearr_11815_11886[1] = 8;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                    } else {
                                                                      if (state_val_11770 === 16) {
                                                                        var inst_11666 = state_11769[25];
                                                                        var inst_11668 = cljs.core.chunked_seq_QMARK_.call(null, inst_11666);
                                                                        var state_11769__$1 = state_11769;
                                                                        if (inst_11668) {
                                                                          var statearr_11816_11887 = state_11769__$1;
                                                                          statearr_11816_11887[1] = 19;
                                                                        } else {
                                                                          var statearr_11817_11888 = state_11769__$1;
                                                                          statearr_11817_11888[1] = 20;
                                                                        }
                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                      } else {
                                                                        if (state_val_11770 === 17) {
                                                                          var state_11769__$1 = state_11769;
                                                                          var statearr_11818_11889 = state_11769__$1;
                                                                          statearr_11818_11889[2] = null;
                                                                          statearr_11818_11889[1] = 18;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                        } else {
                                                                          if (state_val_11770 === 18) {
                                                                            var inst_11690 = state_11769[2];
                                                                            var state_11769__$1 = state_11769;
                                                                            var statearr_11819_11890 = state_11769__$1;
                                                                            statearr_11819_11890[2] = inst_11690;
                                                                            statearr_11819_11890[1] = 12;
                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                          } else {
                                                                            if (state_val_11770 === 19) {
                                                                              var inst_11666 = state_11769[25];
                                                                              var inst_11670 = cljs.core.chunk_first.call(null, inst_11666);
                                                                              var inst_11671 = cljs.core.chunk_rest.call(null, inst_11666);
                                                                              var inst_11672 = cljs.core.count.call(null, inst_11670);
                                                                              var inst_11646 = inst_11671;
                                                                              var inst_11647 = inst_11670;
                                                                              var inst_11648 = inst_11672;
                                                                              var inst_11649 = 0;
                                                                              var state_11769__$1 = function() {
                                                                                var statearr_11820 = state_11769;
                                                                                statearr_11820[14] = inst_11646;
                                                                                statearr_11820[15] = inst_11648;
                                                                                statearr_11820[16] = inst_11647;
                                                                                statearr_11820[17] = inst_11649;
                                                                                return statearr_11820;
                                                                              }();
                                                                              var statearr_11821_11891 = state_11769__$1;
                                                                              statearr_11821_11891[2] = null;
                                                                              statearr_11821_11891[1] = 8;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                            } else {
                                                                              if (state_val_11770 === 20) {
                                                                                var inst_11666 = state_11769[25];
                                                                                var inst_11676 = cljs.core.first.call(null, inst_11666);
                                                                                var inst_11677 = cljs.core.nth.call(null, inst_11676, 0, null);
                                                                                var inst_11678 = cljs.core.nth.call(null, inst_11676, 1, null);
                                                                                var state_11769__$1 = function() {
                                                                                  var statearr_11822 = state_11769;
                                                                                  statearr_11822[28] = inst_11677;
                                                                                  return statearr_11822;
                                                                                }();
                                                                                if (cljs.core.truth_(inst_11678)) {
                                                                                  var statearr_11823_11892 = state_11769__$1;
                                                                                  statearr_11823_11892[1] = 22;
                                                                                } else {
                                                                                  var statearr_11824_11893 = state_11769__$1;
                                                                                  statearr_11824_11893[1] = 23;
                                                                                }
                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                              } else {
                                                                                if (state_val_11770 === 21) {
                                                                                  var inst_11687 = state_11769[2];
                                                                                  var state_11769__$1 = state_11769;
                                                                                  var statearr_11825_11894 = state_11769__$1;
                                                                                  statearr_11825_11894[2] = inst_11687;
                                                                                  statearr_11825_11894[1] = 18;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                } else {
                                                                                  if (state_val_11770 === 22) {
                                                                                    var inst_11677 = state_11769[28];
                                                                                    var inst_11680 = cljs.core.async.close_BANG_.call(null, inst_11677);
                                                                                    var state_11769__$1 = state_11769;
                                                                                    var statearr_11826_11895 = state_11769__$1;
                                                                                    statearr_11826_11895[2] = inst_11680;
                                                                                    statearr_11826_11895[1] = 24;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                  } else {
                                                                                    if (state_val_11770 === 23) {
                                                                                      var state_11769__$1 = state_11769;
                                                                                      var statearr_11827_11896 = state_11769__$1;
                                                                                      statearr_11827_11896[2] = null;
                                                                                      statearr_11827_11896[1] = 24;
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                    } else {
                                                                                      if (state_val_11770 === 24) {
                                                                                        var inst_11666 = state_11769[25];
                                                                                        var inst_11683 = state_11769[2];
                                                                                        var inst_11684 = cljs.core.next.call(null, inst_11666);
                                                                                        var inst_11646 = inst_11684;
                                                                                        var inst_11647 = null;
                                                                                        var inst_11648 = 0;
                                                                                        var inst_11649 = 0;
                                                                                        var state_11769__$1 = function() {
                                                                                          var statearr_11828 = state_11769;
                                                                                          statearr_11828[14] = inst_11646;
                                                                                          statearr_11828[15] = inst_11648;
                                                                                          statearr_11828[16] = inst_11647;
                                                                                          statearr_11828[17] = inst_11649;
                                                                                          statearr_11828[29] = inst_11683;
                                                                                          return statearr_11828;
                                                                                        }();
                                                                                        var statearr_11829_11897 = state_11769__$1;
                                                                                        statearr_11829_11897[2] = null;
                                                                                        statearr_11829_11897[1] = 8;
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                      } else {
                                                                                        if (state_val_11770 === 25) {
                                                                                          var inst_11708 = state_11769[11];
                                                                                          var inst_11707 = state_11769[13];
                                                                                          var inst_11710 = inst_11708 < inst_11707;
                                                                                          var inst_11711 = inst_11710;
                                                                                          var state_11769__$1 = state_11769;
                                                                                          if (cljs.core.truth_(inst_11711)) {
                                                                                            var statearr_11830_11898 = state_11769__$1;
                                                                                            statearr_11830_11898[1] = 27;
                                                                                          } else {
                                                                                            var statearr_11831_11899 = state_11769__$1;
                                                                                            statearr_11831_11899[1] = 28;
                                                                                          }
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                        } else {
                                                                                          if (state_val_11770 === 26) {
                                                                                            var inst_11697 = state_11769[19];
                                                                                            var inst_11755 = state_11769[2];
                                                                                            var inst_11756 = cljs.core.seq.call(null, inst_11697);
                                                                                            var state_11769__$1 = function() {
                                                                                              var statearr_11832 = state_11769;
                                                                                              statearr_11832[30] = inst_11755;
                                                                                              return statearr_11832;
                                                                                            }();
                                                                                            if (inst_11756) {
                                                                                              var statearr_11833_11900 = state_11769__$1;
                                                                                              statearr_11833_11900[1] = 42;
                                                                                            } else {
                                                                                              var statearr_11834_11901 = state_11769__$1;
                                                                                              statearr_11834_11901[1] = 43;
                                                                                            }
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                          } else {
                                                                                            if (state_val_11770 === 27) {
                                                                                              var inst_11708 = state_11769[11];
                                                                                              var inst_11706 = state_11769[12];
                                                                                              var inst_11713 = cljs.core._nth.call(null, inst_11706, inst_11708);
                                                                                              var state_11769__$1 = function() {
                                                                                                var statearr_11835 = state_11769;
                                                                                                statearr_11835[8] = inst_11713;
                                                                                                return statearr_11835;
                                                                                              }();
                                                                                              var statearr_11836_11902 = state_11769__$1;
                                                                                              statearr_11836_11902[2] = null;
                                                                                              statearr_11836_11902[1] = 32;
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                            } else {
                                                                                              if (state_val_11770 === 28) {
                                                                                                var inst_11705 = state_11769[10];
                                                                                                var inst_11726 = state_11769[9];
                                                                                                var inst_11726__$1 = cljs.core.seq.call(null, inst_11705);
                                                                                                var state_11769__$1 = function() {
                                                                                                  var statearr_11840 = state_11769;
                                                                                                  statearr_11840[9] = inst_11726__$1;
                                                                                                  return statearr_11840;
                                                                                                }();
                                                                                                if (inst_11726__$1) {
                                                                                                  var statearr_11841_11903 = state_11769__$1;
                                                                                                  statearr_11841_11903[1] = 33;
                                                                                                } else {
                                                                                                  var statearr_11842_11904 = state_11769__$1;
                                                                                                  statearr_11842_11904[1] = 34;
                                                                                                }
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                              } else {
                                                                                                if (state_val_11770 === 29) {
                                                                                                  var inst_11753 = state_11769[2];
                                                                                                  var state_11769__$1 = state_11769;
                                                                                                  var statearr_11843_11905 = state_11769__$1;
                                                                                                  statearr_11843_11905[2] = inst_11753;
                                                                                                  statearr_11843_11905[1] = 26;
                                                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                                } else {
                                                                                                  if (state_val_11770 === 30) {
                                                                                                    var inst_11705 = state_11769[10];
                                                                                                    var inst_11708 = state_11769[11];
                                                                                                    var inst_11706 = state_11769[12];
                                                                                                    var inst_11707 = state_11769[13];
                                                                                                    var inst_11722 = state_11769[2];
                                                                                                    var inst_11723 = inst_11708 + 1;
                                                                                                    var tmp11837 = inst_11705;
                                                                                                    var tmp11838 = inst_11706;
                                                                                                    var tmp11839 = inst_11707;
                                                                                                    var inst_11705__$1 = tmp11837;
                                                                                                    var inst_11706__$1 = tmp11838;
                                                                                                    var inst_11707__$1 = tmp11839;
                                                                                                    var inst_11708__$1 = inst_11723;
                                                                                                    var state_11769__$1 = function() {
                                                                                                      var statearr_11844 = state_11769;
                                                                                                      statearr_11844[10] = inst_11705__$1;
                                                                                                      statearr_11844[11] = inst_11708__$1;
                                                                                                      statearr_11844[12] = inst_11706__$1;
                                                                                                      statearr_11844[13] = inst_11707__$1;
                                                                                                      statearr_11844[31] = inst_11722;
                                                                                                      return statearr_11844;
                                                                                                    }();
                                                                                                    var statearr_11845_11906 = state_11769__$1;
                                                                                                    statearr_11845_11906[2] = null;
                                                                                                    statearr_11845_11906[1] = 25;
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                                  } else {
                                                                                                    if (state_val_11770 === 31) {
                                                                                                      var inst_11713 = state_11769[8];
                                                                                                      var inst_11714 = state_11769[2];
                                                                                                      var inst_11715 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                                                                                      var inst_11716 = cljs.core.async.untap_STAR_.call(null, m, inst_11713);
                                                                                                      var state_11769__$1 = function() {
                                                                                                        var statearr_11846 = state_11769;
                                                                                                        statearr_11846[32] = inst_11714;
                                                                                                        statearr_11846[33] = inst_11715;
                                                                                                        return statearr_11846;
                                                                                                      }();
                                                                                                      var statearr_11847_11907 = state_11769__$1;
                                                                                                      statearr_11847_11907[2] = inst_11716;
                                                                                                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11769__$1);
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6232__auto___11855, cs, m, dchan, dctr, done);
        return function(switch__6217__auto__, c__6232__auto___11855, cs, m, dchan, dctr, done) {
          return function() {
            var state_machine__6218__auto__ = null;
            var state_machine__6218__auto____0 = function() {
              var statearr_11851 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_11851[0] = state_machine__6218__auto__;
              statearr_11851[1] = 1;
              return statearr_11851;
            };
            var state_machine__6218__auto____1 = function(state_11769) {
              while (true) {
                var ret_value__6219__auto__ = function() {
                  try {
                    while (true) {
                      var result__6220__auto__ = switch__6217__auto__.call(null, state_11769);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6220__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6220__auto__;
                      }
                      break;
                    }
                  } catch (e11852) {
                    if (e11852 instanceof Object) {
                      var ex__6221__auto__ = e11852;
                      var statearr_11853_11908 = state_11769;
                      statearr_11853_11908[5] = ex__6221__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11769);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e11852;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6219__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__11909 = state_11769;
                  state_11769 = G__11909;
                  continue;
                } else {
                  return ret_value__6219__auto__;
                }
                break;
              }
            };
            state_machine__6218__auto__ = function(state_11769) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6218__auto____0.call(this);
                case 1:
                  return state_machine__6218__auto____1.call(this, state_11769);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6218__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6218__auto____0;
            state_machine__6218__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6218__auto____1;
            return state_machine__6218__auto__;
          }();
        }(switch__6217__auto__, c__6232__auto___11855, cs, m, dchan, dctr, done);
      }();
      var state__6234__auto__ = function() {
        var statearr_11854 = f__6233__auto__.call(null);
        statearr_11854[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6232__auto___11855;
        return statearr_11854;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6234__auto__);
    };
  }(c__6232__auto___11855, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true);
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch;
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap;
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
  var obj11911 = {};
  return obj11911;
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if (function() {
    var and__3450__auto__ = m;
    if (and__3450__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4089__auto__ = m == null ? null : m;
    return function() {
      var or__3462__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if (function() {
    var and__3450__auto__ = m;
    if (and__3450__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4089__auto__ = m == null ? null : m;
    return function() {
      var or__3462__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if (function() {
    var and__3450__auto__ = m;
    if (and__3450__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4089__auto__ = m == null ? null : m;
    return function() {
      var or__3462__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if (function() {
    var and__3450__auto__ = m;
    if (and__3450__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4089__auto__ = m == null ? null : m;
    return function() {
      var or__3462__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if (function() {
    var and__3450__auto__ = m;
    if (and__3450__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4089__auto__ = m == null ? null : m;
    return function() {
      var or__3462__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", 1120344424), null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", 1017440337));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1017267595));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", 1017440337), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", 1120344424), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1123523302), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), chs), new cljs.core.Keyword(null, "reads", "reads", 1122290959), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", 1120344424)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t12021 !== "undefined") {
    } else {
      cljs.core.async.t12021 = function(pick, out, attrs, cs, calc_state, solo_modes, mix, changed, change, solo_mode, meta12022) {
        this.pick = pick;
        this.out = out;
        this.attrs = attrs;
        this.cs = cs;
        this.calc_state = calc_state;
        this.solo_modes = solo_modes;
        this.mix = mix;
        this.changed = changed;
        this.change = change;
        this.solo_mode = solo_mode;
        this.meta12022 = meta12022;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t12021.cljs$lang$type = true;
      cljs.core.async.t12021.cljs$lang$ctorStr = "cljs.core.async/t12021";
      cljs.core.async.t12021.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
          return cljs.core._write.call(null, writer__4030__auto__, "cljs.core.async/t12021");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12021.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t12021.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12021.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12021.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12021.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12021.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", -1162732933, null), new cljs.core.Symbol(null, "mode", "mode", -1637174436, null))))].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12021.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t12021.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12021.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_12023) {
          var self__ = this;
          var _12023__$1 = this;
          return self__.meta12022;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12021.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_12023, meta12022__$1) {
          var self__ = this;
          var _12023__$1 = this;
          return new cljs.core.async.t12021(self__.pick, self__.out, self__.attrs, self__.cs, self__.calc_state, self__.solo_modes, self__.mix, self__.changed, self__.change, self__.solo_mode, meta12022__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t12021 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t12021(pick__$1, out__$1, attrs__$1, cs__$1, calc_state__$1, solo_modes__$1, mix__$1, changed__$1, change__$1, solo_mode__$1, meta12022) {
          return new cljs.core.async.t12021(pick__$1, out__$1, attrs__$1, cs__$1, calc_state__$1, solo_modes__$1, mix__$1, changed__$1, change__$1, solo_mode__$1, meta12022);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t12021(pick, out, attrs, cs, calc_state, solo_modes, mix, changed, change, solo_mode, null);
  }();
  var c__6232__auto___12130 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6232__auto___12130, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__6233__auto__ = function() {
        var switch__6217__auto__ = function(c__6232__auto___12130, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_12088) {
            var state_val_12089 = state_12088[1];
            if (state_val_12089 === 1) {
              var inst_12027 = state_12088[7];
              var inst_12027__$1 = calc_state.call(null);
              var inst_12028 = cljs.core.seq_QMARK_.call(null, inst_12027__$1);
              var state_12088__$1 = function() {
                var statearr_12090 = state_12088;
                statearr_12090[7] = inst_12027__$1;
                return statearr_12090;
              }();
              if (inst_12028) {
                var statearr_12091_12131 = state_12088__$1;
                statearr_12091_12131[1] = 2;
              } else {
                var statearr_12092_12132 = state_12088__$1;
                statearr_12092_12132[1] = 3;
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_12089 === 2) {
                var inst_12027 = state_12088[7];
                var inst_12030 = cljs.core.apply.call(null, cljs.core.hash_map, inst_12027);
                var state_12088__$1 = state_12088;
                var statearr_12093_12133 = state_12088__$1;
                statearr_12093_12133[2] = inst_12030;
                statearr_12093_12133[1] = 4;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_12089 === 3) {
                  var inst_12027 = state_12088[7];
                  var state_12088__$1 = state_12088;
                  var statearr_12094_12134 = state_12088__$1;
                  statearr_12094_12134[2] = inst_12027;
                  statearr_12094_12134[1] = 4;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_12089 === 4) {
                    var inst_12027 = state_12088[7];
                    var inst_12033 = state_12088[2];
                    var inst_12034 = cljs.core.get.call(null, inst_12033, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                    var inst_12035 = cljs.core.get.call(null, inst_12033, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                    var inst_12036 = cljs.core.get.call(null, inst_12033, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                    var inst_12037 = inst_12027;
                    var state_12088__$1 = function() {
                      var statearr_12095 = state_12088;
                      statearr_12095[8] = inst_12037;
                      statearr_12095[9] = inst_12036;
                      statearr_12095[10] = inst_12035;
                      statearr_12095[11] = inst_12034;
                      return statearr_12095;
                    }();
                    var statearr_12096_12135 = state_12088__$1;
                    statearr_12096_12135[2] = null;
                    statearr_12096_12135[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_12089 === 5) {
                      var inst_12037 = state_12088[8];
                      var inst_12040 = cljs.core.seq_QMARK_.call(null, inst_12037);
                      var state_12088__$1 = state_12088;
                      if (inst_12040) {
                        var statearr_12097_12136 = state_12088__$1;
                        statearr_12097_12136[1] = 7;
                      } else {
                        var statearr_12098_12137 = state_12088__$1;
                        statearr_12098_12137[1] = 8;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_12089 === 6) {
                        var inst_12086 = state_12088[2];
                        var state_12088__$1 = state_12088;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12088__$1, inst_12086);
                      } else {
                        if (state_val_12089 === 7) {
                          var inst_12037 = state_12088[8];
                          var inst_12042 = cljs.core.apply.call(null, cljs.core.hash_map, inst_12037);
                          var state_12088__$1 = state_12088;
                          var statearr_12099_12138 = state_12088__$1;
                          statearr_12099_12138[2] = inst_12042;
                          statearr_12099_12138[1] = 9;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_12089 === 8) {
                            var inst_12037 = state_12088[8];
                            var state_12088__$1 = state_12088;
                            var statearr_12100_12139 = state_12088__$1;
                            statearr_12100_12139[2] = inst_12037;
                            statearr_12100_12139[1] = 9;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_12089 === 9) {
                              var inst_12045 = state_12088[12];
                              var inst_12045__$1 = state_12088[2];
                              var inst_12046 = cljs.core.get.call(null, inst_12045__$1, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                              var inst_12047 = cljs.core.get.call(null, inst_12045__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                              var inst_12048 = cljs.core.get.call(null, inst_12045__$1, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                              var state_12088__$1 = function() {
                                var statearr_12101 = state_12088;
                                statearr_12101[12] = inst_12045__$1;
                                statearr_12101[13] = inst_12048;
                                statearr_12101[14] = inst_12047;
                                return statearr_12101;
                              }();
                              return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_12088__$1, 10, inst_12046);
                            } else {
                              if (state_val_12089 === 10) {
                                var inst_12053 = state_12088[15];
                                var inst_12052 = state_12088[16];
                                var inst_12051 = state_12088[2];
                                var inst_12052__$1 = cljs.core.nth.call(null, inst_12051, 0, null);
                                var inst_12053__$1 = cljs.core.nth.call(null, inst_12051, 1, null);
                                var inst_12054 = inst_12052__$1 == null;
                                var inst_12055 = cljs.core._EQ_.call(null, inst_12053__$1, change);
                                var inst_12056 = inst_12054 || inst_12055;
                                var state_12088__$1 = function() {
                                  var statearr_12102 = state_12088;
                                  statearr_12102[15] = inst_12053__$1;
                                  statearr_12102[16] = inst_12052__$1;
                                  return statearr_12102;
                                }();
                                if (cljs.core.truth_(inst_12056)) {
                                  var statearr_12103_12140 = state_12088__$1;
                                  statearr_12103_12140[1] = 11;
                                } else {
                                  var statearr_12104_12141 = state_12088__$1;
                                  statearr_12104_12141[1] = 12;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_12089 === 11) {
                                  var inst_12052 = state_12088[16];
                                  var inst_12058 = inst_12052 == null;
                                  var state_12088__$1 = state_12088;
                                  if (cljs.core.truth_(inst_12058)) {
                                    var statearr_12105_12142 = state_12088__$1;
                                    statearr_12105_12142[1] = 14;
                                  } else {
                                    var statearr_12106_12143 = state_12088__$1;
                                    statearr_12106_12143[1] = 15;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_12089 === 12) {
                                    var inst_12067 = state_12088[17];
                                    var inst_12053 = state_12088[15];
                                    var inst_12048 = state_12088[13];
                                    var inst_12067__$1 = inst_12048.call(null, inst_12053);
                                    var state_12088__$1 = function() {
                                      var statearr_12107 = state_12088;
                                      statearr_12107[17] = inst_12067__$1;
                                      return statearr_12107;
                                    }();
                                    if (cljs.core.truth_(inst_12067__$1)) {
                                      var statearr_12108_12144 = state_12088__$1;
                                      statearr_12108_12144[1] = 17;
                                    } else {
                                      var statearr_12109_12145 = state_12088__$1;
                                      statearr_12109_12145[1] = 18;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_12089 === 13) {
                                      var inst_12084 = state_12088[2];
                                      var state_12088__$1 = state_12088;
                                      var statearr_12110_12146 = state_12088__$1;
                                      statearr_12110_12146[2] = inst_12084;
                                      statearr_12110_12146[1] = 6;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_12089 === 14) {
                                        var inst_12053 = state_12088[15];
                                        var inst_12060 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_12053);
                                        var state_12088__$1 = state_12088;
                                        var statearr_12111_12147 = state_12088__$1;
                                        statearr_12111_12147[2] = inst_12060;
                                        statearr_12111_12147[1] = 16;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_12089 === 15) {
                                          var state_12088__$1 = state_12088;
                                          var statearr_12112_12148 = state_12088__$1;
                                          statearr_12112_12148[2] = null;
                                          statearr_12112_12148[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_12089 === 16) {
                                            var inst_12063 = state_12088[2];
                                            var inst_12064 = calc_state.call(null);
                                            var inst_12037 = inst_12064;
                                            var state_12088__$1 = function() {
                                              var statearr_12113 = state_12088;
                                              statearr_12113[8] = inst_12037;
                                              statearr_12113[18] = inst_12063;
                                              return statearr_12113;
                                            }();
                                            var statearr_12114_12149 = state_12088__$1;
                                            statearr_12114_12149[2] = null;
                                            statearr_12114_12149[1] = 5;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_12089 === 17) {
                                              var inst_12067 = state_12088[17];
                                              var state_12088__$1 = state_12088;
                                              var statearr_12115_12150 = state_12088__$1;
                                              statearr_12115_12150[2] = inst_12067;
                                              statearr_12115_12150[1] = 19;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_12089 === 18) {
                                                var inst_12053 = state_12088[15];
                                                var inst_12048 = state_12088[13];
                                                var inst_12047 = state_12088[14];
                                                var inst_12070 = cljs.core.empty_QMARK_.call(null, inst_12048);
                                                var inst_12071 = inst_12047.call(null, inst_12053);
                                                var inst_12072 = cljs.core.not.call(null, inst_12071);
                                                var inst_12073 = inst_12070 && inst_12072;
                                                var state_12088__$1 = state_12088;
                                                var statearr_12116_12151 = state_12088__$1;
                                                statearr_12116_12151[2] = inst_12073;
                                                statearr_12116_12151[1] = 19;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                if (state_val_12089 === 19) {
                                                  var inst_12075 = state_12088[2];
                                                  var state_12088__$1 = state_12088;
                                                  if (cljs.core.truth_(inst_12075)) {
                                                    var statearr_12117_12152 = state_12088__$1;
                                                    statearr_12117_12152[1] = 20;
                                                  } else {
                                                    var statearr_12118_12153 = state_12088__$1;
                                                    statearr_12118_12153[1] = 21;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_12089 === 20) {
                                                    var inst_12052 = state_12088[16];
                                                    var state_12088__$1 = state_12088;
                                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12088__$1, 23, out, inst_12052);
                                                  } else {
                                                    if (state_val_12089 === 21) {
                                                      var state_12088__$1 = state_12088;
                                                      var statearr_12119_12154 = state_12088__$1;
                                                      statearr_12119_12154[2] = null;
                                                      statearr_12119_12154[1] = 22;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      if (state_val_12089 === 22) {
                                                        var inst_12045 = state_12088[12];
                                                        var inst_12081 = state_12088[2];
                                                        var inst_12037 = inst_12045;
                                                        var state_12088__$1 = function() {
                                                          var statearr_12120 = state_12088;
                                                          statearr_12120[8] = inst_12037;
                                                          statearr_12120[19] = inst_12081;
                                                          return statearr_12120;
                                                        }();
                                                        var statearr_12121_12155 = state_12088__$1;
                                                        statearr_12121_12155[2] = null;
                                                        statearr_12121_12155[1] = 5;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                      } else {
                                                        if (state_val_12089 === 23) {
                                                          var inst_12078 = state_12088[2];
                                                          var state_12088__$1 = state_12088;
                                                          var statearr_12122_12156 = state_12088__$1;
                                                          statearr_12122_12156[2] = inst_12078;
                                                          statearr_12122_12156[1] = 22;
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6232__auto___12130, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__6217__auto__, c__6232__auto___12130, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var state_machine__6218__auto__ = null;
            var state_machine__6218__auto____0 = function() {
              var statearr_12126 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_12126[0] = state_machine__6218__auto__;
              statearr_12126[1] = 1;
              return statearr_12126;
            };
            var state_machine__6218__auto____1 = function(state_12088) {
              while (true) {
                var ret_value__6219__auto__ = function() {
                  try {
                    while (true) {
                      var result__6220__auto__ = switch__6217__auto__.call(null, state_12088);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6220__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6220__auto__;
                      }
                      break;
                    }
                  } catch (e12127) {
                    if (e12127 instanceof Object) {
                      var ex__6221__auto__ = e12127;
                      var statearr_12128_12157 = state_12088;
                      statearr_12128_12157[5] = ex__6221__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12088);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e12127;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6219__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__12158 = state_12088;
                  state_12088 = G__12158;
                  continue;
                } else {
                  return ret_value__6219__auto__;
                }
                break;
              }
            };
            state_machine__6218__auto__ = function(state_12088) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6218__auto____0.call(this);
                case 1:
                  return state_machine__6218__auto____1.call(this, state_12088);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6218__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6218__auto____0;
            state_machine__6218__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6218__auto____1;
            return state_machine__6218__auto__;
          }();
        }(switch__6217__auto__, c__6232__auto___12130, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__6234__auto__ = function() {
        var statearr_12129 = f__6233__auto__.call(null);
        statearr_12129[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6232__auto___12130;
        return statearr_12129;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6234__auto__);
    };
  }(c__6232__auto___12130, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
  var obj12160 = {};
  return obj12160;
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__3450__auto__ = p;
    if (and__3450__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4089__auto__ = p == null ? null : p;
    return function() {
      var or__3462__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if (function() {
    var and__3450__auto__ = p;
    if (and__3450__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4089__auto__ = p == null ? null : p;
    return function() {
      var or__3462__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__3450__auto__ = p;
      if (and__3450__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__4089__auto__ = p == null ? null : p;
      return function() {
        var or__3462__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__3450__auto__ = p;
      if (and__3450__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__3450__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__4089__auto__ = p == null ? null : p;
      return function() {
        var or__3462__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4089__auto__)];
        if (or__3462__auto__) {
          return or__3462__auto__;
        } else {
          var or__3462__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3462__auto____$1) {
            return or__3462__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3462__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if (cljs.core.truth_(or__3462__auto__)) {
          return or__3462__auto__;
        } else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3462__auto__, mults) {
            return function(p1__12161_SHARP_) {
              if (cljs.core.truth_(p1__12161_SHARP_.call(null, topic))) {
                return p1__12161_SHARP_;
              } else {
                return cljs.core.assoc.call(null, p1__12161_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
              }
            };
          }(or__3462__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t12286 !== "undefined") {
      } else {
        cljs.core.async.t12286 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta12287) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta12287 = meta12287;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t12286.cljs$lang$type = true;
        cljs.core.async.t12286.cljs$lang$ctorStr = "cljs.core.async/t12286";
        cljs.core.async.t12286.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
            return cljs.core._write.call(null, writer__4030__auto__, "cljs.core.async/t12286");
          };
        }(mults, ensure_mult);
        cljs.core.async.t12286.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t12286.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$2, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t12286.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2) {
            var self__ = this;
            var p__$1 = this;
            var temp__4092__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if (cljs.core.truth_(temp__4092__auto__)) {
              var m = temp__4092__auto__;
              return cljs.core.async.untap.call(null, m, ch__$2);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t12286.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t12286.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t12286.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t12286.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t12286.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_12288) {
            var self__ = this;
            var _12288__$1 = this;
            return self__.meta12287;
          };
        }(mults, ensure_mult);
        cljs.core.async.t12286.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_12288, meta12287__$1) {
            var self__ = this;
            var _12288__$1 = this;
            return new cljs.core.async.t12286(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta12287__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t12286 = function(mults, ensure_mult) {
          return function __GT_t12286(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta12287) {
            return new cljs.core.async.t12286(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta12287);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t12286(ensure_mult, mults, buf_fn, topic_fn, ch, pub, null);
    }();
    var c__6232__auto___12410 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6232__auto___12410, mults, ensure_mult, p) {
      return function() {
        var f__6233__auto__ = function() {
          var switch__6217__auto__ = function(c__6232__auto___12410, mults, ensure_mult, p) {
            return function(state_12362) {
              var state_val_12363 = state_12362[1];
              if (state_val_12363 === 1) {
                var state_12362__$1 = state_12362;
                var statearr_12364_12411 = state_12362__$1;
                statearr_12364_12411[2] = null;
                statearr_12364_12411[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_12363 === 2) {
                  var state_12362__$1 = state_12362;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12362__$1, 4, ch);
                } else {
                  if (state_val_12363 === 3) {
                    var inst_12360 = state_12362[2];
                    var state_12362__$1 = state_12362;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12362__$1, inst_12360);
                  } else {
                    if (state_val_12363 === 4) {
                      var inst_12291 = state_12362[7];
                      var inst_12291__$1 = state_12362[2];
                      var inst_12292 = inst_12291__$1 == null;
                      var state_12362__$1 = function() {
                        var statearr_12365 = state_12362;
                        statearr_12365[7] = inst_12291__$1;
                        return statearr_12365;
                      }();
                      if (cljs.core.truth_(inst_12292)) {
                        var statearr_12366_12412 = state_12362__$1;
                        statearr_12366_12412[1] = 5;
                      } else {
                        var statearr_12367_12413 = state_12362__$1;
                        statearr_12367_12413[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_12363 === 5) {
                        var inst_12298 = cljs.core.deref.call(null, mults);
                        var inst_12299 = cljs.core.vals.call(null, inst_12298);
                        var inst_12300 = cljs.core.seq.call(null, inst_12299);
                        var inst_12301 = inst_12300;
                        var inst_12302 = null;
                        var inst_12303 = 0;
                        var inst_12304 = 0;
                        var state_12362__$1 = function() {
                          var statearr_12368 = state_12362;
                          statearr_12368[8] = inst_12303;
                          statearr_12368[9] = inst_12304;
                          statearr_12368[10] = inst_12302;
                          statearr_12368[11] = inst_12301;
                          return statearr_12368;
                        }();
                        var statearr_12369_12414 = state_12362__$1;
                        statearr_12369_12414[2] = null;
                        statearr_12369_12414[1] = 8;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_12363 === 6) {
                          var inst_12341 = state_12362[12];
                          var inst_12339 = state_12362[13];
                          var inst_12291 = state_12362[7];
                          var inst_12339__$1 = topic_fn.call(null, inst_12291);
                          var inst_12340 = cljs.core.deref.call(null, mults);
                          var inst_12341__$1 = cljs.core.get.call(null, inst_12340, inst_12339__$1);
                          var state_12362__$1 = function() {
                            var statearr_12370 = state_12362;
                            statearr_12370[12] = inst_12341__$1;
                            statearr_12370[13] = inst_12339__$1;
                            return statearr_12370;
                          }();
                          if (cljs.core.truth_(inst_12341__$1)) {
                            var statearr_12371_12415 = state_12362__$1;
                            statearr_12371_12415[1] = 19;
                          } else {
                            var statearr_12372_12416 = state_12362__$1;
                            statearr_12372_12416[1] = 20;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_12363 === 7) {
                            var inst_12358 = state_12362[2];
                            var state_12362__$1 = state_12362;
                            var statearr_12373_12417 = state_12362__$1;
                            statearr_12373_12417[2] = inst_12358;
                            statearr_12373_12417[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_12363 === 8) {
                              var inst_12303 = state_12362[8];
                              var inst_12304 = state_12362[9];
                              var inst_12306 = inst_12304 < inst_12303;
                              var inst_12307 = inst_12306;
                              var state_12362__$1 = state_12362;
                              if (cljs.core.truth_(inst_12307)) {
                                var statearr_12377_12418 = state_12362__$1;
                                statearr_12377_12418[1] = 10;
                              } else {
                                var statearr_12378_12419 = state_12362__$1;
                                statearr_12378_12419[1] = 11;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_12363 === 9) {
                                var inst_12337 = state_12362[2];
                                var state_12362__$1 = state_12362;
                                var statearr_12379_12420 = state_12362__$1;
                                statearr_12379_12420[2] = inst_12337;
                                statearr_12379_12420[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_12363 === 10) {
                                  var inst_12303 = state_12362[8];
                                  var inst_12304 = state_12362[9];
                                  var inst_12302 = state_12362[10];
                                  var inst_12301 = state_12362[11];
                                  var inst_12309 = cljs.core._nth.call(null, inst_12302, inst_12304);
                                  var inst_12310 = cljs.core.async.muxch_STAR_.call(null, inst_12309);
                                  var inst_12311 = cljs.core.async.close_BANG_.call(null, inst_12310);
                                  var inst_12312 = inst_12304 + 1;
                                  var tmp12374 = inst_12303;
                                  var tmp12375 = inst_12302;
                                  var tmp12376 = inst_12301;
                                  var inst_12301__$1 = tmp12376;
                                  var inst_12302__$1 = tmp12375;
                                  var inst_12303__$1 = tmp12374;
                                  var inst_12304__$1 = inst_12312;
                                  var state_12362__$1 = function() {
                                    var statearr_12380 = state_12362;
                                    statearr_12380[8] = inst_12303__$1;
                                    statearr_12380[9] = inst_12304__$1;
                                    statearr_12380[14] = inst_12311;
                                    statearr_12380[10] = inst_12302__$1;
                                    statearr_12380[11] = inst_12301__$1;
                                    return statearr_12380;
                                  }();
                                  var statearr_12381_12421 = state_12362__$1;
                                  statearr_12381_12421[2] = null;
                                  statearr_12381_12421[1] = 8;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_12363 === 11) {
                                    var inst_12301 = state_12362[11];
                                    var inst_12315 = state_12362[15];
                                    var inst_12315__$1 = cljs.core.seq.call(null, inst_12301);
                                    var state_12362__$1 = function() {
                                      var statearr_12382 = state_12362;
                                      statearr_12382[15] = inst_12315__$1;
                                      return statearr_12382;
                                    }();
                                    if (inst_12315__$1) {
                                      var statearr_12383_12422 = state_12362__$1;
                                      statearr_12383_12422[1] = 13;
                                    } else {
                                      var statearr_12384_12423 = state_12362__$1;
                                      statearr_12384_12423[1] = 14;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_12363 === 12) {
                                      var inst_12335 = state_12362[2];
                                      var state_12362__$1 = state_12362;
                                      var statearr_12385_12424 = state_12362__$1;
                                      statearr_12385_12424[2] = inst_12335;
                                      statearr_12385_12424[1] = 9;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_12363 === 13) {
                                        var inst_12315 = state_12362[15];
                                        var inst_12317 = cljs.core.chunked_seq_QMARK_.call(null, inst_12315);
                                        var state_12362__$1 = state_12362;
                                        if (inst_12317) {
                                          var statearr_12386_12425 = state_12362__$1;
                                          statearr_12386_12425[1] = 16;
                                        } else {
                                          var statearr_12387_12426 = state_12362__$1;
                                          statearr_12387_12426[1] = 17;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_12363 === 14) {
                                          var state_12362__$1 = state_12362;
                                          var statearr_12388_12427 = state_12362__$1;
                                          statearr_12388_12427[2] = null;
                                          statearr_12388_12427[1] = 15;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_12363 === 15) {
                                            var inst_12333 = state_12362[2];
                                            var state_12362__$1 = state_12362;
                                            var statearr_12389_12428 = state_12362__$1;
                                            statearr_12389_12428[2] = inst_12333;
                                            statearr_12389_12428[1] = 12;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_12363 === 16) {
                                              var inst_12315 = state_12362[15];
                                              var inst_12319 = cljs.core.chunk_first.call(null, inst_12315);
                                              var inst_12320 = cljs.core.chunk_rest.call(null, inst_12315);
                                              var inst_12321 = cljs.core.count.call(null, inst_12319);
                                              var inst_12301 = inst_12320;
                                              var inst_12302 = inst_12319;
                                              var inst_12303 = inst_12321;
                                              var inst_12304 = 0;
                                              var state_12362__$1 = function() {
                                                var statearr_12390 = state_12362;
                                                statearr_12390[8] = inst_12303;
                                                statearr_12390[9] = inst_12304;
                                                statearr_12390[10] = inst_12302;
                                                statearr_12390[11] = inst_12301;
                                                return statearr_12390;
                                              }();
                                              var statearr_12391_12429 = state_12362__$1;
                                              statearr_12391_12429[2] = null;
                                              statearr_12391_12429[1] = 8;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_12363 === 17) {
                                                var inst_12315 = state_12362[15];
                                                var inst_12324 = cljs.core.first.call(null, inst_12315);
                                                var inst_12325 = cljs.core.async.muxch_STAR_.call(null, inst_12324);
                                                var inst_12326 = cljs.core.async.close_BANG_.call(null, inst_12325);
                                                var inst_12327 = cljs.core.next.call(null, inst_12315);
                                                var inst_12301 = inst_12327;
                                                var inst_12302 = null;
                                                var inst_12303 = 0;
                                                var inst_12304 = 0;
                                                var state_12362__$1 = function() {
                                                  var statearr_12392 = state_12362;
                                                  statearr_12392[8] = inst_12303;
                                                  statearr_12392[9] = inst_12304;
                                                  statearr_12392[10] = inst_12302;
                                                  statearr_12392[11] = inst_12301;
                                                  statearr_12392[16] = inst_12326;
                                                  return statearr_12392;
                                                }();
                                                var statearr_12393_12430 = state_12362__$1;
                                                statearr_12393_12430[2] = null;
                                                statearr_12393_12430[1] = 8;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                if (state_val_12363 === 18) {
                                                  var inst_12330 = state_12362[2];
                                                  var state_12362__$1 = state_12362;
                                                  var statearr_12394_12431 = state_12362__$1;
                                                  statearr_12394_12431[2] = inst_12330;
                                                  statearr_12394_12431[1] = 15;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_12363 === 19) {
                                                    var state_12362__$1 = state_12362;
                                                    var statearr_12395_12432 = state_12362__$1;
                                                    statearr_12395_12432[2] = null;
                                                    statearr_12395_12432[1] = 24;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_12363 === 20) {
                                                      var state_12362__$1 = state_12362;
                                                      var statearr_12396_12433 = state_12362__$1;
                                                      statearr_12396_12433[2] = null;
                                                      statearr_12396_12433[1] = 21;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      if (state_val_12363 === 21) {
                                                        var inst_12355 = state_12362[2];
                                                        var state_12362__$1 = function() {
                                                          var statearr_12397 = state_12362;
                                                          statearr_12397[17] = inst_12355;
                                                          return statearr_12397;
                                                        }();
                                                        var statearr_12398_12434 = state_12362__$1;
                                                        statearr_12398_12434[2] = null;
                                                        statearr_12398_12434[1] = 2;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                      } else {
                                                        if (state_val_12363 === 22) {
                                                          var inst_12352 = state_12362[2];
                                                          var state_12362__$1 = state_12362;
                                                          var statearr_12399_12435 = state_12362__$1;
                                                          statearr_12399_12435[2] = inst_12352;
                                                          statearr_12399_12435[1] = 21;
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                        } else {
                                                          if (state_val_12363 === 23) {
                                                            var inst_12339 = state_12362[13];
                                                            var inst_12343 = state_12362[2];
                                                            var inst_12344 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_12339);
                                                            var state_12362__$1 = function() {
                                                              var statearr_12400 = state_12362;
                                                              statearr_12400[18] = inst_12343;
                                                              return statearr_12400;
                                                            }();
                                                            var statearr_12401_12436 = state_12362__$1;
                                                            statearr_12401_12436[2] = inst_12344;
                                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12362__$1);
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                          } else {
                                                            if (state_val_12363 === 24) {
                                                              var inst_12341 = state_12362[12];
                                                              var inst_12291 = state_12362[7];
                                                              var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_12362, 23, Object, null, 22);
                                                              var inst_12348 = cljs.core.async.muxch_STAR_.call(null, inst_12341);
                                                              var state_12362__$1 = state_12362;
                                                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12362__$1, 25, inst_12348, inst_12291);
                                                            } else {
                                                              if (state_val_12363 === 25) {
                                                                var inst_12350 = state_12362[2];
                                                                var state_12362__$1 = state_12362;
                                                                var statearr_12402_12437 = state_12362__$1;
                                                                statearr_12402_12437[2] = inst_12350;
                                                                cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12362__$1);
                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6232__auto___12410, mults, ensure_mult, p);
          return function(switch__6217__auto__, c__6232__auto___12410, mults, ensure_mult, p) {
            return function() {
              var state_machine__6218__auto__ = null;
              var state_machine__6218__auto____0 = function() {
                var statearr_12406 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_12406[0] = state_machine__6218__auto__;
                statearr_12406[1] = 1;
                return statearr_12406;
              };
              var state_machine__6218__auto____1 = function(state_12362) {
                while (true) {
                  var ret_value__6219__auto__ = function() {
                    try {
                      while (true) {
                        var result__6220__auto__ = switch__6217__auto__.call(null, state_12362);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6220__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6220__auto__;
                        }
                        break;
                      }
                    } catch (e12407) {
                      if (e12407 instanceof Object) {
                        var ex__6221__auto__ = e12407;
                        var statearr_12408_12438 = state_12362;
                        statearr_12408_12438[5] = ex__6221__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12362);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e12407;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6219__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__12439 = state_12362;
                    state_12362 = G__12439;
                    continue;
                  } else {
                    return ret_value__6219__auto__;
                  }
                  break;
                }
              };
              state_machine__6218__auto__ = function(state_12362) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6218__auto____0.call(this);
                  case 1:
                    return state_machine__6218__auto____1.call(this, state_12362);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6218__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6218__auto____0;
              state_machine__6218__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6218__auto____1;
              return state_machine__6218__auto__;
            }();
          }(switch__6217__auto__, c__6232__auto___12410, mults, ensure_mult, p);
        }();
        var state__6234__auto__ = function() {
          var statearr_12409 = f__6233__auto__.call(null);
          statearr_12409[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6232__auto___12410;
          return statearr_12409;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6234__auto__);
      };
    }(c__6232__auto___12410, mults, ensure_mult, p));
    return p;
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub;
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true);
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub;
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p);
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all;
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null);
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__6232__auto___12576 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6232__auto___12576, chs__$1, out, cnt, rets, dchan, dctr, done) {
      return function() {
        var f__6233__auto__ = function() {
          var switch__6217__auto__ = function(c__6232__auto___12576, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function(state_12546) {
              var state_val_12547 = state_12546[1];
              if (state_val_12547 === 1) {
                var state_12546__$1 = state_12546;
                var statearr_12548_12577 = state_12546__$1;
                statearr_12548_12577[2] = null;
                statearr_12548_12577[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_12547 === 2) {
                  var inst_12509 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                  var inst_12510 = 0;
                  var state_12546__$1 = function() {
                    var statearr_12549 = state_12546;
                    statearr_12549[7] = inst_12510;
                    statearr_12549[8] = inst_12509;
                    return statearr_12549;
                  }();
                  var statearr_12550_12578 = state_12546__$1;
                  statearr_12550_12578[2] = null;
                  statearr_12550_12578[1] = 4;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_12547 === 3) {
                    var inst_12544 = state_12546[2];
                    var state_12546__$1 = state_12546;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12546__$1, inst_12544);
                  } else {
                    if (state_val_12547 === 4) {
                      var inst_12510 = state_12546[7];
                      var inst_12512 = inst_12510 < cnt;
                      var state_12546__$1 = state_12546;
                      if (cljs.core.truth_(inst_12512)) {
                        var statearr_12551_12579 = state_12546__$1;
                        statearr_12551_12579[1] = 6;
                      } else {
                        var statearr_12552_12580 = state_12546__$1;
                        statearr_12552_12580[1] = 7;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_12547 === 5) {
                        var inst_12530 = state_12546[2];
                        var state_12546__$1 = function() {
                          var statearr_12553 = state_12546;
                          statearr_12553[9] = inst_12530;
                          return statearr_12553;
                        }();
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12546__$1, 12, dchan);
                      } else {
                        if (state_val_12547 === 6) {
                          var state_12546__$1 = state_12546;
                          var statearr_12554_12581 = state_12546__$1;
                          statearr_12554_12581[2] = null;
                          statearr_12554_12581[1] = 11;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_12547 === 7) {
                            var state_12546__$1 = state_12546;
                            var statearr_12555_12582 = state_12546__$1;
                            statearr_12555_12582[2] = null;
                            statearr_12555_12582[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_12547 === 8) {
                              var inst_12528 = state_12546[2];
                              var state_12546__$1 = state_12546;
                              var statearr_12556_12583 = state_12546__$1;
                              statearr_12556_12583[2] = inst_12528;
                              statearr_12556_12583[1] = 5;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_12547 === 9) {
                                var inst_12510 = state_12546[7];
                                var inst_12523 = state_12546[2];
                                var inst_12524 = inst_12510 + 1;
                                var inst_12510__$1 = inst_12524;
                                var state_12546__$1 = function() {
                                  var statearr_12557 = state_12546;
                                  statearr_12557[7] = inst_12510__$1;
                                  statearr_12557[10] = inst_12523;
                                  return statearr_12557;
                                }();
                                var statearr_12558_12584 = state_12546__$1;
                                statearr_12558_12584[2] = null;
                                statearr_12558_12584[1] = 4;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_12547 === 10) {
                                  var inst_12514 = state_12546[2];
                                  var inst_12515 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                  var state_12546__$1 = function() {
                                    var statearr_12559 = state_12546;
                                    statearr_12559[11] = inst_12514;
                                    return statearr_12559;
                                  }();
                                  var statearr_12560_12585 = state_12546__$1;
                                  statearr_12560_12585[2] = inst_12515;
                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12546__$1);
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_12547 === 11) {
                                    var inst_12510 = state_12546[7];
                                    var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_12546, 10, Object, null, 9);
                                    var inst_12519 = chs__$1.call(null, inst_12510);
                                    var inst_12520 = done.call(null, inst_12510);
                                    var inst_12521 = cljs.core.async.take_BANG_.call(null, inst_12519, inst_12520);
                                    var state_12546__$1 = state_12546;
                                    var statearr_12561_12586 = state_12546__$1;
                                    statearr_12561_12586[2] = inst_12521;
                                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12546__$1);
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_12547 === 12) {
                                      var inst_12532 = state_12546[12];
                                      var inst_12532__$1 = state_12546[2];
                                      var inst_12533 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_12532__$1);
                                      var state_12546__$1 = function() {
                                        var statearr_12562 = state_12546;
                                        statearr_12562[12] = inst_12532__$1;
                                        return statearr_12562;
                                      }();
                                      if (cljs.core.truth_(inst_12533)) {
                                        var statearr_12563_12587 = state_12546__$1;
                                        statearr_12563_12587[1] = 13;
                                      } else {
                                        var statearr_12564_12588 = state_12546__$1;
                                        statearr_12564_12588[1] = 14;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_12547 === 13) {
                                        var inst_12535 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_12546__$1 = state_12546;
                                        var statearr_12565_12589 = state_12546__$1;
                                        statearr_12565_12589[2] = inst_12535;
                                        statearr_12565_12589[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_12547 === 14) {
                                          var inst_12532 = state_12546[12];
                                          var inst_12537 = cljs.core.apply.call(null, f, inst_12532);
                                          var state_12546__$1 = state_12546;
                                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12546__$1, 16, out, inst_12537);
                                        } else {
                                          if (state_val_12547 === 15) {
                                            var inst_12542 = state_12546[2];
                                            var state_12546__$1 = state_12546;
                                            var statearr_12566_12590 = state_12546__$1;
                                            statearr_12566_12590[2] = inst_12542;
                                            statearr_12566_12590[1] = 3;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_12547 === 16) {
                                              var inst_12539 = state_12546[2];
                                              var state_12546__$1 = function() {
                                                var statearr_12567 = state_12546;
                                                statearr_12567[13] = inst_12539;
                                                return statearr_12567;
                                              }();
                                              var statearr_12568_12591 = state_12546__$1;
                                              statearr_12568_12591[2] = null;
                                              statearr_12568_12591[1] = 2;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6232__auto___12576, chs__$1, out, cnt, rets, dchan, dctr, done);
          return function(switch__6217__auto__, c__6232__auto___12576, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function() {
              var state_machine__6218__auto__ = null;
              var state_machine__6218__auto____0 = function() {
                var statearr_12572 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_12572[0] = state_machine__6218__auto__;
                statearr_12572[1] = 1;
                return statearr_12572;
              };
              var state_machine__6218__auto____1 = function(state_12546) {
                while (true) {
                  var ret_value__6219__auto__ = function() {
                    try {
                      while (true) {
                        var result__6220__auto__ = switch__6217__auto__.call(null, state_12546);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6220__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6220__auto__;
                        }
                        break;
                      }
                    } catch (e12573) {
                      if (e12573 instanceof Object) {
                        var ex__6221__auto__ = e12573;
                        var statearr_12574_12592 = state_12546;
                        statearr_12574_12592[5] = ex__6221__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12546);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e12573;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6219__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__12593 = state_12546;
                    state_12546 = G__12593;
                    continue;
                  } else {
                    return ret_value__6219__auto__;
                  }
                  break;
                }
              };
              state_machine__6218__auto__ = function(state_12546) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6218__auto____0.call(this);
                  case 1:
                    return state_machine__6218__auto____1.call(this, state_12546);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6218__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6218__auto____0;
              state_machine__6218__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6218__auto____1;
              return state_machine__6218__auto__;
            }();
          }(switch__6217__auto__, c__6232__auto___12576, chs__$1, out, cnt, rets, dchan, dctr, done);
        }();
        var state__6234__auto__ = function() {
          var statearr_12575 = f__6233__auto__.call(null);
          statearr_12575[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6232__auto___12576;
          return statearr_12575;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6234__auto__);
      };
    }(c__6232__auto___12576, chs__$1, out, cnt, rets, dchan, dctr, done));
    return out;
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map;
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null);
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6232__auto___12701 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6232__auto___12701, out) {
      return function() {
        var f__6233__auto__ = function() {
          var switch__6217__auto__ = function(c__6232__auto___12701, out) {
            return function(state_12677) {
              var state_val_12678 = state_12677[1];
              if (state_val_12678 === 1) {
                var inst_12648 = cljs.core.vec.call(null, chs);
                var inst_12649 = inst_12648;
                var state_12677__$1 = function() {
                  var statearr_12679 = state_12677;
                  statearr_12679[7] = inst_12649;
                  return statearr_12679;
                }();
                var statearr_12680_12702 = state_12677__$1;
                statearr_12680_12702[2] = null;
                statearr_12680_12702[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_12678 === 2) {
                  var inst_12649 = state_12677[7];
                  var inst_12651 = cljs.core.count.call(null, inst_12649);
                  var inst_12652 = inst_12651 > 0;
                  var state_12677__$1 = state_12677;
                  if (cljs.core.truth_(inst_12652)) {
                    var statearr_12681_12703 = state_12677__$1;
                    statearr_12681_12703[1] = 4;
                  } else {
                    var statearr_12682_12704 = state_12677__$1;
                    statearr_12682_12704[1] = 5;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_12678 === 3) {
                    var inst_12675 = state_12677[2];
                    var state_12677__$1 = state_12677;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12677__$1, inst_12675);
                  } else {
                    if (state_val_12678 === 4) {
                      var inst_12649 = state_12677[7];
                      var state_12677__$1 = state_12677;
                      return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_12677__$1, 7, inst_12649);
                    } else {
                      if (state_val_12678 === 5) {
                        var inst_12671 = cljs.core.async.close_BANG_.call(null, out);
                        var state_12677__$1 = state_12677;
                        var statearr_12683_12705 = state_12677__$1;
                        statearr_12683_12705[2] = inst_12671;
                        statearr_12683_12705[1] = 6;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_12678 === 6) {
                          var inst_12673 = state_12677[2];
                          var state_12677__$1 = state_12677;
                          var statearr_12684_12706 = state_12677__$1;
                          statearr_12684_12706[2] = inst_12673;
                          statearr_12684_12706[1] = 3;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_12678 === 7) {
                            var inst_12656 = state_12677[8];
                            var inst_12657 = state_12677[9];
                            var inst_12656__$1 = state_12677[2];
                            var inst_12657__$1 = cljs.core.nth.call(null, inst_12656__$1, 0, null);
                            var inst_12658 = cljs.core.nth.call(null, inst_12656__$1, 1, null);
                            var inst_12659 = inst_12657__$1 == null;
                            var state_12677__$1 = function() {
                              var statearr_12685 = state_12677;
                              statearr_12685[8] = inst_12656__$1;
                              statearr_12685[9] = inst_12657__$1;
                              statearr_12685[10] = inst_12658;
                              return statearr_12685;
                            }();
                            if (cljs.core.truth_(inst_12659)) {
                              var statearr_12686_12707 = state_12677__$1;
                              statearr_12686_12707[1] = 8;
                            } else {
                              var statearr_12687_12708 = state_12677__$1;
                              statearr_12687_12708[1] = 9;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_12678 === 8) {
                              var inst_12649 = state_12677[7];
                              var inst_12656 = state_12677[8];
                              var inst_12657 = state_12677[9];
                              var inst_12658 = state_12677[10];
                              var inst_12661 = function() {
                                var c = inst_12658;
                                var v = inst_12657;
                                var vec__12654 = inst_12656;
                                var cs = inst_12649;
                                return function(c, v, vec__12654, cs, inst_12649, inst_12656, inst_12657, inst_12658, state_val_12678, c__6232__auto___12701, out) {
                                  return function(p1__12594_SHARP_) {
                                    return cljs.core.not_EQ_.call(null, c, p1__12594_SHARP_);
                                  };
                                }(c, v, vec__12654, cs, inst_12649, inst_12656, inst_12657, inst_12658, state_val_12678, c__6232__auto___12701, out);
                              }();
                              var inst_12662 = cljs.core.filterv.call(null, inst_12661, inst_12649);
                              var inst_12649__$1 = inst_12662;
                              var state_12677__$1 = function() {
                                var statearr_12688 = state_12677;
                                statearr_12688[7] = inst_12649__$1;
                                return statearr_12688;
                              }();
                              var statearr_12689_12709 = state_12677__$1;
                              statearr_12689_12709[2] = null;
                              statearr_12689_12709[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_12678 === 9) {
                                var inst_12657 = state_12677[9];
                                var state_12677__$1 = state_12677;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12677__$1, 11, out, inst_12657);
                              } else {
                                if (state_val_12678 === 10) {
                                  var inst_12669 = state_12677[2];
                                  var state_12677__$1 = state_12677;
                                  var statearr_12691_12710 = state_12677__$1;
                                  statearr_12691_12710[2] = inst_12669;
                                  statearr_12691_12710[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_12678 === 11) {
                                    var inst_12649 = state_12677[7];
                                    var inst_12666 = state_12677[2];
                                    var tmp12690 = inst_12649;
                                    var inst_12649__$1 = tmp12690;
                                    var state_12677__$1 = function() {
                                      var statearr_12692 = state_12677;
                                      statearr_12692[11] = inst_12666;
                                      statearr_12692[7] = inst_12649__$1;
                                      return statearr_12692;
                                    }();
                                    var statearr_12693_12711 = state_12677__$1;
                                    statearr_12693_12711[2] = null;
                                    statearr_12693_12711[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6232__auto___12701, out);
          return function(switch__6217__auto__, c__6232__auto___12701, out) {
            return function() {
              var state_machine__6218__auto__ = null;
              var state_machine__6218__auto____0 = function() {
                var statearr_12697 = [null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_12697[0] = state_machine__6218__auto__;
                statearr_12697[1] = 1;
                return statearr_12697;
              };
              var state_machine__6218__auto____1 = function(state_12677) {
                while (true) {
                  var ret_value__6219__auto__ = function() {
                    try {
                      while (true) {
                        var result__6220__auto__ = switch__6217__auto__.call(null, state_12677);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6220__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6220__auto__;
                        }
                        break;
                      }
                    } catch (e12698) {
                      if (e12698 instanceof Object) {
                        var ex__6221__auto__ = e12698;
                        var statearr_12699_12712 = state_12677;
                        statearr_12699_12712[5] = ex__6221__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12677);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e12698;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6219__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__12713 = state_12677;
                    state_12677 = G__12713;
                    continue;
                  } else {
                    return ret_value__6219__auto__;
                  }
                  break;
                }
              };
              state_machine__6218__auto__ = function(state_12677) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6218__auto____0.call(this);
                  case 1:
                    return state_machine__6218__auto____1.call(this, state_12677);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6218__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6218__auto____0;
              state_machine__6218__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6218__auto____1;
              return state_machine__6218__auto__;
            }();
          }(switch__6217__auto__, c__6232__auto___12701, out);
        }();
        var state__6234__auto__ = function() {
          var statearr_12700 = f__6233__auto__.call(null);
          statearr_12700[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6232__auto___12701;
          return statearr_12700;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6234__auto__);
      };
    }(c__6232__auto___12701, out));
    return out;
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge;
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function() {
  var take = null;
  var take__2 = function(n, ch) {
    return take.call(null, n, ch, null);
  };
  var take__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6232__auto___12806 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6232__auto___12806, out) {
      return function() {
        var f__6233__auto__ = function() {
          var switch__6217__auto__ = function(c__6232__auto___12806, out) {
            return function(state_12783) {
              var state_val_12784 = state_12783[1];
              if (state_val_12784 === 1) {
                var inst_12760 = 0;
                var state_12783__$1 = function() {
                  var statearr_12785 = state_12783;
                  statearr_12785[7] = inst_12760;
                  return statearr_12785;
                }();
                var statearr_12786_12807 = state_12783__$1;
                statearr_12786_12807[2] = null;
                statearr_12786_12807[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_12784 === 2) {
                  var inst_12760 = state_12783[7];
                  var inst_12762 = inst_12760 < n;
                  var state_12783__$1 = state_12783;
                  if (cljs.core.truth_(inst_12762)) {
                    var statearr_12787_12808 = state_12783__$1;
                    statearr_12787_12808[1] = 4;
                  } else {
                    var statearr_12788_12809 = state_12783__$1;
                    statearr_12788_12809[1] = 5;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_12784 === 3) {
                    var inst_12780 = state_12783[2];
                    var inst_12781 = cljs.core.async.close_BANG_.call(null, out);
                    var state_12783__$1 = function() {
                      var statearr_12789 = state_12783;
                      statearr_12789[8] = inst_12780;
                      return statearr_12789;
                    }();
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12783__$1, inst_12781);
                  } else {
                    if (state_val_12784 === 4) {
                      var state_12783__$1 = state_12783;
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12783__$1, 7, ch);
                    } else {
                      if (state_val_12784 === 5) {
                        var state_12783__$1 = state_12783;
                        var statearr_12790_12810 = state_12783__$1;
                        statearr_12790_12810[2] = null;
                        statearr_12790_12810[1] = 6;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_12784 === 6) {
                          var inst_12778 = state_12783[2];
                          var state_12783__$1 = state_12783;
                          var statearr_12791_12811 = state_12783__$1;
                          statearr_12791_12811[2] = inst_12778;
                          statearr_12791_12811[1] = 3;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_12784 === 7) {
                            var inst_12765 = state_12783[9];
                            var inst_12765__$1 = state_12783[2];
                            var inst_12766 = inst_12765__$1 == null;
                            var inst_12767 = cljs.core.not.call(null, inst_12766);
                            var state_12783__$1 = function() {
                              var statearr_12792 = state_12783;
                              statearr_12792[9] = inst_12765__$1;
                              return statearr_12792;
                            }();
                            if (inst_12767) {
                              var statearr_12793_12812 = state_12783__$1;
                              statearr_12793_12812[1] = 8;
                            } else {
                              var statearr_12794_12813 = state_12783__$1;
                              statearr_12794_12813[1] = 9;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_12784 === 8) {
                              var inst_12765 = state_12783[9];
                              var state_12783__$1 = state_12783;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12783__$1, 11, out, inst_12765);
                            } else {
                              if (state_val_12784 === 9) {
                                var state_12783__$1 = state_12783;
                                var statearr_12795_12814 = state_12783__$1;
                                statearr_12795_12814[2] = null;
                                statearr_12795_12814[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_12784 === 10) {
                                  var inst_12775 = state_12783[2];
                                  var state_12783__$1 = state_12783;
                                  var statearr_12796_12815 = state_12783__$1;
                                  statearr_12796_12815[2] = inst_12775;
                                  statearr_12796_12815[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_12784 === 11) {
                                    var inst_12760 = state_12783[7];
                                    var inst_12770 = state_12783[2];
                                    var inst_12771 = inst_12760 + 1;
                                    var inst_12760__$1 = inst_12771;
                                    var state_12783__$1 = function() {
                                      var statearr_12797 = state_12783;
                                      statearr_12797[7] = inst_12760__$1;
                                      statearr_12797[10] = inst_12770;
                                      return statearr_12797;
                                    }();
                                    var statearr_12798_12816 = state_12783__$1;
                                    statearr_12798_12816[2] = null;
                                    statearr_12798_12816[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6232__auto___12806, out);
          return function(switch__6217__auto__, c__6232__auto___12806, out) {
            return function() {
              var state_machine__6218__auto__ = null;
              var state_machine__6218__auto____0 = function() {
                var statearr_12802 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_12802[0] = state_machine__6218__auto__;
                statearr_12802[1] = 1;
                return statearr_12802;
              };
              var state_machine__6218__auto____1 = function(state_12783) {
                while (true) {
                  var ret_value__6219__auto__ = function() {
                    try {
                      while (true) {
                        var result__6220__auto__ = switch__6217__auto__.call(null, state_12783);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6220__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6220__auto__;
                        }
                        break;
                      }
                    } catch (e12803) {
                      if (e12803 instanceof Object) {
                        var ex__6221__auto__ = e12803;
                        var statearr_12804_12817 = state_12783;
                        statearr_12804_12817[5] = ex__6221__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12783);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e12803;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6219__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__12818 = state_12783;
                    state_12783 = G__12818;
                    continue;
                  } else {
                    return ret_value__6219__auto__;
                  }
                  break;
                }
              };
              state_machine__6218__auto__ = function(state_12783) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6218__auto____0.call(this);
                  case 1:
                    return state_machine__6218__auto____1.call(this, state_12783);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6218__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6218__auto____0;
              state_machine__6218__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6218__auto____1;
              return state_machine__6218__auto__;
            }();
          }(switch__6217__auto__, c__6232__auto___12806, out);
        }();
        var state__6234__auto__ = function() {
          var statearr_12805 = f__6233__auto__.call(null);
          statearr_12805[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6232__auto___12806;
          return statearr_12805;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6234__auto__);
      };
    }(c__6232__auto___12806, out));
    return out;
  };
  take = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return take__2.call(this, n, ch);
      case 3:
        return take__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  take.cljs$core$IFn$_invoke$arity$3 = take__3;
  return take;
}();
cljs.core.async.unique = function() {
  var unique = null;
  var unique__1 = function(ch) {
    return unique.call(null, ch, null);
  };
  var unique__2 = function(ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6232__auto___12915 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6232__auto___12915, out) {
      return function() {
        var f__6233__auto__ = function() {
          var switch__6217__auto__ = function(c__6232__auto___12915, out) {
            return function(state_12890) {
              var state_val_12891 = state_12890[1];
              if (state_val_12891 === 1) {
                var inst_12867 = null;
                var state_12890__$1 = function() {
                  var statearr_12892 = state_12890;
                  statearr_12892[7] = inst_12867;
                  return statearr_12892;
                }();
                var statearr_12893_12916 = state_12890__$1;
                statearr_12893_12916[2] = null;
                statearr_12893_12916[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_12891 === 2) {
                  var state_12890__$1 = state_12890;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12890__$1, 4, ch);
                } else {
                  if (state_val_12891 === 3) {
                    var inst_12887 = state_12890[2];
                    var inst_12888 = cljs.core.async.close_BANG_.call(null, out);
                    var state_12890__$1 = function() {
                      var statearr_12894 = state_12890;
                      statearr_12894[8] = inst_12887;
                      return statearr_12894;
                    }();
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12890__$1, inst_12888);
                  } else {
                    if (state_val_12891 === 4) {
                      var inst_12870 = state_12890[9];
                      var inst_12870__$1 = state_12890[2];
                      var inst_12871 = inst_12870__$1 == null;
                      var inst_12872 = cljs.core.not.call(null, inst_12871);
                      var state_12890__$1 = function() {
                        var statearr_12895 = state_12890;
                        statearr_12895[9] = inst_12870__$1;
                        return statearr_12895;
                      }();
                      if (inst_12872) {
                        var statearr_12896_12917 = state_12890__$1;
                        statearr_12896_12917[1] = 5;
                      } else {
                        var statearr_12897_12918 = state_12890__$1;
                        statearr_12897_12918[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_12891 === 5) {
                        var inst_12867 = state_12890[7];
                        var inst_12870 = state_12890[9];
                        var inst_12874 = cljs.core._EQ_.call(null, inst_12870, inst_12867);
                        var state_12890__$1 = state_12890;
                        if (inst_12874) {
                          var statearr_12898_12919 = state_12890__$1;
                          statearr_12898_12919[1] = 8;
                        } else {
                          var statearr_12899_12920 = state_12890__$1;
                          statearr_12899_12920[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_12891 === 6) {
                          var state_12890__$1 = state_12890;
                          var statearr_12901_12921 = state_12890__$1;
                          statearr_12901_12921[2] = null;
                          statearr_12901_12921[1] = 7;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_12891 === 7) {
                            var inst_12885 = state_12890[2];
                            var state_12890__$1 = state_12890;
                            var statearr_12902_12922 = state_12890__$1;
                            statearr_12902_12922[2] = inst_12885;
                            statearr_12902_12922[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_12891 === 8) {
                              var inst_12867 = state_12890[7];
                              var tmp12900 = inst_12867;
                              var inst_12867__$1 = tmp12900;
                              var state_12890__$1 = function() {
                                var statearr_12903 = state_12890;
                                statearr_12903[7] = inst_12867__$1;
                                return statearr_12903;
                              }();
                              var statearr_12904_12923 = state_12890__$1;
                              statearr_12904_12923[2] = null;
                              statearr_12904_12923[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_12891 === 9) {
                                var inst_12870 = state_12890[9];
                                var state_12890__$1 = state_12890;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12890__$1, 11, out, inst_12870);
                              } else {
                                if (state_val_12891 === 10) {
                                  var inst_12882 = state_12890[2];
                                  var state_12890__$1 = state_12890;
                                  var statearr_12905_12924 = state_12890__$1;
                                  statearr_12905_12924[2] = inst_12882;
                                  statearr_12905_12924[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_12891 === 11) {
                                    var inst_12870 = state_12890[9];
                                    var inst_12879 = state_12890[2];
                                    var inst_12867 = inst_12870;
                                    var state_12890__$1 = function() {
                                      var statearr_12906 = state_12890;
                                      statearr_12906[10] = inst_12879;
                                      statearr_12906[7] = inst_12867;
                                      return statearr_12906;
                                    }();
                                    var statearr_12907_12925 = state_12890__$1;
                                    statearr_12907_12925[2] = null;
                                    statearr_12907_12925[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6232__auto___12915, out);
          return function(switch__6217__auto__, c__6232__auto___12915, out) {
            return function() {
              var state_machine__6218__auto__ = null;
              var state_machine__6218__auto____0 = function() {
                var statearr_12911 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_12911[0] = state_machine__6218__auto__;
                statearr_12911[1] = 1;
                return statearr_12911;
              };
              var state_machine__6218__auto____1 = function(state_12890) {
                while (true) {
                  var ret_value__6219__auto__ = function() {
                    try {
                      while (true) {
                        var result__6220__auto__ = switch__6217__auto__.call(null, state_12890);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6220__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6220__auto__;
                        }
                        break;
                      }
                    } catch (e12912) {
                      if (e12912 instanceof Object) {
                        var ex__6221__auto__ = e12912;
                        var statearr_12913_12926 = state_12890;
                        statearr_12913_12926[5] = ex__6221__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12890);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e12912;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6219__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__12927 = state_12890;
                    state_12890 = G__12927;
                    continue;
                  } else {
                    return ret_value__6219__auto__;
                  }
                  break;
                }
              };
              state_machine__6218__auto__ = function(state_12890) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6218__auto____0.call(this);
                  case 1:
                    return state_machine__6218__auto____1.call(this, state_12890);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6218__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6218__auto____0;
              state_machine__6218__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6218__auto____1;
              return state_machine__6218__auto__;
            }();
          }(switch__6217__auto__, c__6232__auto___12915, out);
        }();
        var state__6234__auto__ = function() {
          var statearr_12914 = f__6233__auto__.call(null);
          statearr_12914[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6232__auto___12915;
          return statearr_12914;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6234__auto__);
      };
    }(c__6232__auto___12915, out));
    return out;
  };
  unique = function(ch, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return unique__1.call(this, ch);
      case 2:
        return unique__2.call(this, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unique.cljs$core$IFn$_invoke$arity$1 = unique__1;
  unique.cljs$core$IFn$_invoke$arity$2 = unique__2;
  return unique;
}();
cljs.core.async.partition = function() {
  var partition = null;
  var partition__2 = function(n, ch) {
    return partition.call(null, n, ch, null);
  };
  var partition__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6232__auto___13062 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6232__auto___13062, out) {
      return function() {
        var f__6233__auto__ = function() {
          var switch__6217__auto__ = function(c__6232__auto___13062, out) {
            return function(state_13032) {
              var state_val_13033 = state_13032[1];
              if (state_val_13033 === 1) {
                var inst_12995 = new Array(n);
                var inst_12996 = inst_12995;
                var inst_12997 = 0;
                var state_13032__$1 = function() {
                  var statearr_13034 = state_13032;
                  statearr_13034[7] = inst_12996;
                  statearr_13034[8] = inst_12997;
                  return statearr_13034;
                }();
                var statearr_13035_13063 = state_13032__$1;
                statearr_13035_13063[2] = null;
                statearr_13035_13063[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_13033 === 2) {
                  var state_13032__$1 = state_13032;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13032__$1, 4, ch);
                } else {
                  if (state_val_13033 === 3) {
                    var inst_13030 = state_13032[2];
                    var state_13032__$1 = state_13032;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13032__$1, inst_13030);
                  } else {
                    if (state_val_13033 === 4) {
                      var inst_13000 = state_13032[9];
                      var inst_13000__$1 = state_13032[2];
                      var inst_13001 = inst_13000__$1 == null;
                      var inst_13002 = cljs.core.not.call(null, inst_13001);
                      var state_13032__$1 = function() {
                        var statearr_13036 = state_13032;
                        statearr_13036[9] = inst_13000__$1;
                        return statearr_13036;
                      }();
                      if (inst_13002) {
                        var statearr_13037_13064 = state_13032__$1;
                        statearr_13037_13064[1] = 5;
                      } else {
                        var statearr_13038_13065 = state_13032__$1;
                        statearr_13038_13065[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_13033 === 5) {
                        var inst_13005 = state_13032[10];
                        var inst_13000 = state_13032[9];
                        var inst_12996 = state_13032[7];
                        var inst_12997 = state_13032[8];
                        var inst_13004 = inst_12996[inst_12997] = inst_13000;
                        var inst_13005__$1 = inst_12997 + 1;
                        var inst_13006 = inst_13005__$1 < n;
                        var state_13032__$1 = function() {
                          var statearr_13039 = state_13032;
                          statearr_13039[10] = inst_13005__$1;
                          statearr_13039[11] = inst_13004;
                          return statearr_13039;
                        }();
                        if (cljs.core.truth_(inst_13006)) {
                          var statearr_13040_13066 = state_13032__$1;
                          statearr_13040_13066[1] = 8;
                        } else {
                          var statearr_13041_13067 = state_13032__$1;
                          statearr_13041_13067[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_13033 === 6) {
                          var inst_12997 = state_13032[8];
                          var inst_13018 = inst_12997 > 0;
                          var state_13032__$1 = state_13032;
                          if (cljs.core.truth_(inst_13018)) {
                            var statearr_13043_13068 = state_13032__$1;
                            statearr_13043_13068[1] = 12;
                          } else {
                            var statearr_13044_13069 = state_13032__$1;
                            statearr_13044_13069[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_13033 === 7) {
                            var inst_13028 = state_13032[2];
                            var state_13032__$1 = state_13032;
                            var statearr_13045_13070 = state_13032__$1;
                            statearr_13045_13070[2] = inst_13028;
                            statearr_13045_13070[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_13033 === 8) {
                              var inst_13005 = state_13032[10];
                              var inst_12996 = state_13032[7];
                              var tmp13042 = inst_12996;
                              var inst_12996__$1 = tmp13042;
                              var inst_12997 = inst_13005;
                              var state_13032__$1 = function() {
                                var statearr_13046 = state_13032;
                                statearr_13046[7] = inst_12996__$1;
                                statearr_13046[8] = inst_12997;
                                return statearr_13046;
                              }();
                              var statearr_13047_13071 = state_13032__$1;
                              statearr_13047_13071[2] = null;
                              statearr_13047_13071[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_13033 === 9) {
                                var inst_12996 = state_13032[7];
                                var inst_13010 = cljs.core.vec.call(null, inst_12996);
                                var state_13032__$1 = state_13032;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13032__$1, 11, out, inst_13010);
                              } else {
                                if (state_val_13033 === 10) {
                                  var inst_13016 = state_13032[2];
                                  var state_13032__$1 = state_13032;
                                  var statearr_13048_13072 = state_13032__$1;
                                  statearr_13048_13072[2] = inst_13016;
                                  statearr_13048_13072[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_13033 === 11) {
                                    var inst_13012 = state_13032[2];
                                    var inst_13013 = new Array(n);
                                    var inst_12996 = inst_13013;
                                    var inst_12997 = 0;
                                    var state_13032__$1 = function() {
                                      var statearr_13049 = state_13032;
                                      statearr_13049[12] = inst_13012;
                                      statearr_13049[7] = inst_12996;
                                      statearr_13049[8] = inst_12997;
                                      return statearr_13049;
                                    }();
                                    var statearr_13050_13073 = state_13032__$1;
                                    statearr_13050_13073[2] = null;
                                    statearr_13050_13073[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_13033 === 12) {
                                      var inst_12996 = state_13032[7];
                                      var inst_13020 = cljs.core.vec.call(null, inst_12996);
                                      var state_13032__$1 = state_13032;
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13032__$1, 15, out, inst_13020);
                                    } else {
                                      if (state_val_13033 === 13) {
                                        var state_13032__$1 = state_13032;
                                        var statearr_13051_13074 = state_13032__$1;
                                        statearr_13051_13074[2] = null;
                                        statearr_13051_13074[1] = 14;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_13033 === 14) {
                                          var inst_13025 = state_13032[2];
                                          var inst_13026 = cljs.core.async.close_BANG_.call(null, out);
                                          var state_13032__$1 = function() {
                                            var statearr_13052 = state_13032;
                                            statearr_13052[13] = inst_13025;
                                            return statearr_13052;
                                          }();
                                          var statearr_13053_13075 = state_13032__$1;
                                          statearr_13053_13075[2] = inst_13026;
                                          statearr_13053_13075[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_13033 === 15) {
                                            var inst_13022 = state_13032[2];
                                            var state_13032__$1 = state_13032;
                                            var statearr_13054_13076 = state_13032__$1;
                                            statearr_13054_13076[2] = inst_13022;
                                            statearr_13054_13076[1] = 14;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6232__auto___13062, out);
          return function(switch__6217__auto__, c__6232__auto___13062, out) {
            return function() {
              var state_machine__6218__auto__ = null;
              var state_machine__6218__auto____0 = function() {
                var statearr_13058 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_13058[0] = state_machine__6218__auto__;
                statearr_13058[1] = 1;
                return statearr_13058;
              };
              var state_machine__6218__auto____1 = function(state_13032) {
                while (true) {
                  var ret_value__6219__auto__ = function() {
                    try {
                      while (true) {
                        var result__6220__auto__ = switch__6217__auto__.call(null, state_13032);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6220__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6220__auto__;
                        }
                        break;
                      }
                    } catch (e13059) {
                      if (e13059 instanceof Object) {
                        var ex__6221__auto__ = e13059;
                        var statearr_13060_13077 = state_13032;
                        statearr_13060_13077[5] = ex__6221__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13032);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e13059;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6219__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__13078 = state_13032;
                    state_13032 = G__13078;
                    continue;
                  } else {
                    return ret_value__6219__auto__;
                  }
                  break;
                }
              };
              state_machine__6218__auto__ = function(state_13032) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6218__auto____0.call(this);
                  case 1:
                    return state_machine__6218__auto____1.call(this, state_13032);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6218__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6218__auto____0;
              state_machine__6218__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6218__auto____1;
              return state_machine__6218__auto__;
            }();
          }(switch__6217__auto__, c__6232__auto___13062, out);
        }();
        var state__6234__auto__ = function() {
          var statearr_13061 = f__6233__auto__.call(null);
          statearr_13061[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6232__auto___13062;
          return statearr_13061;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6234__auto__);
      };
    }(c__6232__auto___13062, out));
    return out;
  };
  partition = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, ch);
      case 3:
        return partition__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  return partition;
}();
cljs.core.async.partition_by = function() {
  var partition_by = null;
  var partition_by__2 = function(f, ch) {
    return partition_by.call(null, f, ch, null);
  };
  var partition_by__3 = function(f, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6232__auto___13221 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6232__auto___13221, out) {
      return function() {
        var f__6233__auto__ = function() {
          var switch__6217__auto__ = function(c__6232__auto___13221, out) {
            return function(state_13191) {
              var state_val_13192 = state_13191[1];
              if (state_val_13192 === 1) {
                var inst_13150 = [];
                var inst_13151 = inst_13150;
                var inst_13152 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", 4382193538);
                var state_13191__$1 = function() {
                  var statearr_13193 = state_13191;
                  statearr_13193[7] = inst_13152;
                  statearr_13193[8] = inst_13151;
                  return statearr_13193;
                }();
                var statearr_13194_13222 = state_13191__$1;
                statearr_13194_13222[2] = null;
                statearr_13194_13222[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_13192 === 2) {
                  var state_13191__$1 = state_13191;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13191__$1, 4, ch);
                } else {
                  if (state_val_13192 === 3) {
                    var inst_13189 = state_13191[2];
                    var state_13191__$1 = state_13191;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13191__$1, inst_13189);
                  } else {
                    if (state_val_13192 === 4) {
                      var inst_13155 = state_13191[9];
                      var inst_13155__$1 = state_13191[2];
                      var inst_13156 = inst_13155__$1 == null;
                      var inst_13157 = cljs.core.not.call(null, inst_13156);
                      var state_13191__$1 = function() {
                        var statearr_13195 = state_13191;
                        statearr_13195[9] = inst_13155__$1;
                        return statearr_13195;
                      }();
                      if (inst_13157) {
                        var statearr_13196_13223 = state_13191__$1;
                        statearr_13196_13223[1] = 5;
                      } else {
                        var statearr_13197_13224 = state_13191__$1;
                        statearr_13197_13224[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_13192 === 5) {
                        var inst_13155 = state_13191[9];
                        var inst_13152 = state_13191[7];
                        var inst_13159 = state_13191[10];
                        var inst_13159__$1 = f.call(null, inst_13155);
                        var inst_13160 = cljs.core._EQ_.call(null, inst_13159__$1, inst_13152);
                        var inst_13161 = cljs.core.keyword_identical_QMARK_.call(null, inst_13152, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", 4382193538));
                        var inst_13162 = inst_13160 || inst_13161;
                        var state_13191__$1 = function() {
                          var statearr_13198 = state_13191;
                          statearr_13198[10] = inst_13159__$1;
                          return statearr_13198;
                        }();
                        if (cljs.core.truth_(inst_13162)) {
                          var statearr_13199_13225 = state_13191__$1;
                          statearr_13199_13225[1] = 8;
                        } else {
                          var statearr_13200_13226 = state_13191__$1;
                          statearr_13200_13226[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_13192 === 6) {
                          var inst_13151 = state_13191[8];
                          var inst_13176 = inst_13151.length;
                          var inst_13177 = inst_13176 > 0;
                          var state_13191__$1 = state_13191;
                          if (cljs.core.truth_(inst_13177)) {
                            var statearr_13202_13227 = state_13191__$1;
                            statearr_13202_13227[1] = 12;
                          } else {
                            var statearr_13203_13228 = state_13191__$1;
                            statearr_13203_13228[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_13192 === 7) {
                            var inst_13187 = state_13191[2];
                            var state_13191__$1 = state_13191;
                            var statearr_13204_13229 = state_13191__$1;
                            statearr_13204_13229[2] = inst_13187;
                            statearr_13204_13229[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_13192 === 8) {
                              var inst_13155 = state_13191[9];
                              var inst_13151 = state_13191[8];
                              var inst_13159 = state_13191[10];
                              var inst_13164 = inst_13151.push(inst_13155);
                              var tmp13201 = inst_13151;
                              var inst_13151__$1 = tmp13201;
                              var inst_13152 = inst_13159;
                              var state_13191__$1 = function() {
                                var statearr_13205 = state_13191;
                                statearr_13205[7] = inst_13152;
                                statearr_13205[8] = inst_13151__$1;
                                statearr_13205[11] = inst_13164;
                                return statearr_13205;
                              }();
                              var statearr_13206_13230 = state_13191__$1;
                              statearr_13206_13230[2] = null;
                              statearr_13206_13230[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_13192 === 9) {
                                var inst_13151 = state_13191[8];
                                var inst_13167 = cljs.core.vec.call(null, inst_13151);
                                var state_13191__$1 = state_13191;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13191__$1, 11, out, inst_13167);
                              } else {
                                if (state_val_13192 === 10) {
                                  var inst_13174 = state_13191[2];
                                  var state_13191__$1 = state_13191;
                                  var statearr_13207_13231 = state_13191__$1;
                                  statearr_13207_13231[2] = inst_13174;
                                  statearr_13207_13231[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_13192 === 11) {
                                    var inst_13155 = state_13191[9];
                                    var inst_13159 = state_13191[10];
                                    var inst_13169 = state_13191[2];
                                    var inst_13170 = [];
                                    var inst_13171 = inst_13170.push(inst_13155);
                                    var inst_13151 = inst_13170;
                                    var inst_13152 = inst_13159;
                                    var state_13191__$1 = function() {
                                      var statearr_13208 = state_13191;
                                      statearr_13208[12] = inst_13169;
                                      statearr_13208[7] = inst_13152;
                                      statearr_13208[8] = inst_13151;
                                      statearr_13208[13] = inst_13171;
                                      return statearr_13208;
                                    }();
                                    var statearr_13209_13232 = state_13191__$1;
                                    statearr_13209_13232[2] = null;
                                    statearr_13209_13232[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_13192 === 12) {
                                      var inst_13151 = state_13191[8];
                                      var inst_13179 = cljs.core.vec.call(null, inst_13151);
                                      var state_13191__$1 = state_13191;
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13191__$1, 15, out, inst_13179);
                                    } else {
                                      if (state_val_13192 === 13) {
                                        var state_13191__$1 = state_13191;
                                        var statearr_13210_13233 = state_13191__$1;
                                        statearr_13210_13233[2] = null;
                                        statearr_13210_13233[1] = 14;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_13192 === 14) {
                                          var inst_13184 = state_13191[2];
                                          var inst_13185 = cljs.core.async.close_BANG_.call(null, out);
                                          var state_13191__$1 = function() {
                                            var statearr_13211 = state_13191;
                                            statearr_13211[14] = inst_13184;
                                            return statearr_13211;
                                          }();
                                          var statearr_13212_13234 = state_13191__$1;
                                          statearr_13212_13234[2] = inst_13185;
                                          statearr_13212_13234[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_13192 === 15) {
                                            var inst_13181 = state_13191[2];
                                            var state_13191__$1 = state_13191;
                                            var statearr_13213_13235 = state_13191__$1;
                                            statearr_13213_13235[2] = inst_13181;
                                            statearr_13213_13235[1] = 14;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6232__auto___13221, out);
          return function(switch__6217__auto__, c__6232__auto___13221, out) {
            return function() {
              var state_machine__6218__auto__ = null;
              var state_machine__6218__auto____0 = function() {
                var statearr_13217 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_13217[0] = state_machine__6218__auto__;
                statearr_13217[1] = 1;
                return statearr_13217;
              };
              var state_machine__6218__auto____1 = function(state_13191) {
                while (true) {
                  var ret_value__6219__auto__ = function() {
                    try {
                      while (true) {
                        var result__6220__auto__ = switch__6217__auto__.call(null, state_13191);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6220__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6220__auto__;
                        }
                        break;
                      }
                    } catch (e13218) {
                      if (e13218 instanceof Object) {
                        var ex__6221__auto__ = e13218;
                        var statearr_13219_13236 = state_13191;
                        statearr_13219_13236[5] = ex__6221__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13191);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e13218;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6219__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__13237 = state_13191;
                    state_13191 = G__13237;
                    continue;
                  } else {
                    return ret_value__6219__auto__;
                  }
                  break;
                }
              };
              state_machine__6218__auto__ = function(state_13191) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6218__auto____0.call(this);
                  case 1:
                    return state_machine__6218__auto____1.call(this, state_13191);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6218__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6218__auto____0;
              state_machine__6218__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6218__auto____1;
              return state_machine__6218__auto__;
            }();
          }(switch__6217__auto__, c__6232__auto___13221, out);
        }();
        var state__6234__auto__ = function() {
          var statearr_13220 = f__6233__auto__.call(null);
          statearr_13220[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6232__auto___13221;
          return statearr_13220;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6234__auto__);
      };
    }(c__6232__auto___13221, out));
    return out;
  };
  partition_by = function(f, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition_by__2.call(this, f, ch);
      case 3:
        return partition_by__3.call(this, f, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  partition_by.cljs$core$IFn$_invoke$arity$3 = partition_by__3;
  return partition_by;
}();
goog.provide("yantra.graphics");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("om.dom");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("React");
goog.require("yantra.datatypes");
goog.require("yantra.datatypes");
yantra.graphics.BoundingBox = function() {
  var obj9418 = {};
  return obj9418;
}();
yantra.graphics.bounding_points = function bounding_points(x) {
  if (function() {
    var and__3450__auto__ = x;
    if (and__3450__auto__) {
      return x.yantra$graphics$BoundingBox$bounding_points$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return x.yantra$graphics$BoundingBox$bounding_points$arity$1(x);
  } else {
    var x__4089__auto__ = x == null ? null : x;
    return function() {
      var or__3462__auto__ = yantra.graphics.bounding_points[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = yantra.graphics.bounding_points["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "BoundingBox.bounding-points", x);
        }
      }
    }().call(null, x);
  }
};
yantra.datatypes.Rectangle.prototype.yantra$graphics$BoundingBox$ = true;
yantra.datatypes.Rectangle.prototype.yantra$graphics$BoundingBox$bounding_points$arity$1 = function(this$) {
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "p1", "p1", 1013907763)).cljs$core$IFn$_invoke$arity$1(this$__$1), (new cljs.core.Keyword(null, "p2", "p2", 1013907764)).cljs$core$IFn$_invoke$arity$1(this$__$1)], null);
};
yantra.datatypes.Disk.prototype.yantra$graphics$BoundingBox$ = true;
yantra.datatypes.Disk.prototype.yantra$graphics$BoundingBox$bounding_points$arity$1 = function(this$) {
  var this$__$1 = this;
  var point = (new cljs.core.Keyword(null, "point", "point", 1120749826)).cljs$core$IFn$_invoke$arity$1(this$__$1);
  var radius = (new cljs.core.Keyword(null, "radius", "radius", 4370292740)).cljs$core$IFn$_invoke$arity$1(this$__$1);
  var x = cljs.core.first.call(null, point);
  var y = cljs.core.last.call(null, point);
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x + radius, y], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x - radius, y], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y + radius], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y - radius], 
  null)], null);
};
yantra.datatypes.Line.prototype.yantra$graphics$BoundingBox$ = true;
yantra.datatypes.Line.prototype.yantra$graphics$BoundingBox$bounding_points$arity$1 = function(this$) {
  var this$__$1 = this;
  return(new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(this$__$1);
};
yantra.datatypes.Point.prototype.yantra$graphics$BoundingBox$ = true;
yantra.datatypes.Point.prototype.yantra$graphics$BoundingBox$bounding_points$arity$1 = function(this$) {
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "point", "point", 1120749826)).cljs$core$IFn$_invoke$arity$1(this$__$1)], null);
};
yantra.datatypes.Style.prototype.yantra$graphics$BoundingBox$ = true;
yantra.datatypes.Style.prototype.yantra$graphics$BoundingBox$bounding_points$arity$1 = function(this$) {
  var this$__$1 = this;
  return yantra.graphics.bounding_points.call(null, (new cljs.core.Keyword(null, "prims", "prims", 1120839167)).cljs$core$IFn$_invoke$arity$1(this$__$1));
};
yantra.graphics.BoundingBox["_"] = true;
yantra.graphics.bounding_points["_"] = function(this$) {
  if (cljs.core.seq_QMARK_.call(null, this$) || cljs.core.vector_QMARK_.call(null, this$)) {
    return yantra.graphics.bounding_box.call(null, this$);
  } else {
    return cljs.core.PersistentVector.EMPTY;
  }
};
yantra.graphics.transpose = function transpose(m) {
  return cljs.core.apply.call(null, cljs.core.mapv, cljs.core.vector, m);
};
yantra.graphics.bounding_box = function bounding_box(g) {
  if (cljs.core.seq_QMARK_.call(null, g) || cljs.core.vector_QMARK_.call(null, g)) {
    return yantra.graphics.transpose.call(null, cljs.core.map.call(null, function(v) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, cljs.core.min, v), cljs.core.apply.call(null, cljs.core.max, v)], null);
    }, yantra.graphics.transpose.call(null, cljs.core.mapcat.call(null, bounding_box, g))));
  } else {
    return yantra.graphics.transpose.call(null, cljs.core.map.call(null, function(v) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, cljs.core.min, v), cljs.core.apply.call(null, cljs.core.max, v)], null);
    }, yantra.graphics.transpose.call(null, yantra.graphics.bounding_points.call(null, g))));
  }
};
yantra.graphics.expand_plot_range = function expand_plot_range(bounding_box, image_size) {
  var vec__9423 = bounding_box;
  var vec__9424 = cljs.core.nth.call(null, vec__9423, 0, null);
  var xmin = cljs.core.nth.call(null, vec__9424, 0, null);
  var ymin = cljs.core.nth.call(null, vec__9424, 1, null);
  var vec__9425 = cljs.core.nth.call(null, vec__9423, 1, null);
  var xmax = cljs.core.nth.call(null, vec__9425, 0, null);
  var ymax = cljs.core.nth.call(null, vec__9425, 1, null);
  var vec__9426 = image_size;
  var image_width = cljs.core.nth.call(null, vec__9426, 0, null);
  var image_height = cljs.core.nth.call(null, vec__9426, 1, null);
  var width = Math.abs.call(null, xmax - xmin);
  var height = Math.abs.call(null, ymax - ymin);
  var plotaspect = height / width;
  var imageaspect = image_height / image_width;
  if (plotaspect < imageaspect) {
    var newheight = width * imageaspect;
    var heightdiff = (newheight - height) / 2;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xmin, ymin - heightdiff], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xmax, ymax + heightdiff], null)], null);
  } else {
    return bounding_box;
  }
};
yantra.graphics.coordinate_transformer = function coordinate_transformer(bounding_box, image_size) {
  var vec__9433 = yantra.graphics.expand_plot_range.call(null, bounding_box, image_size);
  var vec__9434 = cljs.core.nth.call(null, vec__9433, 0, null);
  var xmin = cljs.core.nth.call(null, vec__9434, 0, null);
  var ymin = cljs.core.nth.call(null, vec__9434, 1, null);
  var vec__9435 = cljs.core.nth.call(null, vec__9433, 1, null);
  var xmax = cljs.core.nth.call(null, vec__9435, 0, null);
  var ymax = cljs.core.nth.call(null, vec__9435, 1, null);
  var vec__9436 = image_size;
  var image_width = cljs.core.nth.call(null, vec__9436, 0, null);
  var image_height = cljs.core.nth.call(null, vec__9436, 1, null);
  var width = Math.abs.call(null, xmax - xmin);
  var height = Math.abs.call(null, ymax - ymin);
  return function(vec__9433, vec__9434, xmin, ymin, vec__9435, xmax, ymax, vec__9436, image_width, image_height, width, height) {
    return function(p__9437) {
      var vec__9438 = p__9437;
      var x = cljs.core.nth.call(null, vec__9438, 0, null);
      var y = cljs.core.nth.call(null, vec__9438, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(x - xmin) * (image_width / width), image_height - (y - ymin) * (image_height / height)], null);
    };
  }(vec__9433, vec__9434, xmin, ymin, vec__9435, xmax, ymax, vec__9436, image_width, image_height, width, height);
};
yantra.graphics.distance_transformer = function distance_transformer(bounding_box, image_size) {
  var vec__9443 = bounding_box;
  var vec__9444 = cljs.core.nth.call(null, vec__9443, 0, null);
  var xmin = cljs.core.nth.call(null, vec__9444, 0, null);
  var ymin = cljs.core.nth.call(null, vec__9444, 1, null);
  var vec__9445 = cljs.core.nth.call(null, vec__9443, 1, null);
  var xmax = cljs.core.nth.call(null, vec__9445, 0, null);
  var ymax = cljs.core.nth.call(null, vec__9445, 1, null);
  var vec__9446 = image_size;
  var image_width = cljs.core.nth.call(null, vec__9446, 0, null);
  var image_height = cljs.core.nth.call(null, vec__9446, 1, null);
  var width = Math.abs.call(null, xmax - xmin);
  var height = Math.abs.call(null, ymax - ymin);
  return function(vec__9443, vec__9444, xmin, ymin, vec__9445, xmax, ymax, vec__9446, image_width, image_height, width, height) {
    return function(d) {
      return d * (image_width / width);
    };
  }(vec__9443, vec__9444, xmin, ymin, vec__9445, xmax, ymax, vec__9446, image_width, image_height, width, height);
};
yantra.graphics.listplot = function listplot(l) {
  return new yantra.datatypes.Graphics(cljs.core.vec.call(null, cljs.core.map_indexed.call(null, function(p1__9447_SHARP_, p2__9448_SHARP_) {
    return new yantra.datatypes.Point(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__9447_SHARP_, p2__9448_SHARP_], null));
  }, l)));
};
yantra.graphics.points_to_svg_string = function points_to_svg_string(points) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.map.call(null, function(p1__9449_SHARP_) {
    return[cljs.core.str(cljs.core.first.call(null, p1__9449_SHARP_)), cljs.core.str(","), cljs.core.str(cljs.core.last.call(null, p1__9449_SHARP_))].join("");
  }, points)));
};
yantra.graphics.graphics_renderers = new cljs.core.PersistentArrayMap.fromArray([yantra.datatypes.Line, function(cursor, owner, opts) {
  if (typeof yantra.graphics.t9452 !== "undefined") {
  } else {
    yantra.graphics.t9452 = function(opts, owner, cursor, meta9453) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9453 = meta9453;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.graphics.t9452.cljs$lang$type = true;
    yantra.graphics.t9452.cljs$lang$ctorStr = "yantra.graphics/t9452";
    yantra.graphics.t9452.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
      return cljs.core._write.call(null, writer__4030__auto__, "yantra.graphics/t9452");
    };
    yantra.graphics.t9452.prototype.om$core$IRender$ = true;
    yantra.graphics.t9452.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var v = om.core.value.call(null, self__.cursor);
      var coordfn = (new cljs.core.Keyword(null, "coord-fn", "coord-fn", 4768239122)).cljs$core$IFn$_invoke$arity$1(self__.opts);
      return React.DOM.polyline({"points":yantra.graphics.points_to_svg_string.call(null, cljs.core.map.call(null, coordfn, (new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(v))), "fill":"none"});
    };
    yantra.graphics.t9452.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9454) {
      var self__ = this;
      var _9454__$1 = this;
      return self__.meta9453;
    };
    yantra.graphics.t9452.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9454, meta9453__$1) {
      var self__ = this;
      var _9454__$1 = this;
      return new yantra.graphics.t9452(self__.opts, self__.owner, self__.cursor, meta9453__$1);
    };
    yantra.graphics.__GT_t9452 = function __GT_t9452(opts__$1, owner__$1, cursor__$1, meta9453) {
      return new yantra.graphics.t9452(opts__$1, owner__$1, cursor__$1, meta9453);
    };
  }
  return new yantra.graphics.t9452(opts, owner, cursor, null);
}, yantra.datatypes.Style, function(cursor, owner, opts) {
  if (typeof yantra.graphics.t9455 !== "undefined") {
  } else {
    yantra.graphics.t9455 = function(opts, owner, cursor, meta9456) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9456 = meta9456;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.graphics.t9455.cljs$lang$type = true;
    yantra.graphics.t9455.cljs$lang$ctorStr = "yantra.graphics/t9455";
    yantra.graphics.t9455.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
      return cljs.core._write.call(null, writer__4030__auto__, "yantra.graphics/t9455");
    };
    yantra.graphics.t9455.prototype.om$core$IRender$ = true;
    yantra.graphics.t9455.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var e = om.core.value.call(null, self__.cursor);
      var coordfn = (new cljs.core.Keyword(null, "coord-fn", "coord-fn", 4768239122)).cljs$core$IFn$_invoke$arity$1(self__.opts);
      var distancefn = (new cljs.core.Keyword(null, "distance-fn", "distance-fn", 4584217874)).cljs$core$IFn$_invoke$arity$1(self__.opts);
      var builder = om.core.get_shared.call(null, self__.owner, new cljs.core.Keyword(null, "builder", "builder", 1244848909));
      return React.DOM.g(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", 1123684643), (new cljs.core.Keyword(null, "style", "style", 1123684643)).cljs$core$IFn$_invoke$arity$1(e)], null)), cljs.core.seq_QMARK_.call(null, (new cljs.core.Keyword(null, "prims", "prims", 1120839167)).cljs$core$IFn$_invoke$arity$1(e)) || cljs.core.vector_QMARK_.call(null, (new cljs.core.Keyword(null, "prims", "prims", 1120839167)).cljs$core$IFn$_invoke$arity$1(e)) ? 
      cljs.core.into_array.call(null, cljs.core.map.call(null, function(e, coordfn, distancefn, builder, ___$1) {
        return function(p1__9450_SHARP_) {
          return builder.call(null, p1__9450_SHARP_, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "coord-fn", "coord-fn", 4768239122), coordfn, new cljs.core.Keyword(null, "distance-fn", "distance-fn", 4584217874), distancefn], null)], null));
        };
      }(e, coordfn, distancefn, builder, ___$1), (new cljs.core.Keyword(null, "prims", "prims", 1120839167)).cljs$core$IFn$_invoke$arity$1(self__.cursor))) : builder.call(null, (new cljs.core.Keyword(null, "prims", "prims", 1120839167)).cljs$core$IFn$_invoke$arity$1(self__.cursor), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "coord-fn", "coord-fn", 4768239122), coordfn, new cljs.core.Keyword(null, 
      "distance-fn", "distance-fn", 4584217874), distancefn], null)], null)));
    };
    yantra.graphics.t9455.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9457) {
      var self__ = this;
      var _9457__$1 = this;
      return self__.meta9456;
    };
    yantra.graphics.t9455.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9457, meta9456__$1) {
      var self__ = this;
      var _9457__$1 = this;
      return new yantra.graphics.t9455(self__.opts, self__.owner, self__.cursor, meta9456__$1);
    };
    yantra.graphics.__GT_t9455 = function __GT_t9455(opts__$1, owner__$1, cursor__$1, meta9456) {
      return new yantra.graphics.t9455(opts__$1, owner__$1, cursor__$1, meta9456);
    };
  }
  return new yantra.graphics.t9455(opts, owner, cursor, null);
}, yantra.datatypes.Point, function(cursor, owner, opts) {
  if (typeof yantra.graphics.t9458 !== "undefined") {
  } else {
    yantra.graphics.t9458 = function(opts, owner, cursor, meta9459) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9459 = meta9459;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.graphics.t9458.cljs$lang$type = true;
    yantra.graphics.t9458.cljs$lang$ctorStr = "yantra.graphics/t9458";
    yantra.graphics.t9458.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
      return cljs.core._write.call(null, writer__4030__auto__, "yantra.graphics/t9458");
    };
    yantra.graphics.t9458.prototype.om$core$IRender$ = true;
    yantra.graphics.t9458.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var p2 = (new cljs.core.Keyword(null, "point", "point", 1120749826)).cljs$core$IFn$_invoke$arity$1(om.core.value.call(null, self__.cursor));
      return React.DOM.circle(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "cx", "cx", 1013907431), cljs.core.first.call(null, p2), new cljs.core.Keyword(null, "cy", "cy", 1013907432), cljs.core.last.call(null, p2), new cljs.core.Keyword(null, "r", "r", 1013904356), "3"], null));
    };
    yantra.graphics.t9458.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9460) {
      var self__ = this;
      var _9460__$1 = this;
      return self__.meta9459;
    };
    yantra.graphics.t9458.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9460, meta9459__$1) {
      var self__ = this;
      var _9460__$1 = this;
      return new yantra.graphics.t9458(self__.opts, self__.owner, self__.cursor, meta9459__$1);
    };
    yantra.graphics.__GT_t9458 = function __GT_t9458(opts__$1, owner__$1, cursor__$1, meta9459) {
      return new yantra.graphics.t9458(opts__$1, owner__$1, cursor__$1, meta9459);
    };
  }
  return new yantra.graphics.t9458(opts, owner, cursor, null);
}, yantra.datatypes.Disk, function(cursor, owner, opts) {
  if (typeof yantra.graphics.t9461 !== "undefined") {
  } else {
    yantra.graphics.t9461 = function(opts, owner, cursor, meta9462) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9462 = meta9462;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.graphics.t9461.cljs$lang$type = true;
    yantra.graphics.t9461.cljs$lang$ctorStr = "yantra.graphics/t9461";
    yantra.graphics.t9461.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
      return cljs.core._write.call(null, writer__4030__auto__, "yantra.graphics/t9461");
    };
    yantra.graphics.t9461.prototype.om$core$IRender$ = true;
    yantra.graphics.t9461.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var coordfn = (new cljs.core.Keyword(null, "coord-fn", "coord-fn", 4768239122)).cljs$core$IFn$_invoke$arity$1(self__.opts);
      var distancefn = (new cljs.core.Keyword(null, "distance-fn", "distance-fn", 4584217874)).cljs$core$IFn$_invoke$arity$1(self__.opts);
      var v = om.core.value.call(null, self__.cursor);
      var p2 = coordfn.call(null, (new cljs.core.Keyword(null, "point", "point", 1120749826)).cljs$core$IFn$_invoke$arity$1(v));
      return React.DOM.circle({"r":distancefn.call(null, (new cljs.core.Keyword(null, "radius", "radius", 4370292740)).cljs$core$IFn$_invoke$arity$1(v)), "cy":cljs.core.last.call(null, p2), "cx":cljs.core.first.call(null, p2)});
    };
    yantra.graphics.t9461.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9463) {
      var self__ = this;
      var _9463__$1 = this;
      return self__.meta9462;
    };
    yantra.graphics.t9461.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9463, meta9462__$1) {
      var self__ = this;
      var _9463__$1 = this;
      return new yantra.graphics.t9461(self__.opts, self__.owner, self__.cursor, meta9462__$1);
    };
    yantra.graphics.__GT_t9461 = function __GT_t9461(opts__$1, owner__$1, cursor__$1, meta9462) {
      return new yantra.graphics.t9461(opts__$1, owner__$1, cursor__$1, meta9462);
    };
  }
  return new yantra.graphics.t9461(opts, owner, cursor, null);
}, yantra.datatypes.Graphics, function(cursor, owner, opts) {
  if (typeof yantra.graphics.t9464 !== "undefined") {
  } else {
    yantra.graphics.t9464 = function(opts, owner, cursor, meta9465) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9465 = meta9465;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.graphics.t9464.cljs$lang$type = true;
    yantra.graphics.t9464.cljs$lang$ctorStr = "yantra.graphics/t9464";
    yantra.graphics.t9464.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
      return cljs.core._write.call(null, writer__4030__auto__, "yantra.graphics/t9464");
    };
    yantra.graphics.t9464.prototype.om$core$IRender$ = true;
    yantra.graphics.t9464.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var builder = om.core.get_shared.call(null, self__.owner, new cljs.core.Keyword(null, "builder", "builder", 1244848909));
      var bb = yantra.graphics.bounding_box.call(null, (new cljs.core.Keyword(null, "contents", "contents", 4741549708)).cljs$core$IFn$_invoke$arity$1(om.core.value.call(null, self__.cursor)));
      var coordfn = yantra.graphics.coordinate_transformer.call(null, bb, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [200, 200], null));
      var distancefn = yantra.graphics.distance_transformer.call(null, bb, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [200, 200], null));
      return React.DOM.svg({"height":200, "width":200}, cljs.core.into_array.call(null, cljs.core.mapv.call(null, function(builder, bb, coordfn, distancefn, ___$1) {
        return function(p1__9451_SHARP_) {
          return builder.call(null, p1__9451_SHARP_, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "coord-fn", "coord-fn", 4768239122), coordfn, new cljs.core.Keyword(null, "distance-fn", "distance-fn", 4584217874), distancefn], null)], null));
        };
      }(builder, bb, coordfn, distancefn, ___$1), (new cljs.core.Keyword(null, "contents", "contents", 4741549708)).cljs$core$IFn$_invoke$arity$1(self__.cursor))));
    };
    yantra.graphics.t9464.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9466) {
      var self__ = this;
      var _9466__$1 = this;
      return self__.meta9465;
    };
    yantra.graphics.t9464.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9466, meta9465__$1) {
      var self__ = this;
      var _9466__$1 = this;
      return new yantra.graphics.t9464(self__.opts, self__.owner, self__.cursor, meta9465__$1);
    };
    yantra.graphics.__GT_t9464 = function __GT_t9464(opts__$1, owner__$1, cursor__$1, meta9465) {
      return new yantra.graphics.t9464(opts__$1, owner__$1, cursor__$1, meta9465);
    };
  }
  return new yantra.graphics.t9464(opts, owner, cursor, null);
}], true, false);
goog.provide("yantra.edn");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("om.dom");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("React");
cljs.core.ICloneable["number"] = true;
cljs.core._clone["number"] = function(n) {
  return new Number(n);
};
cljs.core.ICloneable["string"] = true;
cljs.core._clone["string"] = function(n) {
  return new String(n);
};
yantra.edn.render_sequential = function render_sequential(begin, render_one, sep, end, sequence) {
  return React.DOM.span(null, cljs.core.into_array.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [begin], null), cljs.core.interpose.call(null, sep, cljs.core.mapv.call(null, render_one, sequence)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [end], null))));
};
yantra.edn.SequentialCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2175180810;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
yantra.edn.SequentialCursor.cljs$lang$type = true;
yantra.edn.SequentialCursor.cljs$lang$ctorStr = "yantra.edn/SequentialCursor";
yantra.edn.SequentialCursor.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "yantra.edn/SequentialCursor");
};
yantra.edn.SequentialCursor.prototype.om$core$ICursor$ = true;
yantra.edn.SequentialCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return self__.path;
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return self__.state;
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.om$core$IValue$ = true;
yantra.edn.SequentialCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return self__.value;
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot deref cursor during render phase: "), cljs.core.str(this$__$1)].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new yantra.edn.SequentialCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(this$__$1) {
        return function(v, i) {
          return om.core.to_cursor.call(null, v, self__.state, cljs.core.conj.call(null, self__.path, i));
        };
      }(this$__$1), self__.value, cljs.core.range.call(null));
    } else {
      return null;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.cljs$core$IStack$_peek$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core.to_cursor.call(null, cljs.core._peek.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.cljs$core$IStack$_pop$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core.to_cursor.call(null, cljs.core._pop.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.om$core$ITransact$ = true;
yantra.edn.SequentialCursor.prototype.om$core$ITransact$_transact_BANG_$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.swap_BANG_.call(null, self__.state, f, self__.path);
};
yantra.edn.SequentialCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new yantra.edn.SequentialCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.SequentialCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new yantra.edn.SequentialCursor(self__.value, self__.state, self__.path);
};
yantra.edn.SequentialCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
yantra.edn.__GT_SequentialCursor = function __GT_SequentialCursor(value, state, path) {
  return new yantra.edn.SequentialCursor(value, state, path);
};
yantra.edn.extend_sequential_cursor = function extend_sequential_cursor(type) {
  type.prototype.om$core$IToCursor$ = true;
  type.prototype.om$core$IToCursor$_to_cursor$arity$2 = function(value, state) {
    var value__$1 = this;
    return new yantra.edn.SequentialCursor(value__$1, state, cljs.core.PersistentVector.EMPTY);
  };
  return type.prototype.om$core$IToCursor$_to_cursor$arity$3 = function(value, state, path) {
    var value__$1 = this;
    return new yantra.edn.SequentialCursor(value__$1, state, path);
  };
};
cljs.core.map.call(null, yantra.edn.extend_sequential_cursor, cljs.core.PersistentHashSet.fromArray([cljs.core.KeySeq, cljs.core.IndexedSeq, cljs.core.ChunkedCons, cljs.core.LazySeq, cljs.core.RSeq, cljs.core.NodeSeq, cljs.core.List, cljs.core.PersistentArrayMapSeq, cljs.core.EmptyList, cljs.core.Cons, cljs.core.Range, cljs.core.ArrayNodeSeq, cljs.core.ValSeq, cljs.core.PersistentTreeMapSeq], true));
yantra.edn.thread_sets = function thread_sets(x) {
  return cljs.core.reduce.call(null, function(m, p__9525) {
    var vec__9526 = p__9525;
    var k = cljs.core.nth.call(null, vec__9526, 0, null);
    var v = cljs.core.nth.call(null, vec__9526, 1, null);
    if (cljs.core.set_QMARK_.call(null, k)) {
      return cljs.core.reduce.call(null, function(vec__9526, k, v) {
        return function(p1__9521_SHARP_, p2__9522_SHARP_) {
          return cljs.core.assoc.call(null, p1__9521_SHARP_, p2__9522_SHARP_, v);
        };
      }(vec__9526, k, v), m, k);
    } else {
      return cljs.core.assoc.call(null, m, k, v);
    }
  }, cljs.core.PersistentArrayMap.EMPTY, x);
};
yantra.edn.edn_renderers = yantra.edn.thread_sets.call(null, cljs.core.PersistentHashMap.fromArrays([null, cljs.core.Keyword, cljs.core.PersistentHashSet.fromArray([cljs.core.KeySeq, cljs.core.IndexedSeq, cljs.core.ChunkedCons, cljs.core.LazySeq, cljs.core.RSeq, cljs.core.NodeSeq, cljs.core.ChunkedSeq, cljs.core.List, cljs.core.PersistentArrayMapSeq, cljs.core.EmptyList, cljs.core.Cons, cljs.core.Range, cljs.core.ArrayNodeSeq, cljs.core.ValSeq, cljs.core.PersistentTreeMapSeq], true), Number, cljs.core.PersistentHashSet.fromArray([cljs.core.PersistentTreeMap, 
cljs.core.PersistentArrayMap, cljs.core.PersistentHashMap], true), cljs.core.UUID, cljs.core.PersistentHashSet.fromArray([cljs.core.Subvec, cljs.core.RedNode, cljs.core.PersistentVector, cljs.core.BlackNode], true), cljs.core.PersistentHashSet.fromArray([cljs.core.PersistentTreeSet, cljs.core.PersistentHashSet], true), cljs.core.Symbol, String], [function(cursor, owner, opts) {
  return React.DOM.span(null, "nil");
}, function(cursor, owner, opts) {
  if (typeof yantra.edn.t9531 !== "undefined") {
  } else {
    yantra.edn.t9531 = function(opts, owner, cursor, meta9532) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9532 = meta9532;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.edn.t9531.cljs$lang$type = true;
    yantra.edn.t9531.cljs$lang$ctorStr = "yantra.edn/t9531";
    yantra.edn.t9531.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
      return cljs.core._write.call(null, writer__4030__auto__, "yantra.edn/t9531");
    };
    yantra.edn.t9531.prototype.om$core$IRender$ = true;
    yantra.edn.t9531.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return React.DOM.span(null, [cljs.core.str(om.core.value.call(null, self__.cursor))].join(""));
    };
    yantra.edn.t9531.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9533) {
      var self__ = this;
      var _9533__$1 = this;
      return self__.meta9532;
    };
    yantra.edn.t9531.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9533, meta9532__$1) {
      var self__ = this;
      var _9533__$1 = this;
      return new yantra.edn.t9531(self__.opts, self__.owner, self__.cursor, meta9532__$1);
    };
    yantra.edn.__GT_t9531 = function __GT_t9531(opts__$1, owner__$1, cursor__$1, meta9532) {
      return new yantra.edn.t9531(opts__$1, owner__$1, cursor__$1, meta9532);
    };
  }
  return new yantra.edn.t9531(opts, owner, cursor, null);
}, function(cursor, owner, opts) {
  var builder = om.core.get_shared.call(null, owner, new cljs.core.Keyword(null, "builder", "builder", 1244848909));
  if (typeof yantra.edn.t9534 !== "undefined") {
  } else {
    yantra.edn.t9534 = function(builder, opts, owner, cursor, meta9535) {
      this.builder = builder;
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9535 = meta9535;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.edn.t9534.cljs$lang$type = true;
    yantra.edn.t9534.cljs$lang$ctorStr = "yantra.edn/t9534";
    yantra.edn.t9534.cljs$lang$ctorPrWriter = function(builder) {
      return function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
        return cljs.core._write.call(null, writer__4030__auto__, "yantra.edn/t9534");
      };
    }(builder);
    yantra.edn.t9534.prototype.om$core$IRender$ = true;
    yantra.edn.t9534.prototype.om$core$IRender$render$arity$1 = function(builder) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return yantra.edn.render_sequential.call(null, "(", function(___$1, builder) {
          return function(p1__9527_SHARP_) {
            return self__.builder.call(null, p1__9527_SHARP_);
          };
        }(___$1, builder), " ", ")", self__.cursor);
      };
    }(builder);
    yantra.edn.t9534.prototype.cljs$core$IMeta$_meta$arity$1 = function(builder) {
      return function(_9536) {
        var self__ = this;
        var _9536__$1 = this;
        return self__.meta9535;
      };
    }(builder);
    yantra.edn.t9534.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(builder) {
      return function(_9536, meta9535__$1) {
        var self__ = this;
        var _9536__$1 = this;
        return new yantra.edn.t9534(self__.builder, self__.opts, self__.owner, self__.cursor, meta9535__$1);
      };
    }(builder);
    yantra.edn.__GT_t9534 = function(builder) {
      return function __GT_t9534(builder__$1, opts__$1, owner__$1, cursor__$1, meta9535) {
        return new yantra.edn.t9534(builder__$1, opts__$1, owner__$1, cursor__$1, meta9535);
      };
    }(builder);
  }
  return new yantra.edn.t9534(builder, opts, owner, cursor, null);
}, function(cursor, owner, opts) {
  if (typeof yantra.edn.t9537 !== "undefined") {
  } else {
    yantra.edn.t9537 = function(opts, owner, cursor, meta9538) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9538 = meta9538;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.edn.t9537.cljs$lang$type = true;
    yantra.edn.t9537.cljs$lang$ctorStr = "yantra.edn/t9537";
    yantra.edn.t9537.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
      return cljs.core._write.call(null, writer__4030__auto__, "yantra.edn/t9537");
    };
    yantra.edn.t9537.prototype.om$core$IRender$ = true;
    yantra.edn.t9537.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return React.DOM.span(null, [cljs.core.str(om.core.value.call(null, self__.cursor))].join(""));
    };
    yantra.edn.t9537.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9539) {
      var self__ = this;
      var _9539__$1 = this;
      return self__.meta9538;
    };
    yantra.edn.t9537.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9539, meta9538__$1) {
      var self__ = this;
      var _9539__$1 = this;
      return new yantra.edn.t9537(self__.opts, self__.owner, self__.cursor, meta9538__$1);
    };
    yantra.edn.__GT_t9537 = function __GT_t9537(opts__$1, owner__$1, cursor__$1, meta9538) {
      return new yantra.edn.t9537(opts__$1, owner__$1, cursor__$1, meta9538);
    };
  }
  return new yantra.edn.t9537(opts, owner, cursor, null);
}, function(cursor, owner, opts) {
  var builder = om.core.get_shared.call(null, owner, new cljs.core.Keyword(null, "builder", "builder", 1244848909));
  if (typeof yantra.edn.t9540 !== "undefined") {
  } else {
    yantra.edn.t9540 = function(builder, opts, owner, cursor, meta9541) {
      this.builder = builder;
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9541 = meta9541;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.edn.t9540.cljs$lang$type = true;
    yantra.edn.t9540.cljs$lang$ctorStr = "yantra.edn/t9540";
    yantra.edn.t9540.cljs$lang$ctorPrWriter = function(builder) {
      return function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
        return cljs.core._write.call(null, writer__4030__auto__, "yantra.edn/t9540");
      };
    }(builder);
    yantra.edn.t9540.prototype.om$core$IRender$ = true;
    yantra.edn.t9540.prototype.om$core$IRender$render$arity$1 = function(builder) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return yantra.edn.render_sequential.call(null, "{", function(___$1, builder) {
          return function(p1__9530_SHARP_) {
            return React.DOM.span(null, [self__.builder.call(null, cljs.core.key.call(null, p1__9530_SHARP_)), " ", self__.builder.call(null, cljs.core.val.call(null, p1__9530_SHARP_), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), self__.opts], null))]);
          };
        }(___$1, builder), ", ", "}", self__.cursor);
      };
    }(builder);
    yantra.edn.t9540.prototype.cljs$core$IMeta$_meta$arity$1 = function(builder) {
      return function(_9542) {
        var self__ = this;
        var _9542__$1 = this;
        return self__.meta9541;
      };
    }(builder);
    yantra.edn.t9540.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(builder) {
      return function(_9542, meta9541__$1) {
        var self__ = this;
        var _9542__$1 = this;
        return new yantra.edn.t9540(self__.builder, self__.opts, self__.owner, self__.cursor, meta9541__$1);
      };
    }(builder);
    yantra.edn.__GT_t9540 = function(builder) {
      return function __GT_t9540(builder__$1, opts__$1, owner__$1, cursor__$1, meta9541) {
        return new yantra.edn.t9540(builder__$1, opts__$1, owner__$1, cursor__$1, meta9541);
      };
    }(builder);
  }
  return new yantra.edn.t9540(builder, opts, owner, cursor, null);
}, function(cursor, owner, opts) {
  return React.DOM.span(null, cljs.core.pr_str.call(null, om.core.value.call(null, cursor)));
}, function(cursor, owner, opts) {
  var builder = om.core.get_shared.call(null, owner, new cljs.core.Keyword(null, "builder", "builder", 1244848909));
  if (typeof yantra.edn.t9543 !== "undefined") {
  } else {
    yantra.edn.t9543 = function(builder, opts, owner, cursor, meta9544) {
      this.builder = builder;
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9544 = meta9544;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.edn.t9543.cljs$lang$type = true;
    yantra.edn.t9543.cljs$lang$ctorStr = "yantra.edn/t9543";
    yantra.edn.t9543.cljs$lang$ctorPrWriter = function(builder) {
      return function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
        return cljs.core._write.call(null, writer__4030__auto__, "yantra.edn/t9543");
      };
    }(builder);
    yantra.edn.t9543.prototype.om$core$IRender$ = true;
    yantra.edn.t9543.prototype.om$core$IRender$render$arity$1 = function(builder) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return yantra.edn.render_sequential.call(null, "[", function(___$1, builder) {
          return function(p1__9528_SHARP_) {
            return self__.builder.call(null, p1__9528_SHARP_);
          };
        }(___$1, builder), " ", "]", self__.cursor);
      };
    }(builder);
    yantra.edn.t9543.prototype.cljs$core$IMeta$_meta$arity$1 = function(builder) {
      return function(_9545) {
        var self__ = this;
        var _9545__$1 = this;
        return self__.meta9544;
      };
    }(builder);
    yantra.edn.t9543.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(builder) {
      return function(_9545, meta9544__$1) {
        var self__ = this;
        var _9545__$1 = this;
        return new yantra.edn.t9543(self__.builder, self__.opts, self__.owner, self__.cursor, meta9544__$1);
      };
    }(builder);
    yantra.edn.__GT_t9543 = function(builder) {
      return function __GT_t9543(builder__$1, opts__$1, owner__$1, cursor__$1, meta9544) {
        return new yantra.edn.t9543(builder__$1, opts__$1, owner__$1, cursor__$1, meta9544);
      };
    }(builder);
  }
  return new yantra.edn.t9543(builder, opts, owner, cursor, null);
}, function(cursor, owner, opts) {
  var builder = om.core.get_shared.call(null, owner, new cljs.core.Keyword(null, "builder", "builder", 1244848909));
  if (typeof yantra.edn.t9546 !== "undefined") {
  } else {
    yantra.edn.t9546 = function(builder, opts, owner, cursor, meta9547) {
      this.builder = builder;
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9547 = meta9547;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.edn.t9546.cljs$lang$type = true;
    yantra.edn.t9546.cljs$lang$ctorStr = "yantra.edn/t9546";
    yantra.edn.t9546.cljs$lang$ctorPrWriter = function(builder) {
      return function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
        return cljs.core._write.call(null, writer__4030__auto__, "yantra.edn/t9546");
      };
    }(builder);
    yantra.edn.t9546.prototype.om$core$IRender$ = true;
    yantra.edn.t9546.prototype.om$core$IRender$render$arity$1 = function(builder) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return yantra.edn.render_sequential.call(null, "#{", function(___$1, builder) {
          return function(p1__9529_SHARP_) {
            return self__.builder.call(null, p1__9529_SHARP_);
          };
        }(___$1, builder), " ", "}", self__.cursor);
      };
    }(builder);
    yantra.edn.t9546.prototype.cljs$core$IMeta$_meta$arity$1 = function(builder) {
      return function(_9548) {
        var self__ = this;
        var _9548__$1 = this;
        return self__.meta9547;
      };
    }(builder);
    yantra.edn.t9546.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(builder) {
      return function(_9548, meta9547__$1) {
        var self__ = this;
        var _9548__$1 = this;
        return new yantra.edn.t9546(self__.builder, self__.opts, self__.owner, self__.cursor, meta9547__$1);
      };
    }(builder);
    yantra.edn.__GT_t9546 = function(builder) {
      return function __GT_t9546(builder__$1, opts__$1, owner__$1, cursor__$1, meta9547) {
        return new yantra.edn.t9546(builder__$1, opts__$1, owner__$1, cursor__$1, meta9547);
      };
    }(builder);
  }
  return new yantra.edn.t9546(builder, opts, owner, cursor, null);
}, function(cursor, owner, opts) {
  if (typeof yantra.edn.t9549 !== "undefined") {
  } else {
    yantra.edn.t9549 = function(opts, owner, cursor, meta9550) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9550 = meta9550;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.edn.t9549.cljs$lang$type = true;
    yantra.edn.t9549.cljs$lang$ctorStr = "yantra.edn/t9549";
    yantra.edn.t9549.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
      return cljs.core._write.call(null, writer__4030__auto__, "yantra.edn/t9549");
    };
    yantra.edn.t9549.prototype.om$core$IRender$ = true;
    yantra.edn.t9549.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return React.DOM.span(null, [cljs.core.str(om.core.value.call(null, self__.cursor))].join(""));
    };
    yantra.edn.t9549.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9551) {
      var self__ = this;
      var _9551__$1 = this;
      return self__.meta9550;
    };
    yantra.edn.t9549.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9551, meta9550__$1) {
      var self__ = this;
      var _9551__$1 = this;
      return new yantra.edn.t9549(self__.opts, self__.owner, self__.cursor, meta9550__$1);
    };
    yantra.edn.__GT_t9549 = function __GT_t9549(opts__$1, owner__$1, cursor__$1, meta9550) {
      return new yantra.edn.t9549(opts__$1, owner__$1, cursor__$1, meta9550);
    };
  }
  return new yantra.edn.t9549(opts, owner, cursor, null);
}, function(cursor, owner, opts) {
  if (typeof yantra.edn.t9552 !== "undefined") {
  } else {
    yantra.edn.t9552 = function(opts, owner, cursor, meta9553) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9553 = meta9553;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.edn.t9552.cljs$lang$type = true;
    yantra.edn.t9552.cljs$lang$ctorStr = "yantra.edn/t9552";
    yantra.edn.t9552.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
      return cljs.core._write.call(null, writer__4030__auto__, "yantra.edn/t9552");
    };
    yantra.edn.t9552.prototype.om$core$IRender$ = true;
    yantra.edn.t9552.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return React.DOM.span(null, cljs.core.pr_str.call(null, [cljs.core.str(om.core.value.call(null, self__.cursor))].join("")));
    };
    yantra.edn.t9552.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9554) {
      var self__ = this;
      var _9554__$1 = this;
      return self__.meta9553;
    };
    yantra.edn.t9552.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9554, meta9553__$1) {
      var self__ = this;
      var _9554__$1 = this;
      return new yantra.edn.t9552(self__.opts, self__.owner, self__.cursor, meta9553__$1);
    };
    yantra.edn.__GT_t9552 = function __GT_t9552(opts__$1, owner__$1, cursor__$1, meta9553) {
      return new yantra.edn.t9552(opts__$1, owner__$1, cursor__$1, meta9553);
    };
  }
  return new yantra.edn.t9552(opts, owner, cursor, null);
}]));
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string");
cljs.reader.PushbackReader = function() {
  var obj9399 = {};
  return obj9399;
}();
cljs.reader.read_char = function read_char(reader) {
  if (function() {
    var and__3450__auto__ = reader;
    if (and__3450__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader);
  } else {
    var x__4089__auto__ = reader == null ? null : reader;
    return function() {
      var or__3462__auto__ = cljs.reader.read_char[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.reader.read_char["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader);
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if (function() {
    var and__3450__auto__ = reader;
    if (and__3450__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2;
    } else {
      return and__3450__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__4089__auto__ = reader == null ? null : reader;
    return function() {
      var or__3462__auto__ = cljs.reader.unread[goog.typeOf(x__4089__auto__)];
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.reader.unread["_"];
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch);
  }
};
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx;
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
  return cljs.core._write.call(null, writer__4030__auto__, "cljs.reader/StringPushbackReader");
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx];
  } else {
    return self__.buffer.pop();
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  return self__.buffer.push(ch);
};
cljs.reader.__GT_StringPushbackReader = function __GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx);
};
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1);
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3462__auto__ = goog.string.isBreakingWhitespace(ch);
  if (cljs.core.truth_(or__3462__auto__)) {
    return or__3462__auto__;
  } else {
    return "," === ch;
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch);
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return ";" === ch;
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  return cljs.reader.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.reader.numeric_QMARK_.call(null, function() {
    var next_ch = cljs.reader.read_char.call(null, reader);
    cljs.reader.unread.call(null, reader, next_ch);
    return next_ch;
  }());
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if (arguments.length > 1) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return reader_error__delegate.call(this, rdr, msg);
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__9400) {
    var rdr = cljs.core.first(arglist__9400);
    var msg = cljs.core.rest(arglist__9400);
    return reader_error__delegate(rdr, msg);
  };
  reader_error.cljs$core$IFn$_invoke$arity$variadic = reader_error__delegate;
  return reader_error;
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3450__auto__ = !(ch === "#");
  if (and__3450__auto__) {
    var and__3450__auto____$1 = !(ch === "'");
    if (and__3450__auto____$1) {
      var and__3450__auto____$2 = !(ch === ":");
      if (and__3450__auto____$2) {
        return cljs.reader.macros.call(null, ch);
      } else {
        return and__3450__auto____$2;
      }
    } else {
      return and__3450__auto____$1;
    }
  } else {
    return and__3450__auto__;
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (ch == null || (cljs.reader.whitespace_QMARK_.call(null, ch) || cljs.reader.macro_terminating_QMARK_.call(null, ch))) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString();
    } else {
      var G__9401 = function() {
        sb.append(ch);
        return sb;
      }();
      var G__9402 = cljs.reader.read_char.call(null, rdr);
      sb = G__9401;
      ch = G__9402;
      continue;
    }
    break;
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch === "\n" || (ch === "\r" || ch == null)) {
      return reader;
    } else {
      continue;
    }
    break;
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches = re.exec(s);
  if (matches == null) {
    return null;
  } else {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3 = groups[2];
  if (!(group3 == null || group3.length < 1)) {
    return 0;
  } else {
    var negate = "-" === groups[1] ? -1 : 1;
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[7]) ? [groups[7], parseInt(groups[7])] : new cljs.core.Keyword(null, "default", "default", 2558708147) ? [null, null] : null;
    var n = a[0];
    var radix = a[1];
    if (n == null) {
      return null;
    } else {
      return negate * parseInt(n, radix);
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator, 10) / parseInt(denominator, 10);
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s);
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if (!(matches == null) && matches[0] === s) {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  } else {
    return null;
  }
};
cljs.reader.match_number = function match_number(s) {
  if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s);
  } else {
    if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s);
    } else {
      if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s);
      } else {
        return null;
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if (c === "t") {
    return "\t";
  } else {
    if (c === "r") {
      return "\r";
    } else {
      if (c === "n") {
        return "\n";
      } else {
        if (c === "\\") {
          return "\\";
        } else {
          if (c === '"') {
            return'"';
          } else {
            if (c === "b") {
              return "\b";
            } else {
              if (c === "f") {
                return "\f";
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  return null;
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if (cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str;
  } else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str);
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code);
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if (cljs.core.truth_(mapresult)) {
    return mapresult;
  } else {
    if (ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)));
    } else {
      if (ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)));
      } else {
        if (cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (cljs.core.truth_(pred.call(null, ch))) {
      var G__9403 = cljs.reader.read_char.call(null, rdr);
      ch = G__9403;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading");
    }
    if (delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      var temp__4090__auto__ = cljs.reader.macros.call(null, ch);
      if (cljs.core.truth_(temp__4090__auto__)) {
        var macrofn = temp__4090__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__9404 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__9404;
        continue;
      } else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__9405 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__9405;
        continue;
      }
    }
    break;
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet");
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if (cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _);
  } else {
    var temp__4090__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if (cljs.core.truth_(temp__4090__auto__)) {
      var obj = temp__4090__auto__;
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch);
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch);
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true));
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true);
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms");
  } else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l);
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__3462__auto__ = ch == null;
      if (or__3462__auto__) {
        return or__3462__auto__;
      } else {
        var or__3462__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if (or__3462__auto____$1) {
          return or__3462__auto____$1;
        } else {
          return cljs.reader.macros.call(null, ch);
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__3462__auto__ = cljs.reader.match_number.call(null, s);
      if (cljs.core.truth_(or__3462__auto__)) {
        return or__3462__auto__;
      } else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]");
      }
    } else {
      var G__9406 = function() {
        buffer.append(ch);
        return buffer;
      }();
      var G__9407 = cljs.reader.read_char.call(null, reader);
      buffer = G__9406;
      ch = G__9407;
      continue;
    }
    break;
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        var G__9408 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer;
        }();
        var G__9409 = cljs.reader.read_char.call(null, reader);
        buffer = G__9408;
        ch = G__9409;
        continue;
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
            var G__9410 = function() {
              buffer.append(ch);
              return buffer;
            }();
            var G__9411 = cljs.reader.read_char.call(null, reader);
            buffer = G__9410;
            ch = G__9411;
            continue;
          } else {
            return null;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if (t === "nil") {
    return null;
  } else {
    if (t === "true") {
      return true;
    } else {
      if (t === "false") {
        return false;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if (cljs.core.truth_(goog.string.contains(token, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length));
  } else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token));
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if (!(void 0 === ns) && ns.substring(ns.length - 2, ns.length) === ":/" || (name[name.length - 1] === ":" || !(token__$1.indexOf("::", 1) === -1))) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1);
  } else {
    if (!(ns == null) && ns.length > 0) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name);
    } else {
      return cljs.core.keyword.call(null, token__$1);
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if (f instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), f], null);
  } else {
    if (typeof f === "string") {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), f], null);
    } else {
      if (f instanceof cljs.core.Keyword) {
        return new cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return f;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.reader.read.call(null, rdr, true, null, true)), sym);
  };
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg);
  };
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map");
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if (function() {
    var G__9413 = o;
    if (G__9413) {
      var bit__4112__auto__ = G__9413.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4112__auto__ || G__9413.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__9413.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__9413);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__9413);
    }
  }()) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m));
  } else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas");
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true));
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch));
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr;
};
cljs.reader.macros = function macros(c) {
  if (c === '"') {
    return cljs.reader.read_string_STAR_;
  } else {
    if (c === ":") {
      return cljs.reader.read_keyword;
    } else {
      if (c === ";") {
        return cljs.reader.read_comment;
      } else {
        if (c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null));
        } else {
          if (c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", -1545057749, null));
          } else {
            if (c === "^") {
              return cljs.reader.read_meta;
            } else {
              if (c === "`") {
                return cljs.reader.not_implemented;
              } else {
                if (c === "~") {
                  return cljs.reader.not_implemented;
                } else {
                  if (c === "(") {
                    return cljs.reader.read_list;
                  } else {
                    if (c === ")") {
                      return cljs.reader.read_unmatched_delimiter;
                    } else {
                      if (c === "[") {
                        return cljs.reader.read_vector;
                      } else {
                        if (c === "]") {
                          return cljs.reader.read_unmatched_delimiter;
                        } else {
                          if (c === "{") {
                            return cljs.reader.read_map;
                          } else {
                            if (c === "}") {
                              return cljs.reader.read_unmatched_delimiter;
                            } else {
                              if (c === "\\") {
                                return cljs.reader.read_char;
                              } else {
                                if (c === "#") {
                                  return cljs.reader.read_dispatch;
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    return null;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if (s === "{") {
    return cljs.reader.read_set;
  } else {
    if (s === "\x3c") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form");
    } else {
      if (s === '"') {
        return cljs.reader.read_regex;
      } else {
        if (s === "!") {
          return cljs.reader.read_comment;
        } else {
          if (s === "_") {
            return cljs.reader.read_discard;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return null;
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch == null) {
      if (cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading");
      } else {
        return sentinel;
      }
    } else {
      if (cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__9414 = reader;
        var G__9415 = eof_is_error;
        var G__9416 = sentinel;
        var G__9417 = is_recursive;
        reader = G__9414;
        eof_is_error = G__9415;
        sentinel = G__9416;
        is_recursive = G__9417;
        continue;
      } else {
        if (cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__9418 = cljs.reader.read_comment.call(null, reader, ch);
          var G__9419 = eof_is_error;
          var G__9420 = sentinel;
          var G__9421 = is_recursive;
          reader = G__9418;
          eof_is_error = G__9419;
          sentinel = G__9420;
          is_recursive = G__9421;
          continue;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var f = cljs.reader.macros.call(null, ch);
            var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? cljs.reader.read_symbol.call(null, reader, ch) : null;
            if (res === reader) {
              var G__9422 = reader;
              var G__9423 = eof_is_error;
              var G__9424 = sentinel;
              var G__9425 = is_recursive;
              reader = G__9422;
              eof_is_error = G__9423;
              sentinel = G__9424;
              is_recursive = G__9425;
              continue;
            } else {
              return res;
            }
          } else {
            return null;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.read_string = function read_string(s) {
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, true, null, false);
};
cljs.reader.zero_fill_right_and_truncate = function zero_fill_right_and_truncate(s, width) {
  if (cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s;
  } else {
    if (width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var b = new goog.string.StringBuffer(s);
        while (true) {
          if (b.getLength() < width) {
            var G__9426 = b.append("0");
            b = G__9426;
            continue;
          } else {
            return b.toString();
          }
          break;
        }
      } else {
        return null;
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0;
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return!cljs.reader.divisible_QMARK_.call(null, num, div);
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  return cljs.reader.divisible_QMARK_.call(null, year, 4) && (cljs.reader.indivisible_QMARK_.call(null, year, 100) || cljs.reader.divisible_QMARK_.call(null, year, 400));
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(dim_norm, dim_leap) {
    return function(month, leap_year_QMARK_) {
      return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month);
    };
  }(dim_norm, dim_leap);
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function parse_int(s) {
  var n = parseInt(s, 10);
  if (cljs.core.not.call(null, isNaN(n))) {
    return n;
  } else {
    return null;
  }
};
cljs.reader.check = function check(low, n, high, msg) {
  if (low <= n && n <= high) {
  } else {
    cljs.reader.reader_error.call(null, null, [cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("\x3c\x3d"), cljs.core.str(n), cljs.core.str("\x3c\x3d"), cljs.core.str(high)].join(""));
  }
  return n;
};
cljs.reader.parse_and_validate_timestamp = function parse_and_validate_timestamp(s) {
  var vec__9428 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__9428, 0, null);
  var years = cljs.core.nth.call(null, vec__9428, 1, null);
  var months = cljs.core.nth.call(null, vec__9428, 2, null);
  var days = cljs.core.nth.call(null, vec__9428, 3, null);
  var hours = cljs.core.nth.call(null, vec__9428, 4, null);
  var minutes = cljs.core.nth.call(null, vec__9428, 5, null);
  var seconds = cljs.core.nth.call(null, vec__9428, 6, null);
  var fraction = cljs.core.nth.call(null, vec__9428, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__9428, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__9428, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__9428, 10, null);
  var v = vec__9428;
  if (cljs.core.not.call(null, v)) {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(s)].join(""));
  } else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__3462__auto__ = cljs.reader.parse_int.call(null, months);
      if (cljs.core.truth_(or__3462__auto__)) {
        return or__3462__auto__;
      } else {
        return 1;
      }
    }();
    var days__$1 = function() {
      var or__3462__auto__ = cljs.reader.parse_int.call(null, days);
      if (cljs.core.truth_(or__3462__auto__)) {
        return or__3462__auto__;
      } else {
        return 1;
      }
    }();
    var hours__$1 = function() {
      var or__3462__auto__ = cljs.reader.parse_int.call(null, hours);
      if (cljs.core.truth_(or__3462__auto__)) {
        return or__3462__auto__;
      } else {
        return 0;
      }
    }();
    var minutes__$1 = function() {
      var or__3462__auto__ = cljs.reader.parse_int.call(null, minutes);
      if (cljs.core.truth_(or__3462__auto__)) {
        return or__3462__auto__;
      } else {
        return 0;
      }
    }();
    var seconds__$1 = function() {
      var or__3462__auto__ = cljs.reader.parse_int.call(null, seconds);
      if (cljs.core.truth_(or__3462__auto__)) {
        return or__3462__auto__;
      } else {
        return 0;
      }
    }();
    var fraction__$1 = function() {
      var or__3462__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if (cljs.core.truth_(or__3462__auto__)) {
        return or__3462__auto__;
      } else {
        return 0;
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__3462__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if (cljs.core.truth_(or__3462__auto__)) {
        return or__3462__auto__;
      } else {
        return 0;
      }
    }();
    var offset_minutes__$1 = function() {
      var or__3462__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if (cljs.core.truth_(or__3462__auto__)) {
        return or__3462__auto__;
      } else {
        return 0;
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), 
    cljs.reader.check.call(null, 0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], null);
  }
};
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__4090__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if (cljs.core.truth_(temp__4090__auto__)) {
    var vec__9430 = temp__4090__auto__;
    var years = cljs.core.nth.call(null, vec__9430, 0, null);
    var months = cljs.core.nth.call(null, vec__9430, 1, null);
    var days = cljs.core.nth.call(null, vec__9430, 2, null);
    var hours = cljs.core.nth.call(null, vec__9430, 3, null);
    var minutes = cljs.core.nth.call(null, vec__9430, 4, null);
    var seconds = cljs.core.nth.call(null, vec__9430, 5, null);
    var ms = cljs.core.nth.call(null, vec__9430, 6, null);
    var offset = cljs.core.nth.call(null, vec__9430, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3);
  } else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""));
  }
};
cljs.reader.read_date = function read_date(s) {
  if (typeof s === "string") {
    return cljs.reader.parse_timestamp.call(null, s);
  } else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.");
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if (cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems);
  } else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.");
  }
};
cljs.reader.read_js = function read_js(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    var arr = [];
    var seq__9443_9455 = cljs.core.seq.call(null, form);
    var chunk__9444_9456 = null;
    var count__9445_9457 = 0;
    var i__9446_9458 = 0;
    while (true) {
      if (i__9446_9458 < count__9445_9457) {
        var x_9459 = cljs.core._nth.call(null, chunk__9444_9456, i__9446_9458);
        arr.push(x_9459);
        var G__9460 = seq__9443_9455;
        var G__9461 = chunk__9444_9456;
        var G__9462 = count__9445_9457;
        var G__9463 = i__9446_9458 + 1;
        seq__9443_9455 = G__9460;
        chunk__9444_9456 = G__9461;
        count__9445_9457 = G__9462;
        i__9446_9458 = G__9463;
        continue;
      } else {
        var temp__4092__auto___9464 = cljs.core.seq.call(null, seq__9443_9455);
        if (temp__4092__auto___9464) {
          var seq__9443_9465__$1 = temp__4092__auto___9464;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__9443_9465__$1)) {
            var c__4210__auto___9466 = cljs.core.chunk_first.call(null, seq__9443_9465__$1);
            var G__9467 = cljs.core.chunk_rest.call(null, seq__9443_9465__$1);
            var G__9468 = c__4210__auto___9466;
            var G__9469 = cljs.core.count.call(null, c__4210__auto___9466);
            var G__9470 = 0;
            seq__9443_9455 = G__9467;
            chunk__9444_9456 = G__9468;
            count__9445_9457 = G__9469;
            i__9446_9458 = G__9470;
            continue;
          } else {
            var x_9471 = cljs.core.first.call(null, seq__9443_9465__$1);
            arr.push(x_9471);
            var G__9472 = cljs.core.next.call(null, seq__9443_9465__$1);
            var G__9473 = null;
            var G__9474 = 0;
            var G__9475 = 0;
            seq__9443_9455 = G__9472;
            chunk__9444_9456 = G__9473;
            count__9445_9457 = G__9474;
            i__9446_9458 = G__9475;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return arr;
  } else {
    if (cljs.core.map_QMARK_.call(null, form)) {
      var obj = function() {
        var obj9448 = {};
        return obj9448;
      }();
      var seq__9449_9476 = cljs.core.seq.call(null, form);
      var chunk__9450_9477 = null;
      var count__9451_9478 = 0;
      var i__9452_9479 = 0;
      while (true) {
        if (i__9452_9479 < count__9451_9478) {
          var vec__9453_9480 = cljs.core._nth.call(null, chunk__9450_9477, i__9452_9479);
          var k_9481 = cljs.core.nth.call(null, vec__9453_9480, 0, null);
          var v_9482 = cljs.core.nth.call(null, vec__9453_9480, 1, null);
          obj[cljs.core.name.call(null, k_9481)] = v_9482;
          var G__9483 = seq__9449_9476;
          var G__9484 = chunk__9450_9477;
          var G__9485 = count__9451_9478;
          var G__9486 = i__9452_9479 + 1;
          seq__9449_9476 = G__9483;
          chunk__9450_9477 = G__9484;
          count__9451_9478 = G__9485;
          i__9452_9479 = G__9486;
          continue;
        } else {
          var temp__4092__auto___9487 = cljs.core.seq.call(null, seq__9449_9476);
          if (temp__4092__auto___9487) {
            var seq__9449_9488__$1 = temp__4092__auto___9487;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__9449_9488__$1)) {
              var c__4210__auto___9489 = cljs.core.chunk_first.call(null, seq__9449_9488__$1);
              var G__9490 = cljs.core.chunk_rest.call(null, seq__9449_9488__$1);
              var G__9491 = c__4210__auto___9489;
              var G__9492 = cljs.core.count.call(null, c__4210__auto___9489);
              var G__9493 = 0;
              seq__9449_9476 = G__9490;
              chunk__9450_9477 = G__9491;
              count__9451_9478 = G__9492;
              i__9452_9479 = G__9493;
              continue;
            } else {
              var vec__9454_9494 = cljs.core.first.call(null, seq__9449_9488__$1);
              var k_9495 = cljs.core.nth.call(null, vec__9454_9494, 0, null);
              var v_9496 = cljs.core.nth.call(null, vec__9454_9494, 1, null);
              obj[cljs.core.name.call(null, k_9495)] = v_9496;
              var G__9497 = cljs.core.next.call(null, seq__9449_9488__$1);
              var G__9498 = null;
              var G__9499 = 0;
              var G__9500 = 0;
              seq__9449_9476 = G__9497;
              chunk__9450_9477 = G__9498;
              count__9451_9478 = G__9499;
              i__9452_9479 = G__9500;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return obj;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.reader.reader_error.call(null, null, [cljs.core.str("JS literal expects a vector or map containing "), cljs.core.str("only string or unqualified keyword keys")].join(""));
      } else {
        return null;
      }
    }
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if (typeof uuid === "string") {
    return new cljs.core.UUID(uuid);
  } else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.");
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue, "js", cljs.reader.read_js], null));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), [cljs.core.str(tag)].join(""));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if (cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false));
  } else {
    if (cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", [cljs.core.str(tag)].join(""), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))));
      } else {
        return null;
      }
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser;
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser;
};
cljs.reader.register_default_tag_parser_BANG_ = function register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return f;
    };
  }(old_parser));
  return old_parser;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return null;
    };
  }(old_parser));
  return old_parser;
};
goog.provide("yantra.plot");
goog.require("cljs.core");
goog.require("om.dom");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("React");
goog.require("yantra.datatypes");
goog.require("yantra.datatypes");
yantra.plot.bar_chart_vega_values = function bar_chart_vega_values(x) {
  return cljs.core.mapv.call(null, function(d, l) {
    return new cljs.core.PersistentArrayMap(null, 2, ["x", l, "y", d], null);
  }, (new cljs.core.Keyword(null, "data", "data", 1016980252)).cljs$core$IFn$_invoke$arity$1(x), (new cljs.core.Keyword(null, "labels", "labels", 4198454129)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "opts", "opts", 1017322386)).cljs$core$IFn$_invoke$arity$1(x)));
};
yantra.plot.bar_chart_spec = function bar_chart_spec(x) {
  return new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "width", "width", 1127031096), 200, new cljs.core.Keyword(null, "height", "height", 4087841945), 200, new cljs.core.Keyword(null, "padding", "padding", 4502531971), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "top", "top", 1014019271), 10, new cljs.core.Keyword(null, "left", "left", 1017222009), 30, new cljs.core.Keyword(null, "bottom", "bottom", 3925642653), 20, new cljs.core.Keyword(null, 
  "right", "right", 1122416014), 10], null), new cljs.core.Keyword(null, "data", "data", 1016980252), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1017277949), "table", new cljs.core.Keyword(null, "values", "values", 4485058708), yantra.plot.bar_chart_vega_values.call(null, x)], null)], null), new cljs.core.Keyword(null, "axes", "axes", 1016912535), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1017479852), "x", new cljs.core.Keyword(null, "scale", "scale", 1123155132), "x"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1017479852), "y", new cljs.core.Keyword(null, "scale", "scale", 1123155132), "y"], null)], null), new cljs.core.Keyword(null, "scales", "scales", 4400681947), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "name", "name", 1017277949), "x", new cljs.core.Keyword(null, "type", "type", 1017479852), "ordinal", new cljs.core.Keyword(null, "range", "range", 1122184367), "width", new cljs.core.Keyword(null, "domain", "domain", 3982673974), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "data", "data", 1016980252), "table", new cljs.core.Keyword(null, "field", "field", 
  1111331948), "data.x"], null)], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "name", "name", 1017277949), "y", new cljs.core.Keyword(null, "range", "range", 1122184367), "height", new cljs.core.Keyword(null, "nice", "nice", 1017285327), true, new cljs.core.Keyword(null, "domain", "domain", 3982673974), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "data", "data", 1016980252), "table", new cljs.core.Keyword(null, "field", "field", 1111331948), 
  "data.y"], null)], null)], null), new cljs.core.Keyword(null, "marks", "marks", 1117570744), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1017479852), "rect", new cljs.core.Keyword(null, "from", "from", 1017056028), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "data", "data", 1016980252), "table"], null), new cljs.core.Keyword(null, "properties", 
  "properties", 4382818469), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "enter", "enter", 1110571594), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "x", "x", 1013904362), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "scale", "scale", 1123155132), "x", new cljs.core.Keyword(null, "field", "field", 1111331948), "data.x"], null), new cljs.core.Keyword(null, "width", "width", 1127031096), new cljs.core.PersistentArrayMap(null, 
  3, [new cljs.core.Keyword(null, "scale", "scale", 1123155132), "x", new cljs.core.Keyword(null, "band", "band", 1016920487), true, new cljs.core.Keyword(null, "offset", "offset", 4289091589), -1], null), new cljs.core.Keyword(null, "y", "y", 1013904363), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "scale", "scale", 1123155132), "y", new cljs.core.Keyword(null, "field", "field", 1111331948), "data.y"], null), new cljs.core.Keyword(null, "y2", "y2", 1013908043), new cljs.core.PersistentArrayMap(null, 
  2, [new cljs.core.Keyword(null, "scale", "scale", 1123155132), "y", new cljs.core.Keyword(null, "value", "value", 1125876963), 0], null)], null), new cljs.core.Keyword(null, "update", "update", 4470025275), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "fill", "fill", 1017047285), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 1125876963), "steelBlue"], null)], null)], null)], null)], null)], null);
};
yantra.plot.list_line_plot_vega_values = function list_line_plot_vega_values(x) {
  var d = (new cljs.core.Keyword(null, "data", "data", 1016980252)).cljs$core$IFn$_invoke$arity$1(x);
  var temp__4090__auto__ = cljs.core.first.call(null, d);
  if (cljs.core.truth_(temp__4090__auto__)) {
    var f = temp__4090__auto__;
    if (cljs.core.vector_QMARK_.call(null, f)) {
      return cljs.core.mapv.call(null, function(f, temp__4090__auto__, d) {
        return function(p__9495) {
          var vec__9496 = p__9495;
          var x__$1 = cljs.core.nth.call(null, vec__9496, 0, null);
          var y = cljs.core.nth.call(null, vec__9496, 1, null);
          return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 1013904362), x__$1, new cljs.core.Keyword(null, "y", "y", 1013904363), y], null);
        };
      }(f, temp__4090__auto__, d), d);
    } else {
      return cljs.core.vec.call(null, cljs.core.map_indexed.call(null, function(f, temp__4090__auto__, d) {
        return function(i, y) {
          return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 1013904362), i, new cljs.core.Keyword(null, "y", "y", 1013904363), y], null);
        };
      }(f, temp__4090__auto__, d), d));
    }
  } else {
    return null;
  }
};
yantra.plot.list_line_plot_spec = function list_line_plot_spec(x) {
  return new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "width", "width", 1127031096), 400, new cljs.core.Keyword(null, "height", "height", 4087841945), 200, new cljs.core.Keyword(null, "padding", "padding", 4502531971), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "top", "top", 1014019271), 10, new cljs.core.Keyword(null, "left", "left", 1017222009), 30, new cljs.core.Keyword(null, "bottom", "bottom", 3925642653), 20, new cljs.core.Keyword(null, 
  "right", "right", 1122416014), 10], null), new cljs.core.Keyword(null, "data", "data", 1016980252), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1017277949), "table", new cljs.core.Keyword(null, "values", "values", 4485058708), yantra.plot.list_line_plot_vega_values.call(null, x)], null)], null), new cljs.core.Keyword(null, "axes", "axes", 1016912535), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1017479852), "x", new cljs.core.Keyword(null, "scale", "scale", 1123155132), "x", new cljs.core.Keyword(null, "tickSizeEnd", "tickSizeEnd", 2289845295), 0], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1017479852), "y", new cljs.core.Keyword(null, "scale", "scale", 1123155132), "y"], null)], null), new cljs.core.Keyword(null, 
  "scales", "scales", 4400681947), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "name", "name", 1017277949), "x", new cljs.core.Keyword(null, "type", "type", 1017479852), "linear", new cljs.core.Keyword(null, "range", "range", 1122184367), "width", new cljs.core.Keyword(null, "domain", "domain", 3982673974), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "data", "data", 
  1016980252), "table", new cljs.core.Keyword(null, "field", "field", 1111331948), "data.x"], null)], null), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "name", "name", 1017277949), "y", new cljs.core.Keyword(null, "range", "range", 1122184367), "height", new cljs.core.Keyword(null, "nice", "nice", 1017285327), "true", new cljs.core.Keyword(null, "domain", "domain", 3982673974), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "data", "data", 1016980252), 
  "table", new cljs.core.Keyword(null, "field", "field", 1111331948), "data.y"], null)], null)], null), new cljs.core.Keyword(null, "marks", "marks", 1117570744), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1017479852), "line", new cljs.core.Keyword(null, "from", "from", 1017056028), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "data", "data", 1016980252), 
  "table"], null), new cljs.core.Keyword(null, "properties", "properties", 4382818469), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "enter", "enter", 1110571594), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "x", "x", 1013904362), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "scale", "scale", 1123155132), "x", new cljs.core.Keyword(null, "field", "field", 1111331948), "data.x"], null), new cljs.core.Keyword(null, "y", 
  "y", 1013904363), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "scale", "scale", 1123155132), "y", new cljs.core.Keyword(null, "field", "field", 1111331948), "data.y"], null), new cljs.core.Keyword(null, "stroke", "stroke", 4416891306), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 1125876963), "steelBlue"], null), new cljs.core.Keyword(null, "strokeWidth", "strokeWidth", 2937970144), new cljs.core.PersistentArrayMap(null, 1, 
  [new cljs.core.Keyword(null, "value", "value", 1125876963), 2], null)], null)], null)], null)], null)], null);
};
yantra.plot.plot_renderers = new cljs.core.PersistentArrayMap.fromArray([yantra.datatypes.ListLinePlot, function(cursor, owner, opts) {
  if (typeof yantra.plot.t9497 !== "undefined") {
  } else {
    yantra.plot.t9497 = function(opts, owner, cursor, meta9498) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9498 = meta9498;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.plot.t9497.cljs$lang$type = true;
    yantra.plot.t9497.cljs$lang$ctorStr = "yantra.plot/t9497";
    yantra.plot.t9497.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
      return cljs.core._write.call(null, writer__4030__auto__, "yantra.plot/t9497");
    };
    yantra.plot.t9497.prototype.om$core$IDidMount$ = true;
    yantra.plot.t9497.prototype.om$core$IDidMount$did_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return vg.parse.spec(cljs.core.clj__GT_js.call(null, yantra.plot.list_line_plot_spec.call(null, om.core.value.call(null, self__.cursor))), function(___$1) {
        return function(chart) {
          return chart.call(null, {"el":om.core.get_node.call(null, self__.owner, "theElt")}).update();
        };
      }(___$1));
    };
    yantra.plot.t9497.prototype.om$core$IDidUpdate$ = true;
    yantra.plot.t9497.prototype.om$core$IDidUpdate$did_update$arity$3 = function(this$, prev_props, prev_state) {
      var self__ = this;
      var this$__$1 = this;
      return vg.parse.spec(cljs.core.clj__GT_js.call(null, yantra.plot.list_line_plot_spec.call(null, om.core.value.call(null, self__.cursor))), function(this$__$1) {
        return function(chart) {
          return chart.call(null, {"el":om.core.get_node.call(null, self__.owner, "theElt")}).update();
        };
      }(this$__$1));
    };
    yantra.plot.t9497.prototype.om$core$IRender$ = true;
    yantra.plot.t9497.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return React.DOM.span({"ref":"theElt"}, "");
    };
    yantra.plot.t9497.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9499) {
      var self__ = this;
      var _9499__$1 = this;
      return self__.meta9498;
    };
    yantra.plot.t9497.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9499, meta9498__$1) {
      var self__ = this;
      var _9499__$1 = this;
      return new yantra.plot.t9497(self__.opts, self__.owner, self__.cursor, meta9498__$1);
    };
    yantra.plot.__GT_t9497 = function __GT_t9497(opts__$1, owner__$1, cursor__$1, meta9498) {
      return new yantra.plot.t9497(opts__$1, owner__$1, cursor__$1, meta9498);
    };
  }
  return new yantra.plot.t9497(opts, owner, cursor, null);
}, yantra.datatypes.BarChart, function(cursor, owner, opts) {
  if (typeof yantra.plot.t9500 !== "undefined") {
  } else {
    yantra.plot.t9500 = function(opts, owner, cursor, meta9501) {
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9501 = meta9501;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.plot.t9500.cljs$lang$type = true;
    yantra.plot.t9500.cljs$lang$ctorStr = "yantra.plot/t9500";
    yantra.plot.t9500.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
      return cljs.core._write.call(null, writer__4030__auto__, "yantra.plot/t9500");
    };
    yantra.plot.t9500.prototype.om$core$IDidMount$ = true;
    yantra.plot.t9500.prototype.om$core$IDidMount$did_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return vg.parse.spec(cljs.core.clj__GT_js.call(null, yantra.plot.bar_chart_spec.call(null, om.core.value.call(null, self__.cursor))), function(___$1) {
        return function(chart) {
          return chart.call(null, {"el":om.core.get_node.call(null, self__.owner, "theElt")}).update();
        };
      }(___$1));
    };
    yantra.plot.t9500.prototype.om$core$IDidUpdate$ = true;
    yantra.plot.t9500.prototype.om$core$IDidUpdate$did_update$arity$3 = function(this$, prev_props, prev_state) {
      var self__ = this;
      var this$__$1 = this;
      return vg.parse.spec(cljs.core.clj__GT_js.call(null, yantra.plot.bar_chart_spec.call(null, om.core.value.call(null, self__.cursor))), function(this$__$1) {
        return function(chart) {
          return chart.call(null, {"el":om.core.get_node.call(null, self__.owner, "theElt")}).update();
        };
      }(this$__$1));
    };
    yantra.plot.t9500.prototype.om$core$IRender$ = true;
    yantra.plot.t9500.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return React.DOM.span({"ref":"theElt"}, "");
    };
    yantra.plot.t9500.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9502) {
      var self__ = this;
      var _9502__$1 = this;
      return self__.meta9501;
    };
    yantra.plot.t9500.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9502, meta9501__$1) {
      var self__ = this;
      var _9502__$1 = this;
      return new yantra.plot.t9500(self__.opts, self__.owner, self__.cursor, meta9501__$1);
    };
    yantra.plot.__GT_t9500 = function __GT_t9500(opts__$1, owner__$1, cursor__$1, meta9501) {
      return new yantra.plot.t9500(opts__$1, owner__$1, cursor__$1, meta9501);
    };
  }
  return new yantra.plot.t9500(opts, owner, cursor, null);
}], true, false);
goog.provide("yantra.layout");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("om.dom");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("React");
goog.require("yantra.datatypes");
goog.require("yantra.datatypes");
yantra.layout.layout_renderers = new cljs.core.PersistentArrayMap.fromArray([yantra.datatypes.Column, function(cursor, owner, opts) {
  var builder = om.core.get_shared.call(null, owner, new cljs.core.Keyword(null, "builder", "builder", 1244848909));
  if (typeof yantra.layout.t9560 !== "undefined") {
  } else {
    yantra.layout.t9560 = function(builder, opts, owner, cursor, meta9561) {
      this.builder = builder;
      this.opts = opts;
      this.owner = owner;
      this.cursor = cursor;
      this.meta9561 = meta9561;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    yantra.layout.t9560.cljs$lang$type = true;
    yantra.layout.t9560.cljs$lang$ctorStr = "yantra.layout/t9560";
    yantra.layout.t9560.cljs$lang$ctorPrWriter = function(builder) {
      return function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
        return cljs.core._write.call(null, writer__4030__auto__, "yantra.layout/t9560");
      };
    }(builder);
    yantra.layout.t9560.prototype.om$core$IRender$ = true;
    yantra.layout.t9560.prototype.om$core$IRender$render$arity$1 = function(builder) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return React.DOM.div(null, cljs.core.into_array.call(null, cljs.core.map.call(null, function(___$1, builder) {
          return function(p1__9559_SHARP_) {
            return React.DOM.div(null, self__.builder.call(null, p1__9559_SHARP_));
          };
        }(___$1, builder), (new cljs.core.Keyword(null, "contents", "contents", 4741549708)).cljs$core$IFn$_invoke$arity$1(self__.cursor))));
      };
    }(builder);
    yantra.layout.t9560.prototype.cljs$core$IMeta$_meta$arity$1 = function(builder) {
      return function(_9562) {
        var self__ = this;
        var _9562__$1 = this;
        return self__.meta9561;
      };
    }(builder);
    yantra.layout.t9560.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(builder) {
      return function(_9562, meta9561__$1) {
        var self__ = this;
        var _9562__$1 = this;
        return new yantra.layout.t9560(self__.builder, self__.opts, self__.owner, self__.cursor, meta9561__$1);
      };
    }(builder);
    yantra.layout.__GT_t9560 = function(builder) {
      return function __GT_t9560(builder__$1, opts__$1, owner__$1, cursor__$1, meta9561) {
        return new yantra.layout.t9560(builder__$1, opts__$1, owner__$1, cursor__$1, meta9561);
      };
    }(builder);
  }
  return new yantra.layout.t9560(builder, opts, owner, cursor, null);
}], true, false);
goog.provide("yantra.controls");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("om.dom");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("React");
goog.require("yantra.datatypes");
goog.require("yantra.datatypes");
yantra.controls.control_renderers = new cljs.core.PersistentArrayMap.fromArray([yantra.datatypes.Slider, function(cursor, owner, opts) {
  var v = om.core.value.call(null, cursor);
  var val = (new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(v);
  var r = (new cljs.core.Keyword(null, "range", "range", 1122184367)).cljs$core$IFn$_invoke$arity$1(v);
  var min = cljs.core.first.call(null, r);
  var max = cljs.core.second.call(null, r);
  var step = cljs.core._EQ_.call(null, 3, cljs.core.count.call(null, r)) ? cljs.core.last.call(null, r) : 1;
  return om.dom.input.call(null, {"step":step, "max":max, "min":min, "defaultValue":val, "type":"range"});
}], true, false);
goog.provide("yantra.test");
goog.require("cljs.core");
goog.require("yantra.plot");
goog.require("om.dom");
goog.require("om.core");
goog.require("yantra.graphics");
goog.require("yantra.datatypes");
goog.require("yantra.layout");
goog.require("om.core");
goog.require("yantra.datatypes");
goog.require("React");
goog.require("yantra.edn");
goog.require("yantra.controls");
goog.require("yantra.graphics");
goog.require("yantra.edn");
goog.require("om.dom");
goog.require("cljs.reader");
goog.require("yantra.plot");
goog.require("yantra.layout");
goog.require("yantra.controls");
yantra.test.tests = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "column-2", "column-2", 4685450989), new cljs.core.Keyword(null, "plot-2", "plot-2", 4323529144), new cljs.core.Keyword(null, "string", "string", 4416885635), new cljs.core.Keyword(null, "column-1", "column-1", 4685450988), new cljs.core.Keyword(null, "plot-3", "plot-3", 4323529145), new cljs.core.Keyword(null, "edn-1", "edn-1", 1110266117), new cljs.core.Keyword(null, "edn-0", "edn-0", 1110266116), new cljs.core.Keyword(null, 
"plot-1", "plot-1", 4323529143), new cljs.core.Keyword(null, "nested-list", "nested-list", 3499779878), new cljs.core.Keyword(null, "nested-list-3", "nested-list-3", 1938575308), new cljs.core.Keyword(null, "nested-list-2", "nested-list-2", 1938575307), new cljs.core.Keyword(null, "graphics-1", "graphics-1", 3304008929), new cljs.core.Keyword(null, "line", "line", 1017226086), new cljs.core.Keyword(null, "plot-4", "plot-4", 4323529146)], [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new yantra.datatypes.Column(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 3], null))], null), new yantra.datatypes.ListLinePlot(new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 3, 6, 5, 4, 3, 1], null), null), 'a"b"c', new yantra.datatypes.Column(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 3], null)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new yantra.datatypes.ListLinePlot(new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 3, 6, 5, 4, 3, 1], null), null), new yantra.datatypes.ListLinePlot(new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 3, 6, 5, 4, 3, 1], null), null)], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, "a", new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.Symbol(null, "a", "a", -1640531430, 
null), new cljs.core.PersistentArrayMap(null, 2, [1, 2, 3, 4], null), new yantra.datatypes.Slider(4, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 10], null)), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [1, null, 2, null, 3, null, 4, null], null), null), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 4), 3), 2), 1), new yantra.datatypes.Graphics(new cljs.core.PersistentVector(null, 
3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new yantra.datatypes.Disk(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), 1), new yantra.datatypes.Disk(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 2], null), 1), new yantra.datatypes.Disk(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null), 1)], null))], null), 1, new yantra.datatypes.BarChart(new cljs.core.PersistentVector(null, 
5, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 6, 5, 4], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "labels", "labels", 4198454129), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a", "b", "c", "d", "e"], null)], null)), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, 
cljs.core.List.EMPTY, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 3), 2), 1)), 2), 1)), 3), 2), 1), cljs.reader.read_string.call(null, "(1 2 3 (1 2 3))"), cljs.core.partition.call(null, 2, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 3, 4], null)), new yantra.datatypes.Column(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new yantra.datatypes.Slider(4, new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 10], null)), new yantra.datatypes.Slider(5, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 10], null)), new yantra.datatypes.Graphics(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new yantra.datatypes.Disk(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), 1), new yantra.datatypes.Disk(new cljs.core.PersistentVector(null, 2, 5, 
cljs.core.PersistentVector.EMPTY_NODE, [10, 2], null), 1), new yantra.datatypes.Disk(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, 0], null), 1), new yantra.datatypes.Disk(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [20, 0], null), 1)], null))], null)), new yantra.datatypes.Graphics(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new yantra.datatypes.Line(new cljs.core.PersistentVector(null, 
3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null)], null))], null)), new yantra.datatypes.ListLinePlot(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [10, 4], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [11, 6], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [20, 40], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [30, 5], null)], null), null)]);
yantra.test.renderers = cljs.core.merge.call(null, yantra.graphics.graphics_renderers, yantra.controls.control_renderers, yantra.layout.layout_renderers, yantra.edn.edn_renderers, yantra.plot.plot_renderers);
yantra.test.builder = function builder(x, y) {
  console.log(om.core.value.call(null, x));
  console.log(cljs.core.type.call(null, om.core.value.call(null, x)));
  console.log(yantra.test.renderers.call(null, cljs.core.type.call(null, om.core.value.call(null, x))));
  return om.core.build.call(null, yantra.test.renderers.call(null, cljs.core.type.call(null, om.core.value.call(null, x))), x, y);
};
yantra.test.t = document.getElementById("root");
yantra.test.start = function start() {
  return om.core.root.call(null, function(app, owner) {
    if (typeof yantra.test.t9504 !== "undefined") {
    } else {
      yantra.test.t9504 = function(owner, app, start, meta9505) {
        this.owner = owner;
        this.app = app;
        this.start = start;
        this.meta9505 = meta9505;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      yantra.test.t9504.cljs$lang$type = true;
      yantra.test.t9504.cljs$lang$ctorStr = "yantra.test/t9504";
      yantra.test.t9504.cljs$lang$ctorPrWriter = function(this__4029__auto__, writer__4030__auto__, opt__4031__auto__) {
        return cljs.core._write.call(null, writer__4030__auto__, "yantra.test/t9504");
      };
      yantra.test.t9504.prototype.om$core$IRender$ = true;
      yantra.test.t9504.prototype.om$core$IRender$render$arity$1 = function(_) {
        var self__ = this;
        var ___$1 = this;
        return yantra.test.builder.call(null, self__.app, null);
      };
      yantra.test.t9504.prototype.cljs$core$IMeta$_meta$arity$1 = function(_9506) {
        var self__ = this;
        var _9506__$1 = this;
        return self__.meta9505;
      };
      yantra.test.t9504.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_9506, meta9505__$1) {
        var self__ = this;
        var _9506__$1 = this;
        return new yantra.test.t9504(self__.owner, self__.app, self__.start, meta9505__$1);
      };
      yantra.test.__GT_t9504 = function __GT_t9504(owner__$1, app__$1, start__$1, meta9505) {
        return new yantra.test.t9504(owner__$1, app__$1, start__$1, meta9505);
      };
    }
    return new yantra.test.t9504(owner, app, start, null);
  }, cljs.core.atom.call(null, (new cljs.core.Keyword(null, "nested-list-3", "nested-list-3", 1938575308)).cljs$core$IFn$_invoke$arity$1(yantra.test.tests)), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "shared", "shared", 4405305303), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "builder", "builder", 1244848909), yantra.test.builder], null), new cljs.core.Keyword(null, "target", "target", 4427965699), document.getElementById("root")], null));
};
goog.exportSymbol("yantra.test.start", yantra.test.start);
goog.provide("yantra.datamappings");
goog.require("cljs.core");
goog.require("yantra.datatypes");
goog.require("yantra.datatypes");
yantra.datamappings.data_mappings = new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "record", "record", 4373962691), yantra.datatypes.Slider, new cljs.core.Keyword(null, "tag", "tag", 1014018828), "yantra.controls/Slider"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "record", "record", 4373962691), yantra.datatypes.Column, new cljs.core.Keyword(null, "tag", 
"tag", 1014018828), "yantra.layout/Column"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "record", "record", 4373962691), yantra.datatypes.Graphics, new cljs.core.Keyword(null, "tag", "tag", 1014018828), "yantra.graphics/Graphics"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "record", "record", 4373962691), yantra.datatypes.Point, new cljs.core.Keyword(null, "tag", "tag", 1014018828), "yantra.graphics/Point"], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "record", "record", 4373962691), yantra.datatypes.Line, new cljs.core.Keyword(null, "tag", "tag", 1014018828), "yantra.graphics/Line"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "record", "record", 4373962691), yantra.datatypes.Disk, new cljs.core.Keyword(null, "tag", "tag", 1014018828), "yantra.graphics/Disk"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "record", "record", 4373962691), yantra.datatypes.Rectangle, 
new cljs.core.Keyword(null, "tag", "tag", 1014018828), "yantra.graphics/Rectangle"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "record", "record", 4373962691), yantra.datatypes.Style, new cljs.core.Keyword(null, "tag", "tag", 1014018828), "yantra.graphics/Style"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "record", "record", 4373962691), yantra.datatypes.ListLinePlot, new cljs.core.Keyword(null, "tag", "tag", 1014018828), "yantra.plot/ListLinePlot"], 
null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "record", "record", 4373962691), yantra.datatypes.BarChart, new cljs.core.Keyword(null, "tag", "tag", 1014018828), "yantra.plot/BarChart"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "record", "record", 4373962691), yantra.datatypes.HTMLElement, new cljs.core.Keyword(null, "tag", "tag", 1014018828), "yantra.dom/HTMLElement"], null)], null);
goog.provide("yantra.dom");
goog.require("cljs.core");
goog.require("om.dom");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
goog.require("yantra.datatypes");
goog.require("yantra.datatypes");
yantra.dom.get_element = function get_element(e) {
  return React.DOM[cljs.core.name.call(null, e)];
};
yantra.dom.dom_renderers = new cljs.core.PersistentArrayMap.fromArray([yantra.datatypes.HTMLElement, function(cursor, owner, opts) {
  var v = om.core.value.call(null, cursor);
  var tag = (new cljs.core.Keyword(null, "tag", "tag", 1014018828)).cljs$core$IFn$_invoke$arity$1(v);
  var attributes = (new cljs.core.Keyword(null, "attributes", "attributes", 1419549897)).cljs$core$IFn$_invoke$arity$1(v);
  var builder = om.core.get_shared.call(null, owner, new cljs.core.Keyword(null, "builder", "builder", 1244848909));
  return cljs.core.apply.call(null, yantra.dom.get_element.call(null, tag), cljs.core.clj__GT_js.call(null, attributes), cljs.core.into_array.call(null, cljs.core.map.call(null, builder, (new cljs.core.Keyword(null, "children", "children", 2673430897)).cljs$core$IFn$_invoke$arity$1(cursor))));
}], true, false);
